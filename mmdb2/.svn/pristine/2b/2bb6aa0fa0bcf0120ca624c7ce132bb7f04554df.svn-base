package com.mmdb.rest.subscription;

import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import net.sf.json.JSONObject;

import org.restlet.Context;
import org.restlet.Request;
import org.restlet.Response;
import org.restlet.data.Header;
import org.restlet.data.Status;
import org.restlet.ext.json.JsonRepresentation;
import org.restlet.representation.Representation;
import org.restlet.resource.Get;
import org.restlet.resource.ServerResource;
import org.restlet.util.Series;

import com.mmdb.core.log.Log;
import com.mmdb.core.log.LogFactory;
import com.mmdb.core.utils.SpringContextUtil;
import com.mmdb.model.bean.User;
import com.mmdb.model.bean.UserProfile;
import com.mmdb.model.info.ViewInformation;
import com.mmdb.service.info.IViewInfoService;
import com.mmdb.service.relation.ICiViewRelService;
import com.mmdb.service.relation.IViewViewProtfolioRelService;
import com.mmdb.service.role.IUserService;
import com.mmdb.service.subscription.ISubscriptionService;
import com.mmdb.service.subscription.ISubscriptionViewPortfolioService;
import com.mmdb.util.des.Des;

public class UserProfileRest extends ServerResource {
	private Log log = LogFactory.getLogger("UserProfile");
	private IUserService userService;
	private IViewInfoService vInfoService;
	private ISubscriptionService subService;
	private ICiViewRelService ciViewRelService;

	@Override
	public void init(Context context, Request request, Response response) {
		super.init(context, request, response);
		userService = (IUserService) SpringContextUtil.getApplicationContext()
				.getBean("userService");
		vInfoService = (IViewInfoService) SpringContextUtil
				.getApplicationContext().getBean("viewInfoService");
		subService = (ISubscriptionService) SpringContextUtil
				.getApplicationContext().getBean("subscriptionService");
		ciViewRelService = (ICiViewRelService) SpringContextUtil
				.getApplicationContext().getBean("ciViewRelServiceImpl");
	}

	/**
	 * 获取用户订阅相关的信息
	 * 
	 * @param entity
	 * @return
	 */
	@Get
	public Representation getMethod(Representation entity) {
		String param1 = (String) getRequestAttributes().get("param1");

		if (param1 != null) {
			try {
				param1 = URLDecoder.decode(param1, "utf-8");
			} catch (UnsupportedEncodingException e) {
				log.eLog(e);
//				ret.put("message", "[" + param1 + "]解析失败");
				getResponse().setStatus(new Status(600));
			}
		}
		return getSub(param1);
	}

	private Representation getSub(String name) {
		//TODO 增加数据集和映射的profiles
		JSONObject ret = new JSONObject();
		User user = getUser();
		String username = user.getLoginName();
		try {
			List<String> viewIds = subService.getViewBySubscriber(username);
			List<ViewInformation> vInfos = vInfoService.getByids(viewIds);
			if (vInfos == null) {
				vInfos = new ArrayList<ViewInformation>();
			}
			Map<String, Map<String, Object>> content = new HashMap<String, Map<String, Object>>();

			for (ViewInformation info : vInfos) {
				Map<String, Object> asMap = info.asMapForRest();
				List<String> ciIds = ciViewRelService.getByView(info
						.getCategoryId());
				if (ciIds == null) {
					asMap.put("ciSize", 0);
				} else {
					asMap.put("ciSize", ciIds.size());
				}
				content.put(info.getId(), asMap);
			}
			UserProfile userProfile = new UserProfile(vInfos, user);
			userProfile.setViews(content);

			// userProfile.setViews(views);
			ret.put("message", "获取用户概况成功");
			ret.put("data", userProfile.asMap());
		} catch (Exception e) {
			e.printStackTrace();
			ret.put("message", e.getMessage());
			getResponse().setStatus(new Status(600));
		}
		return new JsonRepresentation(ret.toString());
	}

	public User getUser() {
		Series<Header> headers = getRequest().getHeaders();
		String values = headers.getValues("token");
		if (values == null || "".equals(values))
			return null;
		Des des = new Des();
		String decrypt = des.decrypt(values);
		String[] split = decrypt.split("\\|");
		return userService.getUserByLoginName(split[0]);
	}
}
