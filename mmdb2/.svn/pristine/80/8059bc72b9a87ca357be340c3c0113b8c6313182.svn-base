!function(e){"use strict";e.stateUrl=function(e){return"app/state"+e},e.app=angular.module("graph",["frapontillo.bootstrap-switch","ngSanitize","ui.router","ui.bootstrap","graphToolbar","graphViewtree","graphInfo","graphTable","treeControl","angular-md5","colorpicker.module","ngTable","ngFileUpload","rzModule","ngCookies","timeLine","ngJoyRide","ngRightClick","datetime"]),e.app.config(["$stateProvider","$urlRouterProvider","$httpProvider",function(t,i,n){i.otherwise("/user/overview"),n.interceptors.push("HttpInterceptor"),t.state("home",{data:{title:"ITA"},url:"/",templateUrl:e.stateUrl("/main/main.html"),controller:"MainCtrl"})}]),e.app.run(["$rootScope","$state","$cookies","$timeout",function(e,t,i,n){e.$state=t,e._refresh=function(){e.$$phase||e.$apply()},e.$on("$stateChangeStart",function(o,a){if(n(function(){var i=t.$current,n=[];do i.data&&i.data.title&&n.push(i.data.title),i=i.parent?i.parent:null;while(i);e._TITLE=n.join(" - ")},100),"/login"!==a.url){var r;r=i.get("token"),r||(o.preventDefault(),t.go("login"))}})}]),"object"==typeof mxRectangleShape&&(mxRectangleShape.prototype.crisp=!0),Editor.prototype.gridImage=IMAGE_PATH+"/grid_bg.png",mxLog.WARN=!1,mxLog.DEBUG=!1,e.CACHE_OBJ_URL={}}(nameSpace.reg("graph")),function(e){"use strict";var t=function(t,i,n,o,a,r,s,l,c,u,p){return function(a){this.clearHight=function(){a.graph.removeLight()},this.hightLightCi=function(){var e=this.getCis();$.each(e,function(){a.graph.addLight(this)})},this.backgroundImage=function(){t.open({size:"lg",animation:!0,templateUrl:"app/modal/image/image.html",controller:"ModalImageCtrl",resolve:{fn:function(){return function(e){var t=i["static"](e.url),n=document.createElement("img");n.src=t,n.onload=function(){var e=new mxImage(t,this.width,this.height);a.graph.setBackgroundImage(e),a.graph.view.validate(),$(n).remove()}}}}})},this.clearBackgroundImage=function(){a.graph.setBackgroundImage(null),a.graph.view.validate()},this.save=function(){t.open({size:"lg",animation:!0,templateUrl:"app/modal/view/save.html",controller:"ModalViewSaveCtrl",resolve:{editor:function(){return a}}})},this.update=function(){var e=p.get();a.state&&a.state.view?a.state.view.userName===e.loginName?t.open({size:"lg",animation:!0,templateUrl:"app/modal/view/save.html",controller:"ModalViewUpdateCtrl",resolve:{editor:function(){return a}}}):i.error("错误: 您不能更新其它用户创建的视图"):i.error("错误: 您没有打开任何视图")},this.open=function(){t.open({animation:!0,templateUrl:"app/modal/view/open.html",controller:"ModalViewOpenCtrl",resolve:{fn:function(){return function(e){a.action.openView(e)}}}})},this.create=function(){this.clear(),this.syncGrid(),a.graph.zoomActual(),a.state.empty()},this.clear=function(){a.graph.model.clear()},this.zoomIn=function(){a.graph.zoomIn(),this.syncGrid()},this.zoomOut=function(){a.graph.zoomOut(),this.syncGrid()},this.zoomActual=function(){a.graph.zoomActual()},this.zoomCenter=function(){a.graph.zoomToCenter(),this.syncGrid()},this.syncGrid=function(){var e=a.graph.getView().getScale(),t=o.GRAPH_GRID_WIDTH*e+"px",i=o.GRAPH_GRID_HEIGHT*e+"px";$(a.graph.container).find("svg")[0].style.backgroundSize=t+" "+i},this.assistLine=function(){a.graph.graphHandler.guidesEnabled=!a.graph.graphHandler.guidesEnabled,a.state.isAssistLine=a.graph.graphHandler.guidesEnabled},this.orderDown=function(){a.graph.orderCells(!0)},this.orderUp=function(){a.graph.orderCells(!1)},this.alignCells=function(e){a.graph.alignCells(e)},this.alignDistribute=function(e){a.graph.distributeCells(e)},this.undo=function(){a.graph.stopEditing(!1),a.undoManager.undo()},this.redo=function(){a.graph.stopEditing(!1),a.undoManager.redo()},this.removeCells=function(){a.graph.removeCells()},this.edgeStyle=function(e){this.edgeClearStyle(),"elbowHorizontal"===e&&(e="elbowEdgeStyle",this.elbowStyle("horizontal")),"elbowVertical"===e&&(e="elbowEdgeStyle",this.elbowStyle("vertical")),a.graph.setCellStyles(mxConstants.STYLE_EDGE,e)},this.elbowStyle=function(e){a.graph.setCellStyles(mxConstants.STYLE_ELBOW,e)},this.edgeClearStyle=function(){var e=a.graph.getSelectionEdges();$.each(e,function(){this.geometry.points=[]});var t=[mxConstants.STYLE_EDGE,mxConstants.STYLE_ELBOW,"noEdgeStyle","orthogonal"];$.each(t,function(){a.graph.setCellStyles(this,null,e)})},this.startArrow=function(e){a.graph.setCellStyles(mxConstants.STYLE_STARTARROW,e),a.graph.setCellStyles("startFill",0)},this.startArrowFill=function(e){a.graph.setCellStyles(mxConstants.STYLE_STARTARROW,e),a.graph.setCellStyles("startFill",1)},this.endArrow=function(e){a.graph.setCellStyles(mxConstants.STYLE_ENDARROW,e),a.graph.setCellStyles("endFill",0)},this.endArrowFill=function(e){a.graph.setCellStyles(mxConstants.STYLE_ENDARROW,e),a.graph.setCellStyles("endFill",1)},this.linkEdit=function(){var e,t;e=a.graph.getSelectionCells(),e.length>=1&&(t=a.graph.getLinkForCell(e[0],"link"),t=t?t:"",i.prompt("请输入URL",function(t){null!==t&&$.each(e,function(){a.graph.setLinkForCell(this,t)})},t))},this.shoadow=function(){var t,i;t=a.graph.getSelectionCells(),t.length>=1&&(i=e.utils.getStyleForAttr(t[0],"shadow"),i="1"===i?"none":"1",a.graph.setCellStyles(mxConstants.STYLE_SHADOW,i,t))},this.cellFillColor=function(){var e=a.graph.getSelectionCells();if(e.length){var i=a.graph.getCellStyle(e[0]);t.open({size:"sm",templateUrl:"app/modal/color/color.html",controller:"ModalColorCtrl",resolve:{title:function(){return"填充颜色"},originalColor:function(){return i.fillColor},fn:function(){return function(t){a.graph.setCellStyles(mxConstants.STYLE_FILLCOLOR,t,e)}}}})}},this.cellStrokeColor=function(){var e=a.graph.getSelectionCells();if(e.length){var i=a.graph.getCellStyle(e[0]);t.open({size:"sm",templateUrl:"app/modal/color/color.html",controller:"ModalColorCtrl",resolve:{title:function(){return"边框颜色"},originalColor:function(){return i.strokeColor},fn:function(){return function(t){a.graph.setCellStyles(mxConstants.STYLE_STROKECOLOR,t,e)}}}})}},this.font=function(){t.open({templateUrl:"app/modal/font/font.html",controller:"ModalFontCtrl",resolve:{editor:function(){return a}}})},this.grid=function(){var e=$(a.graph.container).find("svg")[0];e.style.backgroundImage?(e.style.backgroundImage=null,a.state.isShowGrid=!1):(e.style.backgroundImage="url(assets/plugins/mxGraph/images/grid_bg.png)",a.state.isShowGrid=!0,this.syncGrid())},this.getCisId=function(){var e,t=[];return e=a.graph.getDepCells(),$.each(e,function(){i.isCiCell(this)&&t.push(i.getCiIdByCell(this))}),t},this.getCis=function(){var e,t=[];return e=a.graph.getDepCells(),$.each(e,function(){i.isCiCell(this)&&t.push(this)}),t},this.getXml=function(){var e,t;return e=a.getGraphXml(),t=a.graph.getBackgroundImage(),t&&(e.setAttribute("background-url",t.src),e.setAttribute("background-width",t.width),e.setAttribute("background-height",t.height)),mxUtils.getXml(e)},this.openXml=function(e){var t,n="",o=0,r=0,s=null,l=null;if(t=mxUtils.parseXml(e),"parsererror"===t.documentElement.nodeName)throw i.alert("错误：解析XML文档错误，可能XML文档损坏！"),new Error("parsererror");a.graph.setBackgroundImage(null),l=t.documentElement,a.graph.model.clear(),a.setGraphXml(l),a.graph.zoomActual(),a.graph.view.setTranslate(0,0),a.graph.zoomToCenter(),n=l.getAttribute("background-url"),o=l.getAttribute("background-width"),r=l.getAttribute("background-height"),n&&o&&r&&(s=new mxImage(n,o,r),a.graph.setBackgroundImage(s),a.graph.view.validate())},this.openView=function(e){e.xml&&(this.openXml(e.xml),a.state.setView(e))},this.disabled=function(){a.graph.setCellsMovable(!1),a.graph.setCellsCloneable(!1),a.graph.setCellsEditable(!1),a.graph.setCellsDisconnectable(!1),a.graph.setCellsResizable(!1),a.graph.setCellsSelectable(!1),a.graph.setCellsMovable(!1),a.graph.setConnectable(!1),a.state.disabled=!0},this.enabled=function(){a.graph.setCellsMovable(!0),a.graph.setCellsCloneable(!0),a.graph.setCellsEditable(!0),a.graph.setCellsDisconnectable(!0),a.graph.setCellsResizable(!0),a.graph.setExtendParents(!0),a.graph.setConnectable(!0),a.state.disabled=!1},this.monitor=function(){a.monitor||(a.monitor=new r({editor:a}))},this.toggleAutoLayout=function(){a.state.isAutoLayout=!a.state.isAutoLayout,a.toolbar.refresh();var e=a.state.isAutoLayout?"自动布局已开":"自动布局已关";i.warning(e)},this.toggleAutoLine=function(){a.state.isAutoLine=!a.state.isAutoLine,a.toolbar.refresh();var e=a.state.isAutoLine?"自动查找关系已开":"自动查找关系已关";i.warning(e)},this.showCiTable=function(){a.table.show()},this.hideCiTable=function(){a.table.hide()},this.expandNode=function(){t.open({size:"lg",templateUrl:"app/modal/expand/expand.html",controller:"ModalExpandCtrl",resolve:{editor:function(){return a}}})},this.exportPng=function(){l.exportPng(this.getSvg()).success(function(e){i.download(e.data.url)})},this.exportPdf=function(){l.exportPdf(this.getSvg()).success(function(e){i.download(e.data.url)})},this.exportXml=function(){var e="ita_"+Date.now()+".xml",t=this.getXml();"function"==typeof Blob?saveAs(new Blob([t],{type:"text/plain;charset=utf-8"}),e):i.alert("系统错误")},this.exportSvg=function(){var e="ita_"+Date.now()+".svg",t=this.getSvg();"function"==typeof Blob?saveAs(new Blob([t],{type:"text/plain;charset=utf-8"}),e):i.alert("系统错误")},this.getSvg=function(){var e=a.graph.getSvg();return angular.isObject(e)?e.outerHTML:e},this.copy=function(){mxClipboard.copy(a.graph)},this.cut=function(){mxClipboard.cut(a.graph)},this.paste=function(){mxClipboard.paste(a.graph)},this.layoutHorizontal=function(){i.layout(a.graph,new mxHierarchicalLayout(a.graph,mxConstants.DIRECTION_WEST),!0),this.zoomCenter()},this.layoutVertical=function(){i.layout(a.graph,new mxHierarchicalLayout(a.graph,mxConstants.DIRECTION_NORTH),!0),this.zoomCenter()},this.layoutCircle=function(){i.layout(a.graph,new mxCircleLayout(a.graph),!0),this.zoomCenter()},this.layoutOrganic=function(){i.layout(a.graph,new mxFastOrganicLayout(a.graph),!0),this.zoomCenter()},this.layoutParallel=function(){i.layout(a.graph,new mxParallelEdgeLayout(a.graph),!0),this.zoomCenter()},this.layoutStackVertical=function(){i.layout(a.graph,new mxStackLayout(a.graph,!1),!0),this.zoomCenter()},this.layoutStackHorizontal=function(){i.layout(a.graph,new mxStackLayout(a.graph,!0),!0),this.zoomCenter()},this.tag=function(){var e=a.graph.getDepCells();$.each(e,function(){this.vertex&&!i.isCiIn(this)&&(a.graph.setOriStyle(this,this.getStyle()),this.setStyle("whiteSpace=wrap;"),a.graph.refresh(this))})},this.original=function(){var e=a.graph.getDepCells();$.each(e,function(){this.vertex&&!i.isCiIn(this)&&(this.setStyle(a.graph.getOriStyle(this)),a.graph.refresh(this))})},this.cellStrokeSize=function(){var e=a.graph.getSelectionCells();if(e.length){var i=a.graph.getCellStyle(e[0]);t.open({templateUrl:"app/modal/number/number.html",controller:"ModalNumberCtrl",resolve:{title:function(){return"边框大小"},defaultValue:function(){return i.strokeWidth?i.strokeWidth:1},maxValue:function(){return 12},minValue:function(){return 1},fn:function(){return function(e){a.graph.setCellStyles(mxConstants.STYLE_STROKEWIDTH,e)}}}})}},this.cellOpacity=function(){var e=a.graph.getSelectionCells();if(e.length){var i=a.graph.getCellStyle(e[0]);t.open({templateUrl:"app/modal/number/number.html",controller:"ModalNumberCtrl",resolve:{title:function(){return"透明度"},defaultValue:function(){return i.opacity?i.opacity:1},maxValue:function(){return 100},minValue:function(){return 0},fn:function(){return function(e){a.graph.setCellStyles(mxConstants.STYLE_OPACITY,e)}}}})}},this.relationViewSet=function(){a.graph.getSelectionCell()&&t.open({size:"lg",templateUrl:"app/modal/relationView/set.html",controller:"ModalRelationViewSetCtrl",resolve:{editor:function(){return a}}})},this.relationViewOpen=function(){a.graph.getSelectionCell()&&t.open({size:"lg",templateUrl:"app/modal/relationView/open.html",controller:"ModalRelationViewOpenCtrl",resolve:{editor:function(){return a}}})},this.historyBack=function(){a.history.back()},this.openUrl=function(){var e=a.graph.getSelectionCell();if(e){var t=a.graph.getCellAttr(e,"link");t&&c.open(t)}},this.toolbarRefresh=function(){a.toolbar&&a.toolbar.refresh()},this.publicView=function(){a.state&&a.state.view?u.setPublic(a.state.view.id).success(function(){a.state.view.open=!0,n.$broadcast(s.VIEW_SET_PUBLIC)}):i.error("错误：您没有打开任何视图")},this.unpublicView=function(){a.state&&a.state.view?u.setUnpublic(a.state.view.id).success(function(){a.state.view.open=!1,n.$broadcast(s.VIEW_SET_UNPUBLIC)}):i.error("错误：您没有打开任何视图")},this.subscription=function(){a.state&&a.state.view?u.subscription(a.state.view.id).success(function(){a.state.view.isSubscription=!0,n.$broadcast(s.VIEW_SUBSCRIPTION_AFTER)}):i.error("错误：您没有打开任何视图")},this.unsubscription=function(){a.state&&a.state.view?u.unsubscription(a.state.view.id).success(function(){a.state.view.isSubscription=!1,n.$broadcast(s.VIEW_UNSUBSCRIPTION_AFTER)}):i.error("错误：您没有打开任何视图")},this.selectAll=function(){a.graph.selectAll()},this.threshold=function(){a.state.view?t.open({size:"lg",animation:!0,backdrop:"static",templateUrl:"app/modal/threshold/threshold.html",controller:"ModalThresholdCtrl",windowClass:"myModal",resolve:{view:function(){return a.state.view?a.state.view:null},editor:function(){return a}}}):i.error("错误：没有打开任何视图")},this.searchNode=function(){t.open({animation:!0,templateUrl:"app/modal/search/searchNode.html",controller:"ModalSearchNodeCtrl",resolve:{editor:function(){return a}}})},this.searchPath=function(){},this.getLightCountCells=function(){var e=[],t=a.graph.getDepCells();return t&&t.length&&$.each(t,function(){var t=this;t.id.indexOf(o.LIGHT_PREFIX)>=0&&e.push(t)}),e}}};t.$inject=["$modal","Unit","$rootScope","Const","CiMonitorService","GraphMonitor","Event","ExportService","$window","ViewService","UserInfo"],e.app.factory("GraphAction",t)}(nameSpace.reg("graph")),function(e){"use strict";e.app.factory("AutoLayout",function(){var e=function(){var e={};return e.util={},e.util.Point=function(e,t){this.absoluteX=e,this.absoluteY=t,this.relativeX=0,this.relativeY=0},e.util.Point.prototype.absolute2relative=function(e){this.relativeX=this.absoluteX-e.absoluteX,this.relativeY=this.absoluteY-e.absoluteY},e.util.Point.prototype.relative2absolute=function(e){this.absoluteX=this.relativeX+e.absoluteX,this.absoluteY=this.relativeY+e.absoluteY},e.util.Point.prototype.expandIt=function(t,i,n,o,a){var r=o/i,s=a/n,l=o-i,c=a-n;this.relativeX=e.util.math.changeIt(this.relativeX,i,r,l),this.relativeY=e.util.math.changeIt(this.relativeY,n,s,c),this.relative2absolute(t)},e.util.math={},e.util.math.changeIt=function(e,t,i,n){return e>=-1*t&&t>=e?e*i:-1*t>e?e-n:e+n},e.util.math.changeBack=function(e,t,i,n){return e>=-1*t&&t>=e?e/i:-1*t>e?e+n:e-n},e}(),t=function(e){this.graph=e,this.foldHandle()};return t.prototype.foldHandle=function(){var e,t=this;t.graph.foldHandle=function(e){t.expandLayout(e),t.graph.clearSelection()},e=function(e,i){var n=i.getProperty("cells");n[0].collapsed?(t.collaspeLayout(n[0]),t.graph.clearSelection()):(t.expandLayout(n[0]),t.graph.clearSelection())},t.graph.addListener(mxEvent.FOLD_CELLS,e)},t.prototype.collaspeLayout=function(t){var i,n=this,o=t,a=Math.round((t.geometry.alternateBounds.width-t.geometry.width)/2),r=Math.round((t.geometry.alternateBounds.height-t.geometry.height)/2);i=function(t){var i=n.graph.getChildVertices(t.getParent()),s=t.getParent(),l={};"1"!==s.id?(s.geometry.width-=2*a,s.geometry.height-=2*r,$.each(i,function(){var e=this;return t.id===e.id?!0:(e.geometry.x-=a,void(e.geometry.y-=r))})):(t.geometry.x+=a,t.geometry.y+=r),l.x=t.geometry.x+window.parseInt(t.geometry.width/2,10),l.y=t.geometry.y+window.parseInt(t.geometry.height/2,10),$.each(i,function(){var i,n,s=this,c={};return t.id===s.id?!0:(c.x=s.geometry.x+window.parseInt(s.geometry.width/2,10),c.y=s.geometry.y+window.parseInt(s.geometry.height/2,10),i=new e.util.Point(l.x,l.y),n=new e.util.Point(c.x,c.y),n.absolute2relative(i),o.id===t.id?n.expandIt(i,t.geometry.alternateBounds.width/2,t.geometry.alternateBounds.height/2,t.geometry.width/2,t.geometry.height/2):n.expandIt(i,t.geometry.width/2+a,t.geometry.height/2+r,t.geometry.width/2,t.geometry.height/2),s.geometry.x=Math.round(n.absoluteX-s.geometry.width/2),void(s.geometry.y=Math.round(n.absoluteY-s.geometry.height/2)))})};do n.graph.refresh(),i(t),t=t.getParent();while("1"!==t.id);n.graph.refresh(),n.graph.clearSelection(),n.graph.setSelectionCell(o)},t.prototype.expandLayout=function(t){var i,n=this,o=t,a=Math.round((t.geometry.width-t.geometry.alternateBounds.width)/2),r=Math.round((t.geometry.height-t.geometry.alternateBounds.height)/2);i=function(t){var i=n.graph.getChildVertices(t.getParent()),s=t.getParent(),l={};"1"!==s.id?(s.geometry.width+=2*a,s.geometry.height+=2*r,$.each(i,function(){var e=this;return t.id===e.id?!0:(e.geometry.x+=a,void(e.geometry.y+=r))})):(t.geometry.x-=a,t.geometry.y-=r),l.x=t.geometry.x+window.parseInt(t.geometry.width/2,10),l.y=t.geometry.y+window.parseInt(t.geometry.height/2,10),$.each(i,function(){var i,n,s=this,c={};return t.id===s.id?!0:(c.x=s.geometry.x+window.parseInt(s.geometry.width/2,10),c.y=s.geometry.y+window.parseInt(s.geometry.height/2,10),i=new e.util.Point(l.x,l.y),n=new e.util.Point(c.x,c.y),n.absolute2relative(i),o.id===t.id?n.expandIt(i,t.geometry.alternateBounds.width/2,t.geometry.alternateBounds.height/2,t.geometry.width/2,t.geometry.height/2):n.expandIt(i,t.geometry.width/2-a,t.geometry.height/2-r,t.geometry.width/2,t.geometry.height/2),s.geometry.x=Math.round(n.absoluteX-s.geometry.width/2),void(s.geometry.y=Math.round(n.absoluteY-s.geometry.height/2)))})};do n.graph.refresh(),i(t),t=t.getParent();while("1"!==t.id);n.graph.refresh(),n.graph.clearSelection(),n.graph.setSelectionCell(o)},t})}(nameSpace.reg("graph")),function(e){"use strict";e.app.factory("Const",[function(){return{CI_PREFIX:"ci_",IN_PREFIX:"in_",RELATION_PREFIX:"relation_",LIGHT_PREFIX:"relation_",GRAPH_DRAG_WIDTH:80,GRAPH_DRAG_HEIGHT:80,GRAPH_GRID_WIDTH:81,GRAPH_GRID_HEIGHT:80,MENU_OPEN_URL:"打开URL",MENU_EDIT_URL:"编辑URL",MENU_FONT_STYLE:"字体样式",MENU_STROKE_WIDTH:"边框宽度",MENU_OPACITY:"透明度",MENU_ZOOM:"缩放",MENU_ZOOM_IN:"放大",MENU_ZOOM_OUT:"缩小",MENU_ZOOM_CENTER:"适应画布",MENU_ZOOM_ACTUAL:"实际大小",MENU_STYLE:"样式",MENU_VIEW:"视图",MENU_VIEW_SAVE:"保存视图",MENU_VIEW_UPDATE:"更新视图",MENU_VIEW_OPEN:"打开视图",MENU_VIEW_NEW:"新建视图",MENU_VIEW_URL:"视图URL",MENU_VIEW_NEW_WINDOW:"在新标签页打开此视图",MENU_VIEW_RELATION:"视图关联",MENU_VIEW_RELATION_SET:"管理关联视图",MENU_VIEW_RELATION_OPEN:"打开关联视图",MENU_LAYOUT:"布局",MENU_LAYOUT_HORIZONTAL:"横向布局",MENU_LAYOUT_VERTICAL:"纵向布局",MENU_LAYOUT_CIRCLE:"圆形布局",MENU_LAYOUT_ORGANIC:"有机布局",MENU_LAYOUT_PARALLEL:"平行线布局",MENU_LAYOUT_STACK_VERTICAL:"垂直堆栈",MENU_LAYOUT_STACK_HORIZONTAL:"水平堆栈",MENU_EXPORT:"导出",MENU_EXPORT_PNG:"导出PNG",MENU_EXPORT_PDF:"导出PDF",MENU_EXPORT_XML:"导出XML",MENU_EXPORT_SVG:"导出SVG",MENU_EXPAND_NODE:"展开子节点",MENU_EDIT:"编辑",MENU_CELL_DELETE:"删除",MENU_CELL_COPY:"复制",MENU_CELL_CUT:"剪切",MENU_CELL_PASTE:"粘贴",MENU_GRAPH_CLEAR:"清空画布",MENU_RELATION_CREATE:"创建关系",MENU_MODULE:"模式",MENU_MODULE_ORI:"原始模式",MENU_MODULE_TAG:"标签模式",MENU_VIEW_RELATION_BACK:"返回上层视图",WEBGL_FONT:"lisu",WEBGL_RESOURCE_DIR:"../resource/3d/",WEBGL_DEFAULT_MESH_NAME:"LV",WEBGL_LAYER_MARGIN:360,WEBGL_LAYER_WIDTH:1500,WEBGL_LAYER_HEIGHT:900,WEBGL_LAYER_FONT_COLOR:3306404,WEBGL_LAYER_FONT_SIDE_COLOR:11184810,WEBGL_LAYER_OPACITY:.8,WEBGL_LAYER_COLOR:14540253,WEBGL_LAYER_NAME_PREFIX:"图层",WEBGL_LAYER_FONT_FAMILY:"lisu",WEBGL_LAYER_FONT_SIZE:30,WEBGL_LAYER_FONT_HEIGHT:4,WEBGL_NODE_DEPTH:8,WEBGL_NODE_FONT_SIDE_COLOR:11184810,WEBGL_NODE_FONT_COLOR:3444464,WEBGL_NODE_FONT_SIZE:8,WEBGL_NODE_FONT_FAMILY:"lisu",WEBGL_CAMERA_POSITION_X:-300,WEBGL_CAMERA_POSITION_Y:600,WEBGL_CAMERA_NEAR:100,WEBGL_CAMERA_FAR:1e5,WEBGL_LINE_COLOR:6710886,WEBGL_LIGHT_POSITION:3500,WEBGL_LIGHT_COLOR:16777215,WEBGL_LAYER_LINE_COLOR:10066329,WEBGL_LAYER_LINE_COLOR_SELECTION:255,WEBGL_CONTAINER_COLOR:[15724527,14671839,13619151,12303359],TIME_AVERAGE:300}}])}(nameSpace.reg("graph")),function(e){"use strict";e.app.factory("ContextLibs",["Const",function(e){var t={};return t[e.MENU_VIEW_OPEN]=function(){this.action.open()},t[e.MENU_VIEW_UPDATE]=function(){this.action.update()},t[e.MENU_VIEW_NEW]=function(){this.action.create()},t[e.MENU_VIEW_SAVE]=function(){this.action.save()},t[e.MENU_VIEW_RELATION_BACK]=function(){this.action.historyBack()},t[e.MENU_GRAPH_CLEAR]=function(){this.action.clear()},t[e.MENU_ZOOM_IN]=function(){this.action.zoomIn()},t[e.MENU_ZOOM_OUT]=function(){this.action.zoomOut()},t[e.MENU_ZOOM_ACTUAL]=function(){this.action.zoomActual()},t[e.MENU_ZOOM_CENTER]=function(){this.action.zoomCenter()},t[e.MENU_CELL_COPY]=function(){this.action.copy()},t[e.MENU_CELL_CUT]=function(){this.action.cut()},t[e.MENU_CELL_PASTE]=function(){this.action.paste()},t[e.MENU_CELL_DELETE]=function(){this.action.removeCells()},t[e.MENU_OPACITY]=function(){this.action.cellOpacity()},t[e.MENU_STROKE_WIDTH]=function(){this.action.cellStrokeSize()},t[e.MENU_FONT_STYLE]=function(){this.action.font()},t[e.MENU_OPEN_URL]=function(){this.action.openUrl()},t[e.MENU_EXPORT_PNG]=function(){this.action.exportPng()},t[e.MENU_EXPORT_XML]=function(){this.action.exportXml()},t[e.MENU_EXPORT_PDF]=function(){this.action.exportPdf()},t[e.MENU_EXPORT_SVG]=function(){this.action.exportSvg()},t[e.MENU_EXPAND_NODE]=function(){this.action.expandNode()},t[e.MENU_LAYOUT_HORIZONTAL]=function(){this.action.layoutHorizontal()},t[e.MENU_LAYOUT_VERTICAL]=function(){this.action.layoutVertical()},t[e.MENU_LAYOUT_CIRCLE]=function(){this.action.layoutCircle()},t[e.MENU_LAYOUT_ORGANIC]=function(){this.action.layoutOrganic()},t[e.MENU_LAYOUT_PARALLEL]=function(){this.action.layoutParallel()},t[e.MENU_LAYOUT_STACK_HORIZONTAL]=function(){this.action.layoutStackHorizontal()},t[e.MENU_LAYOUT_STACK_VERTICAL]=function(){this.action.layoutStackVertical()},t[e.MENU_VIEW_RELATION_SET]=function(){this.action.relationViewSet()},t[e.MENU_VIEW_RELATION_OPEN]=function(){this.action.relationViewOpen()},t}])}(nameSpace.reg("graph")),function(e){"use strict";var t=function(e){var t=function(){var t=this;t.split=15,t.id=e.createHash(Date.now().toString()),t.className="graph-contextmenu",t.childClassName="graph-contextmenu-sub",t.dividerClassName="graph-contextmenu-divider",t.itemClassName="graph-contextmenu-item",t.intoIconClassName="graph-contextmenu-into-icon",t.element=this.createMain(),t.element.id=this.id,t.lock=!1,document.body.addEventListener("click",function(){t.hide()}),document.body.appendChild(this.element)};return t.prototype.createMain=function(){var e,t=this;return e=document.createElement("div"),e.className=t.className,e},t.prototype.addItem=function(e,t,i,n,o){var a,r,s,l=this;return a=document.createElement("div"),a.className=l.itemClassName,!o||o&&!o.disabled?(a.addEventListener("click",function(){"function"==typeof i?(i(),l.hide()):l.getChild(this)||l.hide()}),a.addEventListener("mouseleave",function(){l.closeChild(this),$(this).removeClass("active")}),a.addEventListener("mouseenter",function(){$(this).addClass("active"),l.showChild(this)})):($(a).addClass("noselect"),a.style.cursor="auto",a.style.color="#aaa",a.addEventListener("click",function(e){e.stopPropagation()})),r=document.createElement("span"),r.innerHTML=e,a.appendChild(r),n?(s=n.querySelector("."+l.childClassName),s||(s=l.createMain(),s.className=l.childClassName,l.addChildLevelIco(n),n.appendChild(s)),s.appendChild(a)):l.element.appendChild(a),a},t.prototype.clearAllItems=function(){for(var e=this;e.element.firstChild;)e.element.removeChild(e.element.firstChild)},t.prototype.hasChildIco=function(e){var t=this;return e.querySelector("."+t.childIcoClassName)},t.prototype.createChildIco=function(e){var t,i=this;t=document.createElement("div"),t.className=i.intoIconClassName,e.appendChild(t)},t.prototype.addChildLevelIco=function(e){var t=this;t.hasChildIco(e)||t.createChildIco(e)},t.prototype.addSeparator=function(e){var t,i=this,n=null;t=document.createElement("div"),t.className=i.dividerClassName,e?(n=e.querySelector("."+i.childClassName),n.appendChild(t)):i.element.appendChild(t)},t.prototype.closeAllChild=function(){var e=this;$(e.element).find("."+e.childClassName).hide()},t.prototype.getChild=function(e){var t=this;return $(e).find("."+t.childClassName)[0]},t.prototype.showChild=function(e){var t,i=this;t=i.getChild(e),t&&(t.style.display="block")},t.prototype.closeChild=function(e){var t,i=this;t=i.getChild(e),t&&(t.style.display="none")},t.prototype.isIntoChild=function(e){var t,i,n=this;return t=n.getChild(e),i=!(!t||"block"!==t.style.display)},t.prototype.show=function(e,t){var i,n=this;n.element.children.length>=1&&(n.element.style.display="block",i=document.documentElement,i.clientHeight<t+n.element.clientHeight?t-=n.element.clientHeight+1:t--,i.clientWidth<e+n.element.clientWidth?e-=n.element.clientWidth+1:e--,n.element.style.left=e+"px",n.element.style.top=t+"px")},t.prototype.hide=function(){var e=this;e.element.style.display="none"},t};e.app.factory("ContextMenu",["md5",t])}(nameSpace.reg("graph")),function(e){"use strict";var t=function(t,i,n,o,a){var r=function(t){this.options=t,this.editor=t.editor,this.$table=t.$table,this.isSelectMore=!1,this.heightLightCell=null,this.utils=e.utils,this.binding()};return r.prototype.binding=function(){var e=this;e.$table.find("tbody tr").each(function(){$(this).attr("data-id")&&e.createDragSource(this,e.createDropHandler(this,!0),e.createDragPreview(n.GRAPH_DRAG_WIDTH,n.GRAPH_DRAG_HEIGHT))})},r.prototype.createCell=function(e,t,o,a,r,s,l){var c=this,u="";return $.each(c.options.ciData,function(){var e=this;e.categoryId===o&&(u=i["static"](e.icon))}),e.insertVertex(t,n.CI_PREFIX+a,r,s,l,n.GRAPH_DRAG_WIDTH,n.GRAPH_DRAG_HEIGHT,"image;image="+u)},r.prototype.createDragSource=function(e,t,i){var n,o=this,a="strokeColor=#0066FF;strokeWidth=4;fillColor=none;";return n=mxUtils.makeDraggable(e,o.editor.graph,t,i,0,0,o.editor.graph.autoscroll,!0,!0),n.getDropTarget=function(e,t,i){var n,r,s,l="";return r=mxDragSource.prototype.getDropTarget.apply(this,arguments),s=function(n){var o;return o=e.getCellAt(t,i,n,!0,!0),o&&o.children&&o.children.length>=1&&(o=s(o)),o},n=s(e.getDefaultParent()),n=n?n:r,n&&n.vertex&&!o.heightLightCell||n&&n.vertex&&o.heightLightCell.geometry.x!==n.geometry.x||n&&n.vertex&&o.heightLightCell.geometry.y!==n.geometry.y?(e.removeCells([o.heightLightCell]),o.lastTargetCell=n,o.heightLightCell=e.addLight(n)):!n&&o.heightLightCell&&(e.removeCells([o.heightLightCell]),o.heightLightCell=null,o.lastTargetCell=null),n&&n.edge&&!o.lastTargetEdge?(o.lastTargetEdge=n,e.setOriStyle(n,n.getStyle()),n.setStyle(a),e.refresh(n)):!n&&o.lastTargetEdge&&(l=e.getOriStyle(o.lastTargetEdge),e.setOriStyle(o.lastTargetEdge,""),o.lastTargetEdge.setStyle(l),e.refresh(o.lastTargetEdge),o.lastTargetEdge=null),e.isValidRoot(n)||(n=null),n},n},r.prototype.handle=function(e,t,i){var o,a,r,s,l,c,u,p,h=this,d="",g="",f=[];p=h.editor.graph,s=p.getDefaultParent(),u=p.getModel(),u.beginUpdate();try{for(o=0;o<e.length;o++)a=e[o],r=a.attr("data-id"),$.each(h.options.ciData,function(){this.id===r&&(d=this.name,g=this.categoryId)}),p.getCellById([n.CI_PREFIX,r].join(""))?h.lastTargetCell&&(h.lastTargetCell.setValue(d),p.refresh(h.lastTargetCell)):h.isSelectMore||!h.lastTargetCell||h.lastTargetCell.collapsed||h.lastTargetCell.style&&-1!==h.lastTargetCell.style.indexOf("swimlane")?!h.isSelectMore&&h.lastTargetCell&&h.lastTargetCell.collapsed?(p.setCellAttr(h.lastTargetCell,"collapsed",h.options.lib[g]),p.setCellAttr(h.lastTargetCell,"label",d),h.lastTargetCell.setId([h.options.prefix,r].join("")),p.refresh(),h.lastTargetCell=null):h.isSelectMore||!h.lastTargetCell||h.lastTargetCell.style&&-1!==h.lastTargetCell.style.indexOf("swimlane")?(h.lastTargetCell&&h.lastTargetCell.style.indexOf("swimlane")>=0&&(t-=h.lastTargetCell.geometry.x,i-=h.lastTargetCell.geometry.y,s=h.lastTargetCell),c=h.createCell(p,s,g,r,d,t,i),f.push(r),p.refresh(c)):(h.lastTargetCell.setId([h.options.prefix,r].join("")),l=p.getOriStyle(h.lastTargetCell),p.setOriStyle(h.lastTargetCell,""),h.lastTargetCell.setStyle(l),p.refresh(h.lastTargetCell),h.lastTargetCell=null):(h.lastTargetCell.setId([h.options.prefix,r].join("")),h.lastTargetCell.setValue(d),p.refresh(h.lastTargetCell),h.lastTargetCell=null)}finally{u.endUpdate()}return f},r.prototype.createDropHandler=function(e){var t=this;return function(i,n,r,s,l){var c;t.heightLightCell&&(i.removeCells([t.heightLightCell]),t.heightLightCell=null),c=t.getSelectTr(),t.isSelectMore=c.length>=2,c=c.length>=1?c:[$(e)],t.handle(c,s,l),t.autoCreateRelation(function(e){(e||t.isSelectMore)&&(t.editor.action.layoutVertical(),i.refresh(),i.zoomToCenter())}),o.$broadcast(a.CI_TABLE_UNCHECKED)}},r.prototype.createDragPreview=function(e,t,i){var n=document.createElement("div");return n.style.border="1px dashed black",n.style.width=e+"px",n.style.height=t+"px",n.innerHTML=i?i:"",n},r.prototype.getSelectTr=function(){var e=[],t=this;return t.$table.find("tbody tr").each(function(){$(this).find("input").is(":checked")&&e.push($(this))}),e},r.prototype.autoCreateRelation=function(e){var i=this;t.get({cis:i.editor.action.getCisId()}).success(function(t){if(t.data){var o,a,r=!1;a=i.editor.graph.getDefaultParent(),o=i.editor.graph.getModel(),o.beginUpdate(),$.each(t.data,function(){var e=i.editor.graph.getCellById([n.CI_PREFIX,this.startCi].join("")),t=i.editor.graph.getCellById([n.CI_PREFIX,this.endCi].join(""));i.clearEdges(e,t)});try{$.each(t.data,function(){var e=i.editor.graph.getCellById([n.CI_PREFIX,this.startCi].join("")),t=i.editor.graph.getCellById([n.CI_PREFIX,this.endCi].join(""));if(e&&t){var o=[n.RELATION_PREFIX,this.relCateName].join("");i.editor.graph.insertEdge(a,o,this.relCateName,e,t),r=!0}})}finally{o.endUpdate()}angular.isFunction(e)&&e(r)}})},r.prototype.clearEdges=function(e,t){var i,n=this,o=[];if(e&&t&&Array.isArray(e.edges))for(i=0;i<e.edges.length;i++)(e.edges[i].source.id===t.id||e.edges[i].target.id===t.id)&&o.push(e.edges[i]);n.editor.graph.removeCells(o),n.editor.graph.refresh()},r};t.$inject=["CiRelationService","Unit","Const","$rootScope","Event"],e.app.factory("DataDraw",t)}(nameSpace.reg("graph")),function(e){"use strict";e.app.factory("Editor",["GraphAction","GraphState","MxEditor","GraphHisotry",function(e,t,i,n){return function(o,a){var r;return r=new Editor,r.graph.init(o),r.graph.setTooltips(!1),r.graph.refresh(),r.graph.container.style.backgroundImage="url("+IMAGE_PATH+"/grid_bg.png)",r.graph.container.focus(),a&&r.outline.init(a),$(o).mousewheel(function(e,t){r.state.zoomLock||(t>0?r.action.zoomIn():r.action.zoomOut())}),new i(r),r.action=new e(r),r.state=new t(r),r.history=new n(r),r}}])}(nameSpace.reg("graph")),function(e){"use strict";e.app.factory("Event",[function(){return{GRAPH_CELL_CLICK:"graphCellClick",GRAPH_CI_CELL_CLICK:"graphCiCellClick",GRAPH_CANVAS_CLICK:"graphCanvasClick",GRAPH_SCALE:"graphScale",GRAPH_VERTEX_CLONE:"graphVertexClone",VIEW_DELETE_BEFORE:"viewDeleteBefore",VIEW_DELETE_AFTER:"viewDeleteAfter",VIEW_UPDATE_BEFORE:"viewUpdateBefore",VIEW_PUBLIC_BEFORE:"viewPublicBefore",VIEW_UNPUBLIC_BEFORE:"viewUnpublicBefore",VIEW_SET_PUBLIC:"viewSetPublic",VIEW_SET_UNPUBLIC:"viewSetUnpublic",VIEW_SUBSCRIPTION_BEFORE:"viewSubscriptionBefore",VIEW_UNSUBSCRIPTION_BEFORE:"viewUnsubscriptionBefore",VIEW_SUBSCRIPTION_AFTER:"viewSubscriptionAfter",VIEW_UNSUBSCRIPTION_AFTER:"viewUnsubscriptionAfter",GRAPH_INFO_TOGGLE:"graphInfoToggle",GRAPH_TABLE_SHOW:"graphTableShow",GRAPH_TABLE_HIDE:"graphTableHide",GRAPH_CHANGE:"graphChange",GROUP_VIEW_ID_CHANGE:"groupViewIdChange",CI_TABLE_UNCHECKED:"ciTableUnchecked",SIDEBAR_CALLAPSED:"sidebarCallapsed",USERINFO_UPDATE:"userinfoUpdate",TIMELINE_POINT_CLICK:"timelinePointClick",GRAPH_MONITOR_UPDATE:"graphMonitorUpdate"}}])}(nameSpace.reg("graph")),function(e){"use strict";e.app.factory("GraphContextMenu",["md5","ContextMenu","Unit","Const",function(e,t,i,n){var o="-",a=function(e,t,i){var n,r=null;for(n=0;n<t.length;n++){if(!t[n])throw new Error(n);angular.isArray(t[n])?a(e,t[n],r):angular.isObject(t[n])?"object"==typeof i?e.addItem(t[n].name,null,t[n].fun,i,t[n]):r=e.addItem(t[n].name,null,t[n].fun,null,t[n]):angular.isString(t[n])&&(t[n]===o?e.addSeparator(i):"object"==typeof i?e.addItem(t[n],null,null,i):r=e.addItem(t[n],null,null));

}},r=function(e,t,i,n){var o,a,s;for(s=function(e,o,a){var r,s;r=a?a:e,s=o?o:i[e],t.push("function"==typeof s?{name:r,fun:function(e){var t=e?e:n.evt;n.that?s.apply(n.that,[t,n.selectionCell]):s.apply(n.editor,[t,n.selectionCell])}}:r)},o=0;o<e.length;o++){if(!e[o])throw new Error(e[o]);e[o].constructor===Object&&e[o].name?s(e[o].name,e[o].fun,e[o].aliases):e[o].constructor===Array?(a=[],t.push(a),r(e[o],a,i,n)):s(e[o],i[e[o]])}},s={},l=function(e,i){this.editor=e.graph?e:{graph:e},this.option=i,this.menu=new t,this.items={cell:[],vertex:[],edge:[],canvas:[],all:[]},this.that=null,"object"==typeof i&&i.that&&(this.that=i.that),this.addLibs(i.libs),this.itemsInit(),this.bind()};return l.prototype.itemsInit=function(){var e,t,i=this;t=i.getLibs(),$.each(i.items,function(n){e=i.option[n]?i.option[n]:[],r(e,i.items[n],t,i)})},l.prototype.filter=function(e){var t,i,n=this,o=function(i){var a;for(a=0;a<i.length;a++)angular.isArray(i[a])?o(i[a]):t.apply(n,[i[a],e])&&(i[a]=n.createDisabledItem(i[a]))};return e&&e.vertex&&(t=n.filterVertex,i=angular.copy(n.items.vertex),o(i)),e&&e.edge&&(t=n.filterEdge,i=angular.copy(n.items.edge),o(i)),e||(t=n.filterCanvas,i=angular.copy(n.items.canvas),o(i)),i},l.prototype.filterVertex=function(e,t){var o,a=this;return angular.isObject(e)&&(o=e.name),(a.editor.graph.getCellAttr(t,"link")||o!==n.MENU_OPEN_URL)&&(a.editor.graph.getCellAttr(t,"view")||o!==n.MENU_VIEW_RELATION_OPEN)&&(i.isCiCell(t)||o!==n.MENU_EXPAND_NODE)?void 0:!0},l.prototype.filterEdge=function(){},l.prototype.filterCanvas=function(e){var t,i=this;return angular.isObject(e)&&(t=e.name),angular.isString(e)&&(t=e),i.editor.state.view&&t===n.MENU_VIEW_SAVE&&(e.name="另存视图"),(i.editor.state.view||t!==n.MENU_VIEW_UPDATE&&t!==n.MENU_VIEW_NEW)&&(0!==i.editor.graph.getDepCells().length||t!==n.MENU_EXPORT&&t!==n.MENU_LAYOUT&&t!==n.MENU_ZOOM_CENTER)?0===i.editor.history.count()&&t===n.MENU_VIEW_RELATION_BACK?!0:mxClipboard.cells||t!==n.MENU_CELL_PASTE?void 0:!0:!0},l.prototype.createDisabledItem=function(e){var t;return angular.isObject(e)&&(t=e.name),angular.isString(e)&&(t=e),{disabled:!0,name:t}},l.prototype.bind=function(){var e=this;mxPopupMenu.prototype.popup=function(e,t,i,n){if(null!==this.div&&null!==this.tbody&&null!==this.factoryMethod){for(this.div.style.left=e+"px",this.div.style.top=t+"px";null!==this.tbody.firstChild;)mxEvent.release(this.tbody.firstChild),this.tbody.removeChild(this.tbody.firstChild);this.itemCount=0,this.factoryMethod(this,i,n),this.itemCount>0&&(this.showMenu(),this.fireEvent(new mxEventObject(mxEvent.SHOW)))}},mxEvent.disableContextMenu(document.body),e.editor.graph.panningHandler.autoExpand=!0,e.editor.graph.popupMenuHandler.autoExpand=!0,e.editor.graph.popupMenuHandler.factoryMethod=function(t,i,n){e.selectionCell=i,e.evt=n,e.menu.clearAllItems(),a(e.menu,e.filter(i)),e.menu.show(n.clientX,n.clientY)}},l.prototype.addLibs=function(e){e&&e.constructor===Object&&$.each(e,function(t){this.constructor===Function&&(s[t]=e[t])})},l.prototype.getLibs=function(){return s},l}])}(nameSpace.reg("graph")),function(e){"use strict";e.app.factory("GraphMonitor",["CiMonitorService","Unit","Const","$timeout","$window","$rootScope","Event",function(e,t,i,n,o,a,r){var s=null;return function(l){n.cancel(s),this.editor=l.editor,this.inMapping={},this.width=24,this.height=24,this.style="ellipse;strokeWidth=none;strokeColor=none;movable=0;",this.timeout=6e4,this.update=function(){var t,n,s=this,l=this.editor.state;l.startTime&&l.endTime?(t=l.startTime,n=l.endTime):(l.timeAverage&&(l.timeAverage=i.TIME_AVERAGE),n=o.parseInt((new Date).getTime()/1e3),t=n-l.timeAverage),e.getView([l.view.id],t,n).success(function(e){s.hideAll(),s.data=e.data,$.each(s.data[s.editor.state.view.id],function(){s.refresh(this.id,Number(this.alarm),this.count)}),s.editor.graph.refresh(),a.$broadcast(r.GRAPH_MONITOR_UPDATE)})},this.stop=function(){n.cancel(s)},this.start=function(){var e=this;n.cancel(s),s=n(function(){e.update(),e.start()},e.timeout)},this.create=function(e,t,n){var o=this.getCi(e);if(o){var a=o.getGeometry();this.inMapping[o.id]=this.editor.graph.insertVertex(o.getParent(),i.IN_PREFIX+o.id,n?n:0,a.x-this.width/2,a.y-this.height/2,this.width,this.height,this.style),this.setValue(o.id,t,n)}},this.refresh=function(e,t,i){var n=this.getCi(e);n?this.inMapping[n.id]?(this.setValue(n.id,t,i),this.editor.graph.setCellStyles(mxConstants.STYLE_OPACITY,100,[n])):this.create(e,t,i):this.create()},this.setValue=function(e,i,n){if(this.inMapping[e]){var o=this.inMapping[e],a=t.getLevelColor(i),r=this.style+"fillColor="+a.bg+";fontColor="+a.fc;o.setValue(n),o.setStyle(r)}},this.remove=function(e){this.inMapping[e]&&(this.editor.graph.removeCells(this.inMapping[e]),this.inMapping[e]=null)},this.hideAll=function(){var e=[];$.each(this.inMapping,function(){this.setValue(""),e.push(this)}),this.editor.graph.setCellStyles(mxConstants.STYLE_OPACITY,0,e)},this.getCi=function(e){var t=this;return angular.isString(e)&&(-1===e.indexOf(i.CI_PREFIX)&&(e=i.CI_PREFIX+e),e=t.editor.graph.getCellById(e)),e},this.start()}}])}(nameSpace.reg("graph")),function(e){"use strict";e.app.factory("GraphHisotry",function(){return function(e){this.history=[],this.push=function(e){this.history.push(e)},this.back=function(){if(this.history.length){var t=this.history.pop();e.action.openView(t),this.refreshNavigation()}},this.showNavigation=function(){},this.hideNavigation=function(){},this.refreshNavigation=function(){},this.count=function(){return this.history.length}}})}(nameSpace.reg("graph")),function(e){"use strict";e.app.factory("HttpInterceptor",["$q","Unit","$cookies",function(e,t,i){var n=0;return{request:function(e){return e.timeout=6e4,e.headers.token=i.get("token"),e.cache||-1===e.url.indexOf("/api/rest/")||(n++,t.loadingbar.show()),e},response:function(e){return angular.isObject(e.data)&&e.data.message&&"GET"!==e.config.method&&t.success(e.data.message),-1!==e.config.url.indexOf("/api/rest/")&&(n--,0===n&&t.loadingbar.hide()),e},responseError:function(o){return 403===o.status||null===o.data?(n--,0===n&&(t.error("请求超时"),t.loadingbar.rollback())):t.loadingbar.error(),angular.isObject(o.data)&&o.data.message&&t.error(o.data.message),401===o.status&&i.remove("token"),e.reject(o)}}}])}(nameSpace.reg("graph")),function(e){"use strict";e.app.factory("KeyCode",[function(){return function(e,t,i){var n,o;if("object"==typeof e&&e.length?this.dom=e:("string"==typeof e||"object"==typeof e&&!e.length)&&(this.dom=$(e)),this.dom.focus(),this.obj=t,this.hasSame=function(){var e=[],t=0;for(n in this.obj)e.push(n.replace(/\s/g,""));for(n=0;n<e.length;n++){for(o=0;o<e.length;o++)e[n]===e[o]&&t++;if(t>1)return!0;t=0}return!1},this.hasSame())throw new Error("快捷键有重复");i&&(this.parameter=i),this.value={9:"tab",46:"delete",13:"enter",16:"shift",17:"ctrl",18:"alt",37:"left",38:"up",39:"right",40:"down",41:"select",48:0,49:1,50:2,51:3,52:4,53:5,54:6,55:7,56:8,57:9,65:"a",66:"b",67:"c",68:"d",69:"e",70:"f",71:"g",72:"h",73:"i",74:"j",75:"k",76:"l",77:"m",78:"n",79:"o",80:"p",81:"q",82:"r",83:"s",84:"t",85:"u",86:"v",87:"w",88:"x",89:"y",90:"z"};var a=this;this.hotKey=function(e){var t,i=e||event,n="";n=!i.ctrlKey||i.altKey||i.shiftKey?!i.altKey||i.ctrlKey||i.shiftKey?!i.shiftKey||i.altKey||i.ctrlKey?i.ctrlKey&&i.altKey&&!i.shiftKey?"ctrl+alt+"+a.value[i.keyCode]:i.ctrlKey&&i.shiftKey&&!i.altKey?"ctrl+shift+"+a.value[i.keyCode]:i.ctrlKey&&i.altKey&&i.shiftKey?"ctrl+alt+shift+"+a.value[i.keyCode]:a.value[i.keyCode]:"shift+"+a.value[i.keyCode]:"alt+"+a.value[i.keyCode]:"ctrl+"+a.value[i.keyCode];for(t in a.obj)if(n===t.replace(/\s/g,""))return"function"==typeof a.obj[t]?a.parameter?a.apply.obj[t](a.parameter):a.obj[t]():"string"==typeof a.obj[t]&&a.parameter&&a.parameter[a.obj[t]](),i.preventDefault(),i.stopPropagation(),!1},this.watch=function(){this.dom.bind("keydown",this.hotKey)},this.unwatch=function(){this.dom.unbind("keydown",this.hotKey)},this.watch()}}])}(nameSpace.reg("graph")),function(e){"use strict";e.app.factory("LoadMesh",["md5",function(e){return function(){this.cacheObj={},this.load=function(t,i){var n,o=this;if(n=e.createHash(t.img),o.cacheObj[n])i(o.cacheObj[n].clone());else{var a;a=new THREE.OBJMTLLoader,a.load(t.mesh.obj,t.mesh.mtl,function(e){o.cacheObj[n]=e,i(e.clone())})}},this.destroy=function(){this.cacheObj={}}}}])}(nameSpace.reg("graph")),function(e){"use strict";e.app.factory("MxEditor",["$rootScope","Unit","Event","$timeout",function(t,i,n,o){return function(a){var r=a.graph.model.getStyle,s=new mxEditor;s.graph=a.graph,s.installDblClickHandler(s.graph),s.installUndoHandler(s.graph),s.installDrillHandler(s.graph),s.installChangeHandler(s.graph),s.installInsertHandler(s.graph),s.graph.panningHandler.factoryMethod=mxUtils.bind(s,function(e,t,i){return this.createPopupMenu(e,t,i)}),s.graph.connectionHandler.factoryMethod=mxUtils.bind(s,function(e,t){return this.createEdge(e,t)}),s.createLayoutManager(s.graph),s.graph.connectionHandler.createTargetVertex=function(t,i){var o=mxConnectionHandler.prototype.createTargetVertex.apply(s.graph.connectionHandler,arguments);return e.event.trigger(n.GRAPH_VERTEX_CLONE,{source:i,clone:o,graph:s.graph}),o},s.graph.addListener(mxEvent.CLICK,function(e,o){var r,s;r=o.getProperty("event"),s=o.getProperty("cell"),s&&1===r.which&&(t.$broadcast(n.GRAPH_CELL_CLICK,i.eventData({editor:a,cell:s})),i.isCiCell(s)&&t.$broadcast(n.GRAPH_CI_CELL_CLICK,i.eventData({editor:a,cell:s}))),s||(t.$broadcast(n.GRAPH_CANVAS_CLICK,i.eventData({editor:a})),t.$emit(n.GRAPH_CANVAS_CLICK,i.eventData({editor:a})))}),s.graph.model.getStyle=function(e){if(null!==e){var t={style:r.apply(this,arguments),cell:e,graph:s.graph,editor:s};return t.style}return null},s.keyHandler.handler.enabled=!1,s.graph.keyHandler=s.keyHandler,s.graph.getCursorForCell=function(e){var t;return t=mxGraph.prototype.getCursorForCell.apply(this,arguments),e&&i.isCiIn(e)&&(t="pointer"),t},t.$on(n.GRAPH_INFO_TOGGLE,function(){o(function(){a.action.zoomCenter()})})}}])}(nameSpace.reg("graph")),function(e){"use strict";e.app.factory("Outline",["Editor","Unit","AutoLayout",function(e,t,i){var n=function(e,t,i){var n=this;i=i||{},n.isIE=navigator.userAgent.indexOf("MSIE")>=0||navigator.userAgent.search(/Trident/i)>=0,n.layout=i.layout||"top",n.json=e,n.container=t,n.speed=400,n.graphMargin=10,n.clearClassName="clear",n.maskClassName="mask",n.maskHoverClassName="maskHover",n.maskElements=[],n.graphElements=[],n.scrollDivSize=i.toolbarSize||130,n.outLineDiv={Magnification:1.5,borderWidth:1,size:i.outLineSize||.9,marginLR:10,boxBgColor:"#000",boxBorderWidth:0,boxBorderColor:"#FFF",maxDisplayCount:i.maxCount||4},n.loading={width:300,height:30,borderWidth:1,borderColor:"green",padding:5,fontSize:30,color:"green",bgColor:"#F5F5F5",text:"Waiting Please ..."},n.tip={height:24,fontSize:14,padding:5,bgColor:"rgb(112, 176, 222)",color:"#FFF"},n.page={size:20,padding:3,fontSize:10,color:"#FFF",bgColor:"rgb(112, 176, 222)",opacity:.8},n.pageBtnStyle={size:20,marginLR:20,offset:5,color:i.btnColor||"white"},n.upBgColor=i.toolbarBgColor||"black",n.init(),n.loadData(),n.createDiv(),n.createGraph(),n.outlineEvents(),n.json.length>n.outLineDiv.maxDisplayCount&&(n.createPageBtn(),n.pageBtnEvents()),n.contextMenu()};n.prototype.init=function(){var e,t=this;e=t.outLineDiv,e.size>.9?e.size=.9:e.size<.1&&(e.size=.1),t.isHorizontalLayout()?(e.height=parseInt(t.scrollDivSize*e.size,10),e.width=parseInt(e.height*e.Magnification,10)):(e.width=parseInt(t.scrollDivSize*e.size,10),e.height=parseInt(e.width/e.Magnification,10))};var o=function(e){var t=document.createElement("div");return t.id=e,t},a=function(){var e=this,t=e.outLineDiv,i=e.loading;e.scrollContainer=o("scroll"),e.scrollContainer.style.cssText=["width: "+e.scrollDivSize+"px","height: 100%","overflow: hidden","background: "+e.upBgColor,"position: absolute","top: 0",e.layout+" : 0","z-index: 9"].join(";"),e.centerElement=o("center"),e.centerElement.style.cssText=["border: "+t.boxBorderWidth+"px solid "+t.boxBorderColor,"position: absolute","left: 0","right: 0","bottom: 0","top :0","height: "+(t.height+2*t.marginLR)*t.maxDisplayCount+"px","width: "+(t.width+2*t.borderWidth)+"px","margin: auto"].join(";"),e.actionElement=o("action"),e.actionElement.style.cssText=["width: 100%","height: 100%","overflow: hidden"].join(";"),e.scrollItemsContainer=o("items"),e.scrollItemsContainer.style.cssText=["height: "+(t.width+2*t.borderWidth+2*t.marginLR)*e.json.length+"px","width: 100%","overflow: hidden"].join(";"),e.scrollItemsContainer.className=e.clearClassName,e.actionElement.appendChild(e.scrollItemsContainer),e.centerElement.appendChild(e.actionElement),e.scrollContainer.appendChild(e.centerElement),e.mainContainer=o("main"),e.mainContainer.style.cssText=["position: absolute","width: "+($(e.container).width()-e.scrollDivSize)+"px","height: 100%","top: 0","left"===e.layout?"right: 0":"left: 0"].join(";"),e.loadingContainer=o("loading"),e.loadingContainer.style.cssText=["width: "+i.width+"px","height: "+i.height+"px","padding: "+i.padding+"px","color: "+i.color,"background: "+i.bgColor,"position: absolute","font-size: "+i.fontSize+"px","border: "+i.borderWidth+"px solid "+i.borderColor,"left: 0","top: 0","right: 0","bottom: 0","font-width: bold","line-height: "+i.height+"px","text-align: center","font-family: Arial","margin: auto"].join(";"),e.loadingContainer.innerHTML=i.text,e.mainContainer.appendChild(e.loadingContainer),e.container.appendChild(e.scrollContainer),e.container.appendChild(e.mainContainer)},r=function(){var e=this,t=e.outLineDiv,i=e.loading;e.scrollContainer=o("scroll"),e.scrollContainer.style.cssText=["width: 100%","overflow: hidden","position: absolute","background: "+e.upBgColor,"height: "+e.scrollDivSize+"px","left: 0","z-index: 9",e.layout+": 0"].join(";"),e.centerElement=o("center"),e.centerElement.style.cssText=["border: "+t.boxBorderWidth+"px solid "+t.boxBorderColor,"position: absolute","left: 0","right: 0","bottom: 0","top :0","width: "+(t.width+2*t.marginLR)*t.maxDisplayCount+"px","height: "+(t.height+2*t.borderWidth)+"px","margin: auto"].join(";"),e.actionElement=o("action"),e.actionElement.style.cssText=["width: 100%","height: 100%","overflow: hidden"].join(";"),e.scrollItemsContainer=o("items"),e.scrollItemsContainer.style.cssText=["width: "+(t.width+2*t.borderWidth+2*t.marginLR)*e.json.length+"px","height: 100%","overflow: hidden"].join(";"),e.scrollItemsContainer.className=e.clearClassName,e.actionElement.appendChild(e.scrollItemsContainer),e.centerElement.appendChild(e.actionElement),e.scrollContainer.appendChild(e.centerElement),e.mainContainer=o("main"),e.mainContainer.style.cssText=["position: absolute","width: 100%","height: "+($(e.container).height()-e.scrollDivSize)+"px","left: 0","top"===e.layout?"bottom: 0":"top: 0"].join(";"),e.loadingContainer=o("loading"),e.loadingContainer.style.cssText=["width: "+i.width+"px","height: "+i.height+"px","padding: "+i.padding+"px","color: "+i.color,"background: "+i.bgColor,"position: absolute","font-size: "+i.fontSize+"px","border: "+i.borderWidth+"px solid "+i.borderColor,"left: 0","top: 0","right: 0","bottom: 0","font-width: bold","line-height: "+i.height+"px","text-align: center","font-family: Arial","margin: auto"].join(";"),e.loadingContainer.innerHTML=i.text,e.mainContainer.appendChild(e.loadingContainer),e.container.appendChild(e.scrollContainer),e.container.appendChild(e.mainContainer)};n.prototype.resize=function(){var e=this;e.mainContainer.style.height=$(e.container).height()-e.scrollDivSize+"px"},n.prototype.createDiv=function(){var e=this;e.isHorizontalLayout()?r.apply(e):a.apply(e)},n.prototype.isHorizontalLayout=function(){var e,t=this;return e=!("top"!==t.layout&&"bottom"!==t.layout)},n.prototype.openXml=function(e){var t=this;"string"==typeof e.xml?(t.editor.action.openXml(e.xml),t.editor.graph.setConnectable(!1),t.editor.graph.json=e,t.editor.viewid=e.id):"function"==typeof e.xml&&e.xml(t.editor,e)},n.prototype.createGraph=function(){var n,o,a,r,s=this,l=s.outLineDiv,c=null,u=null,p=null,h=null,d=null,g=null;for(a=document.createElement("div"),a.style.cssText=["width: 100%","height: 100%","position: absolute","background: #FFF","left: 0","top: 0"].join(";"),s.mainContainer.appendChild(a),r=new e(a),r.zoomLock=!0,r.graph.setCellsSelectable(!1),r.graph.setCellsMovable(!1),r.graph.setCellsEditable(!1),r.graph.setExtendParents(!1),r.graph.setConnectable(!1),a.style.background="#FFF",new i(r.graph),r.graph.refresh(),s.editor=r,n=0,o=s.json.length;o>n;n++)c=document.createElement("div"),c.style.cssText=["width: "+l.width+"px","height: "+l.height+"px",s.isHorizontalLayout()?"margin:0 "+l.marginLR+"px":"margin:"+l.marginLR+"px 0","border: "+l.borderWidth+"px solid #CCC","overflow: hidden","position: relative","float: left","background: #FFF"].join(";"),d=document.createElement("img"),d.style.cssText=["width: 100%","height: 100%","position: absolute","left: 0","top: 0"].join(";"),d.src=t["static"](s.json[n].imageUrl),g=document.createElement("div"),g.style.cssText=["width: 100%","height: 100%","position: absolute","background: #000","cursor: pointer","left: 0","opacity: .2","top: 0","z-index: 9999"].join(";"),g.title=s.json[n].name,g.setAttribute("data-id",s.json[n].id),s.maskElements.push(g),p=document.createElement("div"),p.style.cssText=["width: 100%","height: "+s.tip.height+"px","position: absolute","background: "+s.tip.bgColor,"z-index: 22","left: 0","bottom: 0"].join(";"),h=document.createElement("div"),h.style.cssText=["position: absolute","padding: "+s.tip.padding+"px","color: "+s.tip.color,"font-size: "+s.tip.fontSize+"px","z-index: 22","line-height: 1em","left: 0","bottom: 0","top: 0","right: 0","margin: auto"].join(";"),h.innerHTML=s.json[n].name,p.appendChild(h),u=document.createElement("div"),u.style.cssText=["width: "+2*s.page.size+"px","height: "+s.page.size+"px","border-radius: "+(s.page.size+2*s.page.padding)/2+"px","padding: "+s.page.padding+"px","position: absolute","text-align: center","line-height: 15px","color: "+s.page.color,"font-size: "+s.page.fontSize+"px","opacity: "+s.page.opacity,"background: "+s.page.bgColor,"z-index: 22","right: 0","top: 0","margin: 5px 5px 0 0"].join(";"),u.innerHTML=[n+1,o].join("/"),c.appendChild(d),c.appendChild(g),c.appendChild(u),c.appendChild(p),s.scrollItemsContainer.appendChild(c)},n.prototype.loadData=function(){var e=0,t=this;if(t.map={},t.json)for(e=0;e<t.json.length;e++)t.map[t.json[e].id]=t.json[e]};var s=function(){var e=this,t=$(e.centerElement).width(),i=$(e.centerElement).height(),n=e.pageBtnStyle;e.nextBtn=document.createElement("div"),e.nextBtn.style.cssText=["width: 0px","height: 0px","font-size: 0px","line-height: 0px","position: absolute","cursor: pointer","border-bottom: "+n.size+"px solid transparent","border-top: "+n.size+"px solid transparent","border-left: "+n.size+"px solid "+n.color,"top: "+(i-2*n.size)/2+"px","z-index: 99999","left: "+(t+n.offset)+"px"].join(";"),e.prevBtn=document.createElement("div"),e.prevBtn.style.cssText=["width: 0px","height: 0px","font-size: 0px","line-height: 0px","position: absolute","cursor: pointer","border-bottom: "+n.size+"px solid transparent","border-top: "+n.size+"px solid transparent","border-right: "+n.size+"px solid "+n.color,"top: "+(i-2*n.size)/2+"px","z-index: 99999","left: "+-1*(n.offset+n.size)+"px"].join(";"),e.centerElement.appendChild(e.nextBtn),e.centerElement.appendChild(e.prevBtn)},l=function(){var e=this,t=$(e.centerElement).height(),i=e.pageBtnStyle;e.nextBtn=document.createElement("div"),e.nextBtn.style.cssText=["width: 0px","height: 0px","font-size: 0px","line-height: 0px","position: absolute","cursor: pointer","border-right: "+i.size+"px solid transparent","border-left: "+i.size+"px solid transparent","border-top: "+i.size+"px solid "+i.color,"left: 0","right: 0","top: "+(t+i.offset)+"px","z-index: 99999","margin: auto"].join(";"),e.prevBtn=document.createElement("div"),e.prevBtn.style.cssText=["width: 0px","height: 0px","font-size: 0px","line-height: 0px","position: absolute","cursor: pointer","border-left: "+i.size+"px solid transparent","border-right: "+i.size+"px solid transparent","border-bottom: "+i.size+"px solid "+i.color,"z-index: 99999","left: 0","right: 0","top: "+-1*(i.offset+i.size)+"px","margin: auto"].join(";"),e.centerElement.appendChild(e.nextBtn),e.centerElement.appendChild(e.prevBtn)};n.prototype.createPageBtn=function(){var e=this;e.isHorizontalLayout()?s.apply(e):l.apply(e)};var c=function(e,t){var i,n;for(i=0,n=e.length;n>i;i++)t.apply(e[i],[i])};n.prototype.outlineEvents=function(){var e=this;e.openXml(e.json[0]),c(e.maskElements,function(t){var i,n;0===t&&$(this).addClass(e.maskClassName);var o=$(this).css("opacity"),a=1;$(this).mouseover(function(){a=$(this).css("opacity"),$(this).addClass(e.maskHoverClassName),$(this).css("opacity",0)}).mouseout(function(){$(this).removeClass(e.maskHoverClassName),$(this).css("opacity",a)}).click(function(){0!=$(this).css("opacity")&&(o=$(this).css("opacity")),$("#items > div").each(function(){$(this).find("div[data-id]").css("opacity",o)}),a=0,$(this).css("opacity",0);var t;n=this,t=e.map[$(n).attr("data-id")],e.openXml(t),e.outlineClick&&e.outlineClick(),c(e.maskElements,function(t){n===e.maskElements[t]?(i=t,$(this).addClass(e.maskClassName)):$(this).removeClass(e.maskClassName)})})})};var u=function(){var e=this,t=e.outLineDiv,i=t.width+2*t.marginLR,n=(e.json.length-e.outLineDiv.maxDisplayCount)*i;e.scrollLock=!1,$(e.nextBtn).click(function(){if(!e.scrollLock){var t=$(e.actionElement).scrollLeft()+i;n>=t&&(e.scrollLock=!0,$(e.actionElement).animate({scrollLeft:t},e.speed,function(){e.scrollLock=!1}))}}),$(e.prevBtn).click(function(){if(!e.scrollLock){var t=$(e.actionElement).scrollLeft()-i;$(e.actionElement).scrollLeft()>0&&(e.scrollLock=!0,$(e.actionElement).animate({scrollLeft:t},e.speed,function(){e.scrollLock=!1}))}})},p=function(){var e=this,t=e.outLineDiv,i=t.height+2*t.marginLR+2*t.borderWidth,n=(e.json.length-e.outLineDiv.maxDisplayCount)*i;$(e.nextBtn).click(function(){$(e.actionElement).stop();var t=$(e.actionElement).scrollTop()+i;n>=t&&$(e.actionElement).animate({scrollTop:t},e.speed)}),$(e.prevBtn).click(function(){$(e.actionElement).stop();var t=$(e.actionElement).scrollTop()-i;$(e.actionElement).scrollTop()>0&&$(e.actionElement).animate({scrollTop:t},e.speed)})};return n.prototype.pageBtnEvents=function(){var e=this;e.isHorizontalLayout()?u.apply(e):p.apply(e)},n.prototype.contextMenu=function(){},n}])}(nameSpace.reg("graph")),function(e){"use strict";e.app.factory("GraphState",function(){return function(){this.setView=function(e){this.view=e},this.empty=function(){this.view=null},this.isShowGrid=!0,this.isAssistLine=!0,this.isAutoLayout=!0,this.isAutoLine=!0}})}(nameSpace.reg("graph")),function(e){"use strict";e.app.factory("Unit",["$window","$interval","Const",function(e,t,i){var n={};return n.options={},n.options.toastr={closeButton:!0,progressBar:!1,preventDuplicates:!0,timeOut:1500},n.api=function(e){return"../api/rest"+e},n["static"]=function(e){return angular.isString(e)?(0===e.indexOf("../")&&(e=e.substr(3)),0===e.indexOf("/")&&(e=e.substr(1)),"../static/"+e):e},n.success=function(e){toastr.success(e,null,n.options.toastr)},n.error=function(e){toastr.error(e,null,n.options.toastr)},n.warning=function(e){toastr.warning(e,null,n.options.toastr)},n.basename=function(e){var t=e.split("/");return t.pop()},n.formatCategoryData=function(e){angular.forEach(e,function(e){e.icon=n["static"](e.icon)})},n.getStyleForAttr=function(e,t){var i="",n="";return e.style&&""!==e.style?(i=e.style.split(";"),$.each(i,function(){return this.indexOf(t)>=0?(n=this.split("=")[1],!1):void 0})):n="",n},n.isCiCell=function(e){return"object"==typeof e&&"string"==typeof e.id&&0===e.id.indexOf(i.CI_PREFIX)},n.isCiIn=function(e){return e.id.indexOf(i.IN_PREFIX)>=0},n.getCiIdByCell=function(e){return e.id.split("_").pop()},n.alert=function(e){bootbox.alert(String(e))},n.confirm=function(e,t){bootbox.confirm(String(e),function(e){e&&t()})},n.prompt=function(e,t,i){bootbox.prompt({title:String(e),value:String(i),callback:function(e){t(e)}})},n.unixToDatetime=function(e){var t=new Date(e);return[[t.getFullYear(),t.getMonth()+1<10?"0"+(t.getMonth()+1):t.getMonth()+1,t.getDate()<10?"0"+t.getDate():t.getDate()].join("-"),[t.getHours()<10?"0"+t.getHours():t.getHours(),t.getMinutes()<10?"0"+t.getMinutes():t.getMinutes(),t.getSeconds()<10?"0"+t.getSeconds():t.getSeconds()].join(":")].join(" ")},n.datetimeToUnix=function(e){var t=e.replace(/:/g,"-");t=t.replace(/ /g,"-");var i=t.split("-"),n=new Date(Date.UTC(i[0],i[1]-1,i[2],i[3]-8,i[4],i[5]));return parseInt(n.getTime()/1e3)},n.eventData=function(e){return n.isCiCell(e.cell)&&(e.cell.dbid=n.getCiIdByCell(e.cell)),e},n.loadingbar=function(){var e,i,n,o=$(".loadingbar-process"),a=-10,r=1;return{show:function(){t.cancel(e),t.cancel(i),t.cancel(n),a=0!==o.width()?o.width()/$(".loadingbar").width()*1e3:-10,$(o).stop(),$(o).fadeIn("slow"),e=t(function(){100>a?a+=20:900>=a&&(a+=Math.ceil(40*Math.random()/5)),a>=900&&t.cancel(e),o.css("width",.1*a+"%")},r)},hide:function(){t.cancel(e),t.cancel(i),t.cancel(n);var s=a;$(o).stop(),o.css("opacity",1),i=t(function(){a>1e3?(o.css("width","100%"),t.cancel(i),$(o).fadeOut("slow",function(){o.css("width",0).css("opacity",1)})):o.css("width",.1*a+"%"),a+=100>s?20:500>s?10:800>s?6:4},r)},rollback:function(){t.cancel(e),t.cancel(i),t.cancel(n),a=o.width()/$(".loadingbar").width()*1e3,n=t(function(){a-=10,o.css("width",.1*a+"%"),0>=a&&(t.cancel(n),$(o).fadeOut("slow",function(){o.css("width",0).css("opacity",1)}))},r)},error:function(){$(o).fadeOut()}}}(),n.getLevelColor=function(e){var t;switch(e){case 5:t={bg:"#FD0004",fc:"#FFFFFF"};break;case 4:t={bg:"#FFC100",fc:"#FFFFFF"};break;case 3:t={bg:"#FF8201",fc:"#000000"};break;case 2:t={bg:"#03B0ED",fc:"#FFFFFF"};break;default:t={bg:"#94D04A",fc:"#FFFFFF"}}return t},n.download=function(e){var t;t=document.createElement("a"),t.download=e,t.target="_blank",t.href=n.api("/download/")+e,document.body.appendChild(t),t.click(),document.body.removeChild(t)},n.layout=function(e,t,i){var n;n=e.getChildVertices(),e.getModel().beginUpdate();try{t.execute(e.getDefaultParent(),n)}catch(o){throw o}finally{if(i&&navigator.userAgent.indexOf("Camino")<0){var a=new mxMorphing(e);a.addListener(mxEvent.DONE,mxUtils.bind(this,function(){e.getModel().endUpdate()})),a.startAnimation()}else e.getModel().endUpdate()}},n.handleGraphJson=function(){},n}])}(nameSpace.reg("graph")),function(e){"use strict";e.app.factory("Universe",["Const","LoadMesh","FontService",function(t,i,n){function o(e){this.options=e,this.loadObj=new i,this.meshBizInfo={},this.$container=e.$container,this.defaultNodeDepth=t.WEBGL_NODE_DEPTH,this.defaultLayerWidth=t.WEBGL_LAYER_WIDTH,this.defaultLayerHeight=t.WEBGL_LAYER_HEIGHT,this.margin=t.WEBGL_LAYER_MARGIN,this.sceneWidth=this.$container.width(),this.sceneHeight=this.$container.height(),this.fov=30,this.selected=[],this.layers=[],this.ballAnimationQueue=[],this.allNodes=[],this.allTexts=[],this.textsMap={},this.allCiIds=[],this.allCiObj={},this.allLineMesh=[],this.initThree(),this.initScene(),this.initCamera(),this.initLight(),this.enableScrollWheelZoom(),this.resize(),this.animate(),this.click(),this.event(),this.initLayer()}return o.prototype.blink=function(e,t){for(var i={},n=e,o=0,a=n.children.length;a>o;o++)0===o?i=n.children[o].geometry.clone():THREE.GeometryUtils.merge(i,n.children[o]);this.blinkList[t]=this.blinkList[t]||new THREE.Mesh(i,new THREE.MeshBasicMaterial({color:16711680,transparent:!0,opacity:.4})),this.blinkList[t].geometry=i;var r=e.scale;this.blinkList[t].scale.set(r.x,r.y,r.z),e.parent.updateMatrixWorld();var s=new THREE.Vector3;s.setFromMatrixPosition(e.matrixWorld),this.blinkList[t].position.set(s.x,s.y,s.z),e.parent.rotation.x===Math.PI&&(this.blinkList[t].rotation.x=Math.PI/2),this.scene.add(this.blinkList[t])},o.prototype.showTimeline=function(){var t,i=this,n=[];i.blinkObj={},i.blinkList={},t=function(t){$.each(t,function(t){var o,a=this;$.each(i.layers,function(e){var n=this;$.each(n,function(n){var o=[e,n,t].join("_");6===a.alarmLevel?i.blinkObj[o]&&(i.scene.remove(i.blinkList[o]),delete i.blinkObj[o]):i.allCiObj[o]&&(i.blinkObj[o]=i.allCiObj[o],i.blink(i.blinkObj[o],o))})}),6!==a.alarmLevel&&(o=e.utils.getLevelColor(a.alarmLevel),n.push({id:t,bg:o.bg,fc:o.fc}))})},i.timeline=e.Timeline({onload:function(){},clickedPoint:function(e){e&&t(e)},show:function(){},hide:function(){},ids:i.allCiIds,container:this.$container.parent()[0]}),t(i.timeline.timeData[1].data),i.timeline.show()},o.prototype.closeTimeline=function(){var e=this;$.each(e.blinkList,function(){e.scene.remove(this)}),e.blinkObj=null,e.blinkList=null,e.removeHighlightSelected(),e.timeline.remove()},o.prototype.close=function(){var e=this;e.timeline&&e.timeline.stopUpdateInterval(),$.each(e.scene.children,function(){e.scene.remove(this)})},o.prototype.event=function(){},o.prototype.removeHighlightSelected=function(){var e=this;$.each(e.selected,function(){e.scene.remove(this)}),e.selected=[]},o.prototype.getCiMesh=function(e){var t=[],i=this;return $.each(i.allCiObj,function(i){var n=this;i.split("_").pop()===e&&t.push(n)}),t},o.prototype.highlightNodeId=function(e){var i=this,n=[];i.hideLayerLine(),$.each(i.allNodes,function(){var o=this;o.id===e&&(n.push(o),$.each(i.getRelationLineByNodeId(o.id),function(){var e=this;n.push(e.node),e.line.material.color.setHex(t.WEBGL_LAYER_LINE_COLOR_SELECTION),e.line.visible=!0}))}),i.highlightSelected(n)},o.prototype.highlightSelected=function(e){var t=this;$.each(e,function(){for(var e,i=this,n={},o=i,a=0,r=o.children.length;r>a;a++)0===a?n=o.children[a].geometry.clone():THREE.GeometryUtils.merge(n,o.children[a]);e=new THREE.Mesh(n,new THREE.MeshBasicMaterial({color:16750848,transparent:!0,opacity:.4})),t.selected.push(e),e.geometry=n;var s=i.scale;e.scale.set(s.x,s.y,s.z),i.parent.updateMatrixWorld();var l=new THREE.Vector3;l.setFromMatrixPosition(i.matrixWorld),e.position.set(l.x,l.y,l.z),i.parent.rotation.x===Math.PI&&(e.rotation.x=Math.PI/2),t.scene.add(e)})},o.prototype.click=function(){var e,t,i=this;t=i.renderer.domElement,$(t).click(function(n){n.preventDefault();var o=t.offsetLeft,a=t.offsetTop,r=t.offsetWidth,s=t.offsetHeight,l=new THREE.Vector3((n.clientX-o)/r*2-1,-(n.clientY-a)/s*2+1,1);l.unproject(i.camera),l.sub(i.camera.position),l.normalize();var c=new THREE.Raycaster(i.camera.position,l),u=c.intersectObjects(i.allNodes,!0);i.removeHighlightSelected(),u.length>0&&(i.hideLayerLine(),e=u[0].object.parent,i.highlightNodeId(e.id));var p=c.intersectObjects(i.allTexts,!0);p.length>0})},o.prototype.converPosition=function(e,t,i){var n,o,a,r,s,l,c,u,p,h,d,g;if(u=this,a=0,r=0,l=u.defaultLayerHeight/t,c=u.defaultLayerWidth/e,c*u.defaultLayerHeight<=t?(s=c,r=(u.defaultLayerHeight-t*s)/2):(s=l,a=(u.defaultLayerWidth-e*s)/2),i.nodes)for(d=i.nodes,p=0,h=d.length;h>p;p++)o=d[p],o.width=o.width*s,o.height=o.height*s,o.x=o.x*s+a,o.y=o.y*s+r;if(i.containers)for(d=i.containers,p=0,h=d.length;h>p;p++)o=d[p],o.width=o.width*s,o.height=o.height*s,o.x=o.x*s+a,o.y=o.y*s+r;return i.edges?(n=function(e){e.x=e.x*s+a,e.y=e.y*s+r},g=[],$.each(i.edges,function(){var e=this;$.each(e.points,function(){g.push(n(this))})}),g):void 0},o.prototype.drawNode=function(e,i){var n,o,a,r;n=this,e.node={},a=angular.copy(e.nodes),o=function(i,o){var a;i.position.set(o.x-n.defaultLayerWidth/2+o.width/2,o.y-n.defaultLayerHeight/2+o.height/2,n.defaultNodeDepth/2*-1),i.rotation.x=Math.PI/2*-1,i.scale.x=o.width,i.scale.y=o.height,i.scale.z=o.width,e.node[o.id]={info:o,cube:i},n.drawNodeTexture(e,o),e.plane.add(i),n.allNodes.push(i),0===o.id.indexOf(t.CI_PREFIX)&&(a=o.id.substr(t.CI_PREFIX.length),n.allCiIds.push(a),n.allCiObj[[e.row,e.col,a].join("_")]=i),n.meshBizInfo[i.id]=e.node[o.id].info},(r=function(e){var t=e.pop();n.loadObj.load(t,function(n){o(n,t),e.length>=1?r(e):i()})})(a)},o.prototype.getResource=function(i){var n,o;return i?(n=i.split("/"),
o=n.pop(),o=o.substring(0,o.lastIndexOf("."))):o=t.WEBGL_DEFAULT_MESH_NAME,{obj:e.DEFINE_WEBGL.RESOURCE_DIR+encodeURIComponent(o)+".obj",mtl:e.DEFINE_WEBGL.RESOURCE_DIR+encodeURIComponent(o)+".mtl"}},o.prototype.drawLine=function(e){var i,n,o,a,r,s;if(o=this,e.edges){for(i=function(i){var n,a,r,s,l,c,u,p;for(l=new THREE.LineBasicMaterial({color:t.WEBGL_LINE_COLOR}),r=new THREE.Geometry,n=function(e){return r.vertices.push(new THREE.Vector3(e.x-o.defaultLayerWidth/2,e.y-o.defaultLayerHeight/2,-4))},p=i.points,c=0,u=p.length;u>c;c++)a=p[c],n(a);s=new THREE.Line(r,l),e.plane.add(s)},s=[],a=0,r=e.edges.length;r>a;a++)n=e.edges[a],s.push(i(n));return s}},o.prototype.drawNodeTexture=function(e,i){var n,o,a,r,s,l,c,u,p,h;return s=this,r=e.node[i.id].cube.position,o=new THREE.MeshBasicMaterial({color:t.WEBGL_NODE_FONT_COLOR}),a=new THREE.MeshBasicMaterial({color:t.WEBGL_NODE_FONT_SIDE_COLOR}),n=[o,a],l=new THREE.TextGeometry(i.name,{size:t.WEBGL_NODE_FONT_SIZE,height:1,curveSegments:1,font:"lisu",weight:"normal",style:"normal",extrudeMaterial:0}),u=new THREE.MeshFaceMaterial(n),p=new THREE.Mesh(l,u),l.computeBoundingBox(),h=l.boundingBox.max.x-l.boundingBox.min.x,c=l.boundingBox.max.y-l.boundingBox.min.y,p.rotation.x=-1*Math.PI,p.position.set(r.x-h/2,r.y+i.height/2+c+2,s.defaultNodeDepth/2*-1),e.plane.add(p),e.node[i.id].textMesh=p,p},o.prototype.resize=function(){var e=this.$container.width(),t=this.$container.height();return this.$container.find("canvas").height(t).width(e),THREEx.ContainerResize(this.$container[0],this.renderer,this.camera)},o.prototype.initThree=function(){this.renderer=new THREE.WebGLRenderer({antialias:!0,alpha:!0}),this.renderer.setSize(this.sceneWidth,this.sceneHeight),this.$container.append(this.renderer.domElement),this.renderer.setClearColor(16777215,1)},o.prototype.loadTexture=function(e){return THREE.ImageUtils.loadTexture(e)},o.prototype.initCamera=function(){var e,i,n;i=this.getLayerBox(),n=i.w>i.h?i.w:i.h,e=n/(2*Math.tan(this.fov/3*.017453293)),this.cameraDis=e,this.camera=new THREE.PerspectiveCamera(this.fov,this.sceneWidth/this.sceneHeight,t.WEBGL_CAMERA_NEAR,t.WEBGL_CAMERA_FAR),this.camera.rotation.x=Math.PI/2,this.camera.position.set(t.WEBGL_CAMERA_POSITION_X,t.WEBGL_CAMERA_POSITION_Y,.5*e),this.camera.lookAt(this.scene.position),this.scene.add(this.camera),this.scene.updateMatrixWorld(!0)},o.prototype.initScene=function(){this.scene=new THREE.Scene},o.prototype.initLight=function(){for(var e=[],i=0;4>i;i++)e[i]=new THREE.DirectionalLight(t.WEBGL_LIGHT_COLOR,.4),this.scene.add(e[i]);e[0].position.set(35e3,35e3,35e3),e[1].position.set(-35e3,35e3,-35e3),e[2].position.set(-35e3,35e3,-35e3),e[3].position.set(35e3,35e3,35e3)},o.prototype.render=function(){this.renderer.render(this.scene,this.camera)},o.prototype.drawText=function(e,i,n){var o,a,r,s,l,c,u,p,h,d,g,f=1.3;return a=new THREE.MeshBasicMaterial({color:t.WEBGL_LAYER_FONT_COLOR}),r=new THREE.MeshBasicMaterial({color:t.WEBGL_LAYER_FONT_SIDE_COLOR}),o=[a,r],s=new THREE.TextGeometry(i,{size:t.WEBGL_LAYER_FONT_SIZE,height:t.WEBGL_LAYER_FONT_HEIGHT,curveSegments:3,font:t.WEBGL_LAYER_FONT_FAMILY,weight:"normal",style:"normal",extrudeMaterial:1}),c=new THREE.MeshFaceMaterial(o),u=new THREE.Mesh(s,c),s.computeBoundingBox(),p=s.boundingBox.max.x-s.boundingBox.min.x,l=s.boundingBox.max.y-s.boundingBox.min.y,u.rotation.x=n?Math.PI/2*-1:Math.PI,u.position.set(this.defaultLayerWidth/2-p,this.defaultLayerHeight/2-l,0),e.add(u),h=new THREE.BoxGeometry(p*f,l*f,20),g=new THREE.MeshBasicMaterial,d=new THREE.Mesh(h,g),d.position.set(this.defaultLayerWidth/2-p/2,this.defaultLayerHeight/2-l,-1*t.WEBGL_LAYER_FONT_HEIGHT*3),d.rotation.x=n?Math.PI/2*-1:Math.PI,n||(d.position.y-=4*t.WEBGL_LAYER_FONT_HEIGHT),d.visible=!1,e.add(d),{textMesh:u,textBoxMesh:d}},o.prototype.drawContainer=function(e){var i=this;e.container={},$.each(angular.copy(e.containers),function(){var n=this;n.color=n.color?n.color:t.WEBGL_CONTAINER_COLOR[n.level];var o=new THREE.BoxGeometry(n.width,n.height,1),a=new THREE.MeshBasicMaterial({color:n.color,transparent:!0}),r=new THREE.Mesh(o,a);r.position.set(n.x-i.defaultLayerWidth/2+n.width/2,n.y-i.defaultLayerHeight/2+n.height/2,-n.level),e.container[n.id]={info:n,cube:r},e.plane.add(r)})},o.prototype.loadFont=function(e,i){var o,a=[],r=[],s={},l=this;$.each(e.split(""),function(){var e=this;s[e]||(s[e]=!0,r.push(e))}),o=_typeface_js.faces[t.WEBGL_FONT].normal.normal.glyphs,$.each(r,function(){var e=this;o[e]||a.push(e)}),a.length>=1&&n.get(a).success(function(e){$.each(e.data,function(e){o[e]=this}),"function"==typeof i&&i.apply(l)})},o.prototype.getLayerFonts=function(e){var t="";return e.name&&(t+=e.name),$.each(e.nodes,function(){t+=this.name}),$.each(e.containers,function(){t+=this.name}),$.each(e.edges,function(){t+=this.sourceName,t+=this.targetName}),t},o.prototype.getLayerBox=function(){var e=this,t=0,i={};return $.each(e.options.layers,function(){var e,i=this;for(e=0;e<i.length;e++){var n=i[e];if(n&&n.isVertical){t++;break}}}),i.h=e.options.layerMargin*(e.options.layerCount-1)+t*e.defaultLayerHeight,i.w=(e.options.layerItemCount-1)*e.defaultLayerWidth+(e.options.layerItemCount-1)*e.options.layerItemMargin,i.w=0===i.w?.7*e.defaultLayerWidth:i.w,i},o.prototype.getLayerPosByIndex=function(e,t){var i=this,n={},o=0,a=0;return $.each(i.options.layers,function(t){var n,r=this;for(n=0;n<r.length;n++){var s=r[n];if(s&&s.isVertical){e>t?o+=i.defaultLayerHeight:t===e&&(o+=i.defaultLayerHeight/2),a++;break}}}),n.y=(i.options.layerMargin*(i.options.layerCount-1)+a*i.defaultLayerHeight)/2-(e*i.options.layerMargin+o),n.x=t*(i.defaultLayerWidth+i.options.layerItemMargin)-((i.options.layerItemCount-1)*i.defaultLayerWidth+(i.options.layerItemCount-1)*i.options.layerItemMargin)/2,n.z=0,n},o.prototype.initLayer=function(){var e,t,i=this,n={},o=[];i.layers=[],t=function(e,t){return e+""+t},$.each(i.options.layers,function(e){$.each(this,function(i){this&&(o.push(t(e,i)),n[t(e,i)]=!1)})}),e=function(){var e;for(e=0;e<o.length;e++)if(!n[o[e]])return!1;return!0},$.each(i.options.layers,function(o){var a=this,r=[];$.each(a,function(a){var s=this;s&&(s.pos=i.getLayerPosByIndex(o,a),s.row=o,s.col=a,i.addLayer(s,function(){n[t(o,a)]=!0,e()&&(i.options.relation&&i.drawLayerLine(i.options.relation),i.options.isShowTimeline&&i.showTimeline())})),r.push(s)}),i.layers.push(r)})},o.prototype.addLayer=function(e,i){var n,o,a,r=this;e.node=e.node?e.node:[],e.width=e.width?e.width:r.defaultLayerWidth,e.height=e.height?e.height:r.defaultLayerHeight,e.planeQuality=e.planeQuality?e.planeQuality:10,n={side:THREE.DoubleSide,transparent:!0,opacity:t.WEBGL_LAYER_OPACITY,color:e.floorBgColor?e.floorBgColor:t.WEBGL_LAYER_COLOR},e.material=e.material?e.material:new THREE.MeshBasicMaterial(n),o=new THREE.Mesh(new THREE.PlaneBufferGeometry(e.width,e.height,e.planeQuality,e.planeQuality),e.material),o.receiveShadow=!0,o.rotation.x=e.isVertical?Math.PI:Math.PI/2,o.position.x=e.pos.x,o.position.z=e.pos.z,o.position.y=e.pos.y,r.scene.add(o),e.name=e.name?e.name:t.WEBGL_LAYER_NAME_PREFIX+(this.layers.length+1),r.loadFont(this.getLayerFonts(e),function(){a=this.drawText(o,e.name,!e.isVertical),e.textMesh=a.textMesh,e.textBoxMesh=a.textBoxMesh,e.plane=o,r.allTexts.push(a.textBoxMesh),r.textsMap[a.textBoxMesh.id]=e.viewid,r.converPosition(e.graphWidth,e.graphHeight,e),r.drawNode(e,function(){i&&i(e)}),r.drawContainer(e),r.drawLine(e),r.render()})},o.prototype.autoLayoutLayer=function(){var e,t,i,n,o,a,r,s,l;for(n=this,o=(n.layers.length-1)*n.margin/2*-1,e=function(e,t){e.plane.position.y=o+t*n.margin},s=n.layers,l=[],t=a=0,r=s.length;r>a;t=++a)i=s[t],l.push(e(i,t));return l},o.prototype.enableScrollWheelZoom=function(){var e;e=this,this.orbitControls=new THREE.OrbitControls(this.camera,this.renderer.domElement),this.orbitControls.damping=.2,this.orbitControls.addEventListener("change",function(){return e.render()})},o.prototype.animate=function(){var e,t;return t=this,(e=function(){requestAnimationFrame(e),t.orbitControls.update(),t.render(),$.each(t.selected,function(){var e=this,t=e.material.opacity;e.material.opacity=t>=.1?t-.01:.8}),t.blinkList&&$.each(t.blinkList,function(){var e=this.material.opacity;this.material.opacity=e>=.1?e-.02:.8}),!t.isCloseCameraAnimate&&t.cameraDis>t.camera.position.z?t.camera.position.z+=60:t.isCloseCameraAnimate=!0})()},o.prototype.getPointsTween=function(e){var t,i,n,o,a,r,s;for(o=2,n=[],a=function(e,t){var i,a,r,s,l;for(r=Math.max(Math.abs(e.x-t.x),Math.abs(e.y-t.y),Math.abs(e.z-t.z))/o,i=function(i){var o;return o={},o.x=e.x>t.x?e.x-Math.abs(e.x-t.x)/r*i:e.x+Math.abs(e.x-t.x)/r*i,o.y=e.y>t.y?e.y-Math.abs(e.y-t.y)/r*i:e.y+Math.abs(e.y-t.y)/r*i,o.z=e.z>t.z?e.z-Math.abs(e.z-t.z)/r*i:e.z+Math.abs(e.z-t.z)/r*i,n.push(o)},l=[],a=s=1;r>=1?r>=s:s>=r;a=r>=1?++s:--s)l.push(i(a));return l},t=r=0,s=e.length;s>r;t=++r)i=e[t],e[t+1]&&a(i,e[t+1]);return n},o.prototype.crateLineBallAnimation=function(e){var t,i,n,o;return o=this,t=new THREE.SphereGeometry(3,100,50),t.computeTangents(),n=new THREE.Mesh(t,new THREE.MeshLambertMaterial({color:16777215})),o.scene.add(n),i=o.getPointsTween(e),n.position.set(e[0].x,e[0].y,e[0].z),o.ballAnimationQueue.push({ball:n,points:e,animatePoints:i,back:[]})},o.prototype.updateBallAnimation=function(){var e,t,i,n,o,a,r;for(i=this,e=function(e){var t;return 0===e.animatePoints.length&&(e.animatePoints=e.back,e.back=[]),t=e.animatePoints.shift(),e.back.push(t),e.ball.position.set(t.x,t.y,t.z)},a=i.ballAnimationQueue,r=[],n=0,o=a.length;o>n;n++)t=a[n],r.push(e(t));return r},o.prototype.getSnodeAndTnodeById=function(e,t){var i,n=this,o=[];return i=function(e,t){var i,o=[];return i=function(t){var i=[];return $.each(t,function(){var t=this;t&&t.node[e]&&i.push(t.node[e])}),i},"undefined"==typeof t?$.each(n.layers,function(e){o.push({index:e,nodes:i(n.layers[e])})}):$.each(t,function(){var e=this;o.push({index:e,nodes:i(n.layers[e])})}),o},$.each(i(e),function(){var e=this,a=[];e.index>0&&a.push(e.index-1),e.index+1<n.layers.length&&a.push(e.index+1),$.each(e.nodes,function(){var e=this;$.each(i(t,a),function(){$.each(this.nodes,function(){o.push({source:e,target:this})})})})}),o},o.prototype.getNodeAbsolutePosition=function(e){var t;return t={},t.x=e.parent.position.x+e.position.x,t.y=e.parent.position.y+e.position.z,t.z=e.parent.position.z+e.position.y,t},o.prototype.getNodeBetweenPoints=function(e,t){var i,n;return i=t.y>e.y?e.y+(t.y-e.y)/2:t.y+(e.y-t.y)/2,n=[],n.push(new THREE.Vector3(e.x,e.y,e.z)),n.push(new THREE.Vector3(e.x,i,e.z)),n.push(new THREE.Vector3(t.x,i,e.z)),n.push(new THREE.Vector3(t.x,i,t.z)),n.push(new THREE.Vector3(t.x,t.y,t.z)),n},o.prototype.getLineByNodeId=function(e){var t=this,i=[];return $.each(t.allLineMesh,function(){var t=this;(t.source.id===e||t.target.id===e)&&i.push(t.line)}),i},o.prototype.getDonwLineByNodeId=function(e){var t,i=this,n=[];return t=function(e){var o=[];$.each(e,function(){var e=this;$.each(i.allLineMesh,function(){var t=this;t.source.id===e&&t.source.parent.position.y>t.target.parent.position.y&&(n.push({line:t.line,node:t.target}),o.push(t.target.id)),t.target.id===e&&t.target.parent.position.y>t.source.parent.position.y&&(n.push({line:t.line,node:t.source}),o.push(t.source.id))})}),o.length>=1&&t(o)},t([e]),n},o.prototype.getUpLineByNodeId=function(e){var t,i=this,n=[];return t=function(e){var o=[];$.each(e,function(){var e=this;$.each(i.allLineMesh,function(){var t=this;t.source.id===e&&t.source.parent.position.y<t.target.parent.position.y&&(n.push({line:t.line,node:t.target}),o.push(t.target.id)),t.target.id===e&&t.target.parent.position.y<t.source.parent.position.y&&(n.push({line:t.line,node:t.source}),o.push(t.source.id))})}),o.length>=1&&t(o)},t([e]),n},o.prototype.getRelationLineByNodeId=function(e){var t=this,i=[];return $.each(t.getDonwLineByNodeId(e),function(){i.push(this)}),$.each(t.getUpLineByNodeId(e),function(){i.push(this)}),i},o.prototype.getRelationCiByNodeId=function(e){var t=this,i=[],n=[],o={};return $.each(t.allNodes,function(){var n=this;n.id===e&&(i.push(n.id),$.each(t.getRelationLineByNodeId(n.id),function(){var e=this;i.push(e.node.id)}))}),$.each(i,function(){var e=this;$.each(t.allCiObj,function(t){var i=this,a=t.split("_").pop();i.id!==e||o[a]||(o[a]=!0,n.push(a))})}),n},o.prototype.hideLayerLine=function(){var e=this;$.each(e.allLineMesh,function(){var e=this;e.line.material.color.setHex(t.WEBGL_LAYER_LINE_COLOR),e.line.visible=!1})},o.prototype.showLayerLine=function(){var e=this;e.hideLayerLine(),$.each(e.allLineMesh,function(){var e=this;e.line.visible=!0})},o.prototype.drawLayerLine=function(e){var i,n,o,a,r,s;for(o=this,i=function(e){var i,n,a,r,s;s=o.getSnodeAndTnodeById(e.source,e.target),$.each(s,function(){var e,s;e=this.source,s=this.target,e&&s&&(e.cube.parent.updateMatrixWorld(),e.cube.updateMatrixWorld(),s.cube.updateMatrixWorld(),r=[(new THREE.Vector3).setFromMatrixPosition(e.cube.matrixWorld),(new THREE.Vector3).setFromMatrixPosition(s.cube.matrixWorld)],n=new THREE.Geometry,n.vertices=r,a=new THREE.LineBasicMaterial({color:t.WEBGL_LAYER_LINE_COLOR,linecap:"round"}),n.computeLineDistances(r),i=new THREE.Line(n,a),i.visible=!1,o.scene.add(i),o.allLineMesh.push({line:i,source:e.cube,target:s.cube}))})},s=[],a=0,r=e.length;r>a;a++)n=e[a],s.push(i(n));return s},o}])}(nameSpace.reg("graph")),function(e){"use strict";e.app.factory("UserInfo",["$rootScope","Event",function(e,t){var i=null;return{get:function(){return i},set:function(n){n.iconLastUpdate||(n.iconLastUpdate=(new Date).getTime()),i=n,e.$broadcast(t.USERINFO_UPDATE,n)}}}])}(nameSpace.reg("graph")),function(e){"use strict";e.app.factory("Keymap",["KeyCode",function(e){var t={"ctrl + s":"save","ctrl + a":"selectAll","ctrl + c":"copy","ctrl + v":"paste","ctrl + x":"cut","ctrl + u":"update","ctrl + z":"undo","ctrl + y":"redo","ctrl + e":"clear","ctrl + o":"open","ctrl + l":"linkEdit","alt + n":"create","alt + c":"zoomCenter","alt + i":"zoomIn","alt + o":"zoomOut","alt + u":"orderUp","alt + d":"orderDown","alt + f":"font","alt + l":"toggleAutoLayout","alt + e":"toggleAutoLine","delete":"removeCells"};return function(i){new e(i.graph.container,t,i.action)}}])}(nameSpace.reg("graph")),function(e){"use strict";e.app.service("AuthService",["$http","Unit",function(e,t){var i={};return i.login=function(i){return e.post(t.api("/login"),i)},i.logout=function(){return e["delete"](t.api("/logout"))},i.getCurrentUser=function(){return e.get(t.api("/user"))},i}])}(nameSpace.reg("graph")),function(e){"use strict";e.app.service("CiCateService",["$http","Unit",function(e,t){var i={};return i.get=function(){return e.get(t.api("/cicate"))},i.save=function(i){return e.post(t.api("/cicate"),i)},i.update=function(i,n){return e.put(t.api("/cicate/"+i),n)},i.remove=function(i){return e["delete"](t.api("/cicate/"+i))},i}])}(nameSpace.reg("graph")),function(e){"use strict";e.app.service("CiMonitorService",["$http","Unit",function(e,t){var i={};return i.getView=function(i,n,o){return e.post(t.api("/view/getmonitorforview"),{ids:i,startTime:n,endTime:o})},i.getCi=function(i,n,o,a){return e.post(t.api("/view/getwholeinfo"),{id:i,viewId:n,startTime:o,endTime:a})},i.getPointStatus=function(i,n){return e.post(t.api("/view/gettimemachineforview"),{timeDots:i,ids:n})},i.getPerformanceChart=function(i){return e.post(t.api("/performance/chart"),i)},i.getPerformanceMyPerf=function(i){return e.post(t.api("/performance/getmyperf"),i)},i.getPerformanceAll=function(i){return e.post(t.api("/performance"),i)},i.getMyEvent=function(i){return e.post(t.api("/eventview/geteventbyview"),i)},i.getSeverity=function(){return e.post(t.api("/eventview/getseverity"))},i.getEventTitle=function(){return e.post(t.api("/eventview/gettitle"))},i}])}(nameSpace.reg("graph")),function(e){"use strict";e.app.service("CiRelationService",["$http","Unit",function(e,t){var i={};return i.get=function(i){return e.post(t.api("/cirel/query"),i)},i.getCategory=function(){return e.get(t.api("/relcate"))},i}])}(nameSpace.reg("graph")),function(e){"use strict";e.app.service("CiService",["$http","Unit","$q",function(e,t,i){var n={};return n.get=function(i){return i.all=!0,e.post(t.api("/ci"),i)},n.getCi=function(i){return e.get(t.api("/ci/"+i))},n.ids=function(i){return e.post(t.api("/ci"),{ids:i})},n.expand=function(i){return e.post(t.api("/cirel/query"),i)},n.getMyCi=function(n){var o=i.defer(),a=e.post(t.api("/ci/getmyci"),n,{timeout:o.promise});return a.cancel=function(){o.resolve(),console.log("cancel")},a},n.getAll=function(){return e.get(t.api("/ci"))},n}])}(nameSpace.reg("graph")),function(e){"use strict";e.app.service("ExportService",["$http","Unit",function(e,t){return{exportPdf:function(i){return e.post(t.api("/view/exportpdf"),{svg:i})},exportPng:function(i){return e.post(t.api("/view/exportpng"),{svg:i})}}}])}(nameSpace.reg("graph")),function(e){"use strict";e.app.service("FontService",["$http","Unit",function(e,t){return{get:function(i){return e.post(t.api("/font"),{font:i})}}}])}(nameSpace.reg("graph")),function(e){"use strict";e.app.service("GroupService",["$http","Unit",function(e,t){var i={};return i.get=function(i){return e.get(i?t.api("/portfolio/"+i):t.api("/portfolio"))},i.save=function(i){return e.post(t.api("/portfolio"),i)},i.update=function(i){return e.put(t.api("/portfolio"),i)},i["delete"]=function(i){return i?e["delete"](t.api("/portfolio/"+i)):void 0},i["private"]=function(){return e.get(t.api("/portfolio/private"))},i["public"]=function(){return e.get(t.api("/portfolio/public"))},i.getPublicViewByUser=function(i){return e.get(t.api("/portfolio/public/")+i)},i.deleteById=function(i){return e["delete"](t.api("/portfolio/"+i))},i.create=function(i){return e.post(t.api("/portfolio"),i)},i.deletePrivateOrPublic=function(i){return e["delete"](i?t.api("/portfolio/public"):t.api("/portfolio/private"))},i.openView=function(i){return e.put(t.api("/portfolio/open/"+i))},i.closeView=function(i){return e.put(t.api("/portfolio/close/"+i))},i.subscription=function(e){return{data:"",message:"订阅组合视图成功"}},i.unsubscription=function(e){return{data:"",message:"取消订阅组合视图成功"}},i}])}(nameSpace.reg("graph")),function(e){"use strict";e.app.service("IconService",["$http","Upload","Unit",function(e,t,i){var n={};return n.get=function(t){return e.post(i.api("/viewicon"),t)},n.upload=function(e){return t.upload({url:i.api("/viewicon/save"),file:e})},n}])}(nameSpace.reg("graph")),function(e){"use strict";e.app.service("ImageService",["$http","Unit","Upload",function(e,t,i){var n={};return n.uploadBackground=function(e){return i.upload({url:t.api("/view/background"),file:e})},n.getBackgound=function(i){return e.post(t.api("/view/fuzzybackground"),i)},n.removeBackground=function(i){return e["delete"](t.api("/view/background/"+i))},n}])}(nameSpace.reg("graph")),function(e){"use strict";e.app.service("KpiCateService",["$http","Unit",function(e,t){var i={};return i.get=function(){return e.get(t.api("/kpicate"))},i.getKpi=function(i){return e.post(t.api("/kpi/owner"),i)},i}])}(nameSpace.reg("graph")),function(e){"use strict";e.app.service("MeshService",["$http","Unit",function(e,t){return{svgToMesh:function(i){return e.post(t.api("/icon/3dpathsbysvg"),{paths:i})}}}])}(nameSpace.reg("graph")),function(e){"use strict";e.app.service("OtherService",function(){return{getSvgPath:function(){return{success:function(e){e({data:"resource/svg/blue"})}}}}})}(nameSpace.reg("graph")),function(e){"use strict";e.app.service("SearchService",["$http","Unit",function(e,t){var i={};return i.fuzzy=function(i){return e.post(t.api("/view/fuzzysearch"),{keyWord:i})},i}])}(nameSpace.reg("graph")),function(e){"use strict";e.app.service("UserService",["$http","Unit",function(e,t){return{profile:function(){return e.get(t.api("/userprofile"))}}}])}(nameSpace.reg("graph")),function(e){"use strict";e.app.service("ViewCateService",["$http","Unit",function(e,t){var i={};return i.get=function(){return e.get(t.api("/viewcate"))},i.getPrivate=function(){return e.get(t.api("/viewcate/private"))},i.getPublic=function(){return e.get(t.api("/viewcate/public"))},i.create=function(i){return e.post(t.api("/viewcate"),i)},i.remove=function(i){return e["delete"](t.api("/viewcate/"+i))},i.update=function(i){return e.put(t.api("/viewcate"),i)},i}])}(nameSpace.reg("graph")),function(e){"use strict";e.app.service("ViewService",["$http","Unit",function(e,t){var i={};return i.get=function(i){return e.post(t.api("/view"),i)},i["private"]=function(){return e.get(t.api("/view/private"))},i["public"]=function(){return e.get(t.api("/view/public"))},i.getUserView=function(i){return e.get(t.api("/view/public/"+i))},i.getView=function(i){return e.get(t.api("/view/"+i))},i.create=function(i){return e.post(t.api("/view"),i)},i.update=function(i){return e.put(t.api("/view"),i)},i.remove=function(i){return e["delete"](t.api("/view/"+i))},i.uploadImage=function(){},i.getByIds=function(i){return e.post(t.api("/view"),i)},i.setPublic=function(i){return e.put(t.api("/view/open/"+i))},i.setUnpublic=function(i){return e.put(t.api("/view/close/"+i))},i.getThreshold=function(i,n){return e.post(t.api("/view/threshold/"+i),n)},i.saveThreshold=function(i,n){return e.put(t.api("/view/threshold/"+i),n)},i.subscription=function(i){return e.post(t.api("/subscription/view/"+i))},i.unsubscription=function(i){return e["delete"](t.api("/subscription/view/"+i))},i.getViewMonitor=function(i,n){return e.post(t.api("/view/performance/"+i),n)},i.getSubscription=function(){return e.post(t.api("/view/subscriptions"),{page:1,pageSize:100})},i.getViewEvent=function(i,n){return e.post(t.api("/view/cikpi/"+i),n)},i.getViewEventByCiKpi=function(i,n){return e.post(t.api("/view/event/"+i),n)},i.getDeletedView=function(i){return e.post(t.api("/view/softdelete"),i)},i.getRestoreView=function(i,n){return e.put(t.api("/view/restoresoftview/"+i),n)},i}])}(nameSpace.reg("graph")),function(){"use strict";var e=angular.module("ngRightClick",[]);e.directive("ngRightClick",["$parse",function(e){return function(t,i,n){var o=e(n.ngRightClick);i.bind("contextmenu",function(e){t.$apply(function(){e.preventDefault(),o(t,{$event:e})})})}}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(){"use strict";var e=angular.module("graphTable",[]);e.factory("GraphTable",["Unit","CiService",function(e,t){return function(e){this.showFlag=!1,this.data=[],this.show=function(){this.getData(),this.showFlag=!0},this.hide=function(){this.showFlag=!1},this.format=function(e){var t={},i=this,n=function(e){var t=[];return $.each(e,function(e){t.push({label:e,key:e})}),t.sort(function(e){return"名称"===e.key?-1:1}),t};$.each(e,function(){t[this.categoryId]||(t[this.categoryId]={name:this.categoryName,id:this.categoryId,head:n(this.data),rows:[]}),t[this.categoryId].rows.push(this.data)}),$.each(t,function(){i.data.push(this)}),console.log(i.data)},this.getData=function(){var i=this;e&&(this.ids=e.action.getCisId(),this.ids.length&&t.ids(this.ids).success(function(e){i.data.splice(0),i.format(e.data)}))},e&&(e.table=this)}}]),e.controller("DirectiveGraphTableCtrl",["$scope","GraphTable","$parse",function(e,t,i){e.hasOwnProperty("params")||(e.params=new t),this.setupBindingsToInternalScope=function(t){var n=i(t);e.$watch(n,function(t){angular.isUndefined(t)||(e.params=t)},!1)}}]),e.directive("graphTable",["$q","$parse",function(){return{restrict:"A",priority:1001,transclude:!0,scope:!0,templateUrl:"app/directive/graphTable/graphTable.html",controller:"DirectiveGraphTableCtrl",compile:function(){return function(e,t,i,n){n.setupBindingsToInternalScope(i.graphTable)}}}}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(){"use strict";var e=angular.module("graphInfo",[]);e.factory("GraphInfo",["Unit","CiService","$rootScope","Event","UserInfo",function(e,t,i,n,o){return function(t){this.showFlag=!1,this.view=function(t){this.type="view",this.data=t;var a=function(){i.$broadcast(n.VIEW_DELETE_BEFORE,e.eventData(t))},r=function(){i.$broadcast(n.VIEW_UPDATE_BEFORE,e.eventData(t))},s=function(){i.$broadcast(n.VIEW_SUBSCRIPTION_BEFORE,e.eventData(t))},l=function(){i.$broadcast(n.VIEW_UNSUBSCRIPTION_BEFORE,e.eventData(t))};this.out.title="视图信息";var c=o.get();c&&c.loginName===t.userName?this.editor.state.disabled||(this.out.btns=[{btnClass:"btn-danger",label:"删除",clickHandle:a},{btnClass:"btn-primary",label:"更新",clickHandle:r}]):this.out.btns=t.isSubscription?[{btnClass:"btn-warning",label:"取消订阅",clickHandle:l}]:[{btnClass:"btn-success",label:"立即订阅",clickHandle:s}]},this.ci=function(e){var t=this;t.type="ci",t.data=e,t.out.title="CI信息",t.out.btns=[]},this.update=function(e,t){this.out.rows.splice(0),this.out.btns=[],this.out.title="",this[e]&&this[e](t),this.show(),i._refresh()},this.custom=function(e){this.out=e},this.hide=function(){this.showFlag&&this.toggle()},this.show=function(){this.showFlag||this.toggle()},this.toggle=function(){this.showFlag=!this.showFlag,i.$broadcast(n.GRAPH_INFO_TOGGLE,this)},this.out={title:"",rows:[],btns:[]},this.editor=t}}]),e.controller("DirectiveGraphInfoCtrl",["$scope","GraphInfo","$parse","Event","CiService","CiMonitorService","Unit","Const","$window",function(e,t,i,n,o,a,r,s,l){e.hasOwnProperty("params")||(e.params=new t),this.setupBindingsToInternalScope=function(t){var n=i(t);e.$watch(n,function(t){angular.isUndefined(t)||(e.params=t)},!1)},e["static"]=r["static"],e.callapse={},e.formatBool=function(e){return e?"是":"否"},e.formatDate=function(e){return r.unixToDatetime(e).substr(0,10)},e.$on(n.GRAPH_CI_CELL_CLICK,function(t,i){if(e.params.editor.state.view){var n,r,c=e.params.editor.state;c.startTime&&c.endTime?(n=c.startTime,r=c.endTime):(c.timeAverage&&(c.timeAverage=s.TIME_AVERAGE),r=l.parseInt((new Date).getTime()/1e3),n=r-c.timeAverage),a.getCi(i.cell.dbid,c.view.id,n,r).success(function(t){console.log(t.data),e.params.update("ci",t.data)})}else o.getCi(i.cell.dbid).success(function(t){e.params.update("ci",{config:t.data})})}),e.updateCiInfo=function(){if("ci"===e.params.type&&e.params.data.config){var t,i,n=e.params.editor.state;n.startTime&&n.endTime?(t=n.startTime,i=n.endTime):(n.timeAverage&&(n.timeAverage=s.TIME_AVERAGE),i=l.parseInt((new Date).getTime()/1e3),t=i-n.timeAverage),a.getCi(e.params.data.config.id,n.view.id,t,i).success(function(t){e.params.update("ci",t.data)})}},e.$on(n.TIMELINE_POINT_CLICK,e.updateCiInfo),e.$on(n.GRAPH_MONITOR_UPDATE,e.updateCiInfo),e.$on(n.VIEW_SET_PUBLIC,function(){e.params.update("view",e.params.editor.state.view)}),e.$on(n.VIEW_SET_UNPUBLIC,function(){e.params.update("view",e.params.editor.state.view)}),e.$on(n.VIEW_SUBSCRIPTION_AFTER,function(){e.params.update("view",e.params.editor.state.view)}),e.$on(n.VIEW_UNSUBSCRIPTION_AFTER,function(){e.params.update("view",e.params.editor.state.view)})}]),e.directive("graphInfo",["$q","$parse",function(){return{restrict:"A",priority:1001,scope:!0,templateUrl:"app/directive/info/info.html",controller:"DirectiveGraphInfoCtrl",compile:function(){return function(e,t,i,n){n.setupBindingsToInternalScope(i.graphInfo)}}}}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(e){"use strict";e.app.directive("ngRepeatDone",["$timeout",function(e){return function(t,i,n){t.$last&&e(function(){t.$eval(n.ngRepeatDone)})}}])}(nameSpace.reg("graph")),function(e){"use strict";e.app.directive("ngEnter",function(){return function(e,t,i){t.bind("keydown keypress",function(t){13===t.which&&(e.$apply(function(){e.$eval(i.ngEnter,{event:t})}),t.preventDefault())})}})}(nameSpace.reg("graph")),function(e){"use strict";e.app.directive("ngScroll",function(){var e={},t=[];return window.setInterval(function(){var i,n,o;for(i=0;i<t.length;i++)n=t[i],o=e[n],o&&n.scrollHeight!==o.lastScrollHeight&&(o.lastScrollHeight=n.scrollHeight,o.lastClientHeight=n.clientHeight,Ps.update(n))},200),function(i,n,o){if(t.push(n[0]),e[n[0]]={lastScrollHeight:n[0].scrollHeight,lastClientHeight:n[0].clientHeight},""!==o.ngScroll){var a=o.ngScroll.split(","),r=a[0],s=a[1];Ps.initialize(n[0],{suppressScrollX:"false"===r?!0:!1,suppressScrollY:"false"===s?!0:!1})}else Ps.initialize(n[0])}})}(nameSpace.reg("graph")),function(){"use strict";var e=angular.module("timeLine",[]);e.factory("MyTimeLine",["$interval",function(e){var t=null,i=null;return function(n){function o(){if(a.oldNode=a.nowNode,a.oldNode&&a.oldNode.css({width:15,height:15,top:0,left:a.oldNode.position().left+2}),$(".timeLine-dot-box div").css({boxShadow:"none","border-width":1}),$(this).css({boxShadow:"0px 0px 8px #fff","border-width":2}),a.nowNode=$(this),a.nowNode.css({width:20,height:20,top:-2,left:a.nowNode.position().left-2}),$(this).addClass("noselect"),a.clickPoint&&"function"==typeof a.clickPoint){var e={};e.end=0!==$(this).next().length?$(this).next().attr("id"):null,e.start=0!==$(this).prev().length?$(this).prev().attr("id"):null,e.now=$(this).attr("id"),e.timeAverage=a.timeAverage,a.choseNode=$(this).attr("id"),a.clickPoint(e)}$(".nowBtn").hasClass("active")&&$(".nowBtn").removeClass("active"),a.enabledNow=!1}e.cancel(t),this.options={},this.opt={};var a=this;this.timer=null,this.timeAverage=null,this.choseNode=null,this.enabledNow=!0,this.dotData=[],this.oldNode=null,this.nowNode=null,n&&n.getStatusData&&(this.fn=n.getStatusData),n&&n.clickPoint&&(this.clickPoint=n.clickPoint),n&&n.clickNow&&(this.clickNow=n.clickNow),n&&n.update&&(this.update=n.update),this.chars=["0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"],this.generateMixed=function(){for(var e="",t=0;10>t;t++){var i=Math.ceil(35*Math.random());e+=this.chars[i]}return e},this.getData=function(){var e=this;if(this.fn&&"function"==typeof this.fn){var t=this.generateMixed(),i=this.dotData;this.fn({id:t,data:i},function(i){t===i.id&&e.setStatus(i.data)})}},this.setDot=function(){var e=[],t=null;if(this.elem=$(".timeLine-line").html(""),this.dotEle=$(".timeLine-dot-box").html(""),this.timeEle=$(".timeLine-time-box").html(""),this.options.endTime&&this.options.startTime){var i=new Date(this.options.endTime).getTime(),n=new Date(this.options.startTime).getTime();this.options.endTime=i,this.options.startTime=n}this.opt={tickWidth:this.options.tickWidth||100,timeOut:this.options.timeOut||"minute",endTime:this.options.endTime||(new Date).getTime(),timeSet:6e4,startTime:this.options.startTime||(new Date).getTime()-72e5},t=this.opt.endTime>this.opt.startTime?this.opt.endTime-this.opt.startTime:72e5,this.opt.tick=Math.round(this.elem.width()/this.opt.tickWidth),this.timeAverage=t/(this.opt.tick-1);for(var o=0,a=this.opt.tick-1;a>=0;a--){var r={},s=this.elem.width()/(this.opt.tick-1)*(this.opt.tick-1-a);r.dotLeft=s+"px",r.titleLeft=this.elem.width()/(this.opt.tick-1)*(this.opt.tick-1-a)-8+"px";var l,c,u=this.opt.endTime-this.timeAverage,p=new Date(u-this.timeAverage*a);"year"===this.opt.timeOut?(l=p.getFullYear()+"年",this.opt.timeSet=31536e6):"month"===this.opt.timeOut?(l=p.getFullYear()+"年"+(p.getMonth()+1)+"月",this.opt.timeSet=2628e6):"day"===this.opt.timeOut?(l=p.getMonth()+1+"月"+p.getDate()+"日",this.opt.timeSet=864e5):"hour"===this.opt.timeOut?(l=p.getDate()+"日"+p.getHours()+"时",this.opt.timeSet=36e5):"minute"===this.opt.timeOut&&(l=p.getHours(),c=p.getMinutes(),l=10>l?"0"+l:l,c=10>c?"0"+c:c,l=l+":"+c,this.opt.timeSet=6e4),r.timestamp=p.getTime();var h=Math.round(r.timestamp/1e3);if(e.push(h),a!==this.opt.tick-1){var d=s-o,g=$('<div class="timeLine-line-unit"></div>').attr({title:h}).css({width:d,left:s-d});$(this.elem).append(g),o=s}var f=$('<div class="timeLine-dot"></div>').attr({id:h}).css({left:r.dotLeft});$(this.dotEle).append(f);var m=$('<div class="timeLine-time"></div>').html(l).attr({title:l}).css({left:r.titleLeft});$(this.timeEle).append(m)}if(this.timeAverage=Math.round(this.timeAverage/1e3),this.update&&"function"==typeof this.update){var v={timeAverage:this.timeAverage};this.update(v)}this.dotData=e},this.setStatus=function(e){for(var t,i={},n=0;n<e.length;n++){var a="";a=$("#"+e[n].id)&&e[n].color?"pointer":"default",this.choseNode&&(t=Math.abs(e[n].id-this.choseNode),
(void 0===i.num||i.num>t)&&(i.num=t,i.data=e[n])),$(".timeLine-line div[title='"+e[n].id+"']").css({background:e[n].color}),$("#"+e[n].id).css({background:e[n].color,cursor:a}),$("#"+e[n].id).bind("click",o)}i.data&&i.data.id&&(this.nowNode=$("#"+i.data.id),$("#"+i.data.id).css({boxShadow:"0px 0px 8px #fff","border-width":2,width:20,height:20,top:-2}))},this.pushDot=function(){var i=this;e.cancel(t),t=e(function(){i.oldTime=(new Date).getTime(),i.ProgressBar(),i.init()},this.opt.timeSet)},this.ProgressBar=function(){a=this,e.cancel(i);var t=0,n=null,o=(new Date).getTime();i=e(function(){var e=(new Date).getTime();0===t&&(n=a.opt.timeSet-(e-a.oldTime));var i=(e-o)/n*100+"%";t++,$(".timeLineProgress").css({width:i})},30)},this.remove=function(){e.cancel(t)},this.init=function(){this.setDot(),this.getData()},this.resize=function(){this.init(),this.ProgressBar(),this.pushDot(),this.oldTime=(new Date).getTime()},this.removeStatus=function(){var e=$(".timeLine-dot-box div");e.each(function(){$(this).css({boxShadow:"none","border-width":1,width:15,height:15,top:0})}),this.nowNode&&this.nowNode.css({left:this.nowNode.position().left}),this.oldNode=this.nowNode=this.choseNode=null},this.getTimeAverage=function(){return this.timeAverage},this.init(),this.ProgressBar(),this.pushDot(),this.oldTime=(new Date).getTime()}}]),e.controller("TimeLineCtrl",["$scope","$interval","$state","$element","$attrs","$compile","$parse","MyTimeLine",function(e,t,i,n,o,a,r,s){e.hasOwnProperty("params")||(e.params=new s,i||e.params.remove()),this.setupBindingsToInternalScope=function(t){var i=r(t);e.$watch(i,function(t){angular.isUndefined(t)||(e.params=t)},!1)},e.opt={},e.toFormatDate=function(e,t){var i={"M+":e.getMonth()+1,"d+":e.getDate(),"h+":e.getHours(),"m+":e.getMinutes(),"s+":e.getSeconds(),"q+":Math.floor((e.getMonth()+3)/3),S:e.getMilliseconds()};/(y+)/.test(t)&&(t=t.replace(RegExp.$1,(e.getFullYear()+"").substr(4-RegExp.$1.length)));for(var n in i)new RegExp("("+n+")").test(t)&&(t=t.replace(RegExp.$1,1===RegExp.$1.length?i[n]:("00"+i[n]).substr((""+i[n]).length)));return t},e.setTimeLine=function(){e.params.options=e.opt,e.params.remove(),e.params.init(),e.params.pushDot()},e.showSetBox=function(){e.showSetLine=!e.showSetLine,e.showSetLine?"function"==typeof e.params.changeHeight&&e.params.changeHeight({show:e.showSetLine,height:$(".setTimeLineBox .form-inline").height()}):e.opt={}},e.setRealTime=function(){$(".nowBtn").hasClass("active")?($(".nowBtn").removeClass("active"),e.params.enabledNow=!1):($(".nowBtn").addClass("active"),e.params.enabledNow=!0,e.params.removeStatus()),e.params.clickNow&&"function"==typeof e.params.clickNow&&e.params.clickNow({timeAverage:e.params.timeAverage,enabledNow:e.params.enabledNow})},window.onresize=function(){e.params&&e.params.resize()}}]),e.directive("timeLine",["$interval",function(){return{restrict:"A",replace:!0,scope:!0,controller:"TimeLineCtrl",compile:function(){return function(e,t,i,n){n.setupBindingsToInternalScope(i.timeLine)}},templateUrl:"app/directive/timeLine/timeLine.html"}}])}(nameSpace.reg("graph")),function(){"use strict";var e=angular.module("timeLine",[]);e.factory("MyTimeLine",["$interval",function(e){var t=null,i=null,n=null;return function(o){this.options={},this.setDotOptions={},this.dotData=[],this.choseNode=null,this.enabledNow=!0,this.oldNode=null,this.nowNode=null;var a=this;this.settings=function(e){var t=this;$.each(e,function(e){t.options[e]=this})},this.generateMixed=function(){this.chars=["0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"];for(var e="",t=0;10>t;t++){var i=Math.ceil(35*Math.random());e+=this.chars[i]}return e},this.getData=function(){var e=this;if(this.options.getStatusData&&"function"==typeof this.options.getStatusData){var t=this.generateMixed(),i=this.dotData;this.options.getStatusData({id:t,data:i},function(i){t===i.id&&e.setStatus(i.data)})}},this.setDot=function(){var e=null;if(this.dotData=[],this.elem=$(".timeLine-line").html(""),this.dotEle=$(".timeLine-dot-box").html(""),this.timeEle=$(".timeLine-time-box").html(""),this.options.endTime&&this.options.startTime){var t=new Date(this.options.endTime).getTime(),i=new Date(this.options.startTime).getTime();this.options.endTime=t,this.options.startTime=i}this.setDotOptions={tickWidth:this.options.tickWidth||100,timeOut:this.options.timeOut||"minute",endTime:this.options.endTime||(new Date).getTime(),startTime:this.options.startTime||(new Date).getTime()-72e5,timeSet:6e4},e=this.setDotOptions.endTime>this.setDotOptions.startTime?this.setDotOptions.endTime-this.setDotOptions.startTime:72e5;var n=Math.round(this.elem.width()/this.setDotOptions.tickWidth);this.timeAverage=e/(n-1);for(var o=0,a=n-1;a>=0;a--){var r={},s=this.elem.width()/(n-1)*(n-1-a);r.dotLeft=s+"px",r.titleLeft=this.elem.width()/(n-1)*(n-1-a)-8+"px";var l,c,u=this.setDotOptions.endTime-this.timeAverage,p=new Date(u-this.timeAverage*a);switch(this.setDotOptions.timeOut){case"year":l=p.getFullYear()+"年",this.setDotOptions.timeSet=31536e6;break;case"month":l=p.getFullYear()+"年"+(p.getMonth()+1)+"月",this.setDotOptions.timeSet=2628e6;break;case"day":l=p.getMonth()+1+"月"+p.getDate()+"日",this.setDotOptions.timeSet=864e5;break;case"hour":l=p.getDate()+"日"+p.getHours()+"时",this.setDotOptions.timeSet=36e5;break;case"minute":l=p.getHours(),c=p.getMinutes(),l=10>l?"0"+l:l,c=10>c?"0"+c:c,l=l+":"+c,this.setDotOptions.timeSet=6e4}r.timestamp=p.getTime();var h=Math.round(r.timestamp/1e3);if(this.dotData.push(h),a!==n-1){var d=s-o,g=$('<div class="timeLine-line-unit"></div>').attr({title:h}).css({width:d,left:s-d});$(this.elem).append(g),o=s}var f=$('<div class="timeLine-dot"></div>').attr({id:h}).css({left:r.dotLeft});$(this.dotEle).append(f);var m=$('<div class="timeLine-time"></div>').html(l).attr({title:l}).css({left:r.titleLeft});$(this.timeEle).append(m)}if(this.timeAverage=Math.round(this.timeAverage/1e3),this.options.update&&"function"==typeof this.options.update){var v={timeAverage:this.timeAverage};this.options.update(v)}},this.setStatus=function(e){for(var t,i={},n=0;n<e.length;n++){var o=null;o=$("#"+e[n].id)&&e[n].color?"pointer":"default",this.choseNode&&(t=Math.abs(e[n].id-this.choseNode),(void 0===i.num||i.num>t)&&(i.num=t,i.data=e[n])),$(".timeLine-line div[title='"+e[n].id+"']").css({background:e[n].color}),$("#"+e[n].id).css({background:e[n].color,cursor:o}),$("#"+e[n].id).bind("click",this.dotEvent)}i.data&&i.data.id&&(this.nowNode=$("#"+i.data.id),$("#"+i.data.id).css({boxShadow:"0px 0px 8px #fff","border-width":2,width:20,height:20,top:-2}))},this.dotEvent=function(){if(a.oldNode=a.nowNode,a.oldNode&&a.oldNode.css({width:15,height:15,top:0,left:a.oldNode.position().left+2}),$(".timeLine-dot-box div").css({boxShadow:"none","border-width":1}),$(this).css({boxShadow:"0px 0px 8px #fff","border-width":2}),a.nowNode=$(this),a.nowNode.css({width:20,height:20,top:-2,left:a.nowNode.position().left-2}),$(this).addClass("noselect"),a.options.clickPoint&&"function"==typeof a.options.clickPoint){var e={};e.now=$(this).attr("id"),e.end=0!==$(this).next().length?$(this).next().attr("id"):null,e.start=0!==$(this).prev().length?$(this).prev().attr("id"):null,e.timeAverage=a.timeAverage,a.choseNode=$(this).attr("id"),a.options.clickPoint(e)}$("#nowBtn").hasClass("active")&&$("#nowBtn").removeClass("active"),a.enabledNow=!1},this.realTimeCountDown=function(t,i,o){if(t){n&&e.cancel(n);var a=0;n=e(function(){a++;var e=Math.round(i/(a*o)*100)+"%";$("#nowBtn").html(e)},o)}else $("#nowBtn").html("实时")},this.setRealTime=function(){$("#nowBtn").hasClass("active")?($("#nowBtn").removeClass("active"),this.enabledNow=!1):($("#nowBtn").addClass("active"),this.enabledNow=!0,this.removeStatus()),this.options.clickNow&&"function"==typeof this.options.clickNow&&this.options.clickNow({timeAverage:this.timeAverage,enabledNow:this.enabledNow},this.realTimeCountDown)},this.removeStatus=function(){var e=$(".timeLine-dot-box div");e.each(function(){$(this).css({boxShadow:"none","border-width":1,width:15,height:15,top:0})}),this.nowNode&&this.nowNode.css({left:this.nowNode.position().left}),this.oldNode=this.nowNode=this.choseNode=null},this.renewalDot=function(){t&&e.cancel(t),t=e(function(){a.oldTime=(new Date).getTime(),a.setDot(),a.getData(),a.ProgressBar()},this.setDotOptions.timeSet)},this.ProgressBar=function(){i&&e.cancel(i);var t=0,n=null,o=null,r=null,s=(new Date).getTime();i=e(function(){o=(new Date).getTime(),0===t&&(n=a.setDotOptions.timeSet-(o-a.oldTime)),r=(o-s)/n*100+"%",t++,$(".timeLineProgress").css({width:r})},30)},this.resize=function(){this.init(),this.oldTime=(new Date).getTime()},this.init=function(){this.setDot(),this.getData(),this.renewalDot(),this.ProgressBar()},o&&this.settings(o),this.init(),this.oldTime=(new Date).getTime()}}]),e.controller("TimeLineCtrl",["$scope","$interval","$state","$element","$attrs","$compile","$parse","MyTimeLine",function(e,t,i,n,o,a,r,s){e.hasOwnProperty("params")||(e.params=new s),this.setupBindingsToInternalScope=function(t){var i=r(t);e.$watch(i,function(t){angular.isUndefined(t)||(e.params=t)},!1)},e.setRealTime=function(){e.params.setRealTime()},window.onresize=function(){e.params&&e.params.resize()}}]),e.directive("timeLine",["$interval",function(){return{restrict:"A",replace:!0,scope:!0,controller:"TimeLineCtrl",compile:function(){return function(e,t,i,n){n.setupBindingsToInternalScope(i.timeLine)}},templateUrl:"app/directive/timeLine/timeLine.html"}}])}(nameSpace.reg("graph")),function(){"use strict";var e,t={save:"保存 ctrl+s",refresh:"更新 ctrl+u",search:"适应画布 alt+c",zoomOut:"缩小 alt+o",zoomIn:"放大 alt+i",orderUp:"置前 alt+u",orderDown:"置后 alt+d",alignExpand:"对齐",undo:"撤销 ctrl+z",redo:"重做 ctrl+y",trash:"移除选中对象 delete",link:"设置链接 ctrl+l",paint:"填充颜色",border:"边框颜色",shadow:"阴影",fontExpand:"文本样式 alt+f",lineExpand:"关系线样式",grid:"开启/禁止 画布表格",assistLine:"开启/禁止 辅助线",imageExpand:"画布背景图",penExpand:"标注",autoLayout:"开启/禁止 自动布局 alt+l",autoLine:"开启/禁止 自动连线 alt+e",searchExpand:"搜索",tableExpand:"显示模式",image:"上传背景图片",noimage:"清除背景图片",pen:"高亮CI",nopen:"清除CI标注",newFile:"新建画布 alt+n",folder:"打开视图 ctrl+o",searchClear:"清除高亮"},i=function(e){var t=e.action;this.image=function(){t.backgroundImage()},this.noimage=function(){t.clearBackgroundImage()},this.grid=function(){t.grid()},this.assistLine=function(){t.assistLine()},this.save=function(){t.save()},this.refresh=function(){t.update()},this.newFile=function(){t.create()},this.folder=function(){t.open()},this.shadow=function(){t.shoadow()},this.link=function(){t.linkEdit()},this.zoomOut=function(){t.zoomOut()},this.zoomIn=function(){t.zoomIn()},this.search=function(){t.zoomCenter()},this.orderUp=function(){t.orderUp()},this.orderDown=function(){t.orderDown()},this.redo=function(){t.redo()},this.undo=function(){t.undo()},this.alignLeft=function(){t.alignCells(mxConstants.ALIGN_LEFT)},this.alignCenter=function(){t.alignCells(mxConstants.ALIGN_CENTER)},this.alignRight=function(){t.alignCells(mxConstants.ALIGN_RIGHT)},this.alignTop=function(){t.alignCells(mxConstants.ALIGN_TOP)},this.alignMiddle=function(){t.alignCells(mxConstants.ALIGN_MIDDLE)},this.alignBottom=function(){t.alignCells(mxConstants.ALIGN_BOTTOM)},this.alignDistributeHorizontal=function(){t.alignDistribute(!0)},this.alignDistributeVertical=function(){t.alignDistribute(!1)},this.lineStraight=function(){t.edgeClearStyle()},this.lineEntityRelation=function(){t.edgeStyle("entityRelationEdgeStyle")},this.lineElbowHorizontal=function(){t.edgeStyle("elbowHorizontal")},this.lineElbowVertical=function(){t.edgeStyle("elbowVertical")},this.lineSegment=function(){t.edgeStyle("segmentEdgeStyle")},this.lineOrthogonal=function(){t.edgeStyle("orthogonalEdgeStyle")},this.startNoarrow=function(){t.startArrow(mxConstants.NONE)},this.startClassic=function(){t.startArrowFill(mxConstants.ARROW_CLASSIC)},this.startOpen=function(){t.startArrowFill(mxConstants.ARROW_OPEN)},this.startBlock=function(){t.startArrowFill(mxConstants.ARROW_BLOCK)},this.startOval=function(){t.startArrowFill(mxConstants.ARROW_OVAL)},this.startDiamond=function(){t.startArrowFill(mxConstants.ARROW_DIAMOND)},this.startThinDiamond=function(){t.startArrowFill(mxConstants.ARROW_DIAMOND_THIN)},this.startClassicTrans=function(){t.startArrow(mxConstants.ARROW_CLASSIC)},this.startBlockTrans=function(){t.startArrow(mxConstants.ARROW_BLOCK)},this.startOvalTrans=function(){t.startArrow(mxConstants.ARROW_OVAL)},this.startDiamondTrans=function(){t.startArrow(mxConstants.ARROW_DIAMOND)},this.startThinDiamondTrans=function(){t.startArrow(mxConstants.ARROW_DIAMOND_THIN)},this.endNoarrow=function(){t.endArrow(mxConstants.NONE)},this.endClassic=function(){t.endArrowFill(mxConstants.ARROW_CLASSIC)},this.endOpen=function(){t.endArrowFill(mxConstants.ARROW_OPEN)},this.endBlock=function(){t.endArrowFill(mxConstants.ARROW_BLOCK)},this.endOval=function(){t.endArrowFill(mxConstants.ARROW_OVAL)},this.endDiamond=function(){t.endArrowFill(mxConstants.ARROW_DIAMOND)},this.endThinDiamond=function(){t.endArrowFill(mxConstants.ARROW_DIAMOND_THIN)},this.endClassicTrans=function(){t.endArrow(mxConstants.ARROW_CLASSIC)},this.endBlockTrans=function(){t.endArrow(mxConstants.ARROW_BLOCK)},this.endOvalTrans=function(){t.endArrow(mxConstants.ARROW_OVAL)},this.endDiamondTrans=function(){t.endArrow(mxConstants.ARROW_DIAMOND)},this.endThinDiamondTrans=function(){t.endArrow(mxConstants.ARROW_DIAMOND_THIN)},this.trash=function(){t.removeCells()},this.paint=function(){t.cellFillColor()},this.border=function(){t.cellStrokeColor()},this.fontExpand=function(){t.font()},this.pen=function(){t.hightLightCi()},this.nopen=function(){t.clearHight()},this.autoLayout=function(){t.toggleAutoLayout()},this.autoLine=function(){t.toggleAutoLine()},this.table=function(){t.showCiTable()},this.sitemap=function(){t.hideCiTable()},this.threshold=function(){t.threshold()},this.searchNode=function(){t.searchNode()},this.searchPath=function(){t.searchPath()},this.searchClear=function(){t.clearHight()}},n=angular.module("graphToolbar",[]);n.factory("GraphToolbar",function(){return function(e){return this.toolbarGroup=[["newFile","folder","save","refresh"],["search","zoomOut","zoomIn"],["orderUp","orderDown","alignExpand"],["undo","redo","trash","link"],["paint","border","shadow","fontExpand","lineExpand"],["grid","assistLine"],["image","noimage"],["autoLayout","autoLine"],["pen","searchClear"],["tableExpand"]],this.dropdown={alignExpand:["alignLeft","alignCenter","alignRight","alignTop","alignMiddle","alignBottom","alignDistributeHorizontal","alignDistributeVertical"],lineExpand:[["lineStraight","lineEntityRelation","lineElbowHorizontal","lineElbowVertical","lineSegment","lineOrthogonal"],"-",["startNoarrow","startClassic","startOpen","startBlock","startOval","startDiamond","startThinDiamond","startClassicTrans","startBlockTrans","startOvalTrans","startDiamondTrans","startThinDiamondTrans"],"-",["endNoarrow","endClassic","endOpen","endBlock","endOval","endDiamond","endThinDiamond","endClassicTrans","endBlockTrans","endOvalTrans","endDiamondTrans","endThinDiamondTrans"]],tableExpand:["table","sitemap","threshold"],searchExpand:["searchNode","searchPath"]},this.settings=function(e){var t=this;e&&(e.toolbarGroup&&(t.toolbarGroup=e.toolbarGroup),e.disabledMap&&$.each(e.disabledMap,function(){t.disabledMap[this]=!0}),e.editor&&(t.editor=e.editor,t.action=new i(t.editor)))},this.triggerAction=function(e,t){this.action[e]&&(this.action[e](t.target),this.editor.graph.refresh(),this.refresh())},this.refresh=function(){return this.editor&&this.editor.state?(this.statusMap.autoLayout=this.editor.state.isAutoLayout?null:!0,this.statusMap.autoLine=this.editor.state.isAutoLine?null:!0,this.statusMap.grid=this.editor.state.isShowGrid?null:!0,void(this.statusMap.assistLine=this.editor.state.isAssistLine?null:!0)):!1},this.statusMap={},this.disabledMap={},this.settings(e),this.refresh(),this}}),n.controller("DirectiveGraphToolbarCtrl",["$scope","$element","$attrs","$compile","$parse","GraphToolbar","Event","$interval","UserInfo","$document",function(i,n,o,a,r,s,l,c,u,p){i.hasOwnProperty("params")||(i.params=new s),this.setupBindingsToInternalScope=function(e){var t=r(e);i.$watch(t,function(e){angular.isUndefined(e)||(i.params=e)},!1)},i.actionTransferClass=function(e){var t,i=e.split("");for(t=0;t<i.length;t++)t&&i[t]===i[t].toUpperCase()&&(i[t]="-"+i[t].toLowerCase());return i.join("")},i.actionTransferLabel=function(e){return t[e]},i.isShow=function(e){console.log(e)},i.isString=function(e){return angular.isString(e)},i.isArray=function(e){return angular.isArray(e)},i.showPopover=function(e){$(e.currentTarget).popover("show")},i.hidePopover=function(e){$(e.currentTarget).popover("hide")},i.isDisabled=function(e){var t=!1,n=u.get(),o=i.params.editor;return!o||i.params.disabledMap[e]?!0:("refresh"===e&&(!o.state.view||o.state.view&&n&&n.loginName!==o.state.view.userName)&&(t=!0),"searchClear"!==e||o.action.getLightCountCells().length?(i.params.editor.graph.getSelectionCell()||"orderUp"!==e&&"orderDown"!==e&&"alignExpand"!==e&&"fontExpand"!==e&&"trash"!==e&&"link"!==e&&"paint"!==e&&"border"!==e&&"shadow"!==e&&"lineExpand"!==e||(t=!0),i.params.editor.graph.getDepCells().length||"searchExpand"!==e||(t=!0),i.params.editor.action.getCis().length||"tableExpand"!==e&&"pen"!==e&&"nopen"!==e||(t=!0),i.params.editor.undoManager.history.length||"redo"!==e&&"undo"!==e||(t=!0),t):!0)},i.hideOutFloat=function(){return $(".toolbar .toolbar-group").each(function(){var e=$(this).position(),t=e.top>=10?0:1;$(this).css("opacity",t)}),!0},e&&c.cancel(e),e=c(function(){i._refresh()},1e3)}]),n.directive("graphToolbar",["$q","$parse",function(){return{restrict:"A",priority:1001,scope:!0,templateUrl:"app/directive/toolbar/toolbar.html",controller:"DirectiveGraphToolbarCtrl",compile:function(){return function(e,t,i,n){n.setupBindingsToInternalScope(i.graphToolbar)}}}}])}(nameSpace.reg("graph")),function(){"use strict";var e=function(e){var t,i=[];for($.each(e,function(){this.children=[]}),t=0;t<e.length;t++){var n=e[t];if(n.parent){if(!n._count||n._count<10){var o,a;for(o=0;o<i.length;o++){var r=i[o];r.id===n.parent&&(angular.isArray(r.children)||(r.children=[]),a=!0,o=i.length,r.children.push(n))}a||(n._count||(n._count=0),n._count++,e.push(n))}}else n.random=Math.random(),i.push(n)}return i},t=angular.module("graphViewtree",[]);t.factory("GraphViewtree",function(){return function(e){var t=null;this.options={},this["public"]=!1,this.settings=function(e){var t=this;$.each(e,function(e){t.options[e]=this})},this.getSelectNode=function(){return t},this.setSelectNode=function(e){t=e},this.selectNode=function(e){this.setSelectNode(e),this.options.selectNode&&this.options.selectNode.apply(this,[e])},this.togglePublic=function(e){this["public"]=e},this.isPublic=function(){return this["public"]},this.getNodePath=function(e){return[e]},e&&this.settings(e)}}),t.controller("DirectiveGraphViewtreeCtrl",["$scope","$element","$attrs","$compile","$parse","GraphViewtree","CiCateService","ViewCateService","ViewService","Event","Unit",function(t,i,n,o,a,r,s,l,c,u,p){t.hasOwnProperty("params")||(t.params=new r),this.setupBindingsToInternalScope=function(e){var i=a(e);t.$watch(i,function(e){angular.isUndefined(e)||(t.params=e)},!1)},t.subscriptionId="subscription",t.isCollapsedCreateForm=t.params.options.showForm,t.treeOptions={nodeChildren:"children",dirSelectable:!0,injectClasses:{ul:"a1",li:"a2",liSelected:"a7",iExpanded:"a3",iCollapsed:"a4",iLeaf:"a5",label:"a6",labelSelected:"a8"}},t.treeData=[],t.originalTreeData=[],t.form={cate:{name:"root",id:""}},t.cateParams={open:!1},t.createCate=function(){if(t.form.name){var e={name:t.form.name,parent:t.form.cate.id,open:t.cateParams.open};l.create(e).success(function(){t.reloadTree(),t.form.name=""})}},t.updateCate=function(){if(t.editCate.name){var e={parent:t.editCate.parent.id,id:t.editCate.id,name:t.editCate.name,open:t.editCate.open};l.update(e).success(function(){t.reloadTree()})}},t.updateSubscriptions=function(){t.node.children=[],c.getSubscription().success(function(e){t.node.viewCount=e.data.datas.length}),c.getSubscription().success(function(e){t.appendList(t.node,e.data.datas)})},t.reloadTree=function(){var i=function(i){t.treeData.splice(0);var n=e(i.data);$.each(n,function(){t.treeData.push(this)}),t.cateParams.open&&t.params.options.allowShowSubscription&&(t.node={name:"我订阅的视图",id:t.subscriptionId,children:[]},t.treeData.push(t.node),c.getSubscription().success(function(e){t.node.viewCount=e.data.datas.length})),t.originalTreeData=i.data,t.editCate&&$.each(t.originalTreeData,function(){t.editCate.parent&&this.id===t.editCate.parent.id&&(t.editCate.parent=this)})};t.cateParams.open?l.getPublic().success(i):l.getPrivate().success(i)},t.formatSelect=function(e){var i=[];return i.push(t.form.cate),$.each(e,function(){i.push(this)}),i},t.showSelected=function(e){t.getNodePath(e),t.params.selectNode(e),e.xml?t.editCate=null:(t.editCate=angular.copy(e),t.editCate.show=!0,e.parent?$.each(t.originalTreeData,function(){this.id===e.parent&&(t.editCate.parent=this)}):t.editCate.parent=t.form.cate)},t.showToggle=function(e,i){i&&e.id&&t.params.options.queryView&&(e.id===t.subscriptionId?c.getSubscription().success(function(i){t.appendList(e,i.data.datas)}):c.get({cateId:e.id,all:!1,page:1,pageSize:1e3}).success(function(i){t.appendList(e,i.data.datas)}))},t.appendList=function(e,i){if(!i||i.length){var n=function(t){var i,o;for(i=0;i<t.length;i++){if(t[i].id===e.id){o=t[i];break}angular.isArray(t[i].children)&&(o=n(t[i].children))}return o},o=n(t.treeData);if(o){var a=[];angular.isArray(o.children)||(o.children=[]),$.each(o.children,function(){this.xml||a.push(this)}),o.children.splice(0),$.each(a,function(){this.label=this.name,o.children.push(this)}),$.each(i,function(){this.label=this.name,o.children.push(this)})}}},t.deleteNodeById=function(e){var i,n,o;for(i=0;i<t.originalTreeData.length;i++)if(t.originalTreeData[i].id===e){t.originalTreeData.splice(i,1);break}n=function(t){var i;for(i=0;i<t.length;i++){if(t[i].id===e){t.splice(i,1);break}angular.isArray(t[i].children)&&n(t[i].children)}},o=function(e){var t;for(t=0;t<e.length;t++)angular.isArray(e[t].children)&&e[t].children.length&&n(e[t].children)},n(t.treeData),o(t.treeData),t._refresh()},t.deleteCate=function(){t.editCate&&t.editCate.id&&p.confirm("删除分类将会清除该分类下所有的子分类以及视图数据，请确认是否要继续本次操作？",function(){l.remove(t.editCate.id).success(function(){t.reloadTree()})})},t.getNodePath=function(e){if(!e.path){var i,n=[];i=function(t){var o;for(o=0;o<t.length;o++){if(t[o].id===e.id)return n.push(t[o]),!0;if(t[o].children){if(n.push(t[o]),i(t[o].children))return;n.pop()}}},i(t.treeData),e.path=n}},t.isShowCount=function(e){return Array.isArray(e.children)},t.$watch("cateParams.open",function(){t.params.togglePublic(t.cateParams.open),t.reloadTree()},!1),t.$on(u.VIEW_DELETE_AFTER,function(e,i){t.deleteNodeById(i.id)}),t.$on(u.VIEW_SUBSCRIPTION_AFTER,function(){t.updateSubscriptions()}),t.$on(u.VIEW_UNSUBSCRIPTION_AFTER,function(){t.updateSubscriptions()})}]),t.directive("graphViewtree",["$q","$parse",function(){return{restrict:"A",priority:1001,scope:!0,templateUrl:"app/directive/viewtree/viewtree.html",controller:"DirectiveGraphViewtreeCtrl",compile:function(){return function(e,t,i,n){n.setupBindingsToInternalScope(i.graphViewtree)}}}}])}(nameSpace.reg("graph")),function(e){var t=function(e,t,i,n,o){e.ok=function(){t.close(),o&&o(e.color)},e.$modal=t,e.title=i,e.color=n?n:"#FFFFFF",e.change=function(e){console.log(e)}};e.app.controller("ModalColorCtrl",["$scope","$modalInstance","title","originalColor","fn",t])}(nameSpace.reg("graph")),function(e){"use strict";e.app.controller("ModalExpandCtrl",["$scope","$modalInstance","CiRelationService","CiCateService","CiService","editor","Unit","Const",function(e,t,i,n,o,a,r,s){e.ok=function(){var i={},n=a.graph.getSelectionCell();i.dirDepth=e.dep,i.ciRels=[],i.ci=r.getCiIdByCell(n),i.like={},$.each(e.relations,function(){this._checked&&i.ciRels.push(this.id)}),$.each(e.categorys,function(){i.like[this.category.id]||(i.like[this.category.id]={});var e=i.like[this.category.id];this.attribute?e[this.attribute]=this.like?"*"+this.like+"*":"*":e["*"]=this.like?"*"+this.like+"*":"*"}),o.expand(i).success(function(e){t.close(),$.each(e.data,function(){a.graph.getCellById(s.CI_PREFIX+this.id)||a.graph.insertVertex(a.graph.getDefaultParent(),s.CI_PREFIX+this.id,this.name,0,0,s.GRAPH_DRAG_WIDTH,s.GRAPH_DRAG_HEIGHT,"image;image="+r["static"](this.icon))})})},e.$modal=t,e.relations=[],e.categorys=[],e.dep={up:"1",down:"1"},e.add=function(){e.categorys.push({})},e.remove=function(t){e.categorys.splice(t,1)},n.get().success(function(t){e.categorysLib=t.data}),i.getCategory().success(function(t){e.relations=t.data})}])}(nameSpace.reg("graph")),function(e){var t=function(e,t,i){var n=function(){return $("#font-example")},o=i.graph.getSelectionCells();if(e.$modal=t,e.font={},1===o.length){var a=i.graph.getCellStyle(o[0]);console.log(a),a.fontSize&&(e.font.size=a.fontSize),a.fontFamily&&(e.font.family=a.fontFamily),a.fontColor&&(e.font.color=a.fontColor),a.align&&(e.font.alignHorizonal=a.align),a.verticalAlign&&(e.font.alignVertical=a.verticalAlign),5===a.fontStyle&&(e.font.bold=a["true"],e.font.underline=a["true"]),4===a.fontStyle&&(e.font.underline=a["true"]),1===a.fontStyle&&(e.font.bold=a["true"])}e.ok=function(){e.font.family&&i.graph.setCellStyles(mxConstants.STYLE_FONTFAMILY,e.font.family,o),e.font.size&&i.graph.setCellStyles(mxConstants.STYLE_FONTSIZE,e.font.size,o),e.font.color&&i.graph.setCellStyles(mxConstants.STYLE_FONTCOLOR,e.font.color,o),e.font.bold&&i.graph.toggleCellStyleFlags(mxConstants.STYLE_FONTSTYLE,mxConstants.FONT_BOLD),e.font.italic&&i.graph.toggleCellStyleFlags(mxConstants.STYLE_FONTSTYLE,mxConstants.FONT_ITALIC),e.font.underline&&i.graph.toggleCellStyleFlags(mxConstants.STYLE_FONTSTYLE,mxConstants.FONT_UNDERLINE),e.font.alignHorizontal&&i.graph.setCellStyles(mxConstants.STYLE_ALIGN,e.font.alignHorizontal,cell),e.font.alignVertical&&i.graph.setCellStyles(mxConstants.STYLE_VERTICAL_ALIGN,e.font.alignVertical,cell)},e.size=function(){n().css("font-size",e.font.size+"px")},e.changeFamily=function(){n().css("font-family",e.font.family)},e.changeColor=function(){n().css("color",e.font.color)},e.$watch("font.bold",function(e){e?n().css("font-weight","bold"):n().css("font-weight","normal")},!1),e.$watch("font.italic",function(e){e?n().css("font-style","italic"):n().css("font-style","normal")},!1),e.$watch("font.underline",function(e){e?n().css("text-decoration","underline"):n().css("text-decoration","none")},!1)};t.$inject=["$scope","$modalInstance","editor"],e.app.controller("ModalFontCtrl",t)}(nameSpace.reg("graph")),function(e){"use strict";e.app.controller("ModalImageCtrl",["$scope","$modalInstance","ImageService","Unit","fn",function(e,t,i,n,o){e.ok=function(){t.close(),o&&o(e.selectItem)},e.selectItem=null,e.$modal=t,e.image="",e.file=null,e.selectFile=function(t){if(t.length>=1){e.file=t[0];var i=new FileReader;i.readAsDataURL(t[0]),i.onload=function(){e.image=this.result,e._refresh()}}},e.upload=function(){e.file?i.uploadBackground(e.file).success(function(){e.image=null,e.startUpload=!1,e.refresh()}):e.startUpload=!0},e.page=1,e.pageSize=10,e.total=0,e.staticUrl=n["static"],e.click=function(t){e.selectItem=t},e.remove=function(t){i.removeBackground(n.basename(t.url)).success(function(i){console.log(i),e.refresh(),t.url===e.selectItem.url&&(e.selectItem=null)})},e.refresh=function(){i.getBackgound({page:e.page,pageSize:e.pageSize}).success(function(t){e.total=t.data.count,e.images=t.data.datas})},e.refresh()}])}(nameSpace.reg("graph")),function(e){"use strict";e.app.controller("ModalSettingOpenCtrl",["$scope","$modal","$modalInstance",function(e,t,i){e.$modal=i,e.themes=[{name:"Default"},{name:"Mac OS X 10.5+"},{name:"Emacs"},{name:"Visual Studio"},{name:"Default for XWin"}],e.themesKeymap={Default:[{key:"ctrl+s",fn:"save1(use to save the views)"},{key:"ctrl+delete",fn:"delete"},{key:"ctrl+enter",fn:"open"},{key:"ctrl+f",fn:"open"}],"Mac OS X 10.5+":[{key:"ctrl+s",fn:"save2(use to save the views)"},{key:"ctrl+delete",fn:"delete"},{key:"ctrl+enter",fn:"open"}],Emacs:[{key:"ctrl+s",fn:"save3(use to save the views)"},{key:"ctrl+delete",fn:"delete"},{key:"ctrl+enter",fn:"open"}],"Visual Studio":[{key:"ctrl+s",fn:"save4(use to save the views)"},{key:"ctrl+delete",fn:"delete"},{key:"ctrl+enter",fn:"open"}],"Default for XWin":[{key:"ctrl+s",fn:"save5(use to save the views)"},{key:"ctrl+delete",fn:"delete"},{key:"ctrl+enter",fn:"open"}]},e.originalKeymap=angular.copy(e.themesKeymap),e.theme=e.themes[0],e.keymapList=e.themesKeymap[e.theme.name],e.ok=function(){i.close()},e.copy=function(){e.themes.unshift({name:e.theme.name+" copy"}),e.themesKeymap[e.theme.name+" copy"]=e.themesKeymap[e.theme.name],e.originalKeymap[e.theme.name+" copy"]=e.themesKeymap[e.theme.name],e.theme=e.themes[0]},e.setTheme=function(){e.keymapList=e.themesKeymap[e.theme.name]},e["delete"]=function(){angular.forEach(e.themes,function(t,i){t.name===e.theme.name&&e.themes.splice(i,1)}),e.theme=e.themes[0],e.keymapList=e.themesKeymap[e.theme.name]},e.reset=function(){e.keymapList=e.originalKeymap[e.theme.name]},e.setSelected=function(){e.selectedIndex=this.$index},e.showSetBox=function(){e.keyShow=this.index},e.checkKeys=function(t,i){var n=t||window.event,o=String.fromCharCode(n.keyCode);switch(n.keyCode>111&&n.keyCode<124&&(o="F"+(n.keyCode-111)),n.keyCode){case 9:o="Tab";break;case 13:o="Enter";break;case 33:o="PageUp";break;case 34:o="PageDown"}n.shiftKey&&(o="Shift+"+o),n.altKey&&(o="Alt+"+o),n.ctrlKey&&(o="Ctrl+"+o),(n.ctrlKey||n.altKey)&&(n.preventDefault?n.preventDefault():(n.keyCode=0,n.returnValue=!1));for(var a=o.toLowerCase(),r=0;r<e.keymapList.length;r++){if(a===e.keymapList[r].key){i.notice="提示：快捷键已被"+e.keymapList[r].fn+"占用，请更换";break}i.notice=null}i.key=o.toLowerCase()}}])}(nameSpace.reg("graph")),function(e){"use strict";e.app.controller("ModalNumberCtrl",["$scope","$modalInstance","title","defaultValue","minValue","maxValue","fn",function(e,t,i,n,o,a,r){e.ok=function(){t.close(),r&&r(e.number)},e.$modal=t,e.title=i,e.number=n?n:0,e.maxValue=a?a:100,e.minValue=o?o:0,e._refresh()}])}(nameSpace.reg("graph")),function(e){"use strict";e.app.controller("ModalRelationViewOpenCtrl",["$scope","$modalInstance","ViewService","Unit","editor",function(e,t,i,n,o){var a=o.graph.getSelectionCell();e.ok=function(){t.close(),e.data.selected&&(o.history.push(o.state.view),o.action.openView(e.data.selected))},e.$modal=t,e.staticUrl=n["static"],e.data={},e.views=[],i["private"]().success(function(t){var i=o.graph.getCellAttr(a,"view");i&&$.each(i.split("$"),function(){var i;for(i=0;i<t.data.length;i++)t.data[i].id===this&&e.views.push(t.data[i])})})}])}(nameSpace.reg("graph")),function(e){"use strict";e.app.controller("ModalRelationViewSetCtrl",["$scope","$modalInstance","ViewService","Unit","editor",function(e,t,i,n,o){var a=o.graph.getSelectionCell();e.ok=function(){if(t.close(),e.checked.length){var i=[];$.each(e.checked,function(){i.push(this.id)}),o.graph.setCellAttr(a,"view",i.join("$"))}},e.$modal=t,e.staticUrl=n["static"],e.checked=[],e.refresh=function(){e.checked=[],$.each(e.views,function(){this._checked&&e.checked.push(this)})},i["private"]().success(function(t){if(e.views=t.data,a){var i=o.graph.getCellAttr(a,"view");i&&$.each(i.split("$"),function(){var t;for(t=0;t<e.views.length;t++)e.views[t].id===this&&(e.views[t]._checked=!0,e.checked.push(e.views[t]))})}})}])}(nameSpace.reg("graph")),function(e){"use strict";e.app.controller("ModalSearchNodeCtrl",["$scope","$modalInstance","Const","editor",function(e,t,i,n){e.$modal=t,e.keyword="",e.search=function(){if(e.keyword){var t=n.graph.getDepCells(),i=0;t&&t.length&&$.each(t,function(){var t=this;angular.isString(t.name)&&t.name.indexOf(e.keyword)>=0&&(n.graph.addLight(t),i++)}),i||Unit.warning("没有搜索到任何对象！")}}}])}(nameSpace.reg("graph")),
function(e){"use strict";e.app.controller("ModalSearchNodeCtrl",function(){})}(nameSpace.reg("graph")),function(e){"use strict";e.app.controller("ShowKeyMapCtrl",["$scope","$modalInstance",function(e,t){e.keymap=[{"ctrl + s":"保存视图","ctrl + a":"选择全部元素"},{"ctrl + c":"复制","ctrl + v":"粘贴"},{"ctrl + x":"剪切","ctrl + u":"更新视图"},{"ctrl + z":"还原","ctrl + y":"恢复"},{"ctrl + e":"清空视图","ctrl + o":"打开视图"},{"ctrl + l":"编辑节点链接","alt + n":"创建视图"},{"alt + c":"适应画布","alt + i":"放大"},{"alt + o":"缩小","alt + u":"置前"},{"alt + d":"置后","alt + f":"字体"},{"alt + l":"自动布局开关","alt + e":"自动关系开关"},{"delete":"移除选中节点"}],e.$modal=t}])}(nameSpace.reg("graph")),function(e){"use strict";e.app.controller("ModalThresholdCtrl",["$scope","$modalInstance","$filter","ViewService","view","NgTableParams","CiMonitorService","Unit","UserInfo","editor","CiService",function(e,t,i,n,o,a,r,s,l,c,u){e.$modal=t,e.obj={filter:"",filter1:""};var p=l.get();p&&(e.userInfo=p),e.$on(Event.USERINFO_UPDATE,function(t,i){e.userInfo=i}),e.getThreshold=function(){o.isSubscription||!o.open?e.hasEditorPermission=!0:($("#save-threahold").attr("disabled",!0).attr("readOnly",!0),e.hasEditorPermission=!1),e.tableParams=new a({page:1,count:10},{total:0,counts:[],getData:function(t,a){n.getThreshold(o.id,{page:a.page(),pageSize:a.count()}).success(function(n){var o=angular.copy(n.data.datas);e.responseData=n.data.datas,e.opData=o,o||(o=[]);for(var r=0;r<o.length;r++){var s=o[r];"string"==typeof s.threshold&&(s.threshold=JSON.parse(s.threshold));var l,c,u=s.threshold[0].threshold,p=[{severity:"5"},{severity:"4"},{severity:"3"},{severity:"2"},{severity:"1"}];for(l=0;5>l;l++)for(c=0;c<u.length;c++)u[c].severity===p[l].severity&&(p[l].lowLimit=u[c].lowLimit,p[l].highLimit=u[c].highLimit);s.threshold[0].threshold=p}a.total(n.data.count);var h=a.sorting()?i("orderBy")(e.opData,a.orderBy()):e.opData;t.resolve(h),$(".thresholdTable")[0].scrollTop=0})}})},e.subscription=function(){$("#save-threahold").attr("disabled",!1).attr("readOnly",!1),n.subscription(o.id).success(function(){e.hasEditorPermission=!0})};var h=function(e,t){if(e.ci.categoryName!==t.ci.categoryName||e.ci.name!==t.ci.name||e.id!==t.id||e.ifEnable!==t.ifEnable||e.ifNotify!==t.ifNotify||e.kpi.kpiCategoryName!==t.kpi.kpiCategoryName||e.kpi.name!==t.kpi.name||e.kpiId!==t.kpiId||null===e.ifEnable||""===e.ifEnable||null===e.ifNotify||""===e.ifNotify)return!1;for(var i=0;i<e.threshold[0].threshold.length;i++){var n=e.threshold[0].threshold[i],o=t.threshold[0].threshold[i];if(n){if(!o)return!1;if(n.highLimit!==o.highLimit||n.lowLimit!==o.lowLimit||n.severity!==o.severity)return!1}}return!0};e.saveThreshold=function(){for(var t=[],i=0;i<e.opData.length;i++){var a=e.responseData[i],r=e.opData[i],s={};s.ciId=r.ciId,s.ifEnable=r.ifEnable,s.id=r.id,s.kpiId=r.kpiId,s.ifNotify=r.ifNotify,s.viewAuthor=r.viewAuthor,s.subscriber=e.userInfo.loginName,s.threshold=angular.copy(r.threshold),s.viewId=r.viewId;var l,c=s.threshold[0].threshold,u=[];for(l=0;l<c.length;l++)(c[l].lowLimit||c[l].highLimit)&&u.push(c[l]);s.threshold[0].threshold=u,h(a,r)||t.push(s)}n.saveThreshold(o.id,{data:t}).success(function(){})},e.filterMethod=function(t){return e.obj.filter?(t.ci.name+"").toLowerCase().indexOf(e.obj.filter.toLowerCase())>=0||(t.kpi.name+"").toLowerCase().indexOf(e.obj.filter.toLowerCase())>=0?t:!1:t},e.filterMethodByMonitor=function(t){return e.obj.filter?(t.ciName+"").toLowerCase().indexOf(e.obj.filter.toLowerCase())>=0||(t.kpiName+"").toLowerCase().indexOf(e.obj.filter.toLowerCase())>=0||(t.val+"").toLowerCase().indexOf(e.obj.filter.toLowerCase())>=0?t:!1:t},e.filterMethodByEvent=function(t){return e.obj.filter?(t.ciName+"").toLowerCase().indexOf(e.obj.filter.toLowerCase())>=0||(t.kpiName+"").toLowerCase().indexOf(e.obj.filter.toLowerCase())>=0?t:!1:t},e.filterMethodByEventList=function(t){return e.obj.filter1?(t.eventTitle+"").toLowerCase().indexOf(e.obj.filter1.toLowerCase())>=0||(t.kpiInstance+"").toLowerCase().indexOf(e.obj.filter1.toLowerCase())>=0||(t.firstOccurrence+"").toLowerCase().indexOf(e.obj.filter1.toLowerCase())>=0||(t.lastOccurrence+"").toLowerCase().indexOf(e.obj.filter1.toLowerCase())>=0||(t.closeTime+"").toLowerCase().indexOf(e.obj.filter1.toLowerCase())>=0||(t.severity+"").toLowerCase().indexOf(e.obj.filter1.toLowerCase())>=0||(t.status+"").toLowerCase().indexOf(e.obj.filter1.toLowerCase())>=0||(t.summary+"").toLowerCase().indexOf(e.obj.filter1.toLowerCase())>=0||(t.tally+"").toLowerCase().indexOf(e.obj.filter1.toLowerCase())>=0?t:!1:t},e.filterCiInfo=function(t){return e.obj.filter?(t["CI Name"]+"").toLowerCase().indexOf(e.obj.filter.toLowerCase())>=0||(t["CI ID"]+"").toLowerCase().indexOf(e.obj.filter.toLowerCase())>=0||(t.Company+"").toLowerCase().indexOf(e.obj.filter.toLowerCase())>=0||(t.Dept+"").toLowerCase().indexOf(e.obj.filter.toLowerCase())>=0||(t.Status+"").toLowerCase().indexOf(e.obj.filter.toLowerCase())>=0||(t.Supporter+"").toLowerCase().indexOf(e.obj.filter.toLowerCase())>=0?t:!1:t},e.isRefresh=!1,e.hasMonitorChar=!0,e.showMonitor=function(){e.obj.filter="";var t=new Date;e.nowTime=t.getHours()+"时"+t.getMinutes()+"分";var r=parseInt((new Date).getTime()/1e3);e.tableParams1=new a({page:1,count:10},{total:0,counts:[],getData:function(t,a){e.isRefresh&&a.page(1),n.getViewMonitor(o.id,{time:r,page:a.page(),pageSize:a.count()}).success(function(e){a.total(e.data.count);var n=a.sorting()?i("orderBy")(e.data.datas,a.orderBy()):e.data.datas;t.resolve(n)})}})},e.showMonitor(),e.refreshMonitor=function(){e.isRefresh=!0;var t=new Date;e.nowTime=t.getHours()+"时"+t.getMinutes()+"分";var a=parseInt((new Date).getTime()/1e3);n.getViewMonitor(o.id,{time:a,page:e.tableParams1.page(),pageSize:e.tableParams1.count()}).success(function(t){e.tableParams1.total(t.data.count);var n=e.tableParams1.sorting()?i("orderBy")(t.data.datas,e.tableParams1.orderBy()):t.data.datas;e.tableParams1.data=n,e.tableParams1.reload()})},e.showHistoryPerformance=function(t,i){if(t._expand=!t._expand,t._expand){var n=new Date,o=s.unixToDatetime(n.getTime()-864e5),a=s.unixToDatetime(n.getTime());r.getPerformanceChart({startTime:o,endTime:a,kpi:t.kpiId,ci:t.mongoId}).success(function(t){var n=t.datas.values,o=JSON.parse(n)[0],a=[];if(void 0===o)return void(e.hasMonitorChar=!1);$.each(o.value,function(){a.push({label:this.label.split(" ")[1],y:parseInt(this.value)})}),a.reverse();var r=new CanvasJS.Chart($(i.currentTarget.parentNode.parentNode).next("tr").find(".threshold-monitor-char")[0],{title:{text:o.inst},zoomEnabled:!0,animationEnabled:!0,data:[{type:"line",dataPoints:a}]});r.render()})}},e.toDateString=function(e){return 0===e?"-":s.unixToDatetime(e)},e.showEvent=function(){e.obj.filter="",e.tableParams2=new a({page:1,count:10},{total:0,counts:[],getData:function(t,a){e.isRefresh&&a.page(1),n.getViewEvent(o.id,{page:a.page(),pageSize:a.count()}).success(function(e){a.total(e.data.count);var n=a.sorting()?i("orderBy")(e.data.datas,a.orderBy()):e.data.datas;t.resolve(n)})}})},e.getViewEventByCiKpi=function(t,i){if($(".getMoreEventBtn").each(function(){$(this).css("display","block")}),t._expand=!t._expand,e.currentEventCiId=t.ciId,e.curretnEventKpiHex=t.kpiHex,e.currPage=1,e.pageSize=10,t._expand){var a=new Date;e.startTime=parseInt((a.getTime()-864e5)/1e3),e.endTime=parseInt(a.getTime()/1e3),n.getViewEventByCiKpi(o.id,{page:e.currPage,pageSize:e.pageSize,ciId:e.currentEventCiId,kpiHex:e.curretnEventKpiHex,startTime:e.startTime,endTime:e.endTime}).success(function(i){e.total=i.data.count,t.eventCis=i.data.datas,t.total=i.data.count})}},e.getMoreEvent=function(t,i){return e.currPage=e.currPage+1,n.getViewEventByCiKpi(o.id,{page:e.currPage,pageSize:e.pageSize,ciId:e.currentEventCiId,kpiHex:e.curretnEventKpiHex,startTime:e.startTime,endTime:e.endTime}).success(function(e){t.eventCis=t.eventCis.concat(e.data.datas)}),e.total<e.currPage*e.pageSize&&(e.currPage-1)*e.pageSize<e.total?void $(i.currentTarget).css("display","none"):void 0},e.getCiInfo=function(){var t=c.action.getCisId();u.ids(t).success(function(t){var i={};for(var n in t.data){var o=[];o.push(t.data[n]),i[o[0].categoryName]||(i[o[0].categoryName]=[]),i[o[0].categoryName].push(o[0].data)}e.ciCates=i})}}])}(nameSpace.reg("graph")),function(e){var t=function(e,t,i,n){e.$modal=t,e.cancel=function(){t.close()},e.ok=function(){e.view.xml&&(i(e.view),t.close())},e.viewtreeParams=new n({allowEdit:!1,queryView:!0,showForm:!1,allowShowPubview:!0,selectNode:function(t){e.view=t}})};t.$inject=["$scope","$modalInstance","fn","GraphViewtree"],e.app.controller("ModalViewOpenCtrl",t)}(nameSpace.reg("graph")),function(e){"use strict";var t=function(e,t,i,n,o,a,r,s){e.view={name:"",categoryId:"",description:"",pos:""},e.isShowLoading=!1,e.title="保存视图",e.$modal=t,e.cancel=function(){t.close()},e.ok=function(){var n=e.viewtreeParams.getSelectNode();if(n&&e.view.name){var s=i.graph.getJson(),l=[];$.each(s.nodes,function(){this.img&&l.push(this.img)}),e.isShowLoading=!0,r.svgToMesh(l).success(function(r){$.each(s.nodes,function(){this.mesh={mtl:a["static"](r.data[this.img].mtl),obj:a["static"](r.data[this.img].obj)}});var l=i.graph.getSvg(),c={categoryId:n.id,name:e.view.name,description:e.view.description,cis:i.action.getCisId(),points:JSON.stringify(s),svg:angular.isObject(l)?l.outerHTML:l,xml:i.action.getXml()};i.state.view&&(c.id=i.state.view.id),o.create(c).success(function(n){i.state.setView(n.data),t.close(),e.isShowLoading=!1}).error(function(){e.isShowLoading=!1})})}else a.alert("错误：未填写视图名称或者未选择保存视图的位置")};var l=s.get();e.viewtreeParams=new n({allowEdit:!0,allowShowPubview:l?l.isManager:!1,selectNode:function(t){var i=t.path,n=[];$.each(i,function(){n.push(this.name)}),n.unshift(this.isPublic()?"公有视图":"私有视图"),e.view.pos=n.join(" -> "),e._refresh()}})};t.$inject=["$scope","$modalInstance","editor","GraphViewtree","ViewService","Unit","MeshService","UserInfo"],e.app.controller("ModalViewSaveCtrl",t)}(nameSpace.reg("graph")),function(e){var t=function(e,t,i,n,o,a,r,s){e.view={name:i.state.view.name,description:i.state.view.description,categoryId:i.state.view.categoryId,pos:""},e.title="更新视图",e.$modal=t,e.cancel=function(){t.close()},e.ok=function(){if(e.view.categoryId&&e.view.name){var n=i.graph.getJson(),s=[];$.each(n.nodes,function(){this.img&&s.push(this.img)}),r.svgToMesh(s).success(function(r){$.each(n.nodes,function(){this.mesh={mtl:a["static"](r.data[this.img].mtl),obj:a["static"](r.data[this.img].obj)}});var s=i.graph.getSvg(),l={categoryId:e.view.categoryId,name:e.view.name,description:e.view.description,cis:i.action.getCisId(),points:JSON.stringify(n),svg:angular.isObject(s)?s.outerHTML:s,xml:i.action.getXml(),id:i.state.view.id};o.update(l).success(function(){t.close()})})}else a.alert("错误：未填写视图名称或者未选择保存视图的位置")},e.pos=function(t){console.log(t);var i=t.path,n=[];$.each(i,function(){n.push(this.name)}),n.unshift(e.viewtreeParams.isPublic()?"公有视图":"私有视图"),e.view.pos=n.join(" -> "),e._refresh()};var l=s.get();e.viewtreeParams=new n({allowEdit:!0,allowShowPubview:l?l.isManager:!1,selectNode:function(t){e.view.categoryId=t.id,e.pos(t)}}),e.pos(i.state.view)};t.$inject=["$scope","$modalInstance","editor","GraphViewtree","ViewService","Unit","MeshService","UserInfo"],e.app.controller("ModalViewUpdateCtrl",t)}(nameSpace.reg("graph")),function(e){"use strict";e.app.controller("GuideCtrl",["$scope","$cookies","AuthService","$state","Unit",function(e,t,i,n,o){}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(e){"use strict";e.stateUrl;e.app.config(["$stateProvider",function(e){}])}(nameSpace.reg("graph")),function(e){"use strict";e.app.controller("LoginCtrl",["$scope","$cookies","AuthService","$state","Unit",function(e,t,i,n,o){e.online=!1,$(".loadingbar").remove();var a=t.get("token");void 0!==a&&""!==a&&(e.online=!0,i.getCurrentUser().success(function(t){e.userName=t.data.loginName,e.userIcon=o["static"](t.data.icon)})),e.login=function(){return void 0===e.userName?void toastr.error("登陆名不能为空",null,{closeButton:!0,progressBar:!1,timeOut:1500}):void 0===e.password?void toastr.error("密码不能为空",null,{closeButton:!0,progressBar:!1,timeOut:1500}):(e.isLoading=!0,$(".request").attr("disabled",!0).attr("readOnly",!0),void i.login({username:e.userName,password:e.password}).success(function(i){var o=i.data;if(e.rememberMe){var a=new Date;a.setYear(a.getYear()+1),t.put("token",o.token,{expires:a})}else t.put("token",o.token);n.go("home.edit")}).error(function(){e.isLoading=!1,$(".request").attr("disabled",!1).attr("readOnly",!1)}))},e.into=function(){n.go("home.user.overview")},e["switch"]=function(){e.online=!1,i.logout().success(function(){t.remove("token"),n.go("login")})}}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(e){"use strict";var t=e.stateUrl;e.app.config(["$stateProvider",function(e){e.state("login",{url:"/login",templateUrl:t("/login/login.html"),controller:"LoginCtrl",data:{title:"登录入口"}})}])}(nameSpace.reg("graph")),function(e){"use strict";e.app.controller("MainCtrl",["$scope","$state","$cookies","AuthService","Unit","UserInfo","$modal","Event",function(e,t,i,n,o,a,r,s){e.LAYOUT={},e.LAYOUT.collapsedMainLeft=!1,e.LAYOUT.collapsedSidebar=!1,e.keyword="",e.$on(s.USERINFO_UPDATE,function(t,i){e.userInfo=i,e.currentUserIcon=o["static"](i.icon)+"?"+(new Date).getTime()}),e.search=function(){e.keyword&&e.$state.go("home.search.result",{keyword:e.keyword})},n.getCurrentUser().success(function(t){e.loginName=t.data.userName,e.isAdmin="管理员"===t.data.ownerRoles,e.currentUserIcon=o["static"](t.data.icon),a.set(t.data)}),e.logout=function(){n.logout().success(function(){i.remove("token"),t.go("login")})},e.setting=function(){r.open({animation:!0,templateUrl:"app/modal/keymap/keymap.html",controller:"ModalSettingOpenCtrl",size:"normal",resolve:{}})};var l=i.get("guide");e.startJoyRide=void 0!==l&&l?!1:!1;var c=t.current.name,u=function(t){switch(t){case"home.group.list.private":e.config=[{type:"title",heading:"欢迎使用向导",text:"请根据提示使用"},{type:"element",selector:".guide1",heading:"功能1",text:"你可以创建自己的组合视图",placement:"bottom",scroll:!0},{type:"element",selector:".guide2",heading:"功能2",text:"点击查看组合视图私有视图列表",placement:"right",scroll:!0},{type:"element",selector:".guide3",heading:"功能3",text:"点击查看组合视图公有视图列表",placement:"bottom",scroll:!0}];var n=new Date;n.setYear(n.getYear()+1),i.put("guide",!0,{expires:n})}};e.userGroup=function(t){e.startJoyRide=!0,u(t)},u(c),e.showKeyMap=function(){r.open({size:"lg",animation:!0,templateUrl:"app/modal/showKeymap/showKeymap.html",controller:"ShowKeyMapCtrl"})},e.$watch("LAYOUT.collapsedSidebar",function(){e.$broadcast(s.SIDEBAR_CALLAPSED,e.LAYOUT.collapsedSidebar)})}])}(nameSpace.reg("graph")),function(e,t){t.format=function(e){var t,i=[];for(t=0;t<e.length;t++){var n={items:[]},o=e[t];if(o.parent){var a,r,s=!1;for(a=0;a<i.length;a++)for(r=0;r<i[a].items.length;r++)if(i[a].items[r].id===o.parent){i[a].items.push(o),s=!0;break}s||o._count&&!(o._count<=3)||(o._count||(o._count=0),o._count++,e.push(o))}else n.items.push(o),n.label=o.name,i.push(n)}return i};var i=function(e,i,n,o,a,r,s,l,c,u,p,h,d,g,f,m,v,w,C){e.initMap={},e.isSearch=!1,e.cates=[],e.config={},e.selectCates=[],e.checkboxes={checked:!1,items:{}},e.icon={page:1,pageSize:30,total:0},e.icons=[],e.initCate=function(){var e=$("#category_icon");e.find(".drag-box-item").each(function(){t.sidebar.addImagePalette(this,$(this).attr("data-name"),$(this).attr("data-icon"),v.GRAPH_DRAG_WIDTH,v.GRAPH_DRAG_HEIGHT,v.GRAPH_DRAG_WIDTH,v.GRAPH_DRAG_HEIGHT)})},e.initBaseIcon=function(){e.initMap.base||(e.initMap.base=!0,i(function(){var e=document.querySelector("#base_icon");t.sidebar.addGeneralPalette(e,"swimlane",200,200,"Container"),t.sidebar.addGeneralPalette(e,"swimlane;horizontal=0",200,200,"Pool"),t.sidebar.addGeneralPalette(e,"text",40,26,"Text"),t.sidebar.addGeneralPalette(e,null,120,60),t.sidebar.addGeneralPalette(e,"rounded=1",120,60),t.sidebar.addGeneralPalette(e,"ellipse",80,80),t.sidebar.addGeneralPalette(e,"ellipse;shape=doubleEllipse",80,80),t.sidebar.addGeneralPalette(e,"triangle",60,80),t.sidebar.addGeneralPalette(e,"rhombus",80,80),t.sidebar.addGeneralPalette(e,"shape=hexagon",120,80),t.sidebar.addGeneralPalette(e,"shape=actor;verticalLabelPosition=bottom;verticalAlign=top",40,60),t.sidebar.addGeneralPalette(e,"ellipse;shape=cloud",120,80),t.sidebar.addGeneralPalette(e,"shape=cylinder",60,80),t.sidebar.addGeneralPalette(e,"line",160,10),t.sidebar.addGeneralPalette(e,"line;direction=south",10,160),t.sidebar.addGeneralPalette(e,"shape=xor",60,80),t.sidebar.addGeneralPalette(e,"shape=or",60,80),t.sidebar.addGeneralPalette(e,"shape=step",120,80),t.sidebar.addGeneralPalette(e,"shape=tape",120,100),t.sidebar.addGeneralPalette(e,"shape=cube",120,80),t.sidebar.addGeneralPalette(e,"shape=note",80,100),t.sidebar.addGeneralPalette(e,"shape=folder",120,120),t.sidebar.addGeneralPalette(e,"shape=card",60,80),t.sidebar.addGeneralPalette(e,"shape=plus",20,20),t.sidebar.createEdgeTemplate(e,"edgeStyle=none;endArrow=none;",100,100),t.sidebar.createEdgeTemplate(e,"edgeStyle=none",100,100),t.sidebar.createEdgeTemplate(e,"edgeStyle=elbowEdgeStyle;elbow=horizontal",100,100),t.sidebar.createEdgeTemplate(e,"edgeStyle=elbowEdgeStyle;elbow=vertical",100,100),t.sidebar.createEdgeTemplate(e,"edgeStyle=segmentEdgeStyle",100,100),t.sidebar.createEdgeTemplate(e,"arrow",100,100)},100))},e.initOwnIcon=function(){var e=$("#own_icon");e.find(".drag-box-item").each(function(){t.sidebar.addImagePalette(this,$(this).attr("data-name"),$(this).attr("data-icon"),v.GRAPH_DRAG_WIDTH,v.GRAPH_DRAG_HEIGHT,v.GRAPH_DRAG_WIDTH,v.GRAPH_DRAG_HEIGHT)})},e.reloadIcon=function(){e.initMap.icon||(e.initMap.icon=!0,p.get(e.icon).success(function(t){e.icon.total=t.data.count,e.icons=t.data.datas,i(e.initOwnIcon,100)}))},e.initConfig=function(){e.initMap.config||(e.initMap.config=!0,n.get().success(function(t){e.selectCates=t.data,e._refresh()}))},e.configSearch=function(){e.config.cate&&(e.isSearch=!0,e.tableParams.page(1),e.tableParams.reload())},e.uploadIcon=function(n){if(n&&n.length){var o=n[0];e.showProgressbar=!0,t.progressPromise&&i.cancel(t.progressPromise),p.upload(o).progress(function(t){e.iconUploaProgressPercentage=parseInt(100*t.loaded/t.total)}).success(function(){e.reloadIcon(),e.hideProgressbar()}).error(function(){e.hideProgressbar()})}},e.hideProgressbar=function(){t.progressPromise=i(function(){e.showProgressbar=!1},3e3)},e.preStatic=function(e){return h["static"](e)},e.$on("$viewContentLoaded",function(){t.editor=new a(document.querySelector("#graph"),document.querySelector("#graph-outline")),e.graphTableParams=new m(t.editor),t.editor.keymap=new C(t.editor),new r(t.editor,{vertex:[v.MENU_CELL_COPY,v.MENU_CELL_CUT,v.MENU_CELL_DELETE,"-",v.MENU_STYLE,[v.MENU_FONT_STYLE,v.MENU_STROKE_WIDTH,v.MENU_OPACITY],"-",v.MENU_EXPAND_NODE,v.MENU_OPEN_URL,v.MENU_VIEW_RELATION,[v.MENU_VIEW_RELATION_SET,v.MENU_VIEW_RELATION_OPEN]],edge:[v.MENU_CELL_COPY,v.MENU_CELL_CUT,v.MENU_CELL_DELETE,"-",v.MENU_STYLE,[v.MENU_FONT_STYLE,v.MENU_STROKE_WIDTH,v.MENU_OPACITY]],canvas:[v.MENU_VIEW_NEW,v.MENU_VIEW_OPEN,v.MENU_VIEW_SAVE,v.MENU_VIEW_UPDATE,"-",v.MENU_EXPORT,[v.MENU_EXPORT_PNG,v.MENU_EXPORT_PDF,v.MENU_EXPORT_SVG,v.MENU_EXPORT_XML],"-",v.MENU_GRAPH_CLEAR,v.MENU_CELL_PASTE,"-",v.MENU_LAYOUT,[v.MENU_LAYOUT_HORIZONTAL,v.MENU_LAYOUT_VERTICAL,v.MENU_LAYOUT_ORGANIC,v.MENU_LAYOUT_CIRCLE,v.MENU_LAYOUT_STACK_HORIZONTAL,v.MENU_LAYOUT_STACK_VERTICAL],"-",v.MENU_ZOOM,[v.MENU_ZOOM_IN,v.MENU_ZOOM_OUT,v.MENU_ZOOM_CENTER,v.MENU_ZOOM_ACTUAL],"-",v.MENU_VIEW_RELATION_BACK],libs:f}),e.toolbarParams=new o({editor:t.editor}),t.editor.toolbar=e.toolbarParams,i(function(){t.sidebar=new Sidebar(t.editor,document.querySelector("#category_icon"))}),e.infoParams=new g(t.editor),e.$state.params.id&&d.getView(e.$state.params.id).success(function(e){t.editor.action.openView(e.data)})}),e.tableParams=new c({page:1,count:10},{total:0,counts:[],getData:function(n,o){var a={},r={};e.config.cate?(e.config.attr?r[e.config.attr.name]=e.config.like?"*"+e.config.like+"*":"*":r["*"]=e.config.like?"*"+e.config.like+"*":"*",a.categoryId=e.config.cate.id,a.page=o.page(),a.pageSize=o.count(),a.like=r,l.get(a).success(function(e){t.ciData=e.data.datas,n.resolve(t.ciData),o.total(e.data.count),i(function(){new u({editor:t.editor,$table:$("#config-table"),ciData:t.ciData})})})):(n.resolve([]),o.total(0))}}),e.tableParams.getPages=function(){return Math.ceil(e.tableParams.total()/e.tableParams.count())},e.$watch("checkboxes.checked",function(i){angular.forEach(t.ciData,function(t){angular.isDefined(t.id)&&(e.checkboxes.items[t.id]=i)})}),e.showPopover=function(e){var t=e.target;t.offsetWidth<t.scrollWidth&&$(t).popover("show")},e.hidePopover=function(e){$(e.target).popover("hide")},e.openXml=function(e){if(e.length){var i=new FileReader;i.readAsText(e[0]),i.onload=function(e){t.editor.action.create(),t.editor.action.openXml(e.target.result)}}},n.get().success(function(i){h.formatCategoryData(i.data),e.cates=t.format(i.data),e._refresh()}),e.$on(w.GRAPH_CANVAS_CLICK,function(t,i){i.editor.state.view?e.infoParams.showFlag&&e.infoParams.update("view",i.editor.state.view):e.infoParams.hide()}),e.$on(w.CI_TABLE_UNCHECKED,function(){e.checkboxes.checked=!1}),e.$on(w.VIEW_UPDATE_BEFORE,function(){t.editor.action.update()}),e.$on(w.VIEW_PUBLIC_BEFORE,function(){t.editor.action.publicView()}),e.$on(w.VIEW_UNPUBLIC_BEFORE,function(){t.editor.action.unpublicView()}),e.$on(w.VIEW_SUBSCRIPTION_BEFORE,function(){t.editor.action.subscription()}),e.$on(w.VIEW_UNSUBSCRIPTION_BEFORE,function(){t.editor.action.unsubscription()})};i.$inject=["$scope","$timeout","CiCateService","GraphToolbar","Editor","GraphContextMenu","$modal","CiService","ngTableParams","DataDraw","IconService","Unit","ViewService","GraphInfo","ContextLibs","GraphTable","Const","Event","Keymap"],e.app.controller("MainEditCtrl",i)}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(e){"use strict";var t=e.stateUrl;e.app.config(["$stateProvider",function(e){e.state("home.edit",{url:"edit",templateUrl:t("/main/edit/edit.html"),controller:"MainEditCtrl",data:{title:""}}).state("home.edit.id",{url:"/:id",templateUrl:t("/main/edit/edit.html"),controller:"MainEditCtrl",data:{title:""}})}])}(nameSpace.reg("graph")),function(e){"use strict";e.app.controller("MainCiTreeCtrl",["$scope","$state","CiRelationService","$document","Unit",function(e,t,i,n,o){e.start=function(t){i.get({ci:t,ciRels:[],like:{},dirDepth:{up:"10",down:"10"}}).success(function(t){var n=[];$.each(t.data,function(){this.key=this.id,this.source=o["static"](this.icon),n.push(this.id)}),i.get({cis:n}).success(function(i){$.each(i.data,function(){this.from=this.startCi,this.to=this.endCi}),e.draw(t.data,i.data)})})},e.draw=function(e,t){var i=go.GraphObject.make,n=i(go.Diagram,document.querySelector("#graph"),{initialDocumentSpot:go.Spot.TopCenter,initialViewportSpot:go.Spot.TopCenter,initialAutoScale:go.Diagram.Uniform,contentAlignment:go.Spot.Center,initialContentAlignment:go.Spot.Center,"toolManager.mouseWheelBehavior":go.ToolManager.WheelZoom,layout:i(go.LayeredDigraphLayout,{direction:90,layerSpacing:10,columnSpacing:15,setsPortSpots:!1})});n.nodeTemplate=i(go.Node,"Spot",{width:70},i(go.Panel,"Vertical",i(go.Panel,"Auto",i(go.Shape,{fill:null,stroke:null},new go.Binding("stroke","light",function(e){return e?"red":null})),i(go.Picture,{margin:10,width:50,height:50},new go.Binding("source")),i(go.Panel,"Spot",{alignment:go.Spot.TopRight,alignmentFocus:go.Spot.TopRight},i(go.Shape,"Ellipse",{width:20,height:20,margin:4,fill:"red"}),i(go.TextBlock,"1",{margin:2,stroke:"white"},new go.Binding("text","num2"))),i(go.Panel,"Spot",{alignment:go.Spot.TopLeft,alignmentFocus:go.Spot.TopLeft},i(go.Shape,"Ellipse",{width:20,height:20,margin:4,fill:"blue"}),i(go.TextBlock,"2",{margin:2,stroke:"white"},new go.Binding("text","num2")))),i(go.TextBlock,"Default Text",{margin:0,stroke:"black",font:"bold 12px sans-serif"},new go.Binding("text","name"),new go.Binding("stroke","light",function(e){return e?"red":"gray"}))),i("TreeExpanderButton",{alignment:go.Spot.Bottom,alignmentFocus:go.Spot.Top},{visible:!0})),n.linkTemplate=i(go.Link,{routing:go.Link.AvoidsNodes,curve:go.Link.JumpOver,corner:5,toShortLength:4,relinkableFrom:!0,relinkableTo:!0,reshapable:!0,resegmentable:!0},i(go.Shape,{strokeWidth:2,stroke:"gray"},new go.Binding("stroke","link",function(e){return e?"red":"gray"})),i(go.Shape,{toArrow:"Standard",stroke:null})),n.model=new go.GraphLinksModel(e,t)},t.params.id&&e.start(t.params.id)}])}(nameSpace.reg("graph")),function(e){"use strict";var t=e.stateUrl;e.app.config(["$stateProvider",function(e){e.state("home.citree",{url:"citree",templateUrl:t("/main/citree/citree.html"),controller:"MainCiTreeCtrl",data:{title:""}}).state("home.citree.id",{url:"/:id",templateUrl:t("/main/citree/citree.html"),controller:"MainCiTreeCtrl",data:{title:"CI Tree"}})}])}(nameSpace.reg("graph")),function(e,t){"use strict";e.app.controller("MainMonitorCtrl",["$scope","GraphViewtree","ViewService","Editor","GraphContextMenu","GraphInfo","Event","MyTimeLine","CiMonitorService","$timeout","GraphToolbar","GraphTable",function(e,i,n,o,a,r,s,l,c,u,p,h){var d=function(){e.timeLineParams=new l({getStatusData:function(e,i){"function"==typeof i&&e.data.length&&c.getPointStatus(e.data,[t.editor.state.view.id]).success(function(t){$.each(t.data,function(){this.id=this.time}),i({data:t.data,id:e.id})})},clickPoint:function(i){t.editor.state.endTime=Number(i.now),t.editor.state.startTime=i.now-i.timeAverage,t.editor.monitor.stop(),t.editor.monitor.update(),e.$broadcast(s.TIMELINE_POINT_CLICK)},clickNow:function(i){i.enabledNow?(t.editor.state.startTime=null,t.editor.state.endTime=null,t.editor.monitor.update(),t.editor.monitor.start()):t.editor.monitor.stop(),e.$broadcast(s.TIMELINE_POINT_CLICK)},update:function(e){e.timeAverage!==t.editor.state.timeAverage&&(t.editor.state.timeAverage=e.timeAverage,t.editor.monitor&&t.editor.monitor.update())}})};e.isShowTimeline=!1,e.$on("$viewContentLoaded",function(){t.editor=new o(document.querySelector("#graph"),document.querySelector("#graph-outline")),t.editor.action.disabled(),e.graphTableParams=new h(t.editor),e.infoParams=new r(t.editor),e.toolbarParams=new p({editor:t.editor,disabledMap:["newFile","folder","save","refresh","orderUp","orderDown","alignExpand","trash","link","paint","border","shadow","fontExpand","lineExpand","image","noimage","autoLayout","autoLine"]}),t.editor.toolbar=e.toolbarParams,e.$state.params.id&&n.getView(e.$state.params.id).success(function(i){e.infoParams.update("view",i.data),e.LAYOUT.collapsedSidebar=!0,t.editor.action.openView(i.data),t.editor.action.monitor(),e.isShowTimeline=!0,u(function(){d()})})}),e.viewtreeParams=new i({queryView:!0,allowShowPubview:!0,allowShowSubscription:!0,selectNode:function(i){i.xml&&(e.infoParams.update("view",i),t.editor.action.openView(i),t.editor.monitor=null,t.editor.action.monitor(),e.timeLineParams&&e.timeLineParams.remove(),e.isShowTimeline=!0,u(function(){d()}))}}),e.$on(s.GRAPH_CANVAS_CLICK,function(t,i){i.editor.state.view?e.infoParams.showFlag&&e.infoParams.update("view",i.editor.state.view):e.infoParams.hide()}),e.$on(s.GRAPH_INFO_TOGGLE,function(){e.timeLineParams&&u(function(){e.timeLineParams.resize()})}),e.$on(s.SIDEBAR_CALLAPSED,function(){e.timeLineParams&&u(function(){e.timeLineParams.resize()})}),e.$on(s.VIEW_SUBSCRIPTION_BEFORE,function(){t.editor.action.subscription()}),e.$on(s.VIEW_UNSUBSCRIPTION_BEFORE,function(){t.editor.action.unsubscription()}),e.$on("$stateChangeStart",function(){e.timeLineParams&&(e.timeLineParams.remove(),t.editor.monitor.stop())})}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(e){"use strict";var t=e.stateUrl;e.app.config(["$stateProvider",function(e){e.state("home.monitor",{url:"monitor",templateUrl:t("/main/monitor/monitor.html"),controller:"MainMonitorCtrl",data:{title:"监控"}}).state("home.monitor.id",{url:"/:id",templateUrl:t("/main/monitor/monitor.html"),controller:"MainMonitorCtrl",data:{}})}])}(nameSpace.reg("graph")),function(e,t){e.app.controller("MainSearchCtrl",["$scope","$timeout",function(e,t){}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(e){"use strict";var t=e.stateUrl;e.app.config(["$stateProvider",function(e){e.state("home.search",{url:"search",templateUrl:t("/main/search/search.html"),controller:"MainSearchCtrl",data:{title:"搜索"}}).state("home.search.home",{url:"/home",templateUrl:t("/main/search/home/home.html"),controller:"MainSearchHomeCtrl",data:{title:"起始页"}}).state("home.search.result",{url:"/:keyword",templateUrl:t("/main/search/result/result.html"),controller:"MainSearchResultCtrl",data:{title:"结果页"}})}])}(nameSpace.reg("graph")),function(e){"use strict";e.app.controller("MainGroupCtrl",["$scope","$state","Unit","GroupService",function(e,t,i,n){e.groupItemArray=[],e.groupImgBox=[],e.setNum={},e.colorBox={},e.group={},e.group.content={},e.group.content.viewDescription="",e.group.content.d2setting={},e.group.content.d3setting={},e.group.content.d2setting.views=[],e.group.content.d3setting.rows=3,e.group.content.d3setting.cols=3,e.group.content.d3setting.layerMargin=200,e.group.content.d3setting.layerItemMargin=10,e.group.content.d2setting.toolbarSize=130,e.group.content.d2setting.outLineSize=90,e.group.content.d2setting.layout="top",e.group.content.d2setting.maxCount=4,e.group.content.d2setting.toolbarBgColor="#C0C0C0",e.group.content.d2setting.btnColor="#616161",e.index=null,e.col=null;var o;e.translate=function(e){return e+"px"},e.formatToPercentage=function(e){return e+"%"},e.formatToN=function(e){return e+"N"},e.hasImg=function(e){$(e.target).parents(".group-box-item").find(".group-box-item-operateBtn").css($(e.target).parents(".group-box-item").find("img").attr("id")?{display:"block"}:{display:"none"})},e.hasImgOut=function(e){$(e.target).parents(".group-box-item").find(".group-box-item-operateBtn").css({display:"none"})},e.setView=function(t,i){e.setD=t.isVertical?!0:!1,e.setD=!e.setD,e.setD?($(i.target).parents(".group-box-item").find("img").css({transform:"skew(0deg)",width:"90%",height:"90%"}),t.isVertical=!0):($(i.target).parents(".group-box-item").find("img").css({transform:"skew(45deg)",width:"60%",height:"40%"}),t.isVertical=!1)},e.setBgColor=function(t,i){setTimeout(function(){e.$apply(),$(i.target).parents(".group-box-item").find("img")&&$(i.target).parents(".group-box-item").find("img").attr("id")?(e.setConfig=!0,$(".group-box-item-box").each(function(){$(this).css("boxShadow","2px 2px 2px #eee")}),"group-box-item-box"===$(i.target).attr("class")?$(i.target).css("boxShadow","0 0 3px #047FF5"):$(i.target).parents(".group-box-item-box").css("boxShadow","0 0 3px #047FF5"),e.viewContent={viewTitle:t.viewTitle,viewText:t.viewText},e.$apply()):(e.setConfig=!1,$(".group-box-item-box").each(function(){$(this).css("boxShadow","2px 2px 2px #eee")}))},10),e.delViewBtn=function(){"group-box-item-box"===$(i.target).attr("class")?($(i.target).css("boxShadow","2px 2px 2px #eee"),e.del2dView(e.group.content.d3setting.layers[$(i.target).data("index")][$(i.target).data("col")]),e.group.content.d3setting.layers[$(i.target).data("index")][$(i.target).data("col")]=null):($(i.target).parents(".group-box-item-box").css("boxShadow","2px 2px 2px #eee"),e.del2dView(e.group.content.d3setting.layers[$(i.target).parents(".group-box-item-box").data("index")][$(i.target).parents(".group-box-item-box").data("col")]),e.group.content.d3setting.layers[$(i.target).parents(".group-box-item-box").data("index")][$(i.target).parents(".group-box-item-box").data("col")]=null),e.setConfig=!1},e.del2dView=function(t){for(o=0;o<e.group.content.d2setting.views.length;o++)if(e.group.content.d2setting.views[o]===t.viewid){e.group.content.d2setting.views.splice(o,1);break}},e.recoverColor=function(){e.colorBox.bgColor="#f5f5f5",t.floorBgColor=e.colorBox.bgColor},e.setBg=function(){$(i.target).hasClass("group-box-item-out")?$(i.target).css({backgroundColor:e.colorBox.bgColor}):$(i.target).parents(".group-box-item-out").css({
backgroundColor:e.colorBox.bgColor}),t.floorBgColor=e.colorBox.bgColor}},e.delView=function(t,i){for(o=0;o<e.group.content.d2setting.views.length;o++)if(e.group.content.d2setting.views[o]===t.viewid){e.group.content.d2setting.views.splice(o,1);break}e.group.content.d3setting.layers[$(i.target).parents(".group-box-item-box").data("index")][$(i.target).parents(".group-box-item-box").data("col")]=null},e.saveView=function(){if(e.group.views=angular.copy(e.group.content.d2setting.views),void 0===e.group.name||""===e.group.name||""===e.group.content.viewDescription)return void i.error("请填写名称或描述");var o=JSON.stringify(e.group),a={views:e.group.views,name:e.group.name,content:o};n.save(a).success(function(){i.success("保存成功"),t.go("home.group.list.private")})},e.goList=function(){t.go("home.group.list.private")},e.showSet=function(){e.setConfig=!1},e.expandView=function(){e.isExpand=!0;var t=$(".main-box-content-panel-container"),i=$(".main-box-content-heading");i.css("position","fixed").css("top",0).css("left",0).css("width","100%").css("z-index",11),t.css("position","fixed").css("background-color","white").css("margin-top",i.css("height")).css("z-index",10),e.isFull=!0,e.popoverPlacement="bottom"},e.compressView=function(){e.isExpand=!1;var t=$(".main-box-content-panel-container");t.css("position","absolute").css("z-index",1).css("margin-top",0).removeAttr("background-color");var i=$(".main-box-content-heading");i.css("position","relative").css("z-index",10).removeAttr("top"),i.removeAttr("left"),e.isFull=!1,e.popoverPlacement="top"},e.allowDrop=function(e){e.stopPropagation(),e.preventDefault()},e.drag=function(t){void 0!==$(t.target).parents(".group-box-item-box").data("index")&&(e.bgColor=e.group.content.d3setting.layers[$(t.target).parents(".group-box-item-box").data("index")][$(t.target).parents(".group-box-item-box").data("col")].floorBgColor,e.transform=e.group.content.d3setting.layers[$(t.target).parents(".group-box-item-box").data("index")][$(t.target).parents(".group-box-item-box").data("col")].isVertical,e.index=$(t.target).parents(".group-box-item-box").data("index"),e.col=$(t.target).parents(".group-box-item-box").data("col")),t.dataTransfer.setData("Text",t.target.id)},e.drop=function(t){var i,n=t.dataTransfer.getData("Text"),o=$("#"+n),a=o.parent().attr("id");if(void 0!==$(t.target).parents(".group-box-item-box").data("index")?(e.group.content.d3setting.layers[$(t.target).parents(".group-box-item-box").data("index")][$(t.target).parents(".group-box-item-box").data("col")]={},i=e.group.content.d3setting.layers[$(t.target).parents(".group-box-item-box").data("index")][$(t.target).parents(".group-box-item-box").data("col")]):(e.group.content.d3setting.layers[$(t.target).data("index")][$(t.target).data("col")]={},i=e.group.content.d3setting.layers[$(t.target).data("index")][$(t.target).data("col")]),a&&-1!==a.indexOf("group"))null!==e.index&&null!==e.col&&(e.group.content.d3setting.layers[e.index][e.col]=null),i.viewid=o.attr("title"),i.viewTitle=o.attr("data-content"),i.viewText=o.attr("data-text");else{var r=o.clone(!0);r.attr("title",o.attr("id")),e.group.content.d2setting.views.push(r.attr("title")),i.viewid=r.attr("title"),i.viewTitle=r.attr("data-title"),i.viewText=r.attr("data-text"),e.colorBox.bgColor=void 0,e.bgColor="#f5f5f5"}i.src=o.attr("src"),i.floorBgColor=e.bgColor?e.bgColor:"#f5f5f5",i.isVertical=void 0!==e.transform?e.transform:!1,e.groupImgBox=angular.copy(e.group.content.d3setting.layers),e.setBgColor(i,t),t.stopPropagation(),t.preventDefault()}}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(e){"use strict";var t=e.stateUrl;e.app.config(["$stateProvider",function(e){e.state("home.group",{url:"group",templateUrl:t("/main/group/group.html"),controller:"MainGroupCtrl",data:{title:"组合视图"}}).state("home.group.create",{url:"/create",templateUrl:t("/main/group/create/create.html"),controller:"MainGroupCreateCtrl",data:{title:"创建"}}).state("home.group.edit",{url:"/edit/:id",templateUrl:t("/main/group/create/create.html"),controller:"MainGroupEditCtrl",data:{title:"编辑"}}).state("home.group.edit.get2d",{url:"/2d/:id",views:{ViewContent:{controller:"GetEdit2DViewCtrl"}}}).state("home.group.edit.get3d",{url:"/3d/:id",views:{ViewContent3D:{controller:"GetEdit3DViewCtrl"}}}).state("home.group.list",{url:"/list",templateUrl:t("/main/group/list/list.html"),controller:"MainGroupListCtrl as listCtrl",data:{title:"列表"}}).state("home.group.list.private",{url:"/private",templateUrl:t("/main/group/list/private/private.html"),controller:"PrivateViewCtrl",data:{title:"私有"}}).state("home.group.list.private.get",{url:"/2d/:id",views:{ViewContent:{controller:"GetViewCtrl"}},data:{title:"2D"}}).state("home.group.list.private.get3d",{url:"/3d/:id",views:{ViewContent3D:{controller:"Get3DViewCtrl"}},data:{title:"3D"}}).state("home.group.list.public",{url:"/public",templateUrl:t("/main/group/list/public/list/public.list.html"),controller:"PublicListViewCtrl",data:{title:"公有"}}).state("home.group.list.user",{url:"/public/user/:userName",templateUrl:t("/main/group/list/public/user/public.user.html"),controller:"PublicUserViewCtrl"}).state("home.group.list.user.get",{url:"/2d/:id",views:{ViewContent:{controller:"GetViewCtrl"}},data:{title:"2D"}}).state("home.group.list.user.get3d",{url:"/3d/:id",views:{ViewContent3D:{controller:"Get3DViewCtrl"}},data:{title:"3D"}})}])}(nameSpace.reg("graph")),function(e){"use strict";var t=e.stateUrl;e.app.config(["$stateProvider",function(e){e.state("home.view",{url:"view",templateUrl:t("/main/view/view.html"),controller:"MainViewCtrl",data:{title:"视图"}}).state("home.view.id",{url:"/:id",templateUrl:t("/main/view/view.html"),controller:"MainViewCtrl",data:{title:"打开单个视图"}})}])}(nameSpace.reg("graph")),function(e,t){"use strict";e.app.controller("MainViewCtrl",["$scope","GraphViewtree","ViewService","Editor","GraphContextMenu","GraphToolbar","GraphInfo","Event","Unit","Const","ContextLibs","UserInfo","$timeout","Keymap","GraphTable",function(e,i,n,o,a,r,s,l,c,u,p,h,d,g,f){e.graphId="graph-view",e.$on("$viewContentLoaded",function(){t.editor=new o(document.querySelector("#graph-view")),e.graphTableParams=new f(t.editor),t.editor.keymap=new g(t.editor),new a(t.editor,{vertex:[u.MENU_CELL_COPY,u.MENU_CELL_CUT,u.MENU_CELL_DELETE,"-",u.MENU_STYLE,[u.MENU_FONT_STYLE,u.MENU_STROKE_WIDTH,u.MENU_OPACITY],"-",u.MENU_EXPAND_NODE,u.MENU_OPEN_URL,u.MENU_VIEW_RELATION,[u.MENU_VIEW_RELATION_SET,u.MENU_VIEW_RELATION_OPEN]],edge:[u.MENU_CELL_COPY,u.MENU_CELL_CUT,u.MENU_CELL_DELETE,"-",u.MENU_STYLE,[u.MENU_FONT_STYLE,u.MENU_STROKE_WIDTH,u.MENU_OPACITY]],canvas:[u.MENU_VIEW_NEW,u.MENU_VIEW_OPEN,u.MENU_VIEW_SAVE,u.MENU_VIEW_UPDATE,"-",u.MENU_EXPORT,[u.MENU_EXPORT_PNG,u.MENU_EXPORT_PDF,u.MENU_EXPORT_SVG,u.MENU_EXPORT_XML],"-",u.MENU_GRAPH_CLEAR,u.MENU_CELL_PASTE,"-",u.MENU_LAYOUT,[u.MENU_LAYOUT_HORIZONTAL,u.MENU_LAYOUT_VERTICAL,u.MENU_LAYOUT_ORGANIC,u.MENU_LAYOUT_CIRCLE,u.MENU_LAYOUT_STACK_HORIZONTAL,u.MENU_LAYOUT_STACK_VERTICAL],"-",u.MENU_ZOOM,[u.MENU_ZOOM_IN,u.MENU_ZOOM_OUT,u.MENU_ZOOM_CENTER,u.MENU_ZOOM_ACTUAL],"-",u.MENU_VIEW_RELATION_BACK],libs:p}),e.toolbarParams=new r({editor:t.editor}),e.infoParams=new s(t.editor),e.$state.params.id&&n.getView(e.$state.params.id).success(function(i){t.editor.action.openView(i.data),e.infoParams.show(),e.infoParams.update("view",i.data)})}),e.viewtreeParams=new i({queryView:!0,showForm:!0,allowEdit:!0,allowShowPubview:!0,allowShowSubscription:!0,selectNode:function(i){i.xml&&(e.infoParams.update("view",i),t.editor.action.openView(i))}}),e.$on(l.GRAPH_CANVAS_CLICK,function(t,i){i.editor.state.view?e.infoParams.showFlag&&e.infoParams.update("view",i.editor.state.view):e.infoParams.hide()}),e.$on(l.VIEW_DELETE_BEFORE,function(i,o){c.confirm("删除后无法恢复，请确认是否要继续？",function(){n.remove(o.id).success(function(){t.editor.action.clear(),e.$broadcast(l.VIEW_DELETE_AFTER,c.eventData(o)),e.infoParams.hide()})})}),e.$on(l.VIEW_UPDATE_BEFORE,function(){t.editor.action.update()}),e.$on(l.VIEW_PUBLIC_BEFORE,function(){t.editor.action.publicView()}),e.$on(l.VIEW_UNPUBLIC_BEFORE,function(){t.editor.action.unpublicView()}),e.$on(l.VIEW_SUBSCRIPTION_BEFORE,function(){t.editor.action.subscription()}),e.$on(l.VIEW_UNSUBSCRIPTION_BEFORE,function(){t.editor.action.unsubscription()})}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(e){"use strict";var t=e.stateUrl;e.app.config(["$stateProvider",function(e){e.state("home.user",{url:"user",templateUrl:t("/main/user/user.html"),controller:"MainUserCtrl",data:{title:"用户中心"}}).state("home.user.overview",{url:"/overview",templateUrl:t("/main/user/overview/overview.html"),controller:"UserOverviewCtrl",data:{title:"概况"}}).state("home.user.subscription",{url:"/myViews",templateUrl:t("/main/user/myViews/myViews.html"),controller:"UserViewsCtrl",data:{title:"我的视图"}}).state("home.user.headImage",{url:"/headImage",templateUrl:t("/main/user/headImage/headImage.html"),controller:"UserHeadImageCtrl",data:{title:"头像"}}).state("home.user.monitor",{url:"/monitor",templateUrl:t("/main/user/monitor/monitor.html"),controller:"UserMonitorCtrl",data:{title:"监控"}}).state("home.user.deletedView",{url:"/deletedView",templateUrl:t("/main/user/deletedView/deletedView.html"),controller:"UserDeletedViewCtrl",data:{title:"监控"}}).state("home.user.ci",{url:"/ci",templateUrl:t("/main/user/ci/ci.html"),controller:"UserCiCtrl",data:{title:"我的CI"}}).state("home.user.kpi",{url:"/kpi",templateUrl:t("/main/user/kpi/kpi.html"),controller:"UserKpiCtrl",data:{title:"我的KPI"}})}])}(nameSpace.reg("graph")),function(e){"use strict";e.app.controller("MainUserCtrl",["$scope","Event","Unit","UserInfo",function(e,t,i,n){e["static"]=i["static"],e.userInfo={icon:"",iconLastUpdate:(new Date).getTime()};var o=n.get();o&&(e.userInfo=o),e.$on(t.USERINFO_UPDATE,function(t,i){e.userInfo=i}),e.getNow=function(){return"?"+String((new Date).getTime())}}])}(nameSpace.reg("graph")),function(e,t){e.app.controller("MainSearchHomeCtrl",["$scope",function(e){e.keyword="",e.search=function(){e.keyword&&e.$state.go("home.search.result",{keyword:e.keyword})}}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(e,t){"use strict";e.app.controller("MainSearchResultCtrl",["$scope","SearchService","ngTableParams","Unit","Outline","$timeout","Editor","UserInfo","ViewService","$state",function(e,t,i,n,o,a,r,s,l,c){var u=s.get();u&&(e.userInfo=u),e.$on(Event.USERINFO_UPDATE,function(t,i){e.userInfo=i}),e.keyword=e.$state.params.keyword,e.views=[],e.cis=[],e.isFull=!1;var p=new r($(".result-full-view-div")[0]);p.action.disabled(),e.tableParams=new i({page:1,count:10},{total:0,counts:[],data:[]}),e.staticUrl=function(e){return n["static"](e)},t.fuzzy(e.keyword).success(function(t){e.views=t.data.view,e.tableParams.page(1),e.tableParams.settings({data:t.data.ci,total:t.data.ci.length}),e.tableParams.reload()}),e.showCiViews=function(e){e.isInitChart||(a(function(){$("#"+e.config.id).height(.4*$("#"+e.config.id).width()),new o(e.ciViews,$("#"+e.config.id)[0],{layout:"left",maxCount:4,outLineSize:90,toolbarSize:130})}),e.isInitChart=!0)},e.showFullView=function(t){e.isSelfView=!1,e.view=t;var i=e.userInfo.loginName;e.isSubscribe=t.isSubscription,t.userName===i&&(e.isSelfView=!0),a(function(){p.action.openXml(t.xml),p.action.zoomCenter()}),e.view=t,e.isFull=!0},e.goBackToResultCi=function(){e.isFull=!1},e.cancelSubscription=function(){l.unsubscription(e.view.id).success(function(t){e.isSubscribe=!1,e.view.isSubscription=!1})},e.subscription=function(){l.subscription(e.view.id).success(function(t){e.isSubscribe=!0,e.view.isSubscription=!0})},e.deleteView=function(){n.confirm("确认删除视图？",function(){l.remove(e.view.id).success(function(){e.isFull=!1;var t=e.views.indexOf(e.view);t>-1&&e.views.splice(t,1)})})},e.goMonitor=function(){c.go("home.monitor.id",{id:e.view.id})}}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(e){"use strict";e.app.controller("MainGroupCreateCtrl",["$scope","ViewService","Unit",function(e,t,i){var n,o;e["static"]=i["static"],e.views=[],e.filter="",e.isPublic=!1,e.row=3,e.col=3,e.basicSet={},e.twoDSet={},e.threeDSet={},e.$parent.setConfig=!1,e.$parent.groupItemArray=[],e.$parent.groupImgBox=[],e.$parent.setNum={},e.$parent.colorBox={},e.$parent.group={},e.$parent.group.content={},e.$parent.group.content.viewDescription="",e.$parent.group.content.d2setting={},e.$parent.group.content.d3setting={},e.$parent.group.content.d2setting.views=[],e.$parent.group.content.d3setting.rows=3,e.$parent.group.content.d3setting.cols=3,e.$parent.group.content.d3setting.layerMargin=200,e.$parent.group.content.d3setting.layerItemMargin=10,e.$parent.group.content.d2setting.toolbarSize=130,e.$parent.group.content.d2setting.outLineSize=90,e.$parent.group.content.d2setting.layout="top",e.$parent.group.content.d2setting.maxCount=4,e.$parent.group.content.d2setting.toolbarBgColor="#C0C0C0",e.$parent.group.content.d2setting.btnColor="#616161",e.$watchGroup(["group.content.d3setting.rows","group.content.d3setting.cols"],function(t){for(e.$parent.group.content.d3setting.layers=[],e.$parent.group.content.d2setting.views=[],n=0;n<t[0];n++){var i=[];for(o=0;o<t[1];o++)void 0===e.$parent.groupImgBox[n]?i[o]=null:0!==e.$parent.groupImgBox.length&&void 0!==e.$parent.groupImgBox[n][o]&&null!==e.$parent.groupImgBox[n][o]?(i[o]=e.$parent.groupImgBox[n][o],e.$parent.group.content.d2setting.views.push(i[o].viewid)):i[o]=null;e.$parent.group.content.d3setting.layers.push(i)}e.width=100/t[1]+"%",e.height=$(".main-box-content-panel-container-body").width()*Number(100/t[1])/100*1/2}),t["private"]().success(function(t){e.views=t.data}),e.showPrivate=function(){t["private"]().success(function(t){e.views=t.data})},e.showPublic=function(){var i=$(".isAdminDiv").html().toLowerCase();t.getUserView(i).success(function(t){e.views=t.data})},e.refresh=function(){t["private"]().success(function(t){e.views=t.data})}}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(e){"use strict";e.app.controller("MainGroupEditCtrl",["$scope","$state","ViewService","GroupService","Unit",function(e,t,i,n,o){var a,r,s=t.params.id;s&&(e.editToolShow=!0),e["static"]=o["static"],e.views=[],e.filter="",e.row=3,e.col=3,i["private"]().success(function(t){e.views=t.data}),n.get(s).success(function(t){var i=$.parseJSON(t.data.content);e.$parent.group=i,e.$parent.groupImgBox=angular.copy(e.$parent.group.content.d3setting.layers),e.$watchGroup(["group.content.d3setting.rows","group.content.d3setting.cols"],function(t){for(e.$parent.group.content.d3setting.layers=[],e.$parent.group.content.d2setting.views=[],a=0;a<t[0];a++){var i=[];for(r=0;r<t[1];r++)void 0===e.$parent.groupImgBox[a]?i[r]=null:void 0!==e.$parent.groupImgBox[a][r]&&null!==e.$parent.groupImgBox[a][r]?(i[r]=e.$parent.groupImgBox[a][r],e.$parent.group.content.d2setting.views.push(i[r].viewid)):i[r]=null;e.$parent.group.content.d3setting.layers.push(i)}e.width=100/t[1]+"%",e.height=$(".main-box-content-panel-container-body").width()*Number(100/t[1])/100*1/2})}),e.updateView=function(){if(e.$parent.group.views=angular.copy(e.$parent.group.content.d2setting.views),void 0===e.$parent.group.name||""===e.$parent.group.name||""===e.$parent.group.content.viewDescription)return void o.error("请填写名称或描述");var i=JSON.stringify(e.$parent.group),a={views:e.$parent.group.views,id:t.params.id,name:e.$parent.group.name,content:i};n.update(a).success(function(){o.success("更新成功"),t.go("home.group.list.private")})},e.saveAsView=function(){o.prompt("请输入视图名称",function(i){if(e.$parent.group.name=i,e.$parent.group.views=angular.copy(e.$parent.group.content.d2setting.views),void 0===e.$parent.group.name||""===e.$parent.group.name||""===e.$parent.group.content.viewDescription)return void o.error("请填写名称或描述");var a=JSON.stringify(e.$parent.group),r={views:e.$parent.group.views,name:e.$parent.group.name,content:a};n.save(r).success(function(e){o.success("保存成功"),t.go("home.group.edit",{id:e.data.id})})},"视图名称")},e.delGroupView=function(){n["delete"](s).success(function(){o.confirm("确定删除吗？",function(){t.go("home.group.list.private")})})},e.show3DView=function(){e.is2D=!1,e.showView=!0,t.go("home.group.edit.get3d",{id:s})},e.show2DView=function(){e.is2D=!0,e.showView=!0,$(".popover").remove(),t.go("home.group.edit.get2d",{id:s})},e.backEdit=function(){e.showView=!1}}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(e){"use strict";e.app.controller("MainGroupListCtrl",["$scope","$state","GroupService","ViewService","Unit",function(e,t,i,n,o){e.isExpand=!1,e.isFull=!1,e.popoverPlacement="top",e.$watch("filter",function(){""===e.filter&&e.isPublic&&(e.publicViewsShow=e.publicViews.slice(0,e.pageSize),e.currentPage=1)},!1),e.switchView=function(){e.hideOperation=!0,t.go(e.isPublic?"home.group.list.public":"home.group.list.private")},e.createView=function(){t.go("home.group.create")},e.showPopover=function(e){var t=e.currentTarget;t.className.indexOf("group-public-view-list-div")>-1?$(t).children(".group-public-view-list-user")[0].scrollWidth>$(t).children(".group-public-view-list-user")[0].offsetWidth&&$(t).popover("show"):$(t)[0].scrollWidth>$(t)[0].offsetWidth&&$(t).popover("show")},e.hidePopover=function(e){$(e.currentTarget).popover("hide")},e.expandView=function(){e.isExpand=!0;var t=$(".main-box-content-panel-container"),i=$(".main-box-content-heading");i.css("position","fixed").css("top",0).css("left",0).css("width","100%").css("z-index",11),t.css("position","fixed").css("background-color","white").css("margin-top",i.css("height")).css("z-index",10),e.outline.resize(),e.isFull=!0,e.popoverPlacement="bottom"},e.compressView=function(){e.isExpand=!1;var t=$(".main-box-content-panel-container");t.css("position","absolute").css("z-index",1).css("margin-top",0).removeAttr("background-color");var i=$(".main-box-content-heading");i.css("position","relative").css("z-index",10).removeAttr("top"),i.removeAttr("left"),e.outline.resize(),e.isFull=!1,e.popoverPlacement="top"}}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(e){"use strict";e.app.controller("UserCiCtrl",["$scope","CiCateService","CiService","Unit","NgTableParams",function(e,t,i,n,o){e.staticUrl=function(e){return n["static"](e)};var a={};t.get().success(function(t){var i=t.data;e.dataForTheTree=[];for(var n=0;n<i.length;n++)a[i[n].id]=i[n];for(var n=0;n<i.length;n++)null!==i[n].parent?(a[i[n].parent].children=void 0===a[i[n].parent].children?[]:a[i[n].parent].children,a[i[n].parent].children.push(a[i[n].id])):e.dataForTheTree.push(a[i[n].id])}),e.items={},e.showSelected=function(t){e.like=null,"--选择查询字段--"!==e.searchField&&void 0!==e.ciFilter&&(e.like={},e.like[e.searchField]=e.ciFilter);var n=t.allattributes;e.titles=[],e.allField=[];for(var a=0;a<n.length;a++){var r=n[a];if(e.allField.push(r.name),r.level&&!r.hide){e.titles.push(r.name);var s=n.indexOf(r);s>-1&&n.splice(s,1)}}if(e.titles.length<5)for(var a=0;a<n.length;a++){var r=n[a];if(!r.level&&!r.hide&&(e.titles.push(r.name),e.titles.length>=5))break}e.node=t,void 0===e.tableParams?e.tableParams=new o({page:1,count:10},{total:0,counts:[],getData:function(t,n){i.getMyCi({categoryId:e.node.id,all:e.containSub,like:e.like,page:n.page(),pageSize:n.count()}).success(function(i){n.total(i.data.count),e.datas=i.data.datas;for(var o=[],a=0;a<e.datas.length;a++){for(var r=e.datas[a],s=[],l=0;l<e.titles.length;l++){var c=e.titles[l];s.push(r.data[c]),e.items[r.id]=s}o.push(s)}t.resolve(o)})}}):e.tableParams.reload()},e.showMoreCIInfo=function(t){t.moreField=[];var i=[];console.log(e.items);for(var n in e.items)if(e.items[n]===t)for(var o=0;o<e.datas.length;o++){var a=e.datas[o];a.id===n&&(i=a.data)}var n=0,r=[];for(var s in i){n++;var l={};l[s]=i[s],r.push(l),n%3===0&&(t.moreField.push(r),r=[])}0!==r.length&&t.moreField.push(r),console.log(t.moreField)}}])}(nameSpace.reg("graph")),function(e){"use strict";e.app.controller("UserDeletedViewCtrl",["$scope","ViewService","Editor","Unit","$timeout",function(e,t,i,n,o){e.isFull=!1,e.deletedViews=[];var a=new i($(".result-full-view-div")[0]);a.action.disabled(),e.staticUrl=function(e){return n["static"](e)},t.getDeletedView({page:1,pageSize:1e4}).success(function(t){for(var i=t.data.datas,n=0;n<i.length;n++)e.deletedViews.push(i[n])}),e.showFullView=function(t,i){e.isFull=!0,o(function(){a.action.openXml(t.xml),a.action.zoomCenter()}),e.view=t},e.goBackToView=function(){e.isFull=!1},e.deleteView=function(){t.remove(e.view.id).success(function(){var t=e.deletedViews.indexOf(e.view);t>-1&&e.deletedViews.splice(t,1),e.goBackToView()})},e.getRestoreView=function(){t.getRestoreView(e.view.id,{categoryId:e.categoryId,name:e.name}).success(function(){var t=e.deletedViews.indexOf(e.view);t>-1&&e.deletedViews.splice(t,1),e.goBackToView()})}}])}(nameSpace.reg("graph")),function(e){"use strict";e.app.controller("UserHeadImageCtrl",["$scope","UserInfo","Event","Unit","Upload","$timeout",function(e,t,i,n,o,a){e["static"]=n["static"],e.picChange=!1,e.isUpload=!1,e.handle=function(){e.imgSrc=e["static"](e.userInfo.icon)+"?"+(new Date).getTime()},e.$on(i.USERINFO_UPDATE,function(t,i){e.userInfo=i,e.handle()}),e.userInfo=t.get(),e.userInfo&&e.handle(),e.upload=function(t){if(t.length>=1){e.picChange=!0,e.file=t[0];var i=new FileReader;i.readAsDataURL(t[0]),i.onload=function(){e.imgSrc=this.result,e._refresh()}}},e.confirmUpload=function(){e.isUpload=!0,self.progressPromise&&a.cancel(self.progressPromise),o.upload({url:n.api("/usericon"),file:e.file}).progress(function(e){}).success(function(i){e.picChange=!1,e.isUpload=!1,t.set(i.data),e._refresh()}).error(function(){e.picChange=!1,e.isUpload=!1})},e.hideProgressbar=function(){self.progressPromise=a(function(){e.showProgressbar=!1},3e3)}}])}(nameSpace.reg("graph")),function(e){"use strict";e.app.controller("UserKpiCtrl",["$scope","Unit","KpiCateService","NgTableParams",function(e,t,i,n){e.staticUrl=function(e){return t["static"](e)};var o={};i.get().success(function(t){var i=t.data;e.dataForTheTree=[];for(var n=0;n<i.length;n++)o[i[n].id]=i[n];for(var n=0;n<i.length;n++)""!==i[n].parent?(o[i[n].parent].children=void 0===o[i[n].parent].children?[]:o[i[n].parent].children,o[i[n].parent].children.push(o[i[n].id])):e.dataForTheTree.push(o[i[n].id])}),e.treeOptions={nodeChildren:"children",dirSelectable:!0,injectClasses:{ul:"a1",li:"a2"}},e.showSelected=function(t){e.node=t,void 0===e.tableParams?e.tableParams=new n({page:1,count:10},{total:0,counts:[],getData:function(t,n){i.getKpi({page:n.page(),pageSize:n.count(),kpiCategoryId:e.node.id}).success(function(e){n.total(e.data.count),console.log(e),t.resolve(e.data.datas)})}}):e.tableParams.reload()},e.filterMethod=function(t){return(t.unit+"").toLowerCase().indexOf(e.filter.toLowerCase())>=0||(t.owner+"").toLowerCase().indexOf(e.filter.toLowerCase())>=0||(t.name+"").toLowerCase().indexOf(e.filter.toLowerCase())>=0?t:void 0}}])}(nameSpace.reg("graph")),function(e){"use strict";e.app.controller("UserMonitorCtrl",["$scope","CiCateService","CiService","CiMonitorService","KpiCateService","NgTableParams","$http","Unit","$q","$timeout",function(e,t,i,n,o,a,r,s,l,c){e.getNow=function(){return s.unixToDatetime((new Date).getTime())},t.get().success(function(t){var i=t.data,n=function(e){return function(t,i){var n,o;n=[],o=new RegExp(t,"i"),$.each(e,function(e,t){o.test(t.name)&&n.push(t.name)}),i(n)}};$("#user-monitor-cicate .typeahead").typeahead({hint:!1,highlight:!0},{limit:100,source:n(i)}),e.ciCates=t.data,e.ciCateMap={};for(var o in i)e.ciCateMap[i[o].name]=i[o].id}),$("#user-monitor-cicate .typeahead").bind("typeahead:select",function(t,n){void 0===n&&(n=e.inputCiCate),$("#user-monitor-ci .typeahead").attr("readonly",!1),i.getMyCi({categoryId:e.ciCateMap[n],all:!0,like:{"*":"*"},page:1,pageSize:100}).success(function(e){var t=e.data.datas,i=function(e){return function(t,i){var n,o;n=[],o=new RegExp(t,"i"),$.each(e,function(e,t){o.test(t.client)&&n.push(t.client)}),i(n)}};$("#user-monitor-ci .typeahead").typeahead({hint:!1,highlight:!0},{limit:100,source:i(t)})})});var u=[];$("#user-monitor-ci .typeahead").bind("typeahead:render",function(t,n){void 0===n&&(n=e.inputCi),c(function(){if(0!==u.length)for(var t in u){u[t].cancel();var o=u.indexOf(u[t]);o>-1&&u.splice(o,1)}var a=i.getMyCi({categoryId:e.inputCiCate,all:!0,like:{client:"*"+n+"*"},page:1,pageSize:100});a.cancel(),u.push(a),a.success(function(e){var t=e.data.datas,i=function(e){return function(t,i){var n,o;n=[],o=new RegExp(t,"i"),$.each(e,function(e,t){o.test(t.client)&&n.push(t.client)}),i(n)}};$("#user-monitor-ci .typeahead").typeahead({hint:!1,highlight:!0},{limit:100,source:i(t)})})},200)}),o.get().success(function(t){var i=t.data,n=function(e){return function(t,i){var n,o;n=[],o=new RegExp(t,"i"),$.each(e,function(e,t){o.test(t.name)&&n.push(t.name)}),i(n)}};$("#user-monitor-kpicate .typeahead").typeahead({hint:!1,highlight:!0},{limit:10,source:n(i)}),e.kpiCateMap={};for(var o in i)e.kpiCateMap[i[o].name]=i[o].id}),$("#user-monitor-kpicate .typeahead").bind("typeahead:select",function(t,i){void 0===i&&(i=e.inputKpiCate),$("#user-monitor-kpi .typeahead").attr("readonly",!1),o.getKpi({page:1,pageSize:100,kpiCategoryId:e.kpiCateMap[i]}).success(function(e){var t=e.data.datas,i=function(e){return function(t,i){var n,o;n=[],o=new RegExp(t,"i"),$.each(e,function(e,t){o.test(t.name)&&n.push(t.name)}),i(n)}};$("#user-monitor-kpi .typeahead").typeahead({hint:!1,highlight:!0},{limit:10,source:i(t)})})}),$("#user-monitor-kpi .typeahead").bind("typeahead:render",function(t,i){void 0===i&&(i=e.inputpi),c(function(){if(0!==u.length)for(var t in u){u[t].cancel();var i=u.indexOf(u[t]);i>-1&&u.splice(i,1)}var n=o.getKpi({page:1,pageSize:100,kpiCategoryId:e.kpiCate});n.cancel(),u.push(n),n.success(function(e){var t=e.data.datas,i=function(e){return function(t,i){var n,o;n=[],o=new RegExp(t,"i"),$.each(e,function(e,t){o.test(t.name)&&n.push(t.name)}),i(n)}};$("#user-monitor-kpi .typeahead").typeahead({hint:!1,highlight:!0},{limit:100,source:i(t)})})},200)}),e.showMonitor=function(){e.titles=["CI分类","CI名称","KPI分类","KPI名称","实例","值","采集时间","性能曲线"],void 0===e.tableParams1?e.tableParams1=new a({page:1,count:10},{total:0,counts:[],getData:function(t,i){n.getPerformanceAll({start:i.page(),limit:i.count(),startTime:$("#user-monitor-st").val(),endTime:$("#user-monitor-et").val(),kpiCate:e.inputKpiCate,kpi:e.inputKpi,ciCate:e.inputCiCate,ci:e.inputCi}).success(function(e){i.total(e.totalCount);var n=[];for(var o in e.datas){var a=e.datas[o],r=[];r.push(a.ciCate),r.push(a.ciName),r.push(a.kpiCate),r.push(a.kpiName),r.push(a.instance),r.push(a.value),r.push(a.startTime),n.push(r)}t.resolve(n)})}}):e.tableParams1.reload()},e.showMonitor();var p=function(e){var t=0;for(var i in e)t++;return t};e.clearEventSearch=function(){$("#user-monitor-eventst").val(""),$("#user-monitor-eventet").val(""),e.eventInput=""},e.isAll=!0,e.whichSeverity={},e.showEvent=function(t){e.severityColl=[],e.flag=!1,e.severityId!==t&&(e.flag=!0),e.severityId=void 0===t?"":t+"",void 0===e.tableParams2?e.tableParams2=new a({page:1,count:10},{total:0,counts:[],getData:function(t,i){e.flag&&(i.page(1),e.flag=!1),n.getMyEvent({id:"",input:e.eventInput,severity:e.severityId,status:"",startTime:$("#user-monitor-eventst").val(),isHistory:!1,order:{},page:i.page(),pageSize:i.count(),endTime:$("#user-monitor-eventet").val()}).success(function(n){e.allCountEvent=n.data.allCount,e.severityCount=n.data.severityCount;for(var o in e.severityCount)e.whichSeverity[e.severityCount[o].id]=!1;var a=[],r=n.data.data;e.eventTitles=n.data.title;for(var o in r){-1===e.severityColl.indexOf(r[o].severity)&&e.severityColl.push(r[o].severity);var s=[],l=r[o].data;for(var c in e.eventTitles)s.push(l[e.eventTitles[c].name]);a.push(s)}if(console.log(r),1===p(e.severityColl)){e.whichSeverity[e.severityColl[0]]=!0,e.isAll=!1;for(var o in e.severityCount){var u=e.severityCount[o];e.severityColl[0]===u.id&&i.total(u.count)}}else i.total(n.data.allCount);t.resolve(a)})}}):e.tableParams2.reload()},e.showEvent(),e.clearInput=function(e){console.log(e.currentTarget)}}])}(nameSpace.reg("graph")),function(e){"use strict";e.app.controller("UserViewsCtrl",["$scope","UserService","Unit","Editor","ViewService","$state","$timeout",function(e,t,i,n,o,a,r){e.views=[],e.privateViews=[],e.publicViews=[],e.isFull=!1,e.isFull1=!1,e.isFull2=!1,e.isFull3=!1,e.showMySubscribe=!0,e.showMyPublic=!0,e.showMyPrivate=!0;var s=new n($(".result-full-view-div")[0]);s.action.disabled(),e.staticUrl=function(e){return i["static"](e)},t.profile().success(function(t){for(var i=t.data.subscriptionLastUpdate,n=t.data.privateLastUpdate,o=t.data.publicLastUpdate,a=t.data.views,r=0;r<i.length;r++){var s=a[i[r]];void 0!==s&&e.views.push(s)}for(var r=0;r<n.length;r++){var s=a[n[r]];void 0!==s&&e.privateViews.push(s)}for(var r=0;r<o.length;r++){var s=a[o[r]];void 0!==s&&e.publicViews.push(s)}}),e.showFullView=function(t,i){switch(e.isFull1=!1,e.isFull2=!1,e.isFull3=!1,e.isFull=!0,e.isSubscribe=!0,i){case 1:e.isFull1=!0;break;case 2:e.isFull2=!0;break;case 3:e.isFull3=!0}r(function(){s.action.openXml(t.xml),s.action.zoomCenter()}),e.view=t},e.goBackToView=function(t){if(e.isFull=!1,e.isFull1=!1,e.isFull2=!1,e.isFull3=!1,1===t&&!e.isSubscribe){var i=e.views.indexOf(e.view);i>-1&&e.views.splice(i,1)}},e.cancelSubscription=function(){o.unsubscription(e.view.id).success(function(t){e.isSubscribe=!1})},e.subscription=function(){o.subscription(e.view.id).success(function(t){e.isSubscribe=!0})},e.goMonitor=function(){a.go("home.monitor.id",{id:e.view.id})},e.deleteView=function(){i.confirm("确认删除视图？",function(){o.remove(e.view.id).success(function(){var t=e.views.indexOf(e.view);t>-1&&e.views.splice(t,1);var i=e.privateViews.indexOf(e.view);i>-1&&e.privateViews.splice(i,1);var n=e.publicViews.indexOf(e.view);n>-1&&e.publicViews.splice(n,1),e.goBackToView()})})}}])}(nameSpace.reg("graph")),function(e){"use strict";e.app.controller("UserOverviewCtrl",["$scope","UserService","UserInfo","Event",function(e,t,i,n){t.profile().success(function(t){e.data=t.data}),e.userInfo=i.get(),e.$on(n.USERINFO_UPDATE,function(t,i){e.userInfo=i,console.log(i)})}])}(nameSpace.reg("graph")),function(e){"use strict";e.app.controller("UserPublicViewCtrl",["$scope","UserService","Editor","Unit","$state",function(e,t,i,n,o){e.views=[],e.isFull=!1;var a=new i($(".result-full-view-div")[0]);a.action.disabled(),e.staticUrl=function(e){return n["static"](e)},t.profile().success(function(t){for(var i=t.data.lastUpdate,n=t.data.views,o=0;o<i.length;o++){var a=n[i[o]];void 0!==a&&a.open&&e.views.push(a)}}),e.showFullView=function(t){a.action.openXml(t.xml),e.view=t,e.isFull=!0,e.isSubscribe=!0},e.goBackToResultCi=function(){if(e.isFull=!1,!e.isSubscribe){var t=e.views.indexOf(e.view);t>-1&&e.views.splice(t,1)}},e.goMonitor=function(){o.go("home.monitor.id",{id:e.view.id})},e.goEdit=function(){o.go("home.edit.view",{id:e.view.id})}}])}(nameSpace.reg("graph")),function(e){"use strict";e.app.controller("GetEdit3DViewCtrl",["$scope","$state","GroupService","ViewService","Unit","Universe","$timeout","CiRelationService","Const",function(e,t,i,n,o,a,r,s,l){var c,u=t.params.id,p=[],h={};e.$parent.is2D=!1,e.$parent.showView=!0;var d=function(e){$.each(e,function(){if(o.isCiCell(this)){var e=o.getCiIdByCell(this);h[e]||p.push(e)}})};i.get(u).success(function(t){var i=t.data;e.$parent.view=i,e.$parent.showOption=!0;var o=[],u=i.content;"string"==typeof i.content&&(u=JSON.parse(i.content));for(var h=0;h<u.views.length;h++)o.push(u.views[h]);n.getByIds({viewIds:o}).success(function(e){var t=u.content.d3setting.layers,i={};$.each(e.data,function(){this.json=JSON.parse(this.svg),i[this.id]=this}),u.content.d3setting.layerCount=u.content.d3setting.rows,u.content.d3setting.layerItemCount=u.content.d3setting.cols;for(var n=0;n<t.length;n++)for(var o=0;o<t[n].length;o++){var h=t[n][o];if(h&&i[h.viewid]){var g=i[h.viewid];h.name=g.name,h.viewid=g.id,h.graphHeight=g.json.graphHeight,h.graphWidth=g.json.graphWidth,h.containers=g.json.containers,
h.edges=g.json.edges,h.nodes=g.json.nodes,d(g.json.nodes),t[n][o]=h}}u.content.d3setting.$container=$("#show3DView"),s.get({cis:p}).success(function(e){var t=[];e.data&&($.each(e.data,function(){t.push({source:l.CI_PREFIX+this.startCi,target:l.CI_PREFIX+this.endCi})}),u.content.d3setting.relation=t),$("#show3DView>canvas").remove(),c=new a(u.content.d3setting),t.length&&r(function(){c.showLayerLine()},3e3)})})}),e.$watch("isExpand",function(){c&&c.resize()})}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(e){"use strict";e.app.controller("GetEdit2DViewCtrl",["$scope","$state","GroupService","ViewService","Unit","Outline",function(e,t,i,n,o,a){var r=t.params.id;e.$parent.is2D=!0,e.$parent.showView=!0,i.get(r).success(function(t){var i=t.data;e.$parent.view=i,e.$parent.showOption=!0,e.$parent.isOption=!0;var o=[],r=i.content;"string"==typeof i.content&&(r=JSON.parse(i.content));for(var s=0;s<r.views.length;s++)o.push(r.views[s]);n.getByIds({viewIds:o}).success(function(t){for(var i=[],n=0;n<o.length;n++)for(var s=0;s<t.data.length;s++)t.data[s].id===o[n]&&i.push(t.data[s]);$("#scroll").remove(),$("#main").remove(),e.$parent.$parent.outline=new a(i,$("#showView")[0],r.content.d2setting),$("#items > div").eq(0).find("div[data-id]").css("opacity",0),$("#scroll").css("backgroundColor","rgba(0,0,0,0.1)")})})}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(e){"use strict";e.app.controller("PrivateViewCtrl",["$rootScope","$scope","$state","GroupService","ViewService","Unit",function(e,t,i,n,o,a){t.isPublic=!1,t.showOption=!1,t.is2D=!0,t.opensArr={},n["private"]().success(function(e){for(var i=e.data,n=0;n<i.length;n++){var o=i[n],a=new Date(o.time);o.time=a.getUTCFullYear()+"/"+(a.getUTCMonth()+1)+"/"+a.getUTCDate(),t.opensArr[o.id]=o.open}t.views=i}),t.showView=function(e){t.is2D=!0,t.showOption=!0,t.view=e,t.isOpen=e.open,$(".popover").remove(),i.go("home.group.list.private.get",{id:e.id})},t.deleteView=function(){a.confirm("确认删除视图？",function(){n.deleteById(t.view.id).success(function(){t.showOption=!1,i.go("home.group.list.private");for(var e=0;e<t.views.length;e++){var n=t.views[e];if(n.id===t.view.id){t.views.splice(e,1);break}}}),$(".main-box-content-panel-container-body").html("")})},t.editView=function(){i.go("home.group.edit",{id:t.view.id})},t.show3DView=function(e){t.showOption=!0,t.view=e,t.is2D=!1,i.go("home.group.list.private.get3d",{id:e.id})},t.closeView=function(){n.closeView(t.view.id).success(function(){t.isOpen=!1,t.opensArr[t.view.id]=!1})},t.openView=function(){n.openView(t.view.id).success(function(){t.isOpen=!0,t.opensArr[t.view.id]=!0})}}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(e){"use strict";e.app.controller("GetViewCtrl",["$scope","$state","GroupService","ViewService","Unit","Outline",function(e,t,i,n,o,a){var r=t.params.id;e.$parent.is2D=!0,i.get(r).success(function(t){var i=t.data;e.$parent.view=i,e.$parent.isSubscribe=i.isSubscribe,e.$parent.showOption=!0,e.$parent.isOption=!0;var o=[],r=i.content;"string"==typeof i.content&&(r=JSON.parse(i.content));for(var s=0;s<r.views.length;s++)o.push(r.views[s]);n.getByIds({viewIds:o}).success(function(t){for(var i=[],n=0;n<o.length;n++)for(var s=0;s<t.data.length;s++)t.data[s].id===o[n]&&i.push(t.data[s]);$("#scroll").remove(),$("#main").remove(),e.$parent.$parent.outline=new a(i,$(".main-box-content-panel-container-body")[0],r.content.d2setting),$("#items > div").eq(0).find("div[data-id]").css("opacity",0),$("#scroll").css("backgroundColor","rgba(0,0,0,0.1)")})})}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(e){"use strict";e.app.controller("Get3DViewCtrl",["$scope","$state","GroupService","ViewService","Unit","Universe","$timeout","CiRelationService","Const",function(e,t,i,n,o,a,r,s,l){var c,u=t.params.id,p=[],h={};e.$parent.is2D=!1;var d=function(e){$.each(e,function(){if(o.isCiCell(this)){var e=o.getCiIdByCell(this);h[e]||p.push(e)}})};i.get(u).success(function(t){var i=t.data;e.$parent.view=i,e.$parent.showOption=!0,e.$parent.isSubscribe=i.isSubscribe;var o=[],u=i.content;"string"==typeof i.content&&(u=JSON.parse(i.content));for(var h=0;h<u.views.length;h++)o.push(u.views[h]);n.getByIds({viewIds:o}).success(function(e){var t=u.content.d3setting.layers,i={};$.each(e.data,function(){this.json=JSON.parse(this.svg),i[this.id]=this}),u.content.d3setting.layerCount=u.content.d3setting.rows,u.content.d3setting.layerItemCount=u.content.d3setting.cols;for(var n=0;n<t.length;n++)for(var o=0;o<t[n].length;o++){var h=t[n][o];if(h&&i[h.viewid]){var g=i[h.viewid];h.name=g.name,h.viewid=g.id,h.graphHeight=g.json.graphHeight,h.graphWidth=g.json.graphWidth,h.containers=g.json.containers,h.edges=g.json.edges,h.nodes=g.json.nodes,d(g.json.nodes),t[n][o]=h}}u.content.d3setting.$container=$(".main-box-content-panel-container-body-3d"),s.get({cis:p}).success(function(e){var t=[];e.data&&($.each(e.data,function(){t.push({source:l.CI_PREFIX+this.startCi,target:l.CI_PREFIX+this.endCi})}),u.content.d3setting.relation=t),$(".main-box-content-panel-container-body-3d>canvas").remove(),c=new a(u.content.d3setting),t.length&&r(function(){c.showLayerLine()},3e3)})})}),e.$watch("isExpand",function(){c&&c.resize()})}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(e){"use strict";e.app.controller("PublicListViewCtrl",["$scope","$state","GroupService","Unit",function(e,t,i,n){e.pageSize=4,e.currentPage=1,e.isPublic=!0,i["public"]().success(function(t){e.publicViews=[];for(var i=t.data,o=0;o<i.length;o++){var a={},r=i[o];a.userName=r.userName,a.loginName=r.loginName,a.userIconUrl=n["static"](r.icon),e.publicViews.push(a)}e.totalItems=e.publicViews.length,e.publicViewsShow=e.publicViews.slice(0,e.pageSize)}),e.showPrivateViewList=function(i,n,o){$(o.currentTarget).popover("hide"),e.$parent.optionalUser=n,t.go("home.group.list.user",{userName:i})},e.pageChanged=function(){e.publicViewsShow=e.publicViews.slice((e.currentPage-1)*e.pageSize,e.currentPage*e.pageSize)}}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(e){"use strict";e.app.controller("PublicUserViewCtrl",["$scope","$state","GroupService",function(e,t,i){var n=t.params.userName;e.isPublic=!0,e.isOption=!1,e.is2D=!0,e.userName=e.$parent.optionalUser,$(".popover").hide(),i.getPublicViewByUser(n).success(function(t){for(var i=t.data,n=0;n<i.length;n++){var o=new Date(i[n].time);i[n].time=o.getUTCFullYear()+"/"+(o.getUTCMonth()+1)+"/"+o.getUTCDate();var a=i[n].content;"string"==typeof a&&(a=JSON.parse(a)),i[n].content=a}e.views=i}),e.goBack=function(){t.go("home.group.list.public")},e.showPublicView=function(i){e.is2D=!0,e.view=i,e.isOption=!0,$(".popover").remove(),t.go("home.group.list.user.get",{id:i.id,userName:i.userName})},e.showPublic3DView=function(i){e.is2D=!1,e.view=i,e.isOption=!0,t.go("home.group.list.user.get3d",{id:i.id,userName:i.userName})},e.subscribeView=function(){e.isSubscribe=!0,i.subscription(e.view.id)},e.cancelSubscribe=function(){e.isSubscribe=!1,i.unsubscription(e.view.id)}}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page"));
//# sourceMappingURL=data:application/json;base64,