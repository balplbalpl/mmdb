package com.mmdb.model.security;

import java.util.HashMap;
import java.util.Map;

import com.mmdb.core.framework.neo4j.annotation.RelationTo;
import com.mmdb.core.framework.neo4j.annotation.Space;
import com.mmdb.core.framework.neo4j.annotation.Uuid;
import com.mmdb.core.framework.neo4j.entity.NodeEntity;

/**
 * 组织结构
 *
 * @author XIE
 */
@Space("organization")
public class Organization extends NodeEntity {
    private static final long serialVersionUID = 1L;

    /**
     * 用户id（当前分类中唯一,目前是自动生成的）
     */
    @Uuid
    private String id;
    /**
     * 用户名称（目前和id保持一致）
     */
    private String name;

    /**
     * 父类id
     */
    private String parentId = "000001";
    /**
     * 分类继承的父类
     */
    @RelationTo(elementClass = Organization.class, type = "Organization->Parent")
    private Organization parent;

    public Organization() {

    }

    public Organization(String id, String name) {
        this.id = id;
        this.name = name;
    }

    public Organization(String id, String name, Organization parent) {
        this(id, name);
        this.parent = parent;
        this.parentId = parent.getId();
    }

    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Organization getParent() {
        return parent;
    }

    public void setParent(Organization parent) {
        this.parent = parent;
    }

    public String getParentId() {
        return parentId;
    }

    public void setParentId(String parentId) {
        this.parentId = parentId;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = super.hashCode();
        result = prime * result + ((id == null) ? 0 : id.hashCode());
        result = prime * result + ((name == null) ? 0 : name.hashCode());
        return result;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (!super.equals(obj))
            return false;
        if (getClass() != obj.getClass())
            return false;
        Organization other = (Organization) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        } else if (!id.equals(other.id))
            return false;
        if (name == null) {
            if (other.name != null)
                return false;
        } else if (!name.equals(other.name))
            return false;
        return true;
    }

    /**
     * 将分类对象转换成[map对象]
     *
     * @return Map<String,Object>
     */
    public Map<String, Object> asMap() {
        Map<String, Object> map = new HashMap<String, Object>();
        String id = this.getId();
        String name = this.getName();
        Organization parent = null;
        parent = this.getParent();
        map.put("id", id);
        map.put("name", name);
        map.put("parent", parent != null ? parent.getId() : null);
        map.put("parentName", parent != null ? parent.getName() : null);
        return map;
    }
}