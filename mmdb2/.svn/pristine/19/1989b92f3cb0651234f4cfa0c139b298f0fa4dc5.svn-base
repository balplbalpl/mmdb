!function(t){"use strict";t.stateUrl=function(t){return"app/state"+t},t.app=angular.module("graph",["frapontillo.bootstrap-switch","ngSanitize","ui.router","ui.bootstrap","graphToolbar","graphViewtree","graphInfo","graphTable","treeControl","angular-md5","colorpicker.module","ngTable","ngFileUpload","rzModule","ngCookies","timeLine","ngJoyRide","ngRightClick","datetime"]),t.app.config(["$stateProvider","$urlRouterProvider","$httpProvider",function(e,i,n){i.otherwise("/user/overview"),n.interceptors.push("HttpInterceptor"),e.state("home",{data:{title:"ITA"},url:"/",templateUrl:t.stateUrl("/main/main.html"),controller:"MainCtrl"})}]),t.app.run(["$rootScope","$state","$cookies","$timeout",function(t,e,i,n){t.$state=e,t._refresh=function(){t.$$phase||t.$apply()},t.$on("$stateChangeStart",function(o,a){if(n(function(){var i=e.$current,n=[];do i.data&&i.data.title&&n.push(i.data.title),i=i.parent?i.parent:null;while(i);t._TITLE=n.join(" - ")},100),"/login"!==a.url){var r;r=i.get("token"),r||(o.preventDefault(),e.go("login"))}})}]),"object"==typeof mxRectangleShape&&(mxRectangleShape.prototype.crisp=!0),Editor.prototype.gridImage=IMAGE_PATH+"/grid_bg.png",mxLog.WARN=!1,mxLog.DEBUG=!1,t.CACHE_OBJ_URL={}}(nameSpace.reg("graph")),function(t){"use strict";var e=function(e,i,n,o,a,r,s,l,c,u,p){return function(a){this.clearHight=function(){a.graph.removeLight()},this.hightLightCi=function(){var t=this.getCis();$.each(t,function(){a.graph.addLight(this)})},this.backgroundImage=function(){e.open({size:"lg",animation:!0,templateUrl:"app/modal/image/image.html",controller:"ModalImageCtrl",resolve:{fn:function(){return function(t){var e=i["static"](t.url),n=document.createElement("img");n.src=e,n.onload=function(){var t=new mxImage(e,this.width,this.height);a.graph.setBackgroundImage(t),a.graph.view.validate(),$(n).remove()}}}}})},this.clearBackgroundImage=function(){a.graph.setBackgroundImage(null),a.graph.view.validate()},this.save=function(){e.open({size:"lg",animation:!0,templateUrl:"app/modal/view/save.html",controller:"ModalViewSaveCtrl",resolve:{editor:function(){return a}}})},this.update=function(){var t=p.get();a.state&&a.state.view?a.state.view.userName===t.loginName?e.open({size:"lg",animation:!0,templateUrl:"app/modal/view/save.html",controller:"ModalViewUpdateCtrl",resolve:{editor:function(){return a}}}):i.error("错误: 您不能更新其它用户创建的视图"):i.error("错误: 您没有打开任何视图")},this.open=function(){e.open({animation:!0,templateUrl:"app/modal/view/open.html",controller:"ModalViewOpenCtrl",resolve:{fn:function(){return function(t){a.action.openView(t)}}}})},this.create=function(){this.clear(),this.syncGrid(),a.graph.zoomActual(),a.state.empty()},this.clear=function(){a.graph.model.clear()},this.zoomIn=function(){a.graph.zoomIn(),this.syncGrid()},this.zoomOut=function(){a.graph.zoomOut(),this.syncGrid()},this.zoomActual=function(){a.graph.zoomActual()},this.zoomCenter=function(){a.graph.zoomToCenter(),this.syncGrid()},this.syncGrid=function(){var t=a.graph.getView().getScale(),e=o.GRAPH_GRID_WIDTH*t+"px",i=o.GRAPH_GRID_HEIGHT*t+"px";$(a.graph.container).find("svg")[0].style.backgroundSize=e+" "+i},this.assistLine=function(){a.graph.graphHandler.guidesEnabled=!a.graph.graphHandler.guidesEnabled,a.state.isAssistLine=a.graph.graphHandler.guidesEnabled},this.orderDown=function(){a.graph.orderCells(!0)},this.orderUp=function(){a.graph.orderCells(!1)},this.alignCells=function(t){a.graph.alignCells(t)},this.alignDistribute=function(t){a.graph.distributeCells(t)},this.undo=function(){a.graph.stopEditing(!1),a.undoManager.undo()},this.redo=function(){a.graph.stopEditing(!1),a.undoManager.redo()},this.removeCells=function(){a.graph.removeCells()},this.edgeStyle=function(t){this.edgeClearStyle(),"elbowHorizontal"===t&&(t="elbowEdgeStyle",this.elbowStyle("horizontal")),"elbowVertical"===t&&(t="elbowEdgeStyle",this.elbowStyle("vertical")),a.graph.setCellStyles(mxConstants.STYLE_EDGE,t)},this.elbowStyle=function(t){a.graph.setCellStyles(mxConstants.STYLE_ELBOW,t)},this.edgeClearStyle=function(){var t=a.graph.getSelectionEdges();$.each(t,function(){this.geometry.points=[]});var e=[mxConstants.STYLE_EDGE,mxConstants.STYLE_ELBOW,"noEdgeStyle","orthogonal"];$.each(e,function(){a.graph.setCellStyles(this,null,t)})},this.startArrow=function(t){a.graph.setCellStyles(mxConstants.STYLE_STARTARROW,t),a.graph.setCellStyles("startFill",0)},this.startArrowFill=function(t){a.graph.setCellStyles(mxConstants.STYLE_STARTARROW,t),a.graph.setCellStyles("startFill",1)},this.endArrow=function(t){a.graph.setCellStyles(mxConstants.STYLE_ENDARROW,t),a.graph.setCellStyles("endFill",0)},this.endArrowFill=function(t){a.graph.setCellStyles(mxConstants.STYLE_ENDARROW,t),a.graph.setCellStyles("endFill",1)},this.linkEdit=function(){var t,e;t=a.graph.getSelectionCells(),t.length>=1&&(e=a.graph.getLinkForCell(t[0],"link"),e=e?e:"",i.prompt("请输入URL",function(e){null!==e&&$.each(t,function(){a.graph.setLinkForCell(this,e)})},e))},this.shoadow=function(){var e,i;e=a.graph.getSelectionCells(),e.length>=1&&(i=t.utils.getStyleForAttr(e[0],"shadow"),i="1"===i?"none":"1",a.graph.setCellStyles(mxConstants.STYLE_SHADOW,i,e))},this.cellFillColor=function(){var t=a.graph.getSelectionCells();if(t.length){var i=a.graph.getCellStyle(t[0]);e.open({size:"sm",templateUrl:"app/modal/color/color.html",controller:"ModalColorCtrl",resolve:{title:function(){return"填充颜色"},originalColor:function(){return i.fillColor},fn:function(){return function(e){a.graph.setCellStyles(mxConstants.STYLE_FILLCOLOR,e,t)}}}})}},this.cellStrokeColor=function(){var t=a.graph.getSelectionCells();if(t.length){var i=a.graph.getCellStyle(t[0]);e.open({size:"sm",templateUrl:"app/modal/color/color.html",controller:"ModalColorCtrl",resolve:{title:function(){return"边框颜色"},originalColor:function(){return i.strokeColor},fn:function(){return function(e){a.graph.setCellStyles(mxConstants.STYLE_STROKECOLOR,e,t)}}}})}},this.font=function(){e.open({templateUrl:"app/modal/font/font.html",controller:"ModalFontCtrl",resolve:{editor:function(){return a}}})},this.grid=function(){var t=$(a.graph.container).find("svg")[0];t.style.backgroundImage?(t.style.backgroundImage=null,a.state.isShowGrid=!1):(t.style.backgroundImage="url(assets/plugins/mxGraph/images/grid_bg.png)",a.state.isShowGrid=!0,this.syncGrid())},this.getCisId=function(){var t,e=[];return t=a.graph.getDepCells(),$.each(t,function(){i.isCiCell(this)&&e.push(i.getCiIdByCell(this))}),e},this.getCis=function(){var t,e=[];return t=a.graph.getDepCells(),$.each(t,function(){i.isCiCell(this)&&e.push(this)}),e},this.getXml=function(){var t,e;return t=a.getGraphXml(),e=a.graph.getBackgroundImage(),e&&(t.setAttribute("background-url",e.src),t.setAttribute("background-width",e.width),t.setAttribute("background-height",e.height)),mxUtils.getXml(t)},this.openXml=function(t){var e,n="",o=0,r=0,s=null,l=null;if(e=mxUtils.parseXml(t),"parsererror"===e.documentElement.nodeName)throw i.alert("错误：解析XML文档错误，可能XML文档损坏！"),new Error("parsererror");a.graph.setBackgroundImage(null),l=e.documentElement,a.graph.model.clear(),a.setGraphXml(l),a.graph.zoomActual(),a.graph.view.setTranslate(0,0),a.graph.zoomToCenter(),n=l.getAttribute("background-url"),o=l.getAttribute("background-width"),r=l.getAttribute("background-height"),n&&o&&r&&(s=new mxImage(n,o,r),a.graph.setBackgroundImage(s),a.graph.view.validate())},this.openView=function(t){t.xml&&(this.openXml(t.xml),a.state.setView(t))},this.disabled=function(){a.graph.setCellsMovable(!1),a.graph.setCellsCloneable(!1),a.graph.setCellsEditable(!1),a.graph.setCellsDisconnectable(!1),a.graph.setCellsResizable(!1),a.graph.setCellsSelectable(!1),a.graph.setCellsMovable(!1),a.graph.setConnectable(!1),a.state.disabled=!0},this.enabled=function(){a.graph.setCellsMovable(!0),a.graph.setCellsCloneable(!0),a.graph.setCellsEditable(!0),a.graph.setCellsDisconnectable(!0),a.graph.setCellsResizable(!0),a.graph.setExtendParents(!0),a.graph.setConnectable(!0),a.state.disabled=!1},this.monitor=function(){a.monitor||(a.monitor=new r({editor:a}))},this.toggleAutoLayout=function(){a.state.isAutoLayout=!a.state.isAutoLayout,a.toolbar.refresh();var t=a.state.isAutoLayout?"自动布局已开":"自动布局已关";i.warning(t)},this.toggleAutoLine=function(){a.state.isAutoLine=!a.state.isAutoLine,a.toolbar.refresh();var t=a.state.isAutoLine?"自动查找关系已开":"自动查找关系已关";i.warning(t)},this.showCiTable=function(){a.table.show()},this.hideCiTable=function(){a.table.hide()},this.expandNode=function(){e.open({size:"lg",templateUrl:"app/modal/expand/expand.html",controller:"ModalExpandCtrl",resolve:{editor:function(){return a}}})},this.exportPng=function(){l.exportPng(this.getSvg()).success(function(t){i.download(t.data.url)})},this.exportPdf=function(){l.exportPdf(this.getSvg()).success(function(t){i.download(t.data.url)})},this.exportXml=function(){var t="ita_"+Date.now()+".xml",e=this.getXml();"function"==typeof Blob?saveAs(new Blob([e],{type:"text/plain;charset=utf-8"}),t):i.alert("系统错误")},this.exportSvg=function(){var t="ita_"+Date.now()+".svg",e=this.getSvg();"function"==typeof Blob?saveAs(new Blob([e],{type:"text/plain;charset=utf-8"}),t):i.alert("系统错误")},this.getSvg=function(){var t=a.graph.getSvg();return angular.isObject(t)?t.outerHTML:t},this.copy=function(){mxClipboard.copy(a.graph)},this.cut=function(){mxClipboard.cut(a.graph)},this.paste=function(){mxClipboard.paste(a.graph)},this.layoutHorizontal=function(){i.layout(a.graph,new mxHierarchicalLayout(a.graph,mxConstants.DIRECTION_WEST),!0),this.zoomCenter()},this.layoutVertical=function(){i.layout(a.graph,new mxHierarchicalLayout(a.graph,mxConstants.DIRECTION_NORTH),!0),this.zoomCenter()},this.layoutCircle=function(){i.layout(a.graph,new mxCircleLayout(a.graph),!0),this.zoomCenter()},this.layoutOrganic=function(){i.layout(a.graph,new mxFastOrganicLayout(a.graph),!0),this.zoomCenter()},this.layoutParallel=function(){i.layout(a.graph,new mxParallelEdgeLayout(a.graph),!0),this.zoomCenter()},this.layoutStackVertical=function(){i.layout(a.graph,new mxStackLayout(a.graph,!1),!0),this.zoomCenter()},this.layoutStackHorizontal=function(){i.layout(a.graph,new mxStackLayout(a.graph,!0),!0),this.zoomCenter()},this.tag=function(){var t=a.graph.getDepCells();$.each(t,function(){this.vertex&&!i.isCiIn(this)&&(a.graph.setOriStyle(this,this.getStyle()),this.setStyle("whiteSpace=wrap;"),a.graph.refresh(this))})},this.original=function(){var t=a.graph.getDepCells();$.each(t,function(){this.vertex&&!i.isCiIn(this)&&(this.setStyle(a.graph.getOriStyle(this)),a.graph.refresh(this))})},this.cellStrokeSize=function(){var t=a.graph.getSelectionCells();if(t.length){var i=a.graph.getCellStyle(t[0]);e.open({templateUrl:"app/modal/number/number.html",controller:"ModalNumberCtrl",resolve:{title:function(){return"边框大小"},defaultValue:function(){return i.strokeWidth?i.strokeWidth:1},maxValue:function(){return 12},minValue:function(){return 1},fn:function(){return function(t){a.graph.setCellStyles(mxConstants.STYLE_STROKEWIDTH,t)}}}})}},this.cellOpacity=function(){var t=a.graph.getSelectionCells();if(t.length){var i=a.graph.getCellStyle(t[0]);e.open({templateUrl:"app/modal/number/number.html",controller:"ModalNumberCtrl",resolve:{title:function(){return"透明度"},defaultValue:function(){return i.opacity?i.opacity:1},maxValue:function(){return 100},minValue:function(){return 0},fn:function(){return function(t){a.graph.setCellStyles(mxConstants.STYLE_OPACITY,t)}}}})}},this.relationViewSet=function(){a.graph.getSelectionCell()&&e.open({size:"lg",templateUrl:"app/modal/relationView/set.html",controller:"ModalRelationViewSetCtrl",resolve:{editor:function(){return a}}})},this.relationViewOpen=function(){a.graph.getSelectionCell()&&e.open({size:"lg",templateUrl:"app/modal/relationView/open.html",controller:"ModalRelationViewOpenCtrl",resolve:{editor:function(){return a}}})},this.historyBack=function(){a.history.back()},this.openUrl=function(){var t=a.graph.getSelectionCell();if(t){var e=a.graph.getCellAttr(t,"link");e&&c.open(e)}},this.toolbarRefresh=function(){a.toolbar&&a.toolbar.refresh()},this.publicView=function(){a.state&&a.state.view?u.setPublic(a.state.view.id).success(function(){a.state.view.open=!0,n.$broadcast(s.VIEW_SET_PUBLIC)}):i.error("错误：您没有打开任何视图")},this.unpublicView=function(){a.state&&a.state.view?u.setUnpublic(a.state.view.id).success(function(){a.state.view.open=!1,n.$broadcast(s.VIEW_SET_UNPUBLIC)}):i.error("错误：您没有打开任何视图")},this.subscription=function(){a.state&&a.state.view?u.subscription(a.state.view.id).success(function(){a.state.view.isSubscription=!0,n.$broadcast(s.VIEW_SUBSCRIPTION_AFTER)}):i.error("错误：您没有打开任何视图")},this.unsubscription=function(){a.state&&a.state.view?u.unsubscription(a.state.view.id).success(function(){a.state.view.isSubscription=!1,n.$broadcast(s.VIEW_UNSUBSCRIPTION_AFTER)}):i.error("错误：您没有打开任何视图")},this.selectAll=function(){a.graph.selectAll()},this.threshold=function(){a.state.view?e.open({size:"lg",animation:!0,backdrop:"static",templateUrl:"app/modal/threshold/threshold.html",controller:"ThresholdCtrl",windowClass:"myModal",resolve:{view:function(){return a.state.view?a.state.view:null},editor:function(){return a}}}):i.error("错误：没有打开任何视图")}}};e.$inject=["$modal","Unit","$rootScope","Const","CiMonitorService","GraphMonitor","Event","ExportService","$window","ViewService","UserInfo"],t.app.factory("GraphAction",e)}(nameSpace.reg("graph")),function(t){"use strict";t.app.factory("AutoLayout",function(){var t=function(){var t={};return t.util={},t.util.Point=function(t,e){this.absoluteX=t,this.absoluteY=e,this.relativeX=0,this.relativeY=0},t.util.Point.prototype.absolute2relative=function(t){this.relativeX=this.absoluteX-t.absoluteX,this.relativeY=this.absoluteY-t.absoluteY},t.util.Point.prototype.relative2absolute=function(t){this.absoluteX=this.relativeX+t.absoluteX,this.absoluteY=this.relativeY+t.absoluteY},t.util.Point.prototype.expandIt=function(e,i,n,o,a){var r=o/i,s=a/n,l=o-i,c=a-n;this.relativeX=t.util.math.changeIt(this.relativeX,i,r,l),this.relativeY=t.util.math.changeIt(this.relativeY,n,s,c),this.relative2absolute(e)},t.util.math={},t.util.math.changeIt=function(t,e,i,n){return t>=-1*e&&e>=t?t*i:-1*e>t?t-n:t+n},t.util.math.changeBack=function(t,e,i,n){return t>=-1*e&&e>=t?t/i:-1*e>t?t+n:t-n},t}(),e=function(t){this.graph=t,this.foldHandle()};return e.prototype.foldHandle=function(){var t,e=this;e.graph.foldHandle=function(t){e.expandLayout(t),e.graph.clearSelection()},t=function(t,i){var n=i.getProperty("cells");n[0].collapsed?(e.collaspeLayout(n[0]),e.graph.clearSelection()):(e.expandLayout(n[0]),e.graph.clearSelection())},e.graph.addListener(mxEvent.FOLD_CELLS,t)},e.prototype.collaspeLayout=function(e){var i,n=this,o=e,a=Math.round((e.geometry.alternateBounds.width-e.geometry.width)/2),r=Math.round((e.geometry.alternateBounds.height-e.geometry.height)/2);i=function(e){var i=n.graph.getChildVertices(e.getParent()),s=e.getParent(),l={};"1"!==s.id?(s.geometry.width-=2*a,s.geometry.height-=2*r,$.each(i,function(){var t=this;return e.id===t.id?!0:(t.geometry.x-=a,void(t.geometry.y-=r))})):(e.geometry.x+=a,e.geometry.y+=r),l.x=e.geometry.x+window.parseInt(e.geometry.width/2,10),l.y=e.geometry.y+window.parseInt(e.geometry.height/2,10),$.each(i,function(){var i,n,s=this,c={};return e.id===s.id?!0:(c.x=s.geometry.x+window.parseInt(s.geometry.width/2,10),c.y=s.geometry.y+window.parseInt(s.geometry.height/2,10),i=new t.util.Point(l.x,l.y),n=new t.util.Point(c.x,c.y),n.absolute2relative(i),o.id===e.id?n.expandIt(i,e.geometry.alternateBounds.width/2,e.geometry.alternateBounds.height/2,e.geometry.width/2,e.geometry.height/2):n.expandIt(i,e.geometry.width/2+a,e.geometry.height/2+r,e.geometry.width/2,e.geometry.height/2),s.geometry.x=Math.round(n.absoluteX-s.geometry.width/2),void(s.geometry.y=Math.round(n.absoluteY-s.geometry.height/2)))})};do n.graph.refresh(),i(e),e=e.getParent();while("1"!==e.id);n.graph.refresh(),n.graph.clearSelection(),n.graph.setSelectionCell(o)},e.prototype.expandLayout=function(e){var i,n=this,o=e,a=Math.round((e.geometry.width-e.geometry.alternateBounds.width)/2),r=Math.round((e.geometry.height-e.geometry.alternateBounds.height)/2);i=function(e){var i=n.graph.getChildVertices(e.getParent()),s=e.getParent(),l={};"1"!==s.id?(s.geometry.width+=2*a,s.geometry.height+=2*r,$.each(i,function(){var t=this;return e.id===t.id?!0:(t.geometry.x+=a,void(t.geometry.y+=r))})):(e.geometry.x-=a,e.geometry.y-=r),l.x=e.geometry.x+window.parseInt(e.geometry.width/2,10),l.y=e.geometry.y+window.parseInt(e.geometry.height/2,10),$.each(i,function(){var i,n,s=this,c={};return e.id===s.id?!0:(c.x=s.geometry.x+window.parseInt(s.geometry.width/2,10),c.y=s.geometry.y+window.parseInt(s.geometry.height/2,10),i=new t.util.Point(l.x,l.y),n=new t.util.Point(c.x,c.y),n.absolute2relative(i),o.id===e.id?n.expandIt(i,e.geometry.alternateBounds.width/2,e.geometry.alternateBounds.height/2,e.geometry.width/2,e.geometry.height/2):n.expandIt(i,e.geometry.width/2-a,e.geometry.height/2-r,e.geometry.width/2,e.geometry.height/2),s.geometry.x=Math.round(n.absoluteX-s.geometry.width/2),void(s.geometry.y=Math.round(n.absoluteY-s.geometry.height/2)))})};do n.graph.refresh(),i(e),e=e.getParent();while("1"!==e.id);n.graph.refresh(),n.graph.clearSelection(),n.graph.setSelectionCell(o)},e})}(nameSpace.reg("graph")),function(t){"use strict";t.app.factory("Const",[function(){return{CI_PREFIX:"ci_",IN_PREFIX:"in_",RELATION_PREFIX:"relation_",GRAPH_DRAG_WIDTH:80,GRAPH_DRAG_HEIGHT:80,GRAPH_GRID_WIDTH:81,GRAPH_GRID_HEIGHT:80,MENU_OPEN_URL:"打开URL",MENU_EDIT_URL:"编辑URL",MENU_FONT_STYLE:"字体样式",MENU_STROKE_WIDTH:"边框宽度",MENU_OPACITY:"透明度",MENU_ZOOM:"缩放",MENU_ZOOM_IN:"放大",MENU_ZOOM_OUT:"缩小",MENU_ZOOM_CENTER:"适应画布",MENU_ZOOM_ACTUAL:"实际大小",MENU_STYLE:"样式",MENU_VIEW:"视图",MENU_VIEW_SAVE:"保存视图",MENU_VIEW_UPDATE:"更新视图",MENU_VIEW_OPEN:"打开视图",MENU_VIEW_NEW:"新建视图",MENU_VIEW_URL:"视图URL",MENU_VIEW_NEW_WINDOW:"在新标签页打开此视图",MENU_VIEW_RELATION:"视图关联",MENU_VIEW_RELATION_SET:"管理关联视图",MENU_VIEW_RELATION_OPEN:"打开关联视图",MENU_LAYOUT:"布局",MENU_LAYOUT_HORIZONTAL:"横向布局",MENU_LAYOUT_VERTICAL:"纵向布局",MENU_LAYOUT_CIRCLE:"圆形布局",MENU_LAYOUT_ORGANIC:"有机布局",MENU_LAYOUT_PARALLEL:"平行线布局",MENU_LAYOUT_STACK_VERTICAL:"垂直堆栈",MENU_LAYOUT_STACK_HORIZONTAL:"水平堆栈",MENU_EXPORT:"导出",MENU_EXPORT_PNG:"导出PNG",MENU_EXPORT_PDF:"导出PDF",MENU_EXPORT_XML:"导出XML",MENU_EXPORT_SVG:"导出SVG",MENU_EXPAND_NODE:"展开子节点",MENU_EDIT:"编辑",MENU_CELL_DELETE:"删除",MENU_CELL_COPY:"复制",MENU_CELL_CUT:"剪切",MENU_CELL_PASTE:"粘贴",MENU_GRAPH_CLEAR:"清空画布",MENU_RELATION_CREATE:"创建关系",MENU_MODULE:"模式",MENU_MODULE_ORI:"原始模式",MENU_MODULE_TAG:"标签模式",MENU_VIEW_RELATION_BACK:"返回上层视图",WEBGL_FONT:"lisu",WEBGL_RESOURCE_DIR:"../resource/3d/",WEBGL_DEFAULT_MESH_NAME:"LV",WEBGL_LAYER_MARGIN:360,WEBGL_LAYER_WIDTH:1500,WEBGL_LAYER_HEIGHT:900,WEBGL_LAYER_FONT_COLOR:3306404,WEBGL_LAYER_FONT_SIDE_COLOR:11184810,WEBGL_LAYER_OPACITY:.8,WEBGL_LAYER_COLOR:14540253,WEBGL_LAYER_NAME_PREFIX:"图层",WEBGL_LAYER_FONT_FAMILY:"lisu",WEBGL_LAYER_FONT_SIZE:30,WEBGL_LAYER_FONT_HEIGHT:4,WEBGL_NODE_DEPTH:8,WEBGL_NODE_FONT_SIDE_COLOR:11184810,WEBGL_NODE_FONT_COLOR:3444464,WEBGL_NODE_FONT_SIZE:8,WEBGL_NODE_FONT_FAMILY:"lisu",WEBGL_CAMERA_POSITION_X:-300,WEBGL_CAMERA_POSITION_Y:600,WEBGL_CAMERA_NEAR:100,WEBGL_CAMERA_FAR:1e5,WEBGL_LINE_COLOR:6710886,WEBGL_LIGHT_POSITION:3500,WEBGL_LIGHT_COLOR:16777215,WEBGL_LAYER_LINE_COLOR:10066329,WEBGL_LAYER_LINE_COLOR_SELECTION:255,WEBGL_CONTAINER_COLOR:[15724527,14671839,13619151,12303359],TIME_AVERAGE:300}}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.factory("ContextLibs",["Const",function(t){var e={};return e[t.MENU_VIEW_OPEN]=function(){this.action.open()},e[t.MENU_VIEW_UPDATE]=function(){this.action.update()},e[t.MENU_VIEW_NEW]=function(){this.action.create()},e[t.MENU_VIEW_SAVE]=function(){this.action.save()},e[t.MENU_VIEW_RELATION_BACK]=function(){this.action.historyBack()},e[t.MENU_GRAPH_CLEAR]=function(){this.action.clear()},e[t.MENU_ZOOM_IN]=function(){this.action.zoomIn()},e[t.MENU_ZOOM_OUT]=function(){this.action.zoomOut()},e[t.MENU_ZOOM_ACTUAL]=function(){this.action.zoomActual()},e[t.MENU_ZOOM_CENTER]=function(){this.action.zoomCenter()},e[t.MENU_CELL_COPY]=function(){this.action.copy()},e[t.MENU_CELL_CUT]=function(){this.action.cut()},e[t.MENU_CELL_PASTE]=function(){this.action.paste()},e[t.MENU_CELL_DELETE]=function(){this.action.removeCells()},e[t.MENU_OPACITY]=function(){this.action.cellOpacity()},e[t.MENU_STROKE_WIDTH]=function(){this.action.cellStrokeSize()},e[t.MENU_FONT_STYLE]=function(){this.action.font()},e[t.MENU_OPEN_URL]=function(){this.action.openUrl()},e[t.MENU_EXPORT_PNG]=function(){this.action.exportPng()},e[t.MENU_EXPORT_XML]=function(){this.action.exportXml()},e[t.MENU_EXPORT_PDF]=function(){this.action.exportPdf()},e[t.MENU_EXPORT_SVG]=function(){this.action.exportSvg()},e[t.MENU_EXPAND_NODE]=function(){this.action.expandNode()},e[t.MENU_LAYOUT_HORIZONTAL]=function(){this.action.layoutHorizontal()},e[t.MENU_LAYOUT_VERTICAL]=function(){this.action.layoutVertical()},e[t.MENU_LAYOUT_CIRCLE]=function(){this.action.layoutCircle()},e[t.MENU_LAYOUT_ORGANIC]=function(){this.action.layoutOrganic()},e[t.MENU_LAYOUT_PARALLEL]=function(){this.action.layoutParallel()},e[t.MENU_LAYOUT_STACK_HORIZONTAL]=function(){this.action.layoutStackHorizontal()},e[t.MENU_LAYOUT_STACK_VERTICAL]=function(){this.action.layoutStackVertical()},e[t.MENU_VIEW_RELATION_SET]=function(){this.action.relationViewSet()},e[t.MENU_VIEW_RELATION_OPEN]=function(){this.action.relationViewOpen()},e}])}(nameSpace.reg("graph")),function(t){"use strict";var e=function(t){var e=function(){var e=this;e.split=15,e.id=t.createHash(Date.now().toString()),e.className="graph-contextmenu",e.childClassName="graph-contextmenu-sub",e.dividerClassName="graph-contextmenu-divider",e.itemClassName="graph-contextmenu-item",e.intoIconClassName="graph-contextmenu-into-icon",e.element=this.createMain(),e.element.id=this.id,e.lock=!1,document.body.addEventListener("click",function(){e.hide()}),document.body.appendChild(this.element)};return e.prototype.createMain=function(){var t,e=this;return t=document.createElement("div"),t.className=e.className,t},e.prototype.addItem=function(t,e,i,n,o){var a,r,s,l=this;return a=document.createElement("div"),a.className=l.itemClassName,!o||o&&!o.disabled?(a.addEventListener("click",function(){"function"==typeof i?(i(),l.hide()):l.getChild(this)||l.hide()}),a.addEventListener("mouseleave",function(){l.closeChild(this),$(this).removeClass("active")}),a.addEventListener("mouseenter",function(){$(this).addClass("active"),l.showChild(this)})):($(a).addClass("noselect"),a.style.cursor="auto",a.style.color="#aaa",a.addEventListener("click",function(t){t.stopPropagation()})),r=document.createElement("span"),r.innerHTML=t,a.appendChild(r),n?(s=n.querySelector("."+l.childClassName),s||(s=l.createMain(),s.className=l.childClassName,l.addChildLevelIco(n),n.appendChild(s)),s.appendChild(a)):l.element.appendChild(a),a},e.prototype.clearAllItems=function(){for(var t=this;t.element.firstChild;)t.element.removeChild(t.element.firstChild)},e.prototype.hasChildIco=function(t){var e=this;return t.querySelector("."+e.childIcoClassName)},e.prototype.createChildIco=function(t){var e,i=this;e=document.createElement("div"),e.className=i.intoIconClassName,t.appendChild(e)},e.prototype.addChildLevelIco=function(t){var e=this;e.hasChildIco(t)||e.createChildIco(t)},e.prototype.addSeparator=function(t){var e,i=this,n=null;e=document.createElement("div"),e.className=i.dividerClassName,t?(n=t.querySelector("."+i.childClassName),n.appendChild(e)):i.element.appendChild(e)},e.prototype.closeAllChild=function(){var t=this;$(t.element).find("."+t.childClassName).hide()},e.prototype.getChild=function(t){var e=this;return $(t).find("."+e.childClassName)[0]},e.prototype.showChild=function(t){var e,i=this;e=i.getChild(t),e&&(e.style.display="block")},e.prototype.closeChild=function(t){var e,i=this;e=i.getChild(t),e&&(e.style.display="none")},e.prototype.isIntoChild=function(t){var e,i,n=this;return e=n.getChild(t),i=!(!e||"block"!==e.style.display)},e.prototype.show=function(t,e){var i,n=this;n.element.children.length>=1&&(n.element.style.display="block",i=document.documentElement,i.clientHeight<e+n.element.clientHeight?e-=n.element.clientHeight+1:e--,i.clientWidth<t+n.element.clientWidth?t-=n.element.clientWidth+1:t--,n.element.style.left=t+"px",n.element.style.top=e+"px")},e.prototype.hide=function(){var t=this;t.element.style.display="none"},e};t.app.factory("ContextMenu",["md5",e])}(nameSpace.reg("graph")),function(t){"use strict";var e=function(e,i,n,o,a){var r=function(e){this.options=e,this.editor=e.editor,this.$table=e.$table,this.isSelectMore=!1,this.heightLightCell=null,this.utils=t.utils,this.binding()};return r.prototype.binding=function(){var t=this;t.$table.find("tbody tr").each(function(){$(this).attr("data-id")&&t.createDragSource(this,t.createDropHandler(this,!0),t.createDragPreview(n.GRAPH_DRAG_WIDTH,n.GRAPH_DRAG_HEIGHT))})},r.prototype.createCell=function(t,e,o,a,r,s,l){var c=this,u="";return $.each(c.options.ciData,function(){var t=this;t.categoryId===o&&(u=i["static"](t.icon))}),t.insertVertex(e,n.CI_PREFIX+a,r,s,l,n.GRAPH_DRAG_WIDTH,n.GRAPH_DRAG_HEIGHT,"image;image="+u)},r.prototype.createDragSource=function(t,e,i){var n,o=this,a="strokeColor=#0066FF;strokeWidth=4;fillColor=none;";return n=mxUtils.makeDraggable(t,o.editor.graph,e,i,0,0,o.editor.graph.autoscroll,!0,!0),n.getDropTarget=function(t,e,i){var n,r,s,l="";return r=mxDragSource.prototype.getDropTarget.apply(this,arguments),s=function(n){var o;return o=t.getCellAt(e,i,n,!0,!0),o&&o.children&&o.children.length>=1&&(o=s(o)),o},n=s(t.getDefaultParent()),n=n?n:r,n&&n.vertex&&!o.heightLightCell||n&&n.vertex&&o.heightLightCell.geometry.x!==n.geometry.x||n&&n.vertex&&o.heightLightCell.geometry.y!==n.geometry.y?(t.removeCells([o.heightLightCell]),o.lastTargetCell=n,o.heightLightCell=t.addLight(n)):!n&&o.heightLightCell&&(t.removeCells([o.heightLightCell]),o.heightLightCell=null,o.lastTargetCell=null),n&&n.edge&&!o.lastTargetEdge?(o.lastTargetEdge=n,t.setOriStyle(n,n.getStyle()),n.setStyle(a),t.refresh(n)):!n&&o.lastTargetEdge&&(l=t.getOriStyle(o.lastTargetEdge),t.setOriStyle(o.lastTargetEdge,""),o.lastTargetEdge.setStyle(l),t.refresh(o.lastTargetEdge),o.lastTargetEdge=null),t.isValidRoot(n)||(n=null),n},n},r.prototype.handle=function(t,e,i){var o,a,r,s,l,c,u,p,h=this,d="",g="",f=[];p=h.editor.graph,s=p.getDefaultParent(),u=p.getModel(),u.beginUpdate();try{for(o=0;o<t.length;o++)a=t[o],r=a.attr("data-id"),$.each(h.options.ciData,function(){this.id===r&&(d=this.name,g=this.categoryId)}),p.getCellById([n.CI_PREFIX,r].join(""))?h.lastTargetCell&&(h.lastTargetCell.setValue(d),p.refresh(h.lastTargetCell)):h.isSelectMore||!h.lastTargetCell||h.lastTargetCell.collapsed||h.lastTargetCell.style&&-1!==h.lastTargetCell.style.indexOf("swimlane")?!h.isSelectMore&&h.lastTargetCell&&h.lastTargetCell.collapsed?(p.setCellAttr(h.lastTargetCell,"collapsed",h.options.lib[g]),p.setCellAttr(h.lastTargetCell,"label",d),h.lastTargetCell.setId([h.options.prefix,r].join("")),p.refresh(),h.lastTargetCell=null):h.isSelectMore||!h.lastTargetCell||h.lastTargetCell.style&&-1!==h.lastTargetCell.style.indexOf("swimlane")?(h.lastTargetCell&&h.lastTargetCell.style.indexOf("swimlane")>=0&&(e-=h.lastTargetCell.geometry.x,i-=h.lastTargetCell.geometry.y,s=h.lastTargetCell),c=h.createCell(p,s,g,r,d,e,i),f.push(r),p.refresh(c)):(h.lastTargetCell.setId([h.options.prefix,r].join("")),l=p.getOriStyle(h.lastTargetCell),p.setOriStyle(h.lastTargetCell,""),h.lastTargetCell.setStyle(l),p.refresh(h.lastTargetCell),h.lastTargetCell=null):(h.lastTargetCell.setId([h.options.prefix,r].join("")),h.lastTargetCell.setValue(d),p.refresh(h.lastTargetCell),h.lastTargetCell=null)}finally{u.endUpdate()}return f},r.prototype.createDropHandler=function(t){var e=this;return function(i,n,r,s,l){var c;e.heightLightCell&&(i.removeCells([e.heightLightCell]),e.heightLightCell=null),c=e.getSelectTr(),e.isSelectMore=c.length>=2,c=c.length>=1?c:[$(t)],e.handle(c,s,l),e.autoCreateRelation(function(t){(t||e.isSelectMore)&&(e.editor.action.layoutVertical(),i.refresh(),i.zoomToCenter())}),o.$broadcast(a.CI_TABLE_UNCHECKED)}},r.prototype.createDragPreview=function(t,e,i){var n=document.createElement("div");return n.style.border="1px dashed black",n.style.width=t+"px",n.style.height=e+"px",n.innerHTML=i?i:"",n},r.prototype.getSelectTr=function(){var t=[],e=this;return e.$table.find("tbody tr").each(function(){$(this).find("input").is(":checked")&&t.push($(this))}),t},r.prototype.autoCreateRelation=function(t){var i=this;e.get({cis:i.editor.action.getCisId()}).success(function(e){if(e.data){var o,a,r=!1;a=i.editor.graph.getDefaultParent(),o=i.editor.graph.getModel(),o.beginUpdate(),$.each(e.data,function(){var t=i.editor.graph.getCellById([n.CI_PREFIX,this.startCi].join("")),e=i.editor.graph.getCellById([n.CI_PREFIX,this.endCi].join(""));i.clearEdges(t,e)});try{$.each(e.data,function(){var t=i.editor.graph.getCellById([n.CI_PREFIX,this.startCi].join("")),e=i.editor.graph.getCellById([n.CI_PREFIX,this.endCi].join(""));if(t&&e){var o=[n.RELATION_PREFIX,this.relCateName].join("");i.editor.graph.insertEdge(a,o,this.relCateName,t,e),r=!0}})}finally{o.endUpdate()}angular.isFunction(t)&&t(r)}})},r.prototype.clearEdges=function(t,e){var i,n=this,o=[];if(t&&e&&Array.isArray(t.edges))for(i=0;i<t.edges.length;i++)(t.edges[i].source.id===e.id||t.edges[i].target.id===e.id)&&o.push(t.edges[i]);n.editor.graph.removeCells(o),n.editor.graph.refresh()},r};e.$inject=["CiRelationService","Unit","Const","$rootScope","Event"],t.app.factory("DataDraw",e)}(nameSpace.reg("graph")),function(t){"use strict";t.app.factory("Editor",["GraphAction","GraphState","MxEditor","GraphHisotry",function(t,e,i,n){return function(o,a){var r;return r=new Editor,r.graph.init(o),r.graph.setTooltips(!1),r.graph.refresh(),r.graph.container.style.backgroundImage="url("+IMAGE_PATH+"/grid_bg.png)",r.graph.container.focus(),a&&r.outline.init(a),$(o).mousewheel(function(t,e){r.state.zoomLock||(e>0?r.action.zoomIn():r.action.zoomOut())}),new i(r),r.action=new t(r),r.state=new e(r),r.history=new n(r),r}}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.factory("Event",[function(){return{GRAPH_CELL_CLICK:"graphCellClick",GRAPH_CI_CELL_CLICK:"graphCiCellClick",GRAPH_CANVAS_CLICK:"graphCanvasClick",GRAPH_SCALE:"graphScale",GRAPH_VERTEX_CLONE:"graphVertexClone",VIEW_DELETE_BEFORE:"viewDeleteBefore",VIEW_DELETE_AFTER:"viewDeleteAfter",VIEW_UPDATE_BEFORE:"viewUpdateBefore",VIEW_PUBLIC_BEFORE:"viewPublicBefore",VIEW_UNPUBLIC_BEFORE:"viewUnpublicBefore",VIEW_SET_PUBLIC:"viewSetPublic",VIEW_SET_UNPUBLIC:"viewSetUnpublic",VIEW_SUBSCRIPTION_BEFORE:"viewSubscriptionBefore",VIEW_UNSUBSCRIPTION_BEFORE:"viewUnsubscriptionBefore",VIEW_SUBSCRIPTION_AFTER:"viewSubscriptionAfter",VIEW_UNSUBSCRIPTION_AFTER:"viewUnsubscriptionAfter",GRAPH_INFO_TOGGLE:"graphInfoToggle",GRAPH_TABLE_SHOW:"graphTableShow",GRAPH_TABLE_HIDE:"graphTableHide",GRAPH_CHANGE:"graphChange",GROUP_VIEW_ID_CHANGE:"groupViewIdChange",CI_TABLE_UNCHECKED:"ciTableUnchecked",SIDEBAR_CALLAPSED:"sidebarCallapsed",USERINFO_UPDATE:"userinfoUpdate",TIMELINE_POINT_CLICK:"timelinePointClick",GRAPH_MONITOR_UPDATE:"graphMonitorUpdate"}}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.factory("GraphContextMenu",["md5","ContextMenu","Unit","Const",function(t,e,i,n){var o="-",a=function(t,e,i){var n,r=null;for(n=0;n<e.length;n++){if(!e[n])throw new Error(n);angular.isArray(e[n])?a(t,e[n],r):angular.isObject(e[n])?"object"==typeof i?t.addItem(e[n].name,null,e[n].fun,i,e[n]):r=t.addItem(e[n].name,null,e[n].fun,null,e[n]):angular.isString(e[n])&&(e[n]===o?t.addSeparator(i):"object"==typeof i?t.addItem(e[n],null,null,i):r=t.addItem(e[n],null,null))}},r=function(t,e,i,n){var o,a,s;for(s=function(t,o,a){var r,s;r=a?a:t,s=o?o:i[t],e.push("function"==typeof s?{name:r,fun:function(t){var e=t?t:n.evt;n.that?s.apply(n.that,[e,n.selectionCell]):s.apply(n.editor,[e,n.selectionCell])}}:r)},o=0;o<t.length;o++){
if(!t[o])throw new Error(t[o]);t[o].constructor===Object&&t[o].name?s(t[o].name,t[o].fun,t[o].aliases):t[o].constructor===Array?(a=[],e.push(a),r(t[o],a,i,n)):s(t[o],i[t[o]])}},s={},l=function(t,i){this.editor=t.graph?t:{graph:t},this.option=i,this.menu=new e,this.items={cell:[],vertex:[],edge:[],canvas:[],all:[]},this.that=null,"object"==typeof i&&i.that&&(this.that=i.that),this.addLibs(i.libs),this.itemsInit(),this.bind()};return l.prototype.itemsInit=function(){var t,e,i=this;e=i.getLibs(),$.each(i.items,function(n){t=i.option[n]?i.option[n]:[],r(t,i.items[n],e,i)})},l.prototype.filter=function(t){var e,i,n=this,o=function(i){var a;for(a=0;a<i.length;a++)angular.isArray(i[a])?o(i[a]):e.apply(n,[i[a],t])&&(i[a]=n.createDisabledItem(i[a]))};return t&&t.vertex&&(e=n.filterVertex,i=angular.copy(n.items.vertex),o(i)),t&&t.edge&&(e=n.filterEdge,i=angular.copy(n.items.edge),o(i)),t||(e=n.filterCanvas,i=angular.copy(n.items.canvas),o(i)),i},l.prototype.filterVertex=function(t,e){var o,a=this;return angular.isObject(t)&&(o=t.name),(a.editor.graph.getCellAttr(e,"link")||o!==n.MENU_OPEN_URL)&&(a.editor.graph.getCellAttr(e,"view")||o!==n.MENU_VIEW_RELATION_OPEN)&&(i.isCiCell(e)||o!==n.MENU_EXPAND_NODE)?void 0:!0},l.prototype.filterEdge=function(){},l.prototype.filterCanvas=function(t){var e,i=this;return angular.isObject(t)&&(e=t.name),angular.isString(t)&&(e=t),i.editor.state.view&&e===n.MENU_VIEW_SAVE&&(t.name="另存视图"),(i.editor.state.view||e!==n.MENU_VIEW_UPDATE&&e!==n.MENU_VIEW_NEW)&&(0!==i.editor.graph.getDepCells().length||e!==n.MENU_EXPORT&&e!==n.MENU_LAYOUT&&e!==n.MENU_ZOOM_CENTER)?0===i.editor.history.count()&&e===n.MENU_VIEW_RELATION_BACK?!0:mxClipboard.cells||e!==n.MENU_CELL_PASTE?void 0:!0:!0},l.prototype.createDisabledItem=function(t){var e;return angular.isObject(t)&&(e=t.name),angular.isString(t)&&(e=t),{disabled:!0,name:e}},l.prototype.bind=function(){var t=this;mxPopupMenu.prototype.popup=function(t,e,i,n){if(null!==this.div&&null!==this.tbody&&null!==this.factoryMethod){for(this.div.style.left=t+"px",this.div.style.top=e+"px";null!==this.tbody.firstChild;)mxEvent.release(this.tbody.firstChild),this.tbody.removeChild(this.tbody.firstChild);this.itemCount=0,this.factoryMethod(this,i,n),this.itemCount>0&&(this.showMenu(),this.fireEvent(new mxEventObject(mxEvent.SHOW)))}},mxEvent.disableContextMenu(document.body),t.editor.graph.panningHandler.autoExpand=!0,t.editor.graph.popupMenuHandler.autoExpand=!0,t.editor.graph.popupMenuHandler.factoryMethod=function(e,i,n){t.selectionCell=i,t.evt=n,t.menu.clearAllItems(),a(t.menu,t.filter(i)),t.menu.show(n.clientX,n.clientY)}},l.prototype.addLibs=function(t){t&&t.constructor===Object&&$.each(t,function(e){this.constructor===Function&&(s[e]=t[e])})},l.prototype.getLibs=function(){return s},l}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.factory("GraphMonitor",["CiMonitorService","Unit","Const","$timeout","$window","$rootScope","Event",function(t,e,i,n,o,a,r){var s=null;return function(l){n.cancel(s),this.editor=l.editor,this.inMapping={},this.width=24,this.height=24,this.style="ellipse;strokeWidth=none;strokeColor=none;movable=0;",this.timeout=6e4,this.update=function(){var e,n,s=this,l=this.editor.state;l.startTime&&l.endTime?(e=l.startTime,n=l.endTime):(l.timeAverage&&(l.timeAverage=i.TIME_AVERAGE),n=o.parseInt((new Date).getTime()/1e3),e=n-l.timeAverage),t.getView([l.view.id],e,n).success(function(t){s.hideAll(),s.data=t.data,$.each(s.data[s.editor.state.view.id],function(){s.refresh(this.id,Number(this.alarm),this.count)}),s.editor.graph.refresh(),a.$broadcast(r.GRAPH_MONITOR_UPDATE)})},this.stop=function(){n.cancel(s)},this.start=function(){var t=this;n.cancel(s),s=n(function(){t.update(),t.start()},t.timeout)},this.create=function(t,e,n){var o=this.getCi(t);if(o){var a=o.getGeometry();this.inMapping[o.id]=this.editor.graph.insertVertex(o.getParent(),i.IN_PREFIX+o.id,n?n:0,a.x-this.width/2,a.y-this.height/2,this.width,this.height,this.style),this.setValue(o.id,e,n)}},this.refresh=function(t,e,i){var n=this.getCi(t);n?this.inMapping[n.id]?(this.setValue(n.id,e,i),this.editor.graph.setCellStyles(mxConstants.STYLE_OPACITY,100,[n])):this.create(t,e,i):this.create()},this.setValue=function(t,i,n){if(this.inMapping[t]){var o=this.inMapping[t],a=e.getLevelColor(i),r=this.style+"fillColor="+a.bg+";fontColor="+a.fc;o.setValue(n),o.setStyle(r)}},this.remove=function(t){this.inMapping[t]&&(this.editor.graph.removeCells(this.inMapping[t]),this.inMapping[t]=null)},this.hideAll=function(){var t=[];$.each(this.inMapping,function(){this.setValue(""),t.push(this)}),this.editor.graph.setCellStyles(mxConstants.STYLE_OPACITY,0,t)},this.getCi=function(t){var e=this;return angular.isString(t)&&(-1===t.indexOf(i.CI_PREFIX)&&(t=i.CI_PREFIX+t),t=e.editor.graph.getCellById(t)),t},this.start()}}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.factory("GraphHisotry",function(){return function(t){this.history=[],this.push=function(t){this.history.push(t)},this.back=function(){if(this.history.length){var e=this.history.pop();t.action.openView(e),this.refreshNavigation()}},this.showNavigation=function(){},this.hideNavigation=function(){},this.refreshNavigation=function(){},this.count=function(){return this.history.length}}})}(nameSpace.reg("graph")),function(t){"use strict";t.app.factory("HttpInterceptor",["$q","Unit","$cookies",function(t,e,i){var n=0;return{request:function(t){return t.timeout=6e4,t.headers.token=i.get("token"),t.cache||-1===t.url.indexOf("/api/rest/")||(n++,e.loadingbar.show()),t},response:function(t){return angular.isObject(t.data)&&t.data.message&&"GET"!==t.config.method&&e.success(t.data.message),-1!==t.config.url.indexOf("/api/rest/")&&(n--,0===n&&e.loadingbar.hide()),t},responseError:function(o){return 403===o.status||null===o.data?(n--,0===n&&(e.error("请求超时"),e.loadingbar.rollback())):e.loadingbar.error(),angular.isObject(o.data)&&o.data.message&&e.error(o.data.message),401===o.status&&i.remove("token"),t.reject(o)}}}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.factory("KeyCode",[function(){return function(t,e,i){var n,o;if("object"==typeof t&&t.length?this.dom=t:("string"==typeof t||"object"==typeof t&&!t.length)&&(this.dom=$(t)),this.dom.focus(),this.obj=e,this.hasSame=function(){var t=[],e=0;for(n in this.obj)t.push(n.replace(/\s/g,""));for(n=0;n<t.length;n++){for(o=0;o<t.length;o++)t[n]===t[o]&&e++;if(e>1)return!0;e=0}return!1},this.hasSame())throw new Error("快捷键有重复");i&&(this.parameter=i),this.value={9:"tab",46:"delete",13:"enter",16:"shift",17:"ctrl",18:"alt",37:"left",38:"up",39:"right",40:"down",41:"select",48:0,49:1,50:2,51:3,52:4,53:5,54:6,55:7,56:8,57:9,65:"a",66:"b",67:"c",68:"d",69:"e",70:"f",71:"g",72:"h",73:"i",74:"j",75:"k",76:"l",77:"m",78:"n",79:"o",80:"p",81:"q",82:"r",83:"s",84:"t",85:"u",86:"v",87:"w",88:"x",89:"y",90:"z"};var a=this;this.hotKey=function(t){var e,i=t||event,n="";n=!i.ctrlKey||i.altKey||i.shiftKey?!i.altKey||i.ctrlKey||i.shiftKey?!i.shiftKey||i.altKey||i.ctrlKey?i.ctrlKey&&i.altKey&&!i.shiftKey?"ctrl+alt+"+a.value[i.keyCode]:i.ctrlKey&&i.shiftKey&&!i.altKey?"ctrl+shift+"+a.value[i.keyCode]:i.ctrlKey&&i.altKey&&i.shiftKey?"ctrl+alt+shift+"+a.value[i.keyCode]:a.value[i.keyCode]:"shift+"+a.value[i.keyCode]:"alt+"+a.value[i.keyCode]:"ctrl+"+a.value[i.keyCode];for(e in a.obj)if(n===e.replace(/\s/g,""))return"function"==typeof a.obj[e]?a.parameter?a.apply.obj[e](a.parameter):a.obj[e]():"string"==typeof a.obj[e]&&a.parameter&&a.parameter[a.obj[e]](),i.preventDefault(),i.stopPropagation(),!1},this.watch=function(){this.dom.bind("keydown",this.hotKey)},this.unwatch=function(){this.dom.unbind("keydown",this.hotKey)},this.watch()}}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.factory("LoadMesh",["md5",function(t){return function(){this.cacheObj={},this.load=function(e,i){var n,o=this;if(n=t.createHash(e.img),o.cacheObj[n])i(o.cacheObj[n].clone());else{var a;a=new THREE.OBJMTLLoader,a.load(e.mesh.obj,e.mesh.mtl,function(t){o.cacheObj[n]=t,i(t.clone())})}},this.destroy=function(){this.cacheObj={}}}}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.factory("MxEditor",["$rootScope","Unit","Event","$timeout",function(e,i,n,o){return function(a){var r=a.graph.model.getStyle,s=new mxEditor;s.graph=a.graph,s.installDblClickHandler(s.graph),s.installUndoHandler(s.graph),s.installDrillHandler(s.graph),s.installChangeHandler(s.graph),s.installInsertHandler(s.graph),s.graph.panningHandler.factoryMethod=mxUtils.bind(s,function(t,e,i){return this.createPopupMenu(t,e,i)}),s.graph.connectionHandler.factoryMethod=mxUtils.bind(s,function(t,e){return this.createEdge(t,e)}),s.createLayoutManager(s.graph),s.graph.connectionHandler.createTargetVertex=function(e,i){var o=mxConnectionHandler.prototype.createTargetVertex.apply(s.graph.connectionHandler,arguments);return t.event.trigger(n.GRAPH_VERTEX_CLONE,{source:i,clone:o,graph:s.graph}),o},s.graph.addListener(mxEvent.CLICK,function(t,o){var r,s;r=o.getProperty("event"),s=o.getProperty("cell"),s&&1===r.which&&(e.$broadcast(n.GRAPH_CELL_CLICK,i.eventData({editor:a,cell:s})),i.isCiCell(s)&&e.$broadcast(n.GRAPH_CI_CELL_CLICK,i.eventData({editor:a,cell:s}))),s||(e.$broadcast(n.GRAPH_CANVAS_CLICK,i.eventData({editor:a})),e.$emit(n.GRAPH_CANVAS_CLICK,i.eventData({editor:a})))}),s.graph.model.getStyle=function(t){if(null!==t){var e={style:r.apply(this,arguments),cell:t,graph:s.graph,editor:s};return e.style}return null},s.keyHandler.handler.enabled=!1,s.graph.keyHandler=s.keyHandler,s.graph.getCursorForCell=function(t){var e;return e=mxGraph.prototype.getCursorForCell.apply(this,arguments),t&&i.isCiIn(t)&&(e="pointer"),e},e.$on(n.GRAPH_INFO_TOGGLE,function(){o(function(){a.action.zoomCenter()})})}}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.factory("Outline",["Editor","Unit","AutoLayout",function(t,e,i){var n=function(t,e,i){var n=this;i=i||{},n.isIE=navigator.userAgent.indexOf("MSIE")>=0||navigator.userAgent.search(/Trident/i)>=0,n.layout=i.layout||"top",n.json=t,n.container=e,n.speed=400,n.graphMargin=10,n.clearClassName="clear",n.maskClassName="mask",n.maskHoverClassName="maskHover",n.maskElements=[],n.graphElements=[],n.scrollDivSize=i.toolbarSize||130,n.outLineDiv={Magnification:1.5,borderWidth:1,size:i.outLineSize||.9,marginLR:10,boxBgColor:"#000",boxBorderWidth:0,boxBorderColor:"#FFF",maxDisplayCount:i.maxCount||4},n.loading={width:300,height:30,borderWidth:1,borderColor:"green",padding:5,fontSize:30,color:"green",bgColor:"#F5F5F5",text:"Waiting Please ..."},n.tip={height:24,fontSize:14,padding:5,bgColor:"rgb(112, 176, 222)",color:"#FFF"},n.page={size:20,padding:3,fontSize:10,color:"#FFF",bgColor:"rgb(112, 176, 222)",opacity:.8},n.pageBtnStyle={size:20,marginLR:20,offset:5,color:i.btnColor||"white"},n.upBgColor=i.toolbarBgColor||"black",n.init(),n.loadData(),n.createDiv(),n.createGraph(),n.outlineEvents(),n.json.length>n.outLineDiv.maxDisplayCount&&(n.createPageBtn(),n.pageBtnEvents()),n.contextMenu()};n.prototype.init=function(){var t,e=this;t=e.outLineDiv,t.size>.9?t.size=.9:t.size<.1&&(t.size=.1),e.isHorizontalLayout()?(t.height=parseInt(e.scrollDivSize*t.size,10),t.width=parseInt(t.height*t.Magnification,10)):(t.width=parseInt(e.scrollDivSize*t.size,10),t.height=parseInt(t.width/t.Magnification,10))};var o=function(t){var e=document.createElement("div");return e.id=t,e},a=function(){var t=this,e=t.outLineDiv,i=t.loading;t.scrollContainer=o("scroll"),t.scrollContainer.style.cssText=["width: "+t.scrollDivSize+"px","height: 100%","overflow: hidden","background: "+t.upBgColor,"position: absolute","top: 0",t.layout+" : 0","z-index: 9"].join(";"),t.centerElement=o("center"),t.centerElement.style.cssText=["border: "+e.boxBorderWidth+"px solid "+e.boxBorderColor,"position: absolute","left: 0","right: 0","bottom: 0","top :0","height: "+(e.height+2*e.marginLR)*e.maxDisplayCount+"px","width: "+(e.width+2*e.borderWidth)+"px","margin: auto"].join(";"),t.actionElement=o("action"),t.actionElement.style.cssText=["width: 100%","height: 100%","overflow: hidden"].join(";"),t.scrollItemsContainer=o("items"),t.scrollItemsContainer.style.cssText=["height: "+(e.width+2*e.borderWidth+2*e.marginLR)*t.json.length+"px","width: 100%","overflow: hidden"].join(";"),t.scrollItemsContainer.className=t.clearClassName,t.actionElement.appendChild(t.scrollItemsContainer),t.centerElement.appendChild(t.actionElement),t.scrollContainer.appendChild(t.centerElement),t.mainContainer=o("main"),t.mainContainer.style.cssText=["position: absolute","width: "+($(t.container).width()-t.scrollDivSize)+"px","height: 100%","top: 0","left"===t.layout?"right: 0":"left: 0"].join(";"),t.loadingContainer=o("loading"),t.loadingContainer.style.cssText=["width: "+i.width+"px","height: "+i.height+"px","padding: "+i.padding+"px","color: "+i.color,"background: "+i.bgColor,"position: absolute","font-size: "+i.fontSize+"px","border: "+i.borderWidth+"px solid "+i.borderColor,"left: 0","top: 0","right: 0","bottom: 0","font-width: bold","line-height: "+i.height+"px","text-align: center","font-family: Arial","margin: auto"].join(";"),t.loadingContainer.innerHTML=i.text,t.mainContainer.appendChild(t.loadingContainer),t.container.appendChild(t.scrollContainer),t.container.appendChild(t.mainContainer)},r=function(){var t=this,e=t.outLineDiv,i=t.loading;t.scrollContainer=o("scroll"),t.scrollContainer.style.cssText=["width: 100%","overflow: hidden","position: absolute","background: "+t.upBgColor,"height: "+t.scrollDivSize+"px","left: 0","z-index: 9",t.layout+": 0"].join(";"),t.centerElement=o("center"),t.centerElement.style.cssText=["border: "+e.boxBorderWidth+"px solid "+e.boxBorderColor,"position: absolute","left: 0","right: 0","bottom: 0","top :0","width: "+(e.width+2*e.marginLR)*e.maxDisplayCount+"px","height: "+(e.height+2*e.borderWidth)+"px","margin: auto"].join(";"),t.actionElement=o("action"),t.actionElement.style.cssText=["width: 100%","height: 100%","overflow: hidden"].join(";"),t.scrollItemsContainer=o("items"),t.scrollItemsContainer.style.cssText=["width: "+(e.width+2*e.borderWidth+2*e.marginLR)*t.json.length+"px","height: 100%","overflow: hidden"].join(";"),t.scrollItemsContainer.className=t.clearClassName,t.actionElement.appendChild(t.scrollItemsContainer),t.centerElement.appendChild(t.actionElement),t.scrollContainer.appendChild(t.centerElement),t.mainContainer=o("main"),t.mainContainer.style.cssText=["position: absolute","width: 100%","height: "+($(t.container).height()-t.scrollDivSize)+"px","left: 0","top"===t.layout?"bottom: 0":"top: 0"].join(";"),t.loadingContainer=o("loading"),t.loadingContainer.style.cssText=["width: "+i.width+"px","height: "+i.height+"px","padding: "+i.padding+"px","color: "+i.color,"background: "+i.bgColor,"position: absolute","font-size: "+i.fontSize+"px","border: "+i.borderWidth+"px solid "+i.borderColor,"left: 0","top: 0","right: 0","bottom: 0","font-width: bold","line-height: "+i.height+"px","text-align: center","font-family: Arial","margin: auto"].join(";"),t.loadingContainer.innerHTML=i.text,t.mainContainer.appendChild(t.loadingContainer),t.container.appendChild(t.scrollContainer),t.container.appendChild(t.mainContainer)};n.prototype.resize=function(){var t=this;t.mainContainer.style.height=$(t.container).height()-t.scrollDivSize+"px"},n.prototype.createDiv=function(){var t=this;t.isHorizontalLayout()?r.apply(t):a.apply(t)},n.prototype.isHorizontalLayout=function(){var t,e=this;return t=!("top"!==e.layout&&"bottom"!==e.layout)},n.prototype.openXml=function(t){var e=this;"string"==typeof t.xml?(e.editor.action.openXml(t.xml),e.editor.graph.setConnectable(!1),e.editor.graph.json=t,e.editor.viewid=t.id):"function"==typeof t.xml&&t.xml(e.editor,t)},n.prototype.createGraph=function(){var n,o,a,r,s=this,l=s.outLineDiv,c=null,u=null,p=null,h=null,d=null,g=null;for(a=document.createElement("div"),a.style.cssText=["width: 100%","height: 100%","position: absolute","background: #FFF","left: 0","top: 0"].join(";"),s.mainContainer.appendChild(a),r=new t(a),r.zoomLock=!0,r.graph.setCellsSelectable(!1),r.graph.setCellsMovable(!1),r.graph.setCellsEditable(!1),r.graph.setExtendParents(!1),r.graph.setConnectable(!1),a.style.background="#FFF",new i(r.graph),r.graph.refresh(),s.editor=r,n=0,o=s.json.length;o>n;n++)c=document.createElement("div"),c.style.cssText=["width: "+l.width+"px","height: "+l.height+"px",s.isHorizontalLayout()?"margin:0 "+l.marginLR+"px":"margin:"+l.marginLR+"px 0","border: "+l.borderWidth+"px solid #CCC","overflow: hidden","position: relative","float: left","background: #FFF"].join(";"),d=document.createElement("img"),d.style.cssText=["width: 100%","height: 100%","position: absolute","left: 0","top: 0"].join(";"),d.src=e["static"](s.json[n].imageUrl),g=document.createElement("div"),g.style.cssText=["width: 100%","height: 100%","position: absolute","background: #000","cursor: pointer","left: 0","opacity: .2","top: 0","z-index: 9999"].join(";"),g.title=s.json[n].name,g.setAttribute("data-id",s.json[n].id),s.maskElements.push(g),p=document.createElement("div"),p.style.cssText=["width: 100%","height: "+s.tip.height+"px","position: absolute","background: "+s.tip.bgColor,"z-index: 22","left: 0","bottom: 0"].join(";"),h=document.createElement("div"),h.style.cssText=["position: absolute","padding: "+s.tip.padding+"px","color: "+s.tip.color,"font-size: "+s.tip.fontSize+"px","z-index: 22","line-height: 1em","left: 0","bottom: 0","top: 0","right: 0","margin: auto"].join(";"),h.innerHTML=s.json[n].name,p.appendChild(h),u=document.createElement("div"),u.style.cssText=["width: "+2*s.page.size+"px","height: "+s.page.size+"px","border-radius: "+(s.page.size+2*s.page.padding)/2+"px","padding: "+s.page.padding+"px","position: absolute","text-align: center","line-height: 15px","color: "+s.page.color,"font-size: "+s.page.fontSize+"px","opacity: "+s.page.opacity,"background: "+s.page.bgColor,"z-index: 22","right: 0","top: 0","margin: 5px 5px 0 0"].join(";"),u.innerHTML=[n+1,o].join("/"),c.appendChild(d),c.appendChild(g),c.appendChild(u),c.appendChild(p),s.scrollItemsContainer.appendChild(c)},n.prototype.loadData=function(){var t=0,e=this;if(e.map={},e.json)for(t=0;t<e.json.length;t++)e.map[e.json[t].id]=e.json[t]};var s=function(){var t=this,e=$(t.centerElement).width(),i=$(t.centerElement).height(),n=t.pageBtnStyle;t.nextBtn=document.createElement("div"),t.nextBtn.style.cssText=["width: 0px","height: 0px","font-size: 0px","line-height: 0px","position: absolute","cursor: pointer","border-bottom: "+n.size+"px solid transparent","border-top: "+n.size+"px solid transparent","border-left: "+n.size+"px solid "+n.color,"top: "+(i-2*n.size)/2+"px","z-index: 99999","left: "+(e+n.offset)+"px"].join(";"),t.prevBtn=document.createElement("div"),t.prevBtn.style.cssText=["width: 0px","height: 0px","font-size: 0px","line-height: 0px","position: absolute","cursor: pointer","border-bottom: "+n.size+"px solid transparent","border-top: "+n.size+"px solid transparent","border-right: "+n.size+"px solid "+n.color,"top: "+(i-2*n.size)/2+"px","z-index: 99999","left: "+-1*(n.offset+n.size)+"px"].join(";"),t.centerElement.appendChild(t.nextBtn),t.centerElement.appendChild(t.prevBtn)},l=function(){var t=this,e=$(t.centerElement).height(),i=t.pageBtnStyle;t.nextBtn=document.createElement("div"),t.nextBtn.style.cssText=["width: 0px","height: 0px","font-size: 0px","line-height: 0px","position: absolute","cursor: pointer","border-right: "+i.size+"px solid transparent","border-left: "+i.size+"px solid transparent","border-top: "+i.size+"px solid "+i.color,"left: 0","right: 0","top: "+(e+i.offset)+"px","z-index: 99999","margin: auto"].join(";"),t.prevBtn=document.createElement("div"),t.prevBtn.style.cssText=["width: 0px","height: 0px","font-size: 0px","line-height: 0px","position: absolute","cursor: pointer","border-left: "+i.size+"px solid transparent","border-right: "+i.size+"px solid transparent","border-bottom: "+i.size+"px solid "+i.color,"z-index: 99999","left: 0","right: 0","top: "+-1*(i.offset+i.size)+"px","margin: auto"].join(";"),t.centerElement.appendChild(t.nextBtn),t.centerElement.appendChild(t.prevBtn)};n.prototype.createPageBtn=function(){var t=this;t.isHorizontalLayout()?s.apply(t):l.apply(t)};var c=function(t,e){var i,n;for(i=0,n=t.length;n>i;i++)e.apply(t[i],[i])};n.prototype.outlineEvents=function(){var t=this;t.openXml(t.json[0]),c(t.maskElements,function(e){var i,n;0===e&&$(this).addClass(t.maskClassName);var o=$(this).css("opacity"),a=1;$(this).mouseover(function(){a=$(this).css("opacity"),$(this).addClass(t.maskHoverClassName),$(this).css("opacity",0)}).mouseout(function(){$(this).removeClass(t.maskHoverClassName),$(this).css("opacity",a)}).click(function(){0!=$(this).css("opacity")&&(o=$(this).css("opacity")),$("#items > div").each(function(){$(this).find("div[data-id]").css("opacity",o)}),a=0,$(this).css("opacity",0);var e;n=this,e=t.map[$(n).attr("data-id")],t.openXml(e),t.outlineClick&&t.outlineClick(),c(t.maskElements,function(e){n===t.maskElements[e]?(i=e,$(this).addClass(t.maskClassName)):$(this).removeClass(t.maskClassName)})})})};var u=function(){var t=this,e=t.outLineDiv,i=e.width+2*e.marginLR,n=(t.json.length-t.outLineDiv.maxDisplayCount)*i;t.scrollLock=!1,$(t.nextBtn).click(function(){if(!t.scrollLock){var e=$(t.actionElement).scrollLeft()+i;n>=e&&(t.scrollLock=!0,$(t.actionElement).animate({scrollLeft:e},t.speed,function(){t.scrollLock=!1}))}}),$(t.prevBtn).click(function(){if(!t.scrollLock){var e=$(t.actionElement).scrollLeft()-i;$(t.actionElement).scrollLeft()>0&&(t.scrollLock=!0,$(t.actionElement).animate({scrollLeft:e},t.speed,function(){t.scrollLock=!1}))}})},p=function(){var t=this,e=t.outLineDiv,i=e.height+2*e.marginLR+2*e.borderWidth,n=(t.json.length-t.outLineDiv.maxDisplayCount)*i;$(t.nextBtn).click(function(){$(t.actionElement).stop();var e=$(t.actionElement).scrollTop()+i;n>=e&&$(t.actionElement).animate({scrollTop:e},t.speed)}),$(t.prevBtn).click(function(){$(t.actionElement).stop();var e=$(t.actionElement).scrollTop()-i;$(t.actionElement).scrollTop()>0&&$(t.actionElement).animate({scrollTop:e},t.speed)})};return n.prototype.pageBtnEvents=function(){var t=this;t.isHorizontalLayout()?u.apply(t):p.apply(t)},n.prototype.contextMenu=function(){},n}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.factory("GraphState",function(){return function(){this.setView=function(t){this.view=t},this.empty=function(){this.view=null},this.isShowGrid=!0,this.isAssistLine=!0,this.isAutoLayout=!0,this.isAutoLine=!0}})}(nameSpace.reg("graph")),function(t){"use strict";t.app.factory("Unit",["$window","$interval","Const",function(t,e,i){var n={};return n.options={},n.options.toastr={closeButton:!0,progressBar:!1,timeOut:1500},n.api=function(t){return"../api/rest"+t},n["static"]=function(t){return angular.isString(t)?(0===t.indexOf("../")&&(t=t.substr(3)),0===t.indexOf("/")&&(t=t.substr(1)),"../static/"+t):t},n.success=function(t){toastr.success(t,null,n.options.toastr)},n.error=function(t){toastr.error(t,null,n.options.toastr)},n.warning=function(t){toastr.warning(t,null,n.options.toastr)},n.basename=function(t){var e=t.split("/");return e.pop()},n.formatCategoryData=function(t){angular.forEach(t,function(t){t.icon=n["static"](t.icon)})},n.getStyleForAttr=function(t,e){var i="",n="";return t.style&&""!==t.style?(i=t.style.split(";"),$.each(i,function(){return this.indexOf(e)>=0?(n=this.split("=")[1],!1):void 0})):n="",n},n.isCiCell=function(t){return"object"==typeof t&&"string"==typeof t.id&&0===t.id.indexOf(i.CI_PREFIX)},n.isCiIn=function(t){return t.id.indexOf(i.IN_PREFIX)>=0},n.getCiIdByCell=function(t){return t.id.split("_").pop()},n.alert=function(t){bootbox.alert(String(t))},n.confirm=function(t,e){bootbox.confirm(String(t),function(t){t&&e()})},n.prompt=function(t,e,i){bootbox.prompt({title:String(t),value:String(i),callback:function(t){e(t)}})},n.unixToDatetime=function(t){var e=new Date(t);return[[e.getFullYear(),e.getMonth()+1<10?"0"+(e.getMonth()+1):e.getMonth()+1,e.getDate()<10?"0"+e.getDate():e.getDate()].join("-"),[e.getHours()<10?"0"+e.getHours():e.getHours(),e.getMinutes()<10?"0"+e.getMinutes():e.getMinutes(),e.getSeconds()<10?"0"+e.getSeconds():e.getSeconds()].join(":")].join(" ")},n.datetimeToUnix=function(t){var e=t.replace(/:/g,"-");e=e.replace(/ /g,"-");var i=e.split("-"),n=new Date(Date.UTC(i[0],i[1]-1,i[2],i[3]-8,i[4],i[5]));return parseInt(n.getTime()/1e3)},n.eventData=function(t){return n.isCiCell(t.cell)&&(t.cell.dbid=n.getCiIdByCell(t.cell)),t},n.loadingbar=function(){var t,i,n,o=$(".loadingbar-process"),a=-50;return{show:function(){e.cancel(t),e.cancel(i),e.cancel(n),a=0!==o.width()?o.width()/$(".loadingbar").width()*1e3:-50,$(o).stop(),$(o).fadeIn("slow"),t=e(function(){100>a?a+=10:900>=a&&(a+=Math.ceil(40*Math.random()/10)),a>=900&&e.cancel(t),o.css("width",.1*a+"%")},17)},hide:function(){e.cancel(t),e.cancel(i),e.cancel(n);var r=a;$(o).stop(),o.css("opacity",1),i=e(function(){a>1e3?(e.cancel(i),$(o).fadeOut("slow",function(){o.css("width",0).css("opacity",1)})):o.css("width",.1*a+"%"),a+=100>r?10:500>r?5:800>r?3:2},10)},rollback:function(){e.cancel(t),e.cancel(i),e.cancel(n),a=o.width()/$(".loadingbar").width()*1e3,n=e(function(){a-=10,o.css("width",.1*a+"%"),0>=a&&(e.cancel(n),$(o).fadeOut("slow",function(){o.css("width",0).css("opacity",1)}))},10)},error:function(){$(o).fadeOut()}}}(),n.getLevelColor=function(t){var e;switch(t){case 5:e={bg:"#FD0004",fc:"#FFFFFF"};break;case 4:e={bg:"#FFC100",fc:"#FFFFFF"};break;case 3:e={bg:"#FF8201",fc:"#000000"};break;case 2:e={bg:"#03B0ED",fc:"#FFFFFF"};break;default:e={bg:"#94D04A",fc:"#FFFFFF"}}return e},n.download=function(t){var e;e=document.createElement("a"),e.download=t,e.target="_blank",e.href=n.api("/download/")+t,document.body.appendChild(e),e.click(),document.body.removeChild(e)},n.layout=function(t,e,i){var n;n=t.getChildVertices(),t.getModel().beginUpdate();try{e.execute(t.getDefaultParent(),n)}catch(o){throw o}finally{if(i&&navigator.userAgent.indexOf("Camino")<0){var a=new mxMorphing(t);a.addListener(mxEvent.DONE,mxUtils.bind(this,function(){t.getModel().endUpdate()})),a.startAnimation()}else t.getModel().endUpdate()}},n.handleGraphJson=function(){},n}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.factory("Universe",["Const","LoadMesh","FontService",function(e,i,n){function o(t){this.options=t,this.loadObj=new i,this.meshBizInfo={},this.$container=t.$container,this.defaultNodeDepth=e.WEBGL_NODE_DEPTH,this.defaultLayerWidth=e.WEBGL_LAYER_WIDTH,this.defaultLayerHeight=e.WEBGL_LAYER_HEIGHT,this.margin=e.WEBGL_LAYER_MARGIN,this.sceneWidth=this.$container.width(),this.sceneHeight=this.$container.height(),this.fov=30,this.selected=[],this.layers=[],this.ballAnimationQueue=[],this.allNodes=[],this.allTexts=[],this.textsMap={},this.allCiIds=[],this.allCiObj={},this.allLineMesh=[],this.initThree(),this.initScene(),this.initCamera(),this.initLight(),this.enableScrollWheelZoom(),this.resize(),this.animate(),this.click(),this.event(),this.initLayer()}return o.prototype.blink=function(t,e){for(var i={},n=t,o=0,a=n.children.length;a>o;o++)0===o?i=n.children[o].geometry.clone():THREE.GeometryUtils.merge(i,n.children[o]);this.blinkList[e]=this.blinkList[e]||new THREE.Mesh(i,new THREE.MeshBasicMaterial({color:16711680,transparent:!0,opacity:.4})),this.blinkList[e].geometry=i;var r=t.scale;this.blinkList[e].scale.set(r.x,r.y,r.z),t.parent.updateMatrixWorld();var s=new THREE.Vector3;s.setFromMatrixPosition(t.matrixWorld),this.blinkList[e].position.set(s.x,s.y,s.z),t.parent.rotation.x===Math.PI&&(this.blinkList[e].rotation.x=Math.PI/2),this.scene.add(this.blinkList[e])},o.prototype.showTimeline=function(){var e,i=this,n=[];i.blinkObj={},i.blinkList={},e=function(e){$.each(e,function(e){var o,a=this;$.each(i.layers,function(t){var n=this;$.each(n,function(n){var o=[t,n,e].join("_");6===a.alarmLevel?i.blinkObj[o]&&(i.scene.remove(i.blinkList[o]),delete i.blinkObj[o]):i.allCiObj[o]&&(i.blinkObj[o]=i.allCiObj[o],i.blink(i.blinkObj[o],o))})}),6!==a.alarmLevel&&(o=t.utils.getLevelColor(a.alarmLevel),n.push({id:e,bg:o.bg,fc:o.fc}))})},i.timeline=t.Timeline({onload:function(){},clickedPoint:function(t){t&&e(t)},show:function(){},hide:function(){},ids:i.allCiIds,container:this.$container.parent()[0]}),e(i.timeline.timeData[1].data),i.timeline.show()},o.prototype.closeTimeline=function(){var t=this;$.each(t.blinkList,function(){t.scene.remove(this)}),t.blinkObj=null,t.blinkList=null,t.removeHighlightSelected(),t.timeline.remove()},o.prototype.close=function(){var t=this;t.timeline&&t.timeline.stopUpdateInterval(),$.each(t.scene.children,function(){t.scene.remove(this)})},o.prototype.event=function(){},o.prototype.removeHighlightSelected=function(){var t=this;$.each(t.selected,function(){t.scene.remove(this)}),t.selected=[]},o.prototype.getCiMesh=function(t){var e=[],i=this;return $.each(i.allCiObj,function(i){var n=this;i.split("_").pop()===t&&e.push(n)}),e},o.prototype.highlightNodeId=function(t){var i=this,n=[];i.hideLayerLine(),$.each(i.allNodes,function(){var o=this;o.id===t&&(n.push(o),$.each(i.getRelationLineByNodeId(o.id),function(){var t=this;n.push(t.node),t.line.material.color.setHex(e.WEBGL_LAYER_LINE_COLOR_SELECTION),t.line.visible=!0}))}),i.highlightSelected(n)},o.prototype.highlightSelected=function(t){var e=this;$.each(t,function(){for(var t,i=this,n={},o=i,a=0,r=o.children.length;r>a;a++)0===a?n=o.children[a].geometry.clone():THREE.GeometryUtils.merge(n,o.children[a]);t=new THREE.Mesh(n,new THREE.MeshBasicMaterial({color:16750848,transparent:!0,opacity:.4})),e.selected.push(t),t.geometry=n;var s=i.scale;t.scale.set(s.x,s.y,s.z),i.parent.updateMatrixWorld();var l=new THREE.Vector3;l.setFromMatrixPosition(i.matrixWorld),t.position.set(l.x,l.y,l.z),i.parent.rotation.x===Math.PI&&(t.rotation.x=Math.PI/2),e.scene.add(t)})},o.prototype.click=function(){var t,e,i=this;e=i.renderer.domElement,$(e).click(function(n){n.preventDefault();var o=e.offsetLeft,a=e.offsetTop,r=e.offsetWidth,s=e.offsetHeight,l=new THREE.Vector3((n.clientX-o)/r*2-1,-(n.clientY-a)/s*2+1,1);l.unproject(i.camera),l.sub(i.camera.position),l.normalize();var c=new THREE.Raycaster(i.camera.position,l),u=c.intersectObjects(i.allNodes,!0);i.removeHighlightSelected(),u.length>0&&(i.hideLayerLine(),t=u[0].object.parent,i.highlightNodeId(t.id));var p=c.intersectObjects(i.allTexts,!0);p.length>0})},o.prototype.converPosition=function(t,e,i){var n,o,a,r,s,l,c,u,p,h,d,g;if(u=this,a=0,r=0,l=u.defaultLayerHeight/e,c=u.defaultLayerWidth/t,c*u.defaultLayerHeight<=e?(s=c,r=(u.defaultLayerHeight-e*s)/2):(s=l,a=(u.defaultLayerWidth-t*s)/2),i.nodes)for(d=i.nodes,p=0,h=d.length;h>p;p++)o=d[p],o.width=o.width*s,o.height=o.height*s,o.x=o.x*s+a,o.y=o.y*s+r;if(i.containers)for(d=i.containers,p=0,h=d.length;h>p;p++)o=d[p],o.width=o.width*s,o.height=o.height*s,o.x=o.x*s+a,o.y=o.y*s+r;return i.edges?(n=function(t){t.x=t.x*s+a,t.y=t.y*s+r},g=[],$.each(i.edges,function(){var t=this;$.each(t.points,function(){g.push(n(this))})}),g):void 0},o.prototype.drawNode=function(t,i){var n,o,a,r;n=this,t.node={},a=angular.copy(t.nodes),o=function(i,o){var a;i.position.set(o.x-n.defaultLayerWidth/2+o.width/2,o.y-n.defaultLayerHeight/2+o.height/2,n.defaultNodeDepth/2*-1),i.rotation.x=Math.PI/2*-1,i.scale.x=o.width,i.scale.y=o.height,i.scale.z=o.width,t.node[o.id]={info:o,cube:i},n.drawNodeTexture(t,o),t.plane.add(i),n.allNodes.push(i),0===o.id.indexOf(e.CI_PREFIX)&&(a=o.id.substr(e.CI_PREFIX.length),n.allCiIds.push(a),n.allCiObj[[t.row,t.col,a].join("_")]=i),n.meshBizInfo[i.id]=t.node[o.id].info},(r=function(t){var e=t.pop();n.loadObj.load(e,function(n){o(n,e),t.length>=1?r(t):i()})})(a)},o.prototype.getResource=function(i){var n,o;return i?(n=i.split("/"),o=n.pop(),o=o.substring(0,o.lastIndexOf("."))):o=e.WEBGL_DEFAULT_MESH_NAME,{obj:t.DEFINE_WEBGL.RESOURCE_DIR+encodeURIComponent(o)+".obj",mtl:t.DEFINE_WEBGL.RESOURCE_DIR+encodeURIComponent(o)+".mtl"}},o.prototype.drawLine=function(t){var i,n,o,a,r,s;if(o=this,t.edges){for(i=function(i){var n,a,r,s,l,c,u,p;

for(l=new THREE.LineBasicMaterial({color:e.WEBGL_LINE_COLOR}),r=new THREE.Geometry,n=function(t){return r.vertices.push(new THREE.Vector3(t.x-o.defaultLayerWidth/2,t.y-o.defaultLayerHeight/2,-4))},p=i.points,c=0,u=p.length;u>c;c++)a=p[c],n(a);s=new THREE.Line(r,l),t.plane.add(s)},s=[],a=0,r=t.edges.length;r>a;a++)n=t.edges[a],s.push(i(n));return s}},o.prototype.drawNodeTexture=function(t,i){var n,o,a,r,s,l,c,u,p,h;return s=this,r=t.node[i.id].cube.position,o=new THREE.MeshBasicMaterial({color:e.WEBGL_NODE_FONT_COLOR}),a=new THREE.MeshBasicMaterial({color:e.WEBGL_NODE_FONT_SIDE_COLOR}),n=[o,a],l=new THREE.TextGeometry(i.name,{size:e.WEBGL_NODE_FONT_SIZE,height:1,curveSegments:1,font:"lisu",weight:"normal",style:"normal",extrudeMaterial:0}),u=new THREE.MeshFaceMaterial(n),p=new THREE.Mesh(l,u),l.computeBoundingBox(),h=l.boundingBox.max.x-l.boundingBox.min.x,c=l.boundingBox.max.y-l.boundingBox.min.y,p.rotation.x=-1*Math.PI,p.position.set(r.x-h/2,r.y+i.height/2+c+2,s.defaultNodeDepth/2*-1),t.plane.add(p),t.node[i.id].textMesh=p,p},o.prototype.resize=function(){var t=this.$container.width(),e=this.$container.height();return this.$container.find("canvas").height(e).width(t),THREEx.ContainerResize(this.$container[0],this.renderer,this.camera)},o.prototype.initThree=function(){this.renderer=new THREE.WebGLRenderer({antialias:!0,alpha:!0}),this.renderer.setSize(this.sceneWidth,this.sceneHeight),this.$container.append(this.renderer.domElement),this.renderer.setClearColor(16777215,1)},o.prototype.loadTexture=function(t){return THREE.ImageUtils.loadTexture(t)},o.prototype.initCamera=function(){var t,i,n;i=this.getLayerBox(),n=i.w>i.h?i.w:i.h,t=n/(2*Math.tan(this.fov/3*.017453293)),this.cameraDis=t,this.camera=new THREE.PerspectiveCamera(this.fov,this.sceneWidth/this.sceneHeight,e.WEBGL_CAMERA_NEAR,e.WEBGL_CAMERA_FAR),this.camera.rotation.x=Math.PI/2,this.camera.position.set(e.WEBGL_CAMERA_POSITION_X,e.WEBGL_CAMERA_POSITION_Y,.5*t),this.camera.lookAt(this.scene.position),this.scene.add(this.camera),this.scene.updateMatrixWorld(!0)},o.prototype.initScene=function(){this.scene=new THREE.Scene},o.prototype.initLight=function(){for(var t=[],i=0;4>i;i++)t[i]=new THREE.DirectionalLight(e.WEBGL_LIGHT_COLOR,.4),this.scene.add(t[i]);t[0].position.set(35e3,35e3,35e3),t[1].position.set(-35e3,35e3,-35e3),t[2].position.set(-35e3,35e3,-35e3),t[3].position.set(35e3,35e3,35e3)},o.prototype.render=function(){this.renderer.render(this.scene,this.camera)},o.prototype.drawText=function(t,i,n){var o,a,r,s,l,c,u,p,h,d,g,f=1.3;return a=new THREE.MeshBasicMaterial({color:e.WEBGL_LAYER_FONT_COLOR}),r=new THREE.MeshBasicMaterial({color:e.WEBGL_LAYER_FONT_SIDE_COLOR}),o=[a,r],s=new THREE.TextGeometry(i,{size:e.WEBGL_LAYER_FONT_SIZE,height:e.WEBGL_LAYER_FONT_HEIGHT,curveSegments:3,font:e.WEBGL_LAYER_FONT_FAMILY,weight:"normal",style:"normal",extrudeMaterial:1}),c=new THREE.MeshFaceMaterial(o),u=new THREE.Mesh(s,c),s.computeBoundingBox(),p=s.boundingBox.max.x-s.boundingBox.min.x,l=s.boundingBox.max.y-s.boundingBox.min.y,u.rotation.x=n?Math.PI/2*-1:Math.PI,u.position.set(this.defaultLayerWidth/2-p,this.defaultLayerHeight/2-l,0),t.add(u),h=new THREE.BoxGeometry(p*f,l*f,20),g=new THREE.MeshBasicMaterial,d=new THREE.Mesh(h,g),d.position.set(this.defaultLayerWidth/2-p/2,this.defaultLayerHeight/2-l,-1*e.WEBGL_LAYER_FONT_HEIGHT*3),d.rotation.x=n?Math.PI/2*-1:Math.PI,n||(d.position.y-=4*e.WEBGL_LAYER_FONT_HEIGHT),d.visible=!1,t.add(d),{textMesh:u,textBoxMesh:d}},o.prototype.drawContainer=function(t){var i=this;t.container={},$.each(angular.copy(t.containers),function(){var n=this;n.color=n.color?n.color:e.WEBGL_CONTAINER_COLOR[n.level];var o=new THREE.BoxGeometry(n.width,n.height,1),a=new THREE.MeshBasicMaterial({color:n.color,transparent:!0}),r=new THREE.Mesh(o,a);r.position.set(n.x-i.defaultLayerWidth/2+n.width/2,n.y-i.defaultLayerHeight/2+n.height/2,-n.level),t.container[n.id]={info:n,cube:r},t.plane.add(r)})},o.prototype.loadFont=function(t,i){var o,a=[],r=[],s={},l=this;$.each(t.split(""),function(){var t=this;s[t]||(s[t]=!0,r.push(t))}),o=_typeface_js.faces[e.WEBGL_FONT].normal.normal.glyphs,$.each(r,function(){var t=this;o[t]||a.push(t)}),a.length>=1&&n.get(a).success(function(t){$.each(t.data,function(t){o[t]=this}),"function"==typeof i&&i.apply(l)})},o.prototype.getLayerFonts=function(t){var e="";return t.name&&(e+=t.name),$.each(t.nodes,function(){e+=this.name}),$.each(t.containers,function(){e+=this.name}),$.each(t.edges,function(){e+=this.sourceName,e+=this.targetName}),e},o.prototype.getLayerBox=function(){var t=this,e=0,i={};return $.each(t.options.layers,function(){var t,i=this;for(t=0;t<i.length;t++){var n=i[t];if(n&&n.isVertical){e++;break}}}),i.h=t.options.layerMargin*(t.options.layerCount-1)+e*t.defaultLayerHeight,i.w=(t.options.layerItemCount-1)*t.defaultLayerWidth+(t.options.layerItemCount-1)*t.options.layerItemMargin,i.w=0===i.w?.7*t.defaultLayerWidth:i.w,i},o.prototype.getLayerPosByIndex=function(t,e){var i=this,n={},o=0,a=0;return $.each(i.options.layers,function(e){var n,r=this;for(n=0;n<r.length;n++){var s=r[n];if(s&&s.isVertical){t>e?o+=i.defaultLayerHeight:e===t&&(o+=i.defaultLayerHeight/2),a++;break}}}),n.y=(i.options.layerMargin*(i.options.layerCount-1)+a*i.defaultLayerHeight)/2-(t*i.options.layerMargin+o),n.x=e*(i.defaultLayerWidth+i.options.layerItemMargin)-((i.options.layerItemCount-1)*i.defaultLayerWidth+(i.options.layerItemCount-1)*i.options.layerItemMargin)/2,n.z=0,n},o.prototype.initLayer=function(){var t,e,i=this,n={},o=[];i.layers=[],e=function(t,e){return t+""+e},$.each(i.options.layers,function(t){$.each(this,function(i){this&&(o.push(e(t,i)),n[e(t,i)]=!1)})}),t=function(){var t;for(t=0;t<o.length;t++)if(!n[o[t]])return!1;return!0},$.each(i.options.layers,function(o){var a=this,r=[];$.each(a,function(a){var s=this;s&&(s.pos=i.getLayerPosByIndex(o,a),s.row=o,s.col=a,i.addLayer(s,function(){n[e(o,a)]=!0,t()&&(i.options.relation&&i.drawLayerLine(i.options.relation),i.options.isShowTimeline&&i.showTimeline())})),r.push(s)}),i.layers.push(r)})},o.prototype.addLayer=function(t,i){var n,o,a,r=this;t.node=t.node?t.node:[],t.width=t.width?t.width:r.defaultLayerWidth,t.height=t.height?t.height:r.defaultLayerHeight,t.planeQuality=t.planeQuality?t.planeQuality:10,n={side:THREE.DoubleSide,transparent:!0,opacity:e.WEBGL_LAYER_OPACITY,color:t.floorBgColor?t.floorBgColor:e.WEBGL_LAYER_COLOR},t.material=t.material?t.material:new THREE.MeshBasicMaterial(n),o=new THREE.Mesh(new THREE.PlaneBufferGeometry(t.width,t.height,t.planeQuality,t.planeQuality),t.material),o.receiveShadow=!0,o.rotation.x=t.isVertical?Math.PI:Math.PI/2,o.position.x=t.pos.x,o.position.z=t.pos.z,o.position.y=t.pos.y,r.scene.add(o),t.name=t.name?t.name:e.WEBGL_LAYER_NAME_PREFIX+(this.layers.length+1),r.loadFont(this.getLayerFonts(t),function(){a=this.drawText(o,t.name,!t.isVertical),t.textMesh=a.textMesh,t.textBoxMesh=a.textBoxMesh,t.plane=o,r.allTexts.push(a.textBoxMesh),r.textsMap[a.textBoxMesh.id]=t.viewid,r.converPosition(t.graphWidth,t.graphHeight,t),r.drawNode(t,function(){i&&i(t)}),r.drawContainer(t),r.drawLine(t),r.render()})},o.prototype.autoLayoutLayer=function(){var t,e,i,n,o,a,r,s,l;for(n=this,o=(n.layers.length-1)*n.margin/2*-1,t=function(t,e){t.plane.position.y=o+e*n.margin},s=n.layers,l=[],e=a=0,r=s.length;r>a;e=++a)i=s[e],l.push(t(i,e));return l},o.prototype.enableScrollWheelZoom=function(){var t;t=this,this.orbitControls=new THREE.OrbitControls(this.camera,this.renderer.domElement),this.orbitControls.damping=.2,this.orbitControls.addEventListener("change",function(){return t.render()})},o.prototype.animate=function(){var t,e;return e=this,(t=function(){requestAnimationFrame(t),e.orbitControls.update(),e.render(),$.each(e.selected,function(){var t=this,e=t.material.opacity;t.material.opacity=e>=.1?e-.01:.8}),e.blinkList&&$.each(e.blinkList,function(){var t=this.material.opacity;this.material.opacity=t>=.1?t-.02:.8}),!e.isCloseCameraAnimate&&e.cameraDis>e.camera.position.z?e.camera.position.z+=60:e.isCloseCameraAnimate=!0})()},o.prototype.getPointsTween=function(t){var e,i,n,o,a,r,s;for(o=2,n=[],a=function(t,e){var i,a,r,s,l;for(r=Math.max(Math.abs(t.x-e.x),Math.abs(t.y-e.y),Math.abs(t.z-e.z))/o,i=function(i){var o;return o={},o.x=t.x>e.x?t.x-Math.abs(t.x-e.x)/r*i:t.x+Math.abs(t.x-e.x)/r*i,o.y=t.y>e.y?t.y-Math.abs(t.y-e.y)/r*i:t.y+Math.abs(t.y-e.y)/r*i,o.z=t.z>e.z?t.z-Math.abs(t.z-e.z)/r*i:t.z+Math.abs(t.z-e.z)/r*i,n.push(o)},l=[],a=s=1;r>=1?r>=s:s>=r;a=r>=1?++s:--s)l.push(i(a));return l},e=r=0,s=t.length;s>r;e=++r)i=t[e],t[e+1]&&a(i,t[e+1]);return n},o.prototype.crateLineBallAnimation=function(t){var e,i,n,o;return o=this,e=new THREE.SphereGeometry(3,100,50),e.computeTangents(),n=new THREE.Mesh(e,new THREE.MeshLambertMaterial({color:16777215})),o.scene.add(n),i=o.getPointsTween(t),n.position.set(t[0].x,t[0].y,t[0].z),o.ballAnimationQueue.push({ball:n,points:t,animatePoints:i,back:[]})},o.prototype.updateBallAnimation=function(){var t,e,i,n,o,a,r;for(i=this,t=function(t){var e;return 0===t.animatePoints.length&&(t.animatePoints=t.back,t.back=[]),e=t.animatePoints.shift(),t.back.push(e),t.ball.position.set(e.x,e.y,e.z)},a=i.ballAnimationQueue,r=[],n=0,o=a.length;o>n;n++)e=a[n],r.push(t(e));return r},o.prototype.getSnodeAndTnodeById=function(t,e){var i,n=this,o=[];return i=function(t,e){var i,o=[];return i=function(e){var i=[];return $.each(e,function(){var e=this;e&&e.node[t]&&i.push(e.node[t])}),i},"undefined"==typeof e?$.each(n.layers,function(t){o.push({index:t,nodes:i(n.layers[t])})}):$.each(e,function(){var t=this;o.push({index:t,nodes:i(n.layers[t])})}),o},$.each(i(t),function(){var t=this,a=[];t.index>0&&a.push(t.index-1),t.index+1<n.layers.length&&a.push(t.index+1),$.each(t.nodes,function(){var t=this;$.each(i(e,a),function(){$.each(this.nodes,function(){o.push({source:t,target:this})})})})}),o},o.prototype.getNodeAbsolutePosition=function(t){var e;return e={},e.x=t.parent.position.x+t.position.x,e.y=t.parent.position.y+t.position.z,e.z=t.parent.position.z+t.position.y,e},o.prototype.getNodeBetweenPoints=function(t,e){var i,n;return i=e.y>t.y?t.y+(e.y-t.y)/2:e.y+(t.y-e.y)/2,n=[],n.push(new THREE.Vector3(t.x,t.y,t.z)),n.push(new THREE.Vector3(t.x,i,t.z)),n.push(new THREE.Vector3(e.x,i,t.z)),n.push(new THREE.Vector3(e.x,i,e.z)),n.push(new THREE.Vector3(e.x,e.y,e.z)),n},o.prototype.getLineByNodeId=function(t){var e=this,i=[];return $.each(e.allLineMesh,function(){var e=this;(e.source.id===t||e.target.id===t)&&i.push(e.line)}),i},o.prototype.getDonwLineByNodeId=function(t){var e,i=this,n=[];return e=function(t){var o=[];$.each(t,function(){var t=this;$.each(i.allLineMesh,function(){var e=this;e.source.id===t&&e.source.parent.position.y>e.target.parent.position.y&&(n.push({line:e.line,node:e.target}),o.push(e.target.id)),e.target.id===t&&e.target.parent.position.y>e.source.parent.position.y&&(n.push({line:e.line,node:e.source}),o.push(e.source.id))})}),o.length>=1&&e(o)},e([t]),n},o.prototype.getUpLineByNodeId=function(t){var e,i=this,n=[];return e=function(t){var o=[];$.each(t,function(){var t=this;$.each(i.allLineMesh,function(){var e=this;e.source.id===t&&e.source.parent.position.y<e.target.parent.position.y&&(n.push({line:e.line,node:e.target}),o.push(e.target.id)),e.target.id===t&&e.target.parent.position.y<e.source.parent.position.y&&(n.push({line:e.line,node:e.source}),o.push(e.source.id))})}),o.length>=1&&e(o)},e([t]),n},o.prototype.getRelationLineByNodeId=function(t){var e=this,i=[];return $.each(e.getDonwLineByNodeId(t),function(){i.push(this)}),$.each(e.getUpLineByNodeId(t),function(){i.push(this)}),i},o.prototype.getRelationCiByNodeId=function(t){var e=this,i=[],n=[],o={};return $.each(e.allNodes,function(){var n=this;n.id===t&&(i.push(n.id),$.each(e.getRelationLineByNodeId(n.id),function(){var t=this;i.push(t.node.id)}))}),$.each(i,function(){var t=this;$.each(e.allCiObj,function(e){var i=this,a=e.split("_").pop();i.id!==t||o[a]||(o[a]=!0,n.push(a))})}),n},o.prototype.hideLayerLine=function(){var t=this;$.each(t.allLineMesh,function(){var t=this;t.line.material.color.setHex(e.WEBGL_LAYER_LINE_COLOR),t.line.visible=!1})},o.prototype.showLayerLine=function(){var t=this;t.hideLayerLine(),$.each(t.allLineMesh,function(){var t=this;t.line.visible=!0})},o.prototype.drawLayerLine=function(t){var i,n,o,a,r,s;for(o=this,i=function(t){var i,n,a,r,s;s=o.getSnodeAndTnodeById(t.source,t.target),$.each(s,function(){var t,s;t=this.source,s=this.target,t&&s&&(t.cube.parent.updateMatrixWorld(),t.cube.updateMatrixWorld(),s.cube.updateMatrixWorld(),r=[(new THREE.Vector3).setFromMatrixPosition(t.cube.matrixWorld),(new THREE.Vector3).setFromMatrixPosition(s.cube.matrixWorld)],n=new THREE.Geometry,n.vertices=r,a=new THREE.LineBasicMaterial({color:e.WEBGL_LAYER_LINE_COLOR,linecap:"round"}),n.computeLineDistances(r),i=new THREE.Line(n,a),i.visible=!1,o.scene.add(i),o.allLineMesh.push({line:i,source:t.cube,target:s.cube}))})},s=[],a=0,r=t.length;r>a;a++)n=t[a],s.push(i(n));return s},o}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.factory("UserInfo",["$rootScope","Event",function(t,e){var i=null;return{get:function(){return i},set:function(n){i=n,t.$broadcast(e.USERINFO_UPDATE,n)}}}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.factory("Keymap",["KeyCode",function(t){var e={"ctrl + s":"save","ctrl + a":"selectAll","ctrl + c":"copy","ctrl + v":"paste","ctrl + x":"cut","ctrl + u":"update","ctrl + z":"undo","ctrl + y":"redo","ctrl + e":"clear","ctrl + o":"open","ctrl + l":"linkEdit","alt + n":"create","alt + c":"zoomCenter","alt + i":"zoomIn","alt + o":"zoomOut","alt + u":"orderUp","alt + d":"orderDown","alt + f":"font","alt + l":"toggleAutoLayout","alt + e":"toggleAutoLine","delete":"removeCells"};return function(i){new t(i.graph.container,e,i.action)}}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.service("AuthService",["$http","Unit",function(t,e){var i={};return i.login=function(i){return t.post(e.api("/login"),i)},i.logout=function(){return t["delete"](e.api("/logout"))},i.getCurrentUser=function(){return t.get(e.api("/user"))},i}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.service("CiCateService",["$http","Unit",function(t,e){var i={};return i.get=function(){return t.get(e.api("/cicate"))},i.save=function(i){return t.post(e.api("/cicate"),i)},i.update=function(i,n){return t.put(e.api("/cicate/"+i),n)},i.remove=function(i){return t["delete"](e.api("/cicate/"+i))},i}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.service("CiMonitorService",["$http","Unit",function(t,e){var i={};return i.getView=function(i,n,o){return t.post(e.api("/view/getmonitorforview"),{ids:i,startTime:n,endTime:o})},i.getCi=function(i,n,o,a){return t.post(e.api("/view/getwholeinfo"),{id:i,viewId:n,startTime:o,endTime:a})},i.getPointStatus=function(i,n){return t.post(e.api("/view/gettimemachineforview"),{timeDots:i,ids:n})},i}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.service("CiRelationService",["$http","Unit",function(t,e){var i={};return i.get=function(i){return t.post(e.api("/cirel/query"),i)},i.getCategory=function(){return t.get(e.api("/relcate"))},i}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.service("CiService",["$http","Unit",function(t,e){var i={};return i.get=function(i){return i.all=!0,t.post(e.api("/ci"),i)},i.getCi=function(i){return t.get(e.api("/ci/"+i))},i.ids=function(i){return t.post(e.api("/ci"),{ids:i})},i.expand=function(i){return t.post(e.api("/cirel/query"),i)},i}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.service("ExportService",["$http","Unit",function(t,e){return{exportPdf:function(i){return t.post(e.api("/view/exportpdf"),{svg:i})},exportPng:function(i){return t.post(e.api("/view/exportpng"),{svg:i})}}}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.service("FontService",["$http","Unit",function(t,e){return{get:function(i){return t.post(e.api("/font"),{font:i})}}}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.service("GroupService",["$http","Unit",function(t,e){var i={};return i.get=function(i){return t.get(i?e.api("/portfolio/"+i):e.api("/portfolio"))},i.save=function(i){return t.post(e.api("/portfolio"),i)},i.update=function(i){return t.put(e.api("/portfolio"),i)},i["delete"]=function(i){return i?t["delete"](e.api("/portfolio/"+i)):void 0},i["private"]=function(){return t.get(e.api("/portfolio/private"))},i["public"]=function(){return t.get(e.api("/portfolio/public"))},i.getPublicViewByUser=function(i){return t.get(e.api("/portfolio/public/")+i)},i.deleteById=function(i){return t["delete"](e.api("/portfolio/"+i))},i.create=function(i){return t.post(e.api("/portfolio"),i)},i.deletePrivateOrPublic=function(i){return t["delete"](i?e.api("/portfolio/public"):e.api("/portfolio/private"))},i.openView=function(i){return t.put(e.api("/portfolio/open/"+i))},i.closeView=function(i){return t.put(e.api("/portfolio/close/"+i))},i.subscription=function(t){return{data:"",message:"订阅组合视图成功"}},i.unsubscription=function(t){return{data:"",message:"取消订阅组合视图成功"}},i}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.service("IconService",["$http","Upload","Unit",function(t,e,i){var n={};return n.get=function(e){return t.post(i.api("/viewicon"),e)},n.upload=function(t){return e.upload({url:i.api("/viewicon/save"),file:t})},n}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.service("ImageService",["$http","Unit","Upload",function(t,e,i){var n={};return n.uploadBackground=function(t){return i.upload({url:e.api("/view/background"),file:t})},n.getBackgound=function(i){return t.post(e.api("/view/fuzzybackground"),i)},n.removeBackground=function(i){return t["delete"](e.api("/view/background/"+i))},n}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.service("MeshService",["$http","Unit",function(t,e){return{svgToMesh:function(i){return t.post(e.api("/icon/3dpathsbysvg"),{paths:i})}}}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.service("OtherService",function(){return{getSvgPath:function(){return{success:function(t){t({data:"resource/svg/blue"})}}}}})}(nameSpace.reg("graph")),function(t){"use strict";t.app.service("SearchService",["$http","Unit",function(t,e){var i={};return i.fuzzy=function(i){return t.post(e.api("/view/fuzzysearch"),{keyWord:i})},i}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.service("UserService",["$http","Unit",function(t,e){return{profile:function(){return t.get(e.api("/userprofile"))}}}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.service("ViewCateService",["$http","Unit",function(t,e){var i={};return i.get=function(){return t.get(e.api("/viewcate"))},i.getPrivate=function(){return t.get(e.api("/viewcate/private"))},i.getPublic=function(){return t.get(e.api("/viewcate/public"))},i.create=function(i){return t.post(e.api("/viewcate"),i)},i.remove=function(i){return t["delete"](e.api("/viewcate/"+i))},i.update=function(i){return t.put(e.api("/viewcate"),i)},i}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.service("ViewService",["$http","Unit",function(t,e){var i={};return i.get=function(i){return t.post(e.api("/view"),i)},i["private"]=function(){return t.get(e.api("/view/private"))},i["public"]=function(){return t.get(e.api("/view/public"))},i.getUserView=function(i){return t.get(e.api("/view/public/"+i))},i.getView=function(i){return t.get(e.api("/view/"+i))},i.create=function(i){return t.post(e.api("/view"),i)},i.update=function(i){return t.put(e.api("/view"),i)},i.remove=function(i){return t["delete"](e.api("/view/"+i))},i.uploadImage=function(){},i.getByIds=function(i){return t.post(e.api("/view"),i)},i.setPublic=function(i){return t.put(e.api("/view/open/"+i))},i.setUnpublic=function(i){return t.put(e.api("/view/close/"+i))},i.getThreshold=function(i,n){return t.post(e.api("/view/threshold/"+i),n)},i.saveThreshold=function(i,n){return t.put(e.api("/view/threshold/"+i),n)},i.subscription=function(i){return t.post(e.api("/subscription/view/"+i))},i.unsubscription=function(i){return t["delete"](e.api("/subscription/view/"+i))},i.getViewMonitor=function(i,n){return t.post(e.api("/view/performance/"+i),n)},i.getSubscription=function(){return t.post(e.api("/view/subscriptions"),{page:1,pageSize:100})},i}])}(nameSpace.reg("graph")),function(){"use strict";var t=angular.module("ngRightClick",[]);t.directive("ngRightClick",["$parse",function(t){return function(e,i,n){var o=t(n.ngRightClick);i.bind("contextmenu",function(t){e.$apply(function(){t.preventDefault(),o(e,{$event:t})})})}}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(){"use strict";var t=angular.module("graphTable",[]);t.factory("GraphTable",["Unit","CiService",function(t,e){return function(t){this.showFlag=!1,this.data=[],this.show=function(){this.getData(),this.showFlag=!0},this.hide=function(){this.showFlag=!1},this.format=function(t){var e={},i=this,n=function(t){var e=[];return $.each(t,function(t){e.push({label:t,key:t})}),e.sort(function(t){return"名称"===t.key?-1:1}),e};$.each(t,function(){e[this.categoryId]||(e[this.categoryId]={name:this.categoryName,id:this.categoryId,head:n(this.data),rows:[]}),e[this.categoryId].rows.push(this.data)}),$.each(e,function(){i.data.push(this)}),console.log(i.data)},this.getData=function(){var i=this;t&&(this.ids=t.action.getCisId(),this.ids.length&&e.ids(this.ids).success(function(t){i.data.splice(0),i.format(t.data)}))},t&&(t.table=this)}}]),t.controller("DirectiveGraphTableCtrl",["$scope","GraphTable","$parse",function(t,e,i){t.hasOwnProperty("params")||(t.params=new e),this.setupBindingsToInternalScope=function(e){var n=i(e);t.$watch(n,function(e){angular.isUndefined(e)||(t.params=e)},!1)}}]),t.directive("graphTable",["$q","$parse",function(){return{restrict:"A",priority:1001,transclude:!0,scope:!0,templateUrl:"app/directive/graphTable/graphTable.html",controller:"DirectiveGraphTableCtrl",compile:function(){return function(t,e,i,n){n.setupBindingsToInternalScope(i.graphTable)}}}}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(t){"use strict";t.app.directive("ngEnter",function(){return function(t,e,i){e.bind("keydown keypress",function(e){13===e.which&&(t.$apply(function(){t.$eval(i.ngEnter,{event:e})}),e.preventDefault())})}})}(nameSpace.reg("graph")),function(t){"use strict";t.app.directive("ngScroll",function(){var t={},e=[];return window.setInterval(function(){var i,n,o;for(i=0;i<e.length;i++)n=e[i],o=t[n],o&&n.scrollHeight!==o.lastScrollHeight&&(o.lastScrollHeight=n.scrollHeight,o.lastClientHeight=n.clientHeight,Ps.update(n))},200),function(i,n,o){if(e.push(n[0]),t[n[0]]={lastScrollHeight:n[0].scrollHeight,lastClientHeight:n[0].clientHeight},""!==o.ngScroll){var a=o.ngScroll.split(","),r=a[0],s=a[1];Ps.initialize(n[0],{suppressScrollX:"false"===r,suppressScrollY:"false"===s})}else Ps.initialize(n[0])}})}(nameSpace.reg("graph")),function(){"use strict";var t=angular.module("graphInfo",[]);t.factory("GraphInfo",["Unit","CiService","$rootScope","Event","UserInfo",function(t,e,i,n,o){return function(e){this.showFlag=!1,this.view=function(e){this.type="view",this.data=e;var a=function(){i.$broadcast(n.VIEW_DELETE_BEFORE,t.eventData(e))},r=function(){i.$broadcast(n.VIEW_UPDATE_BEFORE,t.eventData(e))},s=function(){i.$broadcast(n.VIEW_SUBSCRIPTION_BEFORE,t.eventData(e))},l=function(){i.$broadcast(n.VIEW_UNSUBSCRIPTION_BEFORE,t.eventData(e))};this.out.title="视图信息";var c=o.get();c&&c.loginName===e.userName?this.editor.state.disabled||(this.out.btns=[{btnClass:"btn-danger",label:"删除",clickHandle:a},{btnClass:"btn-primary",label:"更新",clickHandle:r}]):this.out.btns=e.isSubscription?[{btnClass:"btn-warning",label:"取消订阅",clickHandle:l}]:[{btnClass:"btn-success",label:"立即订阅",clickHandle:s}]},this.ci=function(t){var e=this;e.type="ci",e.data=t,e.out.title="CI信息",e.out.btns=[]},this.update=function(t,e){this.out.rows.splice(0),this.out.btns=[],this.out.title="",this[t]&&this[t](e),this.show(),i._refresh()},this.custom=function(t){this.out=t},this.hide=function(){this.showFlag&&this.toggle()},this.show=function(){this.showFlag||this.toggle()},this.toggle=function(){this.showFlag=!this.showFlag,i.$broadcast(n.GRAPH_INFO_TOGGLE,this)},this.out={title:"",rows:[],btns:[]},this.editor=e}}]),t.controller("DirectiveGraphInfoCtrl",["$scope","GraphInfo","$parse","Event","CiService","CiMonitorService","Unit","Const","$window",function(t,e,i,n,o,a,r,s,l){t.hasOwnProperty("params")||(t.params=new e),this.setupBindingsToInternalScope=function(e){var n=i(e);t.$watch(n,function(e){angular.isUndefined(e)||(t.params=e)},!1)},t.callapse={},t.formatBool=function(t){return t?"是":"否"},t.formatDate=function(t){return r.unixToDatetime(t).substr(0,10)},t.$on(n.GRAPH_CI_CELL_CLICK,function(e,i){if(t.params.editor.state.view){var n,r,c=t.params.editor.state;c.startTime&&c.endTime?(n=c.startTime,r=c.endTime):(c.timeAverage&&(c.timeAverage=s.TIME_AVERAGE),r=l.parseInt((new Date).getTime()/1e3),n=r-c.timeAverage),a.getCi(i.cell.dbid,c.view.id,n,r).success(function(e){console.log(e.data),t.params.update("ci",e.data)})}else o.getCi(i.cell.dbid).success(function(e){t.params.update("ci",{config:e.data})})}),t.updateCiInfo=function(){if("ci"===t.params.type&&t.params.data.config){var e,i,n=t.params.editor.state;n.startTime&&n.endTime?(e=n.startTime,i=n.endTime):(n.timeAverage&&(n.timeAverage=s.TIME_AVERAGE),i=l.parseInt((new Date).getTime()/1e3),e=i-n.timeAverage),a.getCi(t.params.data.config.id,n.view.id,e,i).success(function(e){t.params.update("ci",e.data)})}},t.$on(n.TIMELINE_POINT_CLICK,t.updateCiInfo),t.$on(n.GRAPH_MONITOR_UPDATE,t.updateCiInfo),t.$on(n.VIEW_SET_PUBLIC,function(){t.params.update("view",t.params.editor.state.view)}),t.$on(n.VIEW_SET_UNPUBLIC,function(){t.params.update("view",t.params.editor.state.view)}),t.$on(n.VIEW_SUBSCRIPTION_AFTER,function(){t.params.update("view",t.params.editor.state.view)}),t.$on(n.VIEW_UNSUBSCRIPTION_AFTER,function(){t.params.update("view",t.params.editor.state.view)})}]),t.directive("graphInfo",["$q","$parse",function(){return{restrict:"A",priority:1001,scope:!0,templateUrl:"app/directive/info/info.html",controller:"DirectiveGraphInfoCtrl",compile:function(){return function(t,e,i,n){n.setupBindingsToInternalScope(i.graphInfo)}}}}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(t){"use strict";t.app.directive("ngRepeatDone",["$timeout",function(t){return function(e,i,n){e.$last&&t(function(){e.$eval(n.ngRepeatDone)})}}])}(nameSpace.reg("graph")),function(){"use strict";var t=angular.module("timeLine",[]);t.factory("MyTimeLine",["$interval",function(t){var e=null,i=null;return function(n){function o(){if(a.oldNode=a.nowNode,a.oldNode&&a.oldNode.css({width:15,height:15,top:0,left:a.oldNode.position().left+2}),$(".timeLine-dot-box div").css({boxShadow:"none","border-width":1}),$(this).css({boxShadow:"0px 0px 8px #fff","border-width":2}),a.nowNode=$(this),a.nowNode.css({width:20,height:20,top:-2,left:a.nowNode.position().left-2}),$(this).addClass("noselect"),a.clickPoint&&"function"==typeof a.clickPoint){var t={};t.end=0!==$(this).next().length?$(this).next().attr("id"):null,t.start=0!==$(this).prev().length?$(this).prev().attr("id"):null,t.now=$(this).attr("id"),t.timeAverage=a.timeAverage,a.choseNode=$(this).attr("id"),a.clickPoint(t)}$(".nowBtn").hasClass("active")&&$(".nowBtn").removeClass("active"),a.enabledNow=!1}t.cancel(e),this.options={},this.opt={};var a=this;this.timer=null,this.timeAverage=null,this.choseNode=null,this.enabledNow=!0,this.dotData=[],this.oldNode=null,this.nowNode=null,n&&n.getStatusData&&(this.fn=n.getStatusData),n&&n.clickPoint&&(this.clickPoint=n.clickPoint),n&&n.clickNow&&(this.clickNow=n.clickNow),n&&n.update&&(this.update=n.update),this.chars=["0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"],this.generateMixed=function(){for(var t="",e=0;10>e;e++){var i=Math.ceil(35*Math.random());t+=this.chars[i]}return t},this.getData=function(){var t=this;if(this.fn&&"function"==typeof this.fn){var e=this.generateMixed(),i=this.dotData;this.fn({id:e,data:i},function(i){e===i.id&&t.setStatus(i.data)})}},this.setDot=function(){var t=[],e=null;if(this.elem=$(".timeLine-line").html(""),this.dotEle=$(".timeLine-dot-box").html(""),this.timeEle=$(".timeLine-time-box").html(""),this.options.endTime&&this.options.startTime){var i=new Date(this.options.endTime).getTime(),n=new Date(this.options.startTime).getTime();this.options.endTime=i,this.options.startTime=n}this.opt={tickWidth:this.options.tickWidth||100,timeOut:this.options.timeOut||"minute",endTime:this.options.endTime||(new Date).getTime(),timeSet:6e4,startTime:this.options.startTime||(new Date).getTime()-72e5},e=this.opt.endTime>this.opt.startTime?this.opt.endTime-this.opt.startTime:72e5,this.opt.tick=Math.round(this.elem.width()/this.opt.tickWidth),this.timeAverage=e/(this.opt.tick-1);for(var o=0,a=this.opt.tick-1;a>=0;a--){var r={},s=this.elem.width()/(this.opt.tick-1)*(this.opt.tick-1-a);r.dotLeft=s+"px",r.titleLeft=this.elem.width()/(this.opt.tick-1)*(this.opt.tick-1-a)-8+"px";var l,c,u=this.opt.endTime-this.timeAverage,p=new Date(u-this.timeAverage*a);"year"===this.opt.timeOut?(l=p.getFullYear()+"年",this.opt.timeSet=31536e6):"month"===this.opt.timeOut?(l=p.getFullYear()+"年"+(p.getMonth()+1)+"月",this.opt.timeSet=2628e6):"day"===this.opt.timeOut?(l=p.getMonth()+1+"月"+p.getDate()+"日",this.opt.timeSet=864e5):"hour"===this.opt.timeOut?(l=p.getDate()+"日"+p.getHours()+"时",this.opt.timeSet=36e5):"minute"===this.opt.timeOut&&(l=p.getHours(),c=p.getMinutes(),l=10>l?"0"+l:l,c=10>c?"0"+c:c,l=l+":"+c,this.opt.timeSet=6e4),r.timestamp=p.getTime();var h=Math.round(r.timestamp/1e3);if(t.push(h),a!==this.opt.tick-1){var d=s-o,g=$('<div class="timeLine-line-unit"></div>').attr({title:h}).css({width:d,left:s-d});$(this.elem).append(g),o=s}var f=$('<div class="timeLine-dot"></div>').attr({id:h}).css({left:r.dotLeft});$(this.dotEle).append(f);var m=$('<div class="timeLine-time"></div>').html(l).attr({title:l}).css({left:r.titleLeft});$(this.timeEle).append(m)}if(this.timeAverage=Math.round(this.timeAverage/1e3),this.update&&"function"==typeof this.update){var v={timeAverage:this.timeAverage};this.update(v)}this.dotData=t},this.setStatus=function(t){for(var e,i={},n=0;n<t.length;n++){var a="";a=$("#"+t[n].id)&&t[n].color?"pointer":"default",this.choseNode&&(e=Math.abs(t[n].id-this.choseNode),(void 0===i.num||i.num>e)&&(i.num=e,i.data=t[n])),$(".timeLine-line div[title='"+t[n].id+"']").css({background:t[n].color}),$("#"+t[n].id).css({background:t[n].color,cursor:a}),$("#"+t[n].id).bind("click",o)}i.data&&i.data.id&&(this.nowNode=$("#"+i.data.id),$("#"+i.data.id).css({boxShadow:"0px 0px 8px #fff","border-width":2,width:20,height:20,top:-2}))},this.pushDot=function(){var i=this;t.cancel(e),e=t(function(){i.oldTime=(new Date).getTime(),i.ProgressBar(),i.init()},this.opt.timeSet)},this.ProgressBar=function(){a=this,t.cancel(i);var e=0,n=null,o=(new Date).getTime();i=t(function(){var t=(new Date).getTime();0===e&&(n=a.opt.timeSet-(t-a.oldTime));var i=(t-o)/n*100+"%";e++,$(".timeLineProgress").css({width:i})},30)},this.remove=function(){t.cancel(e)},this.init=function(){this.setDot(),this.getData()},this.resize=function(){this.init(),this.ProgressBar(),this.pushDot(),this.oldTime=(new Date).getTime()},this.removeStatus=function(){var t=$(".timeLine-dot-box div");t.each(function(){$(this).css({boxShadow:"none","border-width":1,width:15,height:15,top:0})}),this.nowNode&&this.nowNode.css({left:this.nowNode.position().left}),this.oldNode=this.nowNode=this.choseNode=null},this.getTimeAverage=function(){return this.timeAverage},this.init(),this.ProgressBar(),this.pushDot(),this.oldTime=(new Date).getTime()}}]),t.controller("TimeLineCtrl",["$scope","$interval","$state","$element","$attrs","$compile","$parse","MyTimeLine",function(t,e,i,n,o,a,r,s){t.hasOwnProperty("params")||(t.params=new s,i||t.params.remove()),this.setupBindingsToInternalScope=function(e){var i=r(e);

t.$watch(i,function(e){angular.isUndefined(e)||(t.params=e)},!1)},t.opt={},t.toFormatDate=function(t,e){var i={"M+":t.getMonth()+1,"d+":t.getDate(),"h+":t.getHours(),"m+":t.getMinutes(),"s+":t.getSeconds(),"q+":Math.floor((t.getMonth()+3)/3),S:t.getMilliseconds()};/(y+)/.test(e)&&(e=e.replace(RegExp.$1,(t.getFullYear()+"").substr(4-RegExp.$1.length)));for(var n in i)new RegExp("("+n+")").test(e)&&(e=e.replace(RegExp.$1,1===RegExp.$1.length?i[n]:("00"+i[n]).substr((""+i[n]).length)));return e},t.setTimeLine=function(){t.params.options=t.opt,t.params.remove(),t.params.init(),t.params.pushDot()},t.showSetBox=function(){t.showSetLine=!t.showSetLine,t.showSetLine?"function"==typeof t.params.changeHeight&&t.params.changeHeight({show:t.showSetLine,height:$(".setTimeLineBox .form-inline").height()}):t.opt={}},t.setRealTime=function(){$(".nowBtn").hasClass("active")?($(".nowBtn").removeClass("active"),t.params.enabledNow=!1):($(".nowBtn").addClass("active"),t.params.enabledNow=!0,t.params.removeStatus()),t.params.clickNow&&"function"==typeof t.params.clickNow&&t.params.clickNow({timeAverage:t.params.timeAverage,enabledNow:t.params.enabledNow})},window.onresize=function(){t.params&&t.params.resize()}}]),t.directive("timeLine",["$interval",function(){return{restrict:"A",replace:!0,scope:!0,controller:"TimeLineCtrl",compile:function(){return function(t,e,i,n){n.setupBindingsToInternalScope(i.timeLine)}},templateUrl:"app/directive/timeLine/timeLine.html"}}])}(nameSpace.reg("graph")),function(){"use strict";var t=null,e={save:"保存 ctrl+s",refresh:"更新 ctrl+u",search:"适应画布 alt+c",zoomOut:"缩小 alt+o",zoomIn:"放大 alt+i",orderUp:"置前 alt+u",orderDown:"置后 alt+d",alignExpand:"对齐",undo:"撤销 ctrl+z",redo:"重做 ctrl+y",trash:"移除选中对象 delete",link:"设置链接 ctrl+l",paint:"填充颜色",border:"边框颜色",shadow:"阴影",fontExpand:"文本样式 alt+f",lineExpand:"关系线样式",grid:"开启/禁止 画布表格",assistLine:"开启/禁止 辅助线",imageExpand:"画布背景图",penExpand:"标注",autoLayout:"开启/禁止 自动布局 alt+l",autoLine:"开启/禁止 自动连线 alt+e",searchExpand:"搜索",tableExpand:"显示模式",image:"上传背景图片",noimage:"清除背景图片",pen:"标注CI",nopen:"清除CI标注",newFile:"新建画布 alt+n",folder:"打开视图 ctrl+o"},i=function(t){var e=t.action;this.image=function(){e.backgroundImage()},this.noimage=function(){e.clearBackgroundImage()},this.grid=function(){e.grid()},this.assistLine=function(){e.assistLine()},this.save=function(){e.save()},this.refresh=function(){e.update()},this.newFile=function(){e.create()},this.folder=function(){e.open()},this.shadow=function(){e.shoadow()},this.link=function(){e.linkEdit()},this.zoomOut=function(){e.zoomOut()},this.zoomIn=function(){e.zoomIn()},this.search=function(){e.zoomCenter()},this.orderUp=function(){e.orderUp()},this.orderDown=function(){e.orderDown()},this.redo=function(){e.redo()},this.undo=function(){e.undo()},this.alignLeft=function(){e.alignCells(mxConstants.ALIGN_LEFT)},this.alignCenter=function(){e.alignCells(mxConstants.ALIGN_CENTER)},this.alignRight=function(){e.alignCells(mxConstants.ALIGN_RIGHT)},this.alignTop=function(){e.alignCells(mxConstants.ALIGN_TOP)},this.alignMiddle=function(){e.alignCells(mxConstants.ALIGN_MIDDLE)},this.alignBottom=function(){e.alignCells(mxConstants.ALIGN_BOTTOM)},this.alignDistributeHorizontal=function(){e.alignDistribute(!0)},this.alignDistributeVertical=function(){e.alignDistribute(!1)},this.lineStraight=function(){e.edgeClearStyle()},this.lineEntityRelation=function(){e.edgeStyle("entityRelationEdgeStyle")},this.lineElbowHorizontal=function(){e.edgeStyle("elbowHorizontal")},this.lineElbowVertical=function(){e.edgeStyle("elbowVertical")},this.lineSegment=function(){e.edgeStyle("segmentEdgeStyle")},this.lineOrthogonal=function(){e.edgeStyle("orthogonalEdgeStyle")},this.startNoarrow=function(){e.startArrow(mxConstants.NONE)},this.startClassic=function(){e.startArrowFill(mxConstants.ARROW_CLASSIC)},this.startOpen=function(){e.startArrowFill(mxConstants.ARROW_OPEN)},this.startBlock=function(){e.startArrowFill(mxConstants.ARROW_BLOCK)},this.startOval=function(){e.startArrowFill(mxConstants.ARROW_OVAL)},this.startDiamond=function(){e.startArrowFill(mxConstants.ARROW_DIAMOND)},this.startThinDiamond=function(){e.startArrowFill(mxConstants.ARROW_DIAMOND_THIN)},this.startClassicTrans=function(){e.startArrow(mxConstants.ARROW_CLASSIC)},this.startBlockTrans=function(){e.startArrow(mxConstants.ARROW_BLOCK)},this.startOvalTrans=function(){e.startArrow(mxConstants.ARROW_OVAL)},this.startDiamondTrans=function(){e.startArrow(mxConstants.ARROW_DIAMOND)},this.startThinDiamondTrans=function(){e.startArrow(mxConstants.ARROW_DIAMOND_THIN)},this.endNoarrow=function(){e.endArrow(mxConstants.NONE)},this.endClassic=function(){e.endArrowFill(mxConstants.ARROW_CLASSIC)},this.endOpen=function(){e.endArrowFill(mxConstants.ARROW_OPEN)},this.endBlock=function(){e.endArrowFill(mxConstants.ARROW_BLOCK)},this.endOval=function(){e.endArrowFill(mxConstants.ARROW_OVAL)},this.endDiamond=function(){e.endArrowFill(mxConstants.ARROW_DIAMOND)},this.endThinDiamond=function(){e.endArrowFill(mxConstants.ARROW_DIAMOND_THIN)},this.endClassicTrans=function(){e.endArrow(mxConstants.ARROW_CLASSIC)},this.endBlockTrans=function(){e.endArrow(mxConstants.ARROW_BLOCK)},this.endOvalTrans=function(){e.endArrow(mxConstants.ARROW_OVAL)},this.endDiamondTrans=function(){e.endArrow(mxConstants.ARROW_DIAMOND)},this.endThinDiamondTrans=function(){e.endArrow(mxConstants.ARROW_DIAMOND_THIN)},this.trash=function(){e.removeCells()},this.paint=function(){e.cellFillColor()},this.border=function(){e.cellStrokeColor()},this.fontExpand=function(){e.font()},this.pen=function(){e.hightLightCi()},this.nopen=function(){e.clearHight()},this.autoLayout=function(){e.toggleAutoLayout()},this.autoLine=function(){e.toggleAutoLine()},this.table=function(){e.showCiTable()},this.sitemap=function(){e.hideCiTable()},this.threshold=function(){e.threshold()}},n=angular.module("graphToolbar",[]),o=function(){return function(t){return this.toolbarGroup=[["newFile","folder","save","refresh"],["search","zoomOut","zoomIn"],["orderUp","orderDown","alignExpand"],["undo","redo","trash","link"],["paint","border","shadow"],["fontExpand"],["lineExpand"],["grid","assistLine"],["image","noimage"],["pen","nopen"],["autoLayout","autoLine"],["searchExpand"],["tableExpand"]],this.dropdown={alignExpand:["alignLeft","alignCenter","alignRight","alignTop","alignMiddle","alignBottom","alignDistributeHorizontal","alignDistributeVertical"],lineExpand:[["lineStraight","lineEntityRelation","lineElbowHorizontal","lineElbowVertical","lineSegment","lineOrthogonal"],"-",["startNoarrow","startClassic","startOpen","startBlock","startOval","startDiamond","startThinDiamond","startClassicTrans","startBlockTrans","startOvalTrans","startDiamondTrans","startThinDiamondTrans"],"-",["endNoarrow","endClassic","endOpen","endBlock","endOval","endDiamond","endThinDiamond","endClassicTrans","endBlockTrans","endOvalTrans","endDiamondTrans","endThinDiamondTrans"]],tableExpand:["table","sitemap","threshold"],searchExpand:["searchNode","searchPath"]},this.settings=function(t){t&&(t.toolbarGroup&&(this.toolbarGroup=t.toolbarGroup),t.editor&&(this.editor=t.editor,this.action=new i(this.editor)))},this.triggerAction=function(t,e){this.action[t]&&(this.action[t](e.target),this.editor.graph.refresh(),this.refresh())},this.refresh=function(){return this.editor&&this.editor.state?(this.statusMap.autoLayout=this.editor.state.isAutoLayout?null:!0,this.statusMap.autoLine=this.editor.state.isAutoLine?null:!0,this.statusMap.grid=this.editor.state.isShowGrid?null:!0,void(this.statusMap.assistLine=this.editor.state.isAssistLine?null:!0)):!1},this.statusMap={},this.settings(t),this.refresh(),this}};n.factory("GraphToolbar",o),n.controller("DirectiveGraphToolbarCtrl",["$scope","$element","$attrs","$compile","$parse","GraphToolbar","Event","$interval","UserInfo",function(i,n,o,a,r,s,l,c,u){i.hasOwnProperty("params")||(i.params=new s),this.setupBindingsToInternalScope=function(t){var e=r(t);i.$watch(e,function(t){angular.isUndefined(t)||(i.params=t)},!1)},i.actionTransferClass=function(t){var e,i=t.split("");for(e=0;e<i.length;e++)e&&i[e]===i[e].toUpperCase()&&(i[e]="-"+i[e].toLowerCase());return i.join("")},i.actionTransferLabel=function(t){return e[t]},i.isString=function(t){return angular.isString(t)},i.isArray=function(t){return angular.isArray(t)},i.showPopover=function(t){$(t.currentTarget).popover("show")},i.hidePopover=function(t){$(t.currentTarget).popover("hide")},i.isDisabled=function(t){var e=!1,n=u.get(),o=i.params.editor;return o?("refresh"===t&&(!o.state.view||o.state.view&&n&&n.loginName!==o.state.view.userName)&&(e=!0),i.params.editor.graph.getSelectionCell()||"orderUp"!==t&&"orderDown"!==t&&"alignExpand"!==t&&"fontExpand"!==t&&"trash"!==t&&"link"!==t&&"paint"!==t&&"border"!==t&&"shadow"!==t&&"lineExpand"!==t||(e=!0),i.params.editor.graph.getDepCells().length||"searchExpand"!==t||(e=!0),i.params.editor.action.getCis().length||"tableExpand"!==t&&"pen"!==t&&"nopen"!==t||(e=!0),i.params.editor.undoManager.history.length||"redo"!==t&&"undo"!==t||(e=!0),e):!0},t&&c.cancel(t),t=c(function(){i._refresh()},1e3)}]),n.directive("graphToolbar",["$q","$parse",function(){return{restrict:"A",priority:1001,scope:!0,templateUrl:"app/directive/toolbar/toolbar.html",controller:"DirectiveGraphToolbarCtrl",compile:function(){return function(t,e,i,n){n.setupBindingsToInternalScope(i.graphToolbar)}}}}])}(nameSpace.reg("graph")),function(){"use strict";var t=function(t){var e,i=[];for($.each(t,function(){this.children=[]}),e=0;e<t.length;e++){var n=t[e];if(n.parent){if(!n._count||n._count<10){var o,a;for(o=0;o<i.length;o++){var r=i[o];r.id===n.parent&&(angular.isArray(r.children)||(r.children=[]),a=!0,o=i.length,r.children.push(n))}a||(n._count||(n._count=0),n._count++,t.push(n))}}else n.random=Math.random(),i.push(n)}return i},e=angular.module("graphViewtree",[]);e.factory("GraphViewtree",function(){return function(t){var e=null;this.options={},this["public"]=!1,this.settings=function(t){var e=this;$.each(t,function(t){e.options[t]=this})},this.getSelectNode=function(){return e},this.setSelectNode=function(t){e=t},this.selectNode=function(t){this.setSelectNode(t),this.options.selectNode&&this.options.selectNode.apply(this,[t])},this.togglePublic=function(t){this["public"]=t},this.isPublic=function(){return this["public"]},this.getNodePath=function(t){return[t]},t&&this.settings(t)}}),e.controller("DirectiveGraphViewtreeCtrl",["$scope","$element","$attrs","$compile","$parse","GraphViewtree","CiCateService","ViewCateService","ViewService","Event","Unit",function(e,i,n,o,a,r,s,l,c,u,p){e.hasOwnProperty("params")||(e.params=new r),this.setupBindingsToInternalScope=function(t){var i=a(t);e.$watch(i,function(t){angular.isUndefined(t)||(e.params=t)},!1)},e.subscriptionId="subscription",e.isCollapsedCreateForm=e.params.options.showForm,e.treeOptions={nodeChildren:"children",dirSelectable:!0,injectClasses:{ul:"a1",li:"a2",liSelected:"a7",iExpanded:"a3",iCollapsed:"a4",iLeaf:"a5",label:"a6",labelSelected:"a8"}},e.treeData=[],e.originalTreeData=[],e.form={cate:{name:"root",id:""}},e.cateParams={open:!1},e.createCate=function(){if(e.form.name){var t={name:e.form.name,parent:e.form.cate.id,open:e.cateParams.open};l.create(t).success(function(){e.reloadTree(),e.form.name=""})}},e.updateCate=function(){if(e.editCate.name){var t={parent:e.editCate.parent.id,id:e.editCate.id,name:e.editCate.name,open:e.editCate.open};l.update(t).success(function(){e.reloadTree()})}},e.reloadTree=function(){var i=function(i){e.treeData.splice(0);var n=t(i.data);$.each(n,function(){e.treeData.push(this)}),e.cateParams.open&&e.params.options.allowShowSubscription&&e.treeData.push({name:"我订阅的视图",id:e.subscriptionId,children:[]}),e.originalTreeData=i.data,e.editCate&&$.each(e.originalTreeData,function(){e.editCate.parent&&this.id===e.editCate.parent.id&&(e.editCate.parent=this)})};e.cateParams.open?l.getPublic().success(i):l.getPrivate().success(i)},e.formatSelect=function(t){var i=[];return i.push(e.form.cate),$.each(t,function(){i.push(this)}),i},e.showSelected=function(t){e.getNodePath(t),e.params.selectNode(t),t.xml?e.editCate=null:(e.editCate=angular.copy(t),e.editCate.show=!0,t.parent?$.each(e.originalTreeData,function(){this.id===t.parent&&(e.editCate.parent=this)}):e.editCate.parent=e.form.cate)},e.showToggle=function(t,i){i&&t.id&&e.params.options.queryView&&(t.id===e.subscriptionId?c.getSubscription().success(function(i){e.appendList(t,i.data.datas)}):c.get({cateId:t.id,all:!1,page:1,pageSize:1e3}).success(function(i){e.appendList(t,i.data.datas)}))},e.appendList=function(t,i){if(!i||i.length){var n=function(e){var i,o;for(i=0;i<e.length;i++){if(e[i].id===t.id){o=e[i];break}angular.isArray(e[i].children)&&(o=n(e[i].children))}return o},o=n(e.treeData);if(o){var a=[];angular.isArray(o.children)||(o.children=[]),$.each(o.children,function(){this.xml||a.push(this)}),o.children.splice(0),$.each(a,function(){this.label=this.name,o.children.push(this)}),$.each(i,function(){this.label=this.name,o.children.push(this)})}}},e.deleteNodeById=function(t){var i,n,o;for(i=0;i<e.originalTreeData.length;i++)if(e.originalTreeData[i].id===t){e.originalTreeData.splice(i,1);break}n=function(e){var i;for(i=0;i<e.length;i++){if(e[i].id===t){e.splice(i,1);break}angular.isArray(e[i].children)&&n(e[i].children)}},o=function(t){var e;for(e=0;e<t.length;e++)angular.isArray(t[e].children)&&t[e].children.length&&n(t[e].children)},n(e.treeData),o(e.treeData),e._refresh()},e.deleteCate=function(){e.editCate&&e.editCate.id&&p.confirm("删除分类将会清除该分类下所有的子分类以及视图数据，请确认是否要继续本次操作？",function(){l.remove(e.editCate.id).success(function(){e.reloadTree()})})},e.getNodePath=function(t){if(!t.path){var i,n=[];i=function(e){var o;for(o=0;o<e.length;o++){if(e[o].id===t.id)return n.push(e[o]),!0;if(e[o].children){if(n.push(e[o]),i(e[o].children))return;n.pop()}}},i(e.treeData),t.path=n}},e.$watch("cateParams.open",function(){e.params.togglePublic(e.cateParams.open),e.reloadTree()},!1),e.$on(u.VIEW_DELETE_AFTER,function(t,i){e.deleteNodeById(i.id)})}]),e.directive("graphViewtree",["$q","$parse",function(){return{restrict:"A",priority:1001,scope:!0,templateUrl:"app/directive/viewtree/viewtree.html",controller:"DirectiveGraphViewtreeCtrl",compile:function(){return function(t,e,i,n){n.setupBindingsToInternalScope(i.graphViewtree)}}}}])}(nameSpace.reg("graph")),function(t){var e=function(t,e,i,n,o){t.ok=function(){e.close(),o&&o(t.color)},t.$modal=e,t.title=i,t.color=n?n:"#FFFFFF",t.change=function(t){console.log(t)}};t.app.controller("ModalColorCtrl",["$scope","$modalInstance","title","originalColor","fn",e])}(nameSpace.reg("graph")),function(t){"use strict";t.app.controller("ModalExpandCtrl",["$scope","$modalInstance","CiRelationService","CiCateService","CiService","editor","Unit","Const",function(t,e,i,n,o,a,r,s){t.ok=function(){var i={},n=a.graph.getSelectionCell();i.dirDepth=t.dep,i.ciRels=[],i.ci=r.getCiIdByCell(n),i.like={},$.each(t.relations,function(){this._checked&&i.ciRels.push(this.id)}),$.each(t.categorys,function(){i.like[this.category.id]||(i.like[this.category.id]={});var t=i.like[this.category.id];this.attribute?t[this.attribute]=this.like?"*"+this.like+"*":"*":t["*"]=this.like?"*"+this.like+"*":"*"}),o.expand(i).success(function(t){e.close(),$.each(t.data,function(){a.graph.getCellById(s.CI_PREFIX+this.id)||a.graph.insertVertex(a.graph.getDefaultParent(),s.CI_PREFIX+this.id,this.name,0,0,s.GRAPH_DRAG_WIDTH,s.GRAPH_DRAG_HEIGHT,"image;image="+r["static"](this.icon))})})},t.$modal=e,t.relations=[],t.categorys=[],t.dep={up:"1",down:"1"},t.add=function(){t.categorys.push({})},t.remove=function(e){t.categorys.splice(e,1)},n.get().success(function(e){t.categorysLib=e.data}),i.getCategory().success(function(e){t.relations=e.data})}])}(nameSpace.reg("graph")),function(t){var e=function(t,e,i){var n=function(){return $("#font-example")},o=i.graph.getSelectionCells();if(t.$modal=e,t.font={},1===o.length){var a=i.graph.getCellStyle(o[0]);console.log(a),a.fontSize&&(t.font.size=a.fontSize),a.fontFamily&&(t.font.family=a.fontFamily),a.fontColor&&(t.font.color=a.fontColor),a.align&&(t.font.alignHorizonal=a.align),a.verticalAlign&&(t.font.alignVertical=a.verticalAlign),5===a.fontStyle&&(t.font.bold=a["true"],t.font.underline=a["true"]),4===a.fontStyle&&(t.font.underline=a["true"]),1===a.fontStyle&&(t.font.bold=a["true"])}t.ok=function(){t.font.family&&i.graph.setCellStyles(mxConstants.STYLE_FONTFAMILY,t.font.family,o),t.font.size&&i.graph.setCellStyles(mxConstants.STYLE_FONTSIZE,t.font.size,o),t.font.color&&i.graph.setCellStyles(mxConstants.STYLE_FONTCOLOR,t.font.color,o),t.font.bold&&i.graph.toggleCellStyleFlags(mxConstants.STYLE_FONTSTYLE,mxConstants.FONT_BOLD),t.font.italic&&i.graph.toggleCellStyleFlags(mxConstants.STYLE_FONTSTYLE,mxConstants.FONT_ITALIC),t.font.underline&&i.graph.toggleCellStyleFlags(mxConstants.STYLE_FONTSTYLE,mxConstants.FONT_UNDERLINE),t.font.alignHorizontal&&i.graph.setCellStyles(mxConstants.STYLE_ALIGN,t.font.alignHorizontal,cell),t.font.alignVertical&&i.graph.setCellStyles(mxConstants.STYLE_VERTICAL_ALIGN,t.font.alignVertical,cell)},t.size=function(){n().css("font-size",t.font.size+"px")},t.changeFamily=function(){n().css("font-family",t.font.family)},t.changeColor=function(){n().css("color",t.font.color)},t.$watch("font.bold",function(t){t?n().css("font-weight","bold"):n().css("font-weight","normal")},!1),t.$watch("font.italic",function(t){t?n().css("font-style","italic"):n().css("font-style","normal")},!1),t.$watch("font.underline",function(t){t?n().css("text-decoration","underline"):n().css("text-decoration","none")},!1)};e.$inject=["$scope","$modalInstance","editor"],t.app.controller("ModalFontCtrl",e)}(nameSpace.reg("graph")),function(t){"use strict";t.app.controller("ModalImageCtrl",["$scope","$modalInstance","ImageService","Unit","fn",function(t,e,i,n,o){t.ok=function(){e.close(),o&&o(t.selectItem)},t.selectItem=null,t.$modal=e,t.image="",t.file=null,t.selectFile=function(e){if(e.length>=1){t.file=e[0];var i=new FileReader;i.readAsDataURL(e[0]),i.onload=function(){t.image=this.result,t._refresh()}}},t.upload=function(){t.file?i.uploadBackground(t.file).success(function(){t.image=null,t.startUpload=!1,t.refresh()}):t.startUpload=!0},t.page=1,t.pageSize=10,t.total=0,t.staticUrl=n["static"],t.click=function(e){t.selectItem=e},t.remove=function(e){i.removeBackground(n.basename(e.url)).success(function(i){console.log(i),t.refresh(),e.url===t.selectItem.url&&(t.selectItem=null)})},t.refresh=function(){i.getBackgound({page:t.page,pageSize:t.pageSize}).success(function(e){t.total=e.data.count,t.images=e.data.datas})},t.refresh()}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.controller("ModalSettingOpenCtrl",["$scope","$modal","$modalInstance",function(t,e,i){t.themes=[{name:"Default"},{name:"Mac OS X 10.5+"},{name:"Emacs"},{name:"Visual Studio"},{name:"Default for XWin"}],t.themesKeymap={Default:{"ctrl+s":"save1(use to save the views)","ctrl+delete":"delete","ctrl+enter":"open"},"Mac OS X 10.5+":{"ctrl+s":"save2","ctrl+delete":"delete","ctrl+enter":"open"},Emacs:{"ctrl+s":"save3","ctrl+delete":"delete","ctrl+enter":"open"},"Visual Studio":{"ctrl+s":"save4","ctrl+delete":"delete","ctrl+enter":"open"},"Default for XWin":{"ctrl+s":"save5","ctrl+delete":"delete","ctrl+enter":"open"}},t.originalKeymap=angular.copy(t.themesKeymap),t.theme=t.themes[0],t.keymapList=t.themesKeymap[t.theme.name],t.ok=function(){i.close()},t.copy=function(){t.themes.unshift({name:t.theme.name+" copy"}),t.themesKeymap[t.theme.name+" copy"]=t.themesKeymap[t.theme.name],t.originalKeymap[t.theme.name+" copy"]=t.themesKeymap[t.theme.name],t.theme=t.themes[0]},t.setTheme=function(){t.keymapList=t.themesKeymap[t.theme.name]},t["delete"]=function(){angular.forEach(t.themes,function(e,i){e.name===t.theme.name&&t.themes.splice(i,1)}),t.theme=t.themes[0],t.keymapList=t.themesKeymap[t.theme.name]},t.reset=function(){t.keymapList=t.originalKeymap[t.theme.name]},t.setSelected=function(){t.selectedIndex=this.$index},t.showSetBox=function(){this.s=!0},t.checkKeys=function(e,i){var n=e||window.event,o=String.fromCharCode(n.keyCode);switch(n.keyCode>111&&n.keyCode<124&&(o="F"+(keyCode-111)),n.keyCode){case 9:o="Tab";break;case 13:o="Enter";break;case 33:o="PageUp";break;case 34:o="PageDown"}n.shiftKey&&(o="Shift+"+o),n.altKey&&(o="Alt+"+o),n.ctrlKey&&(o="Ctrl+"+o),(n.ctrlKey||n.altKey)&&(n.preventDefault?n.preventDefault():(n.keyCode=0,n.returnValue=!1)),t.key=o,i=t.key,console.log(t.keymapList)},t.contextMenu=function(){t.selectedIndex=this.$index}}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.controller("ModalNumberCtrl",["$scope","$modalInstance","title","defaultValue","minValue","maxValue","fn",function(t,e,i,n,o,a,r){t.ok=function(){e.close(),r&&r(t.number)},t.$modal=e,t.title=i,t.number=n?n:0,t.maxValue=a?a:100,t.minValue=o?o:0,t._refresh()}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.controller("ModalRelationViewOpenCtrl",["$scope","$modalInstance","ViewService","Unit","editor",function(t,e,i,n,o){var a=o.graph.getSelectionCell();t.ok=function(){e.close(),t.data.selected&&(o.history.push(o.state.view),o.action.openView(t.data.selected))},t.$modal=e,t.staticUrl=n["static"],t.data={},t.views=[],i["private"]().success(function(e){var i=o.graph.getCellAttr(a,"view");i&&$.each(i.split("$"),function(){var i;for(i=0;i<e.data.length;i++)e.data[i].id===this&&t.views.push(e.data[i])})})}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.controller("ModalRelationViewSetCtrl",["$scope","$modalInstance","ViewService","Unit","editor",function(t,e,i,n,o){var a=o.graph.getSelectionCell();t.ok=function(){if(e.close(),t.checked.length){var i=[];$.each(t.checked,function(){i.push(this.id)}),o.graph.setCellAttr(a,"view",i.join("$"))}},t.$modal=e,t.staticUrl=n["static"],t.checked=[],t.refresh=function(){t.checked=[],$.each(t.views,function(){this._checked&&t.checked.push(this)})},i["private"]().success(function(e){if(t.views=e.data,a){var i=o.graph.getCellAttr(a,"view");i&&$.each(i.split("$"),function(){var e;for(e=0;e<t.views.length;e++)t.views[e].id===this&&(t.views[e]._checked=!0,t.checked.push(t.views[e]))})}})}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.controller("ShowKeyMapCtrl",["$scope","$modalInstance",function(t,e){t.keymap=[{"ctrl + s":"保存视图","ctrl + a":"选择全部元素"},{"ctrl + c":"复制","ctrl + v":"粘贴"},{"ctrl + x":"剪切","ctrl + u":"更新视图"},{"ctrl + z":"还原","ctrl + y":"恢复"},{"ctrl + e":"清空视图","ctrl + o":"打开视图"},{"ctrl + l":"编辑节点链接","alt + n":"创建视图"},{"alt + c":"适应画布","alt + i":"放大"},{"alt + o":"缩小","alt + u":"置前"},{"alt + d":"置后","alt + f":"字体"},{"alt + l":"自动布局开关","alt + e":"自动关系开关"},{"delete":"移除选中节点"}],t.$modal=e}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.controller("ThresholdCtrl",["$scope","$modalInstance","$filter","ViewService","view","NgTableParams","CiMonitorService",function(t,e,i,n,o,a,r){t.$modal=e,t.obj={filter:""},t.isSelected=!0,t.tableParams=new a({page:1,count:10},{total:0,counts:[],getData:function(e,a){n.getThreshold(o.id,{page:a.page(),pageSize:a.count()}).success(function(n){var o=angular.copy(n.data.datas);t.responseData=n.data.datas,t.opData=o,o||(o=[]);for(var r=0;r<o.length;r++){var s=o[r];"string"==typeof s.threshold&&(s.threshold=JSON.parse(s.threshold));var l,c,u=s.threshold[0].threshold,p=[{severity:"5"},{severity:"4"},{severity:"3"},{severity:"2"},{severity:"1"}];for(l=0;5>l;l++)for(c=0;c<u.length;c++)u[c].severity===p[l].severity&&(p[l].lowLimit=u[c].lowLimit,p[l].highLimit=u[c].highLimit);s.threshold[0].threshold=p}a.total(n.data.count);var h=a.sorting()?i("orderBy")(t.opData,a.orderBy()):t.opData;e.resolve(h),$(".thresholdTable")[0].scrollTop=0})}});var s=function(t,e){if(t.ci.categoryName!==e.ci.categoryName||t.ci.name!==e.ci.name||t.id!==e.id||t.ifEnable!==e.ifEnable||t.ifNotify!==e.ifNotify||t.kpi.kpiCategoryName!==e.kpi.kpiCategoryName||t.kpi.name!==e.kpi.name||t.kpiId!==e.kpiId||null===t.ifEnable||""===t.ifEnable||null===t.ifNotify||""===t.ifNotify)return!1;for(var i=0;i<t.threshold[0].threshold.length;i++){var n=t.threshold[0].threshold[i],o=e.threshold[0].threshold[i];if(n){if(!o)return!1;if(n.highLimit!==o.highLimit||n.lowLimit!==o.lowLimit||n.severity!==o.severity)return!1}}return!0};t.saveThreshold=function(){for(var e=[],i=0;i<t.opData.length;i++){var a=t.responseData[i],r=t.opData[i],l={};l.ciId=r.ciId,l.ifEnable=r.ifEnable,l.id=r.id,l.kpiId=r.kpiId,l.ifNotify=r.ifNotify,l.subscriber=r.subscriber,l.viewAuthor=r.viewAuthor,l.threshold=angular.copy(r.threshold),l.viewId=r.viewId;var c,u=l.threshold[0].threshold,p=[];for(c=0;c<u.length;c++)(u[c].lowLimit||u[c].highLimit)&&p.push(u[c]);l.threshold[0].threshold=p,s(a,r)||e.push(l)}n.saveThreshold(o.id,{data:e}).success(function(){})},t.filterMethod=function(e){return t.obj.filter?e.ci.name.toLowerCase().indexOf(t.obj.filter.toLowerCase())>=0||e.kpi.name.toLowerCase().indexOf(t.obj.filter.toLowerCase())>=0?e:!1:e},t.filterMethodByMonitor=function(e){return console.log(t.obj.filter),t.obj.filter?e.ciName.toLowerCase().indexOf(t.obj.filter.toLowerCase())>=0||e.kpiName.toLowerCase().indexOf(t.obj.filter.toLowerCase())>=0||e.val.toLowerCase().indexOf(t.obj.filter.toLowerCase())>=0?e:!1:e},t.isRefresh=!1,t.showMonitor=function(){t.obj.filter="";var e=new Date;t.nowTime=e.getHours()+"时"+e.getMinutes()+"分";var r=parseInt((new Date).getTime()/1e3);t.tableParams1=new a({page:1,count:3},{total:0,counts:[],getData:function(e,a){t.isRefresh&&a.page(1),n.getViewMonitor(o.id,{time:r,page:a.page(),pageSize:a.count()}).success(function(t){a.total(t.data.count);var n=a.sorting()?i("orderBy")(t.data.datas,a.orderBy()):t.data.datas;e.resolve(n)})}})},t.refreshMonitor=function(){t.isRefresh=!0,t.showMonitor()}}])}(nameSpace.reg("graph")),function(t){var e=function(t,e,i,n){t.$modal=e,t.cancel=function(){e.close()},t.ok=function(){t.view.xml&&(i(t.view),e.close())},t.viewtreeParams=new n({allowEdit:!1,queryView:!0,showForm:!1,allowShowPubview:!0,selectNode:function(e){t.view=e}})};e.$inject=["$scope","$modalInstance","fn","GraphViewtree"],t.app.controller("ModalViewOpenCtrl",e)}(nameSpace.reg("graph")),function(t){"use strict";var e=function(t,e,i,n,o,a,r,s){t.view={name:"",categoryId:"",description:"",pos:""},t.isShowLoading=!1,t.title="保存视图",t.$modal=e,t.cancel=function(){e.close()},t.ok=function(){var n=t.viewtreeParams.getSelectNode();if(n&&t.view.name){var s=i.graph.getJson(),l=[];$.each(s.nodes,function(){this.img&&l.push(this.img)}),t.isShowLoading=!0,r.svgToMesh(l).success(function(r){$.each(s.nodes,function(){this.mesh={mtl:a["static"](r.data[this.img].mtl),obj:a["static"](r.data[this.img].obj)}});var l=i.graph.getSvg(),c={categoryId:n.id,name:t.view.name,description:t.view.description,cis:i.action.getCisId(),points:JSON.stringify(s),svg:angular.isObject(l)?l.outerHTML:l,xml:i.action.getXml()};i.state.view&&(c.id=i.state.view.id),o.create(c).success(function(n){i.state.setView(n.data),e.close(),t.isShowLoading=!1}).error(function(){t.isShowLoading=!1})})}else a.alert("错误：未填写视图名称或者未选择保存视图的位置")};var l=s.get();t.viewtreeParams=new n({allowEdit:!0,allowShowPubview:l?l.isManager:!1,selectNode:function(e){var i=e.path,n=[];$.each(i,function(){n.push(this.name)}),n.unshift(this.isPublic()?"公有视图":"私有视图"),t.view.pos=n.join(" -> "),t._refresh()}})};e.$inject=["$scope","$modalInstance","editor","GraphViewtree","ViewService","Unit","MeshService","UserInfo"],t.app.controller("ModalViewSaveCtrl",e)}(nameSpace.reg("graph")),function(t){var e=function(t,e,i,n,o,a,r,s){t.view={name:i.state.view.name,description:i.state.view.description,categoryId:i.state.view.categoryId,pos:""},t.title="更新视图",t.$modal=e,t.cancel=function(){e.close()},t.ok=function(){if(t.view.categoryId&&t.view.name){var n=i.graph.getJson(),s=[];$.each(n.nodes,function(){this.img&&s.push(this.img)}),r.svgToMesh(s).success(function(r){$.each(n.nodes,function(){this.mesh={mtl:a["static"](r.data[this.img].mtl),obj:a["static"](r.data[this.img].obj)}});var s=i.graph.getSvg(),l={categoryId:t.view.categoryId,name:t.view.name,description:t.view.description,cis:i.action.getCisId(),points:JSON.stringify(n),svg:angular.isObject(s)?s.outerHTML:s,xml:i.action.getXml(),id:i.state.view.id};o.update(l).success(function(){e.close()})})}else a.alert("错误：未填写视图名称或者未选择保存视图的位置")},t.pos=function(e){console.log(e);var i=e.path,n=[];$.each(i,function(){n.push(this.name)}),n.unshift(t.viewtreeParams.isPublic()?"公有视图":"私有视图"),t.view.pos=n.join(" -> "),t._refresh()};var l=s.get();t.viewtreeParams=new n({allowEdit:!0,allowShowPubview:l?l.isManager:!1,selectNode:function(e){t.view.categoryId=e.id,t.pos(e)}}),t.pos(i.state.view)};e.$inject=["$scope","$modalInstance","editor","GraphViewtree","ViewService","Unit","MeshService","UserInfo"],t.app.controller("ModalViewUpdateCtrl",e)}(nameSpace.reg("graph")),function(t){"use strict";t.app.controller("MainCtrl",["$scope","$state","$cookies","AuthService","Unit","UserInfo","$modal","Event",function(t,e,i,n,o,a,r,s){t.LAYOUT={},t.LAYOUT.collapsedMainLeft=!1,t.LAYOUT.collapsedSidebar=!1,t.keyword="",t.search=function(){t.keyword&&t.$state.go("home.search.result",{keyword:t.keyword})},n.getCurrentUser().success(function(e){t.loginName=e.data.userName,t.isAdmin="管理员"===e.data.ownerRoles,t.currentUserIcon=o["static"](e.data.icon),a.set(e.data)}),t.logout=function(){n.logout().success(function(){i.remove("token"),e.go("login")})},t.setting=function(){r.open({animation:!0,templateUrl:"app/modal/keymap/keymap.html",controller:"ModalSettingOpenCtrl",size:"lg",resolve:{}})};var l=i.get("guide");t.startJoyRide=void 0!==l&&l?!1:!1;var c=e.current.name,u=function(e){switch(e){case"home.group.list.private":t.config=[{type:"title",heading:"欢迎使用向导",text:"请根据提示使用"},{type:"element",selector:".guide1",heading:"功能1",text:"你可以创建自己的组合视图",placement:"bottom",scroll:!0},{type:"element",selector:".guide2",heading:"功能2",text:"点击查看组合视图私有视图列表",placement:"right",scroll:!0},{type:"element",selector:".guide3",heading:"功能3",text:"点击查看组合视图公有视图列表",placement:"bottom",scroll:!0}];var n=new Date;n.setYear(n.getYear()+1),i.put("guide",!0,{expires:n})}};t.userGroup=function(e){t.startJoyRide=!0,u(e)},u(c),t.showKeyMap=function(){r.open({size:"lg",animation:!0,templateUrl:"app/modal/showKeymap/showKeymap.html",controller:"ShowKeyMapCtrl"})},t.$watch("LAYOUT.collapsedSidebar",function(){t.$broadcast(s.SIDEBAR_CALLAPSED,t.LAYOUT.collapsedSidebar)})}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.controller("LoginCtrl",["$scope","$cookies","AuthService","$state","Unit",function(t,e,i,n,o){t.online=!1,$(".loadingbar").remove();var a=e.get("token");void 0!==a&&""!==a&&(t.online=!0,i.getCurrentUser().success(function(e){t.userName=e.data.loginName,t.userIcon=o["static"](e.data.icon)})),t.login=function(){return void 0===t.userName?void toastr.error("登陆名不能为空",null,{closeButton:!0,progressBar:!1,timeOut:1500}):void 0===t.password?void toastr.error("密码不能为空",null,{closeButton:!0,progressBar:!1,timeOut:1500}):(t.isLoading=!0,$(".request").attr("disabled",!0).attr("readOnly",!0),void i.login({username:t.userName,password:t.password}).success(function(i){var o=i.data;if(t.rememberMe){var a=new Date;a.setYear(a.getYear()+1),e.put("token",o.token,{expires:a})}else e.put("token",o.token);n.go("home.edit")}).error(function(){t.isLoading=!1,$(".request").attr("disabled",!1).attr("readOnly",!1)}))},t.into=function(){n.go("home.user.overview")},t["switch"]=function(){t.online=!1}}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(t){"use strict";var e=t.stateUrl;t.app.config(["$stateProvider",function(t){t.state("login",{url:"/login",templateUrl:e("/login/login.html"),controller:"LoginCtrl",data:{title:"登录入口"}})}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.controller("MainGroupCtrl",["$scope","$state","Unit","GroupService",function(t,e,i,n){t.groupItemArray=[],t.groupImgBox=[],t.setNum={},t.colorBox={},t.group={},t.group.content={},t.group.content.viewDescription="",t.group.content.d2setting={},t.group.content.d3setting={},
t.group.content.d2setting.views=[],t.group.content.d3setting.rows=3,t.group.content.d3setting.cols=3,t.group.content.d3setting.layerMargin=200,t.group.content.d3setting.layerItemMargin=10,t.group.content.d2setting.toolbarSize=130,t.group.content.d2setting.outLineSize=90,t.group.content.d2setting.layout="top",t.group.content.d2setting.maxCount=4,t.group.content.d2setting.toolbarBgColor="#C0C0C0",t.group.content.d2setting.btnColor="#616161",t.index=null,t.col=null;var o;t.translate=function(t){return t+"px"},t.formatToPercentage=function(t){return t+"%"},t.formatToN=function(t){return t+"N"},t.hasImg=function(t){$(t.target).parents(".group-box-item").find(".group-box-item-operateBtn").css($(t.target).parents(".group-box-item").find("img").attr("id")?{display:"block"}:{display:"none"})},t.hasImgOut=function(t){$(t.target).parents(".group-box-item").find(".group-box-item-operateBtn").css({display:"none"})},t.setView=function(e,i){t.setD=e.isVertical?!0:!1,t.setD=!t.setD,t.setD?($(i.target).parents(".group-box-item").find("img").css({transform:"skew(0deg)",width:"90%",height:"90%"}),e.isVertical=!0):($(i.target).parents(".group-box-item").find("img").css({transform:"skew(45deg)",width:"60%",height:"40%"}),e.isVertical=!1)},t.setBgColor=function(e,i){setTimeout(function(){t.$apply(),$(i.target).parents(".group-box-item").find("img")&&$(i.target).parents(".group-box-item").find("img").attr("id")?(t.setConfig=!0,$(".group-box-item-box").each(function(){$(this).css("boxShadow","2px 2px 2px #eee")}),"group-box-item-box"===$(i.target).attr("class")?$(i.target).css("boxShadow","0 0 3px #047FF5"):$(i.target).parents(".group-box-item-box").css("boxShadow","0 0 3px #047FF5"),t.viewContent={viewTitle:e.viewTitle,viewText:e.viewText},t.$apply()):(t.setConfig=!1,$(".group-box-item-box").each(function(){$(this).css("boxShadow","2px 2px 2px #eee")}))},10),t.delViewBtn=function(){"group-box-item-box"===$(i.target).attr("class")?($(i.target).css("boxShadow","2px 2px 2px #eee"),t.del2dView(t.group.content.d3setting.layers[$(i.target).data("index")][$(i.target).data("col")]),t.group.content.d3setting.layers[$(i.target).data("index")][$(i.target).data("col")]=null):($(i.target).parents(".group-box-item-box").css("boxShadow","2px 2px 2px #eee"),t.del2dView(t.group.content.d3setting.layers[$(i.target).parents(".group-box-item-box").data("index")][$(i.target).parents(".group-box-item-box").data("col")]),t.group.content.d3setting.layers[$(i.target).parents(".group-box-item-box").data("index")][$(i.target).parents(".group-box-item-box").data("col")]=null),t.setConfig=!1},t.del2dView=function(e){for(o=0;o<t.group.content.d2setting.views.length;o++)if(t.group.content.d2setting.views[o]===e.viewid){t.group.content.d2setting.views.splice(o,1);break}},t.recoverColor=function(){t.colorBox.bgColor="#f5f5f5",e.floorBgColor=t.colorBox.bgColor},t.setBg=function(){$(i.target).hasClass("group-box-item-out")?$(i.target).css({backgroundColor:t.colorBox.bgColor}):$(i.target).parents(".group-box-item-out").css({backgroundColor:t.colorBox.bgColor}),e.floorBgColor=t.colorBox.bgColor}},t.delView=function(e,i){for(o=0;o<t.group.content.d2setting.views.length;o++)if(t.group.content.d2setting.views[o]===e.viewid){t.group.content.d2setting.views.splice(o,1);break}t.group.content.d3setting.layers[$(i.target).parents(".group-box-item-box").data("index")][$(i.target).parents(".group-box-item-box").data("col")]=null},t.saveView=function(){if(t.group.views=angular.copy(t.group.content.d2setting.views),void 0===t.group.name||""===t.group.name||""===t.group.content.viewDescription)return void i.error("请填写名称或描述");var o=JSON.stringify(t.group),a={views:t.group.views,name:t.group.name,content:o};n.save(a).success(function(){i.success("保存成功"),e.go("home.group.list.private")})},t.goList=function(){e.go("home.group.list.private")},t.showSet=function(){t.setConfig=!1},t.expandView=function(){t.isExpand=!0;var e=$(".main-box-content-panel-container"),i=$(".main-box-content-heading");i.css("position","fixed").css("top",0).css("left",0).css("width","100%").css("z-index",11),e.css("position","fixed").css("background-color","white").css("margin-top",i.css("height")).css("z-index",10),t.isFull=!0,t.popoverPlacement="bottom"},t.compressView=function(){t.isExpand=!1;var e=$(".main-box-content-panel-container");e.css("position","absolute").css("z-index",1).css("margin-top",0).removeAttr("background-color");var i=$(".main-box-content-heading");i.css("position","relative").css("z-index",10).removeAttr("top"),i.removeAttr("left"),t.isFull=!1,t.popoverPlacement="top"},t.allowDrop=function(t){t.stopPropagation(),t.preventDefault()},t.drag=function(e){void 0!==$(e.target).parents(".group-box-item-box").data("index")&&(t.bgColor=t.group.content.d3setting.layers[$(e.target).parents(".group-box-item-box").data("index")][$(e.target).parents(".group-box-item-box").data("col")].floorBgColor,t.transform=t.group.content.d3setting.layers[$(e.target).parents(".group-box-item-box").data("index")][$(e.target).parents(".group-box-item-box").data("col")].isVertical,t.index=$(e.target).parents(".group-box-item-box").data("index"),t.col=$(e.target).parents(".group-box-item-box").data("col")),e.dataTransfer.setData("Text",e.target.id)},t.drop=function(e){var i,n=e.dataTransfer.getData("Text"),o=$("#"+n),a=o.parent().attr("id");if(void 0!==$(e.target).parents(".group-box-item-box").data("index")?(t.group.content.d3setting.layers[$(e.target).parents(".group-box-item-box").data("index")][$(e.target).parents(".group-box-item-box").data("col")]={},i=t.group.content.d3setting.layers[$(e.target).parents(".group-box-item-box").data("index")][$(e.target).parents(".group-box-item-box").data("col")]):(t.group.content.d3setting.layers[$(e.target).data("index")][$(e.target).data("col")]={},i=t.group.content.d3setting.layers[$(e.target).data("index")][$(e.target).data("col")]),a&&-1!==a.indexOf("group"))null!==t.index&&null!==t.col&&(t.group.content.d3setting.layers[t.index][t.col]=null),i.viewid=o.attr("title"),i.viewTitle=o.attr("data-content"),i.viewText=o.attr("data-text");else{var r=o.clone(!0);r.attr("title",o.attr("id")),t.group.content.d2setting.views.push(r.attr("title")),i.viewid=r.attr("title"),i.viewTitle=r.attr("data-title"),i.viewText=r.attr("data-text"),t.colorBox.bgColor=void 0,t.bgColor="#f5f5f5"}i.src=o.attr("src"),i.floorBgColor=t.bgColor?t.bgColor:"#f5f5f5",i.isVertical=void 0!==t.transform?t.transform:!1,t.groupImgBox=angular.copy(t.group.content.d3setting.layers),t.setBgColor(i,e),e.stopPropagation(),e.preventDefault()}}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(t){"use strict";var e=t.stateUrl;t.app.config(["$stateProvider",function(t){t.state("home.group",{url:"group",templateUrl:e("/main/group/group.html"),controller:"MainGroupCtrl",data:{title:"组合视图"}}).state("home.group.create",{url:"/create",templateUrl:e("/main/group/create/create.html"),controller:"MainGroupCreateCtrl",data:{title:"创建"}}).state("home.group.edit",{url:"/edit/:id",templateUrl:e("/main/group/create/create.html"),controller:"MainGroupEditCtrl",data:{title:"编辑"}}).state("home.group.edit.get2d",{url:"/2d/:id",views:{ViewContent:{controller:"GetEdit2DViewCtrl"}}}).state("home.group.edit.get3d",{url:"/3d/:id",views:{ViewContent3D:{controller:"GetEdit3DViewCtrl"}}}).state("home.group.list",{url:"/list",templateUrl:e("/main/group/list/list.html"),controller:"MainGroupListCtrl as listCtrl",data:{title:"列表"}}).state("home.group.list.private",{url:"/private",templateUrl:e("/main/group/list/private/private.html"),controller:"PrivateViewCtrl",data:{title:"私有"}}).state("home.group.list.private.get",{url:"/2d/:id",views:{ViewContent:{controller:"GetViewCtrl"}}}).state("home.group.list.private.get3d",{url:"/3d/:id",views:{ViewContent3D:{controller:"Get3DViewCtrl"}}}).state("home.group.list.public",{url:"/public",templateUrl:e("/main/group/list/public/list/public.list.html"),controller:"PublicListViewCtrl",data:{title:"公有"}}).state("home.group.list.user",{url:"/public/user/:userName",templateUrl:e("/main/group/list/public/user/public.user.html"),controller:"PublicUserViewCtrl"}).state("home.group.list.user.get",{url:"/2d/:id",views:{ViewContent:{controller:"GetViewCtrl"}}}).state("home.group.list.user.get3d",{url:"/3d/:id",views:{ViewContent3D:{controller:"Get3DViewCtrl"}}})}])}(nameSpace.reg("graph")),function(t,e){e.format=function(t){var e,i=[];for(e=0;e<t.length;e++){var n={items:[]},o=t[e];if(o.parent){var a,r,s=!1;for(a=0;a<i.length;a++)for(r=0;r<i[a].items.length;r++)if(i[a].items[r].id===o.parent){i[a].items.push(o),s=!0;break}s||o._count&&!(o._count<=3)||(o._count||(o._count=0),o._count++,t.push(o))}else n.items.push(o),n.label=o.name,i.push(n)}return i};var i=function(t,i,n,o,a,r,s,l,c,u,p,h,d,g,f,m,v,E,w){t.initMap={},t.isSearch=!1,t.cates=[],t.config={},t.selectCates=[],t.checkboxes={checked:!1,items:{}},t.icon={page:1,pageSize:30,total:0},t.icons=[],t.initCate=function(){var t=$("#category_icon");t.find(".drag-box-item").each(function(){e.sidebar.addImagePalette(this,$(this).attr("data-name"),$(this).attr("data-icon"),v.GRAPH_DRAG_WIDTH,v.GRAPH_DRAG_HEIGHT,v.GRAPH_DRAG_WIDTH,v.GRAPH_DRAG_HEIGHT)})},t.initBaseIcon=function(){t.initMap.base||(t.initMap.base=!0,i(function(){var t=document.querySelector("#base_icon");e.sidebar.addGeneralPalette(t,"swimlane",200,200,"Container"),e.sidebar.addGeneralPalette(t,"swimlane;horizontal=0",200,200,"Pool"),e.sidebar.addGeneralPalette(t,"text",40,26,"Text"),e.sidebar.addGeneralPalette(t,null,120,60),e.sidebar.addGeneralPalette(t,"rounded=1",120,60),e.sidebar.addGeneralPalette(t,"ellipse",80,80),e.sidebar.addGeneralPalette(t,"ellipse;shape=doubleEllipse",80,80),e.sidebar.addGeneralPalette(t,"triangle",60,80),e.sidebar.addGeneralPalette(t,"rhombus",80,80),e.sidebar.addGeneralPalette(t,"shape=hexagon",120,80),e.sidebar.addGeneralPalette(t,"shape=actor;verticalLabelPosition=bottom;verticalAlign=top",40,60),e.sidebar.addGeneralPalette(t,"ellipse;shape=cloud",120,80),e.sidebar.addGeneralPalette(t,"shape=cylinder",60,80),e.sidebar.addGeneralPalette(t,"line",160,10),e.sidebar.addGeneralPalette(t,"line;direction=south",10,160),e.sidebar.addGeneralPalette(t,"shape=xor",60,80),e.sidebar.addGeneralPalette(t,"shape=or",60,80),e.sidebar.addGeneralPalette(t,"shape=step",120,80),e.sidebar.addGeneralPalette(t,"shape=tape",120,100),e.sidebar.addGeneralPalette(t,"shape=cube",120,80),e.sidebar.addGeneralPalette(t,"shape=note",80,100),e.sidebar.addGeneralPalette(t,"shape=folder",120,120),e.sidebar.addGeneralPalette(t,"shape=card",60,80),e.sidebar.addGeneralPalette(t,"shape=plus",20,20),e.sidebar.createEdgeTemplate(t,"edgeStyle=none;endArrow=none;",100,100),e.sidebar.createEdgeTemplate(t,"edgeStyle=none",100,100),e.sidebar.createEdgeTemplate(t,"edgeStyle=elbowEdgeStyle;elbow=horizontal",100,100),e.sidebar.createEdgeTemplate(t,"edgeStyle=elbowEdgeStyle;elbow=vertical",100,100),e.sidebar.createEdgeTemplate(t,"edgeStyle=segmentEdgeStyle",100,100),e.sidebar.createEdgeTemplate(t,"arrow",100,100)},100))},t.initOwnIcon=function(){var t=$("#own_icon");t.find(".drag-box-item").each(function(){e.sidebar.addImagePalette(this,$(this).attr("data-name"),$(this).attr("data-icon"),v.GRAPH_DRAG_WIDTH,v.GRAPH_DRAG_HEIGHT,v.GRAPH_DRAG_WIDTH,v.GRAPH_DRAG_HEIGHT)})},t.reloadIcon=function(){t.initMap.icon||(t.initMap.icon=!0,p.get(t.icon).success(function(e){t.icon.total=e.data.count,t.icons=e.data.datas,i(t.initOwnIcon,100)}))},t.initConfig=function(){t.initMap.config||(t.initMap.config=!0,n.get().success(function(e){t.selectCates=e.data,t._refresh()}))},t.configSearch=function(){t.config.cate&&(t.isSearch=!0,t.tableParams.page(1),t.tableParams.reload())},t.uploadIcon=function(n){if(n&&n.length){var o=n[0];t.showProgressbar=!0,e.progressPromise&&i.cancel(e.progressPromise),p.upload(o).progress(function(e){t.iconUploaProgressPercentage=parseInt(100*e.loaded/e.total)}).success(function(){t.reloadIcon(),t.hideProgressbar()}).error(function(){t.hideProgressbar()})}},t.hideProgressbar=function(){e.progressPromise=i(function(){t.showProgressbar=!1},3e3)},t.preStatic=function(t){return h["static"](t)},t.$on("$viewContentLoaded",function(){e.editor=new a(document.querySelector("#graph"),document.querySelector("#graph-outline")),t.graphTableParams=new m(e.editor),e.editor.keymap=new w(e.editor),new r(e.editor,{vertex:[v.MENU_CELL_COPY,v.MENU_CELL_CUT,v.MENU_CELL_DELETE,"-",v.MENU_STYLE,[v.MENU_FONT_STYLE,v.MENU_STROKE_WIDTH,v.MENU_OPACITY],"-",v.MENU_EXPAND_NODE,v.MENU_OPEN_URL,v.MENU_VIEW_RELATION,[v.MENU_VIEW_RELATION_SET,v.MENU_VIEW_RELATION_OPEN]],edge:[v.MENU_CELL_COPY,v.MENU_CELL_CUT,v.MENU_CELL_DELETE,"-",v.MENU_STYLE,[v.MENU_FONT_STYLE,v.MENU_STROKE_WIDTH,v.MENU_OPACITY]],canvas:[v.MENU_VIEW_NEW,v.MENU_VIEW_OPEN,v.MENU_VIEW_SAVE,v.MENU_VIEW_UPDATE,"-",v.MENU_EXPORT,[v.MENU_EXPORT_PNG,v.MENU_EXPORT_PDF,v.MENU_EXPORT_SVG,v.MENU_EXPORT_XML],"-",v.MENU_GRAPH_CLEAR,v.MENU_CELL_PASTE,"-",v.MENU_LAYOUT,[v.MENU_LAYOUT_HORIZONTAL,v.MENU_LAYOUT_VERTICAL,v.MENU_LAYOUT_ORGANIC,v.MENU_LAYOUT_CIRCLE,v.MENU_LAYOUT_STACK_HORIZONTAL,v.MENU_LAYOUT_STACK_VERTICAL],"-",v.MENU_ZOOM,[v.MENU_ZOOM_IN,v.MENU_ZOOM_OUT,v.MENU_ZOOM_CENTER,v.MENU_ZOOM_ACTUAL],"-",v.MENU_VIEW_RELATION_BACK],libs:f}),t.toolbarParams=new o({editor:e.editor}),e.editor.toolbar=t.toolbarParams,i(function(){e.sidebar=new Sidebar(e.editor,document.querySelector("#category_icon"))}),t.infoParams=new g(e.editor),t.$state.params.id&&d.getView(t.$state.params.id).success(function(t){e.editor.action.openView(t.data)})}),t.tableParams=new c({page:1,count:10},{total:0,counts:[],getData:function(n,o){var a={},r={};t.config.cate?(t.config.attr?r[t.config.attr.name]=t.config.like?"*"+t.config.like+"*":"*":r["*"]=t.config.like?"*"+t.config.like+"*":"*",a.categoryId=t.config.cate.id,a.page=o.page(),a.pageSize=o.count(),a.like=r,l.get(a).success(function(t){e.ciData=t.data.datas,n.resolve(e.ciData),o.total(t.data.count),i(function(){new u({editor:e.editor,$table:$("#config-table"),ciData:e.ciData})})})):(n.resolve([]),o.total(0))}}),t.tableParams.getPages=function(){return Math.ceil(t.tableParams.total()/t.tableParams.count())},t.$watch("checkboxes.checked",function(i){angular.forEach(e.ciData,function(e){angular.isDefined(e.id)&&(t.checkboxes.items[e.id]=i)})}),t.showPopover=function(t){var e=t.target;e.offsetWidth<e.scrollWidth&&$(e).popover("show")},t.hidePopover=function(t){$(t.target).popover("hide")},t.openXml=function(t){if(t.length){var i=new FileReader;i.readAsText(t[0]),i.onload=function(t){e.editor.action.create(),e.editor.action.openXml(t.target.result)}}},n.get().success(function(i){h.formatCategoryData(i.data),t.cates=e.format(i.data),t._refresh()}),t.$on(E.GRAPH_CANVAS_CLICK,function(e,i){i.editor.state.view?t.infoParams.showFlag&&t.infoParams.update("view",i.editor.state.view):t.infoParams.hide()}),t.$on(E.CI_TABLE_UNCHECKED,function(){t.checkboxes.checked=!1}),t.$on(E.VIEW_UPDATE_BEFORE,function(){e.editor.action.update()}),t.$on(E.VIEW_PUBLIC_BEFORE,function(){e.editor.action.publicView()}),t.$on(E.VIEW_UNPUBLIC_BEFORE,function(){e.editor.action.unpublicView()}),t.$on(E.VIEW_SUBSCRIPTION_BEFORE,function(){e.editor.action.subscription()}),t.$on(E.VIEW_UNSUBSCRIPTION_BEFORE,function(){e.editor.action.unsubscription()})};i.$inject=["$scope","$timeout","CiCateService","GraphToolbar","Editor","GraphContextMenu","$modal","CiService","ngTableParams","DataDraw","IconService","Unit","ViewService","GraphInfo","ContextLibs","GraphTable","Const","Event","Keymap"],t.app.controller("MainEditCtrl",i)}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(t){"use strict";var e=t.stateUrl;t.app.config(["$stateProvider",function(t){t.state("home.edit",{url:"edit",templateUrl:e("/main/edit/edit.html"),controller:"MainEditCtrl",data:{title:""}}).state("home.edit.view",{url:"/:id",templateUrl:e("/main/edit/edit.html"),controller:"MainEditCtrl",data:{title:""}})}])}(nameSpace.reg("graph")),function(t){"use strict";var e=t.stateUrl;t.app.config(["$stateProvider",function(t){t.state("home.user",{url:"user",templateUrl:e("/main/user/user.html"),controller:"MainUserCtrl",data:{title:"用户中心"}}).state("home.user.overview",{url:"/overview",templateUrl:e("/main/user/overview/overview.html"),controller:"UserOverviewCtrl",data:{title:"概况"}}).state("home.user.subscription",{url:"/subscription",templateUrl:e("/main/user/subscription/subscription.html"),controller:"UserSubscriptionCtrl",data:{title:"我的订阅"}}).state("home.user.headImage",{url:"/headImage",templateUrl:e("/main/user/headImage/headImage.html"),controller:"UserHeadImageCtrl",data:{title:"头像"}}).state("home.user.publicView",{url:"/publicView",templateUrl:e("/main/user/publicView/publicView.html"),controller:"UserPublicViewCtrl",data:{title:"公开视图"}})}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.controller("MainUserCtrl",["$scope","Event","Unit","UserInfo",function(t,e,i,n){t["static"]=i["static"],t.userInfo={icon:"/default.png"};var o=n.get();o&&(t.userInfo=o),t.$on(e.USERINFO_UPDATE,function(e,i){t.userInfo=i})}])}(nameSpace.reg("graph")),function(t,e){"use strict";t.app.controller("MainMonitorCtrl",["$scope","GraphViewtree","ViewService","Editor","GraphContextMenu","GraphInfo","Event","MyTimeLine","CiMonitorService","$timeout",function(t,i,n,o,a,r,s,l,c,u){var p=function(){t.timeLineParams=new l({getStatusData:function(t,i){"function"==typeof i&&c.getPointStatus(t.data,[e.editor.state.view.id]).success(function(e){$.each(e.data,function(){this.id=this.time}),i({data:e.data,id:t.id})})},clickPoint:function(i){e.editor.state.endTime=Number(i.now),e.editor.state.startTime=i.now-i.timeAverage,e.editor.monitor.stop(),e.editor.monitor.update(),t.$broadcast(s.TIMELINE_POINT_CLICK)},clickNow:function(i){i.enabledNow?(e.editor.state.startTime=null,e.editor.state.endTime=null,e.editor.monitor.update(),e.editor.monitor.start()):e.editor.monitor.stop(),t.$broadcast(s.TIMELINE_POINT_CLICK)},update:function(t){t.timeAverage!==e.editor.state.timeAverage&&(e.editor.state.timeAverage=t.timeAverage,e.editor.monitor&&e.editor.monitor.update())}})};t.isShowTimeline=!1,t.$on("$viewContentLoaded",function(){e.editor=new o(document.querySelector("#graph"),document.querySelector("#graph-outline")),e.editor.action.disabled(),t.infoParams=new r(e.editor),t.$state.params.id&&n.getView(t.$state.params.id).success(function(i){t.infoParams.update("view",i.data),t.LAYOUT.collapsedSidebar=!0,e.editor.action.openView(i.data),e.editor.action.monitor(),t.isShowTimeline=!0,u(function(){p()})})}),t.viewtreeParams=new i({queryView:!0,allowShowPubview:!0,allowShowSubscription:!0,selectNode:function(i){i.xml&&(t.infoParams.update("view",i),e.editor.action.openView(i),e.editor.monitor=null,e.editor.action.monitor(),t.timeLineParams&&t.timeLineParams.remove(),t.isShowTimeline=!0,u(function(){p()}))}}),t.$on(s.GRAPH_CANVAS_CLICK,function(e,i){i.editor.state.view?t.infoParams.showFlag&&t.infoParams.update("view",i.editor.state.view):t.infoParams.hide()}),t.$on(s.GRAPH_INFO_TOGGLE,function(){t.timeLineParams&&u(function(){t.timeLineParams.resize()})}),t.$on(s.SIDEBAR_CALLAPSED,function(){t.timeLineParams&&u(function(){t.timeLineParams.resize()})}),t.$on(s.VIEW_SUBSCRIPTION_BEFORE,function(){e.editor.action.subscription()}),t.$on(s.VIEW_UNSUBSCRIPTION_BEFORE,function(){e.editor.action.unsubscription()}),t.$on("$stateChangeStart",function(){t.timeLineParams&&(t.timeLineParams.remove(),e.editor.monitor.stop())})}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(t){"use strict";var e=t.stateUrl;t.app.config(["$stateProvider",function(t){t.state("home.monitor",{url:"monitor",templateUrl:e("/main/monitor/monitor.html"),controller:"MainMonitorCtrl",data:{title:"监控"}}).state("home.monitor.id",{url:"/:id",templateUrl:e("/main/monitor/monitor.html"),controller:"MainMonitorCtrl",data:{}})}])}(nameSpace.reg("graph")),function(t,e){t.app.controller("MainSearchCtrl",["$scope","$timeout",function(t,e){}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(t){"use strict";var e=t.stateUrl;t.app.config(["$stateProvider",function(t){t.state("home.search",{url:"search",templateUrl:e("/main/search/search.html"),controller:"MainSearchCtrl",data:{title:"搜索"}}).state("home.search.home",{url:"/home",templateUrl:e("/main/search/home/home.html"),controller:"MainSearchHomeCtrl",data:{title:"起始页"}}).state("home.search.result",{url:"/:keyword",templateUrl:e("/main/search/result/result.html"),controller:"MainSearchResultCtrl",data:{title:"结果页"}})}])}(nameSpace.reg("graph")),function(t){"use strict";var e=t.stateUrl;t.app.config(["$stateProvider",function(t){t.state("home.view",{url:"view",templateUrl:e("/main/view/view.html"),controller:"MainViewCtrl",data:{title:"视图"}})}])}(nameSpace.reg("graph")),function(t,e){"use strict";t.app.controller("MainViewCtrl",["$scope","GraphViewtree","ViewService","Editor","GraphContextMenu","GraphToolbar","GraphInfo","Event","Unit","Const","ContextLibs","UserInfo","$timeout","Keymap",function(t,i,n,o,a,r,s,l,c,u,p,h,d,g){t.graphId="graph-view",t.$on("$viewContentLoaded",function(){e.editor=new o(document.querySelector("#graph-view")),e.editor.keymap=new g(e.editor),new a(e.editor,{vertex:[u.MENU_CELL_COPY,u.MENU_CELL_CUT,u.MENU_CELL_DELETE,"-",u.MENU_STYLE,[u.MENU_FONT_STYLE,u.MENU_STROKE_WIDTH,u.MENU_OPACITY],"-",u.MENU_EXPAND_NODE,u.MENU_OPEN_URL,u.MENU_VIEW_RELATION,[u.MENU_VIEW_RELATION_SET,u.MENU_VIEW_RELATION_OPEN]],edge:[u.MENU_CELL_COPY,u.MENU_CELL_CUT,u.MENU_CELL_DELETE,"-",u.MENU_STYLE,[u.MENU_FONT_STYLE,u.MENU_STROKE_WIDTH,u.MENU_OPACITY]],canvas:[u.MENU_VIEW_NEW,u.MENU_VIEW_OPEN,u.MENU_VIEW_SAVE,u.MENU_VIEW_UPDATE,"-",u.MENU_EXPORT,[u.MENU_EXPORT_PNG,u.MENU_EXPORT_PDF,u.MENU_EXPORT_SVG,u.MENU_EXPORT_XML],"-",u.MENU_GRAPH_CLEAR,u.MENU_CELL_PASTE,"-",u.MENU_LAYOUT,[u.MENU_LAYOUT_HORIZONTAL,u.MENU_LAYOUT_VERTICAL,u.MENU_LAYOUT_ORGANIC,u.MENU_LAYOUT_CIRCLE,u.MENU_LAYOUT_STACK_HORIZONTAL,u.MENU_LAYOUT_STACK_VERTICAL],"-",u.MENU_ZOOM,[u.MENU_ZOOM_IN,u.MENU_ZOOM_OUT,u.MENU_ZOOM_CENTER,u.MENU_ZOOM_ACTUAL],"-",u.MENU_VIEW_RELATION_BACK],libs:p}),t.toolbarParams=new r({editor:e.editor}),t.infoParams=new s(e.editor)}),t.viewtreeParams=new i({queryView:!0,showForm:!0,allowEdit:!0,allowShowPubview:!0,allowShowSubscription:!0,selectNode:function(i){i.xml&&(t.infoParams.update("view",i),e.editor.action.openView(i))}}),t.$on(l.GRAPH_CANVAS_CLICK,function(e,i){i.editor.state.view?t.infoParams.showFlag&&t.infoParams.update("view",i.editor.state.view):t.infoParams.hide()}),t.$on(l.VIEW_DELETE_BEFORE,function(i,o){c.confirm("删除后无法恢复，请确认是否要继续？",function(){n.remove(o.id).success(function(){e.editor.action.clear(),t.$broadcast(l.VIEW_DELETE_AFTER,c.eventData(o)),t.infoParams.hide()})})}),t.$on(l.VIEW_UPDATE_BEFORE,function(){e.editor.action.update()}),t.$on(l.VIEW_PUBLIC_BEFORE,function(){e.editor.action.publicView()}),t.$on(l.VIEW_UNPUBLIC_BEFORE,function(){e.editor.action.unpublicView()}),t.$on(l.VIEW_SUBSCRIPTION_BEFORE,function(){e.editor.action.subscription()}),t.$on(l.VIEW_UNSUBSCRIPTION_BEFORE,function(){e.editor.action.unsubscription()})}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(t){"use strict";t.app.controller("MainGroupCreateCtrl",["$scope","ViewService","Unit",function(t,e,i){var n,o;t["static"]=i["static"],t.views=[],t.filter="",t.row=3,t.col=3,t.basicSet={},t.twoDSet={},t.threeDSet={},t.$parent.setConfig=!1,t.$parent.groupItemArray=[],t.$parent.groupImgBox=[],t.$parent.setNum={},t.$parent.colorBox={},t.$parent.group={},t.$parent.group.content={},t.$parent.group.content.viewDescription="",t.$parent.group.content.d2setting={},t.$parent.group.content.d3setting={},t.$parent.group.content.d2setting.views=[],t.$parent.group.content.d3setting.rows=3,t.$parent.group.content.d3setting.cols=3,t.$parent.group.content.d3setting.layerMargin=200,t.$parent.group.content.d3setting.layerItemMargin=10,t.$parent.group.content.d2setting.toolbarSize=130,t.$parent.group.content.d2setting.outLineSize=90,t.$parent.group.content.d2setting.layout="top",t.$parent.group.content.d2setting.maxCount=4,t.$parent.group.content.d2setting.toolbarBgColor="#C0C0C0",t.$parent.group.content.d2setting.btnColor="#616161",t.$watchGroup(["group.content.d3setting.rows","group.content.d3setting.cols"],function(e){for(t.$parent.group.content.d3setting.layers=[],t.$parent.group.content.d2setting.views=[],n=0;n<e[0];n++){var i=[];for(o=0;o<e[1];o++)void 0===t.$parent.groupImgBox[n]?i[o]=null:0!==t.$parent.groupImgBox.length&&void 0!==t.$parent.groupImgBox[n][o]&&null!==t.$parent.groupImgBox[n][o]?(i[o]=t.$parent.groupImgBox[n][o],t.$parent.group.content.d2setting.views.push(i[o].viewid)):i[o]=null;t.$parent.group.content.d3setting.layers.push(i)}t.width=100/e[1]+"%",t.height=$(".main-box-content-panel-container-body").width()*Number(100/e[1])/100*1/2}),e["private"]().success(function(e){t.views=e.data}),t.refresh=function(){e["private"]().success(function(e){t.views=e.data})}}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(t){"use strict";t.app.controller("MainGroupEditCtrl",["$scope","$state","ViewService","GroupService","Unit",function(t,e,i,n,o){var a,r,s=e.params.id;s&&(t.editToolShow=!0),t["static"]=o["static"],t.views=[],t.filter="",t.row=3,t.col=3,i["private"]().success(function(e){t.views=e.data}),n.get(s).success(function(e){var i=$.parseJSON(e.data.content);t.$parent.group=i,t.$parent.groupImgBox=angular.copy(t.$parent.group.content.d3setting.layers),t.$watchGroup(["group.content.d3setting.rows","group.content.d3setting.cols"],function(e){for(t.$parent.group.content.d3setting.layers=[],t.$parent.group.content.d2setting.views=[],a=0;a<e[0];a++){var i=[];for(r=0;r<e[1];r++)void 0===t.$parent.groupImgBox[a]?i[r]=null:void 0!==t.$parent.groupImgBox[a][r]&&null!==t.$parent.groupImgBox[a][r]?(i[r]=t.$parent.groupImgBox[a][r],t.$parent.group.content.d2setting.views.push(i[r].viewid)):i[r]=null;t.$parent.group.content.d3setting.layers.push(i)}t.width=100/e[1]+"%",t.height=$(".main-box-content-panel-container-body").width()*Number(100/e[1])/100*1/2})}),t.updateView=function(){if(t.$parent.group.views=angular.copy(t.$parent.group.content.d2setting.views),void 0===t.$parent.group.name||""===t.$parent.group.name||""===t.$parent.group.content.viewDescription)return void o.error("请填写名称或描述");var i=JSON.stringify(t.$parent.group),a={views:t.$parent.group.views,id:e.params.id,name:t.$parent.group.name,content:i};n.update(a).success(function(){o.success("更新成功"),e.go("home.group.list.private")})},t.saveAsView=function(){o.prompt("请输入视图名称",function(i){if(t.$parent.group.name=i,t.$parent.group.views=angular.copy(t.$parent.group.content.d2setting.views),void 0===t.$parent.group.name||""===t.$parent.group.name||""===t.$parent.group.content.viewDescription)return void o.error("请填写名称或描述");var a=JSON.stringify(t.$parent.group),r={views:t.$parent.group.views,name:t.$parent.group.name,content:a};n.save(r).success(function(t){o.success("保存成功"),e.go("home.group.edit",{id:t.data.id})})},"视图名称")},t.delGroupView=function(){n["delete"](s).success(function(){o.confirm("确定删除吗？",function(){e.go("home.group.list.private")})})},t.show3DView=function(){t.is2D=!1,t.showView=!0,e.go("home.group.edit.get3d",{id:s})},t.show2DView=function(){t.is2D=!0,t.showView=!0,$(".popover").remove(),e.go("home.group.edit.get2d",{id:s})},t.backEdit=function(){t.showView=!1}}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(t){"use strict";t.app.controller("MainGroupListCtrl",["$scope","$state","GroupService","ViewService","Unit",function(t,e,i,n,o){t.isExpand=!1,t.isFull=!1,t.popoverPlacement="top",t.$watch("filter",function(){""===t.filter&&t.isPublic&&(t.publicViewsShow=t.publicViews.slice(0,t.pageSize),t.currentPage=1)},!1),t.switchView=function(){t.hideOperation=!0,e.go(t.isPublic?"home.group.list.public":"home.group.list.private")},t.createView=function(){e.go("home.group.create")},t.showPopover=function(t){var e=t.currentTarget;e.className.indexOf("group-public-view-list-div")>-1?$(e).children(".group-public-view-list-user")[0].scrollWidth>$(e).children(".group-public-view-list-user")[0].offsetWidth&&$(e).popover("show"):$(e)[0].scrollWidth>$(e)[0].offsetWidth&&$(e).popover("show")},t.hidePopover=function(t){$(t.currentTarget).popover("hide")},t.expandView=function(){t.isExpand=!0;var e=$(".main-box-content-panel-container"),i=$(".main-box-content-heading");i.css("position","fixed").css("top",0).css("left",0).css("width","100%").css("z-index",11),e.css("position","fixed").css("background-color","white").css("margin-top",i.css("height")).css("z-index",10),t.outline.resize(),t.isFull=!0,t.popoverPlacement="bottom"},t.compressView=function(){t.isExpand=!1;var e=$(".main-box-content-panel-container");e.css("position","absolute").css("z-index",1).css("margin-top",0).removeAttr("background-color");var i=$(".main-box-content-heading");i.css("position","relative").css("z-index",10).removeAttr("top"),i.removeAttr("left"),t.outline.resize(),t.isFull=!1,t.popoverPlacement="top"}}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(t){"use strict";t.app.controller("UserOverviewCtrl",["$scope","UserService","UserInfo","Event",function(t,e,i,n){e.profile().success(function(e){t.data=e.data}),t.userInfo=i.get(),t.$on(n.USERINFO_UPDATE,function(e,i){t.userInfo=i,console.log(i)})}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.controller("UserHeadImageCtrl",["$scope","UserInfo","Event","Unit",function(t,e,i,n){t["static"]=n["static"],t.$on(i.USERINFO_UPDATE,function(e,i){t.userInfo=i,t.handle()}),t.userInfo=e.get(),t.userInfo&&t.handle(),t.handle=function(){console.log(t.userInfo)}}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.controller("UserPublicViewCtrl",function(){})}(nameSpace.reg("graph")),function(t){"use strict";t.app.controller("UserSubscriptionCtrl",function(){})}(nameSpace.reg("graph")),function(t,e){t.app.controller("MainSearchHomeCtrl",["$scope",function(t){t.keyword="",t.search=function(){t.keyword&&t.$state.go("home.search.result",{keyword:t.keyword})}}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(t,e){"use strict";t.app.controller("MainSearchResultCtrl",["$scope","SearchService","ngTableParams","Unit","Outline","$timeout","Editor",function(t,e,i,n,o,a,r){t.keyword=t.$state.params.keyword,t.views=[],t.cis=[],t.isFull=!1;var s=new r($(".resultFullView")[0]);s.action.disabled(),t.tableParams=new i({page:1,count:10},{total:0,counts:[],data:[]}),t.staticUrl=function(t){return n["static"](t)},e.fuzzy(t.keyword).success(function(e){t.views=e.data.view,t.tableParams.page(1),t.tableParams.settings({data:e.data.ci,total:e.data.ci.length}),t.tableParams.reload()}),t.showCiViews=function(t){t.isInitChart||(a(function(){$("#"+t.config.id).height(.4*$("#"+t.config.id).width()),new o(t.ciViews,$("#"+t.config.id)[0],{layout:"left",maxCount:4,outLineSize:90,toolbarSize:130})}),t.isInitChart=!0)},t.showFullView=function(e){s.action.openXml(e.xml),t.view=e,t.isFull=!0},t.goBackToResultCi=function(){t.isFull=!1}}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(t){"use strict";t.app.controller("GetEdit3DViewCtrl",["$scope","$state","GroupService","ViewService","Unit","Universe","$timeout","CiRelationService","Const",function(t,e,i,n,o,a,r,s,l){var c,u=e.params.id,p=[],h={};t.$parent.is2D=!1,t.$parent.showView=!0;var d=function(t){$.each(t,function(){if(o.isCiCell(this)){var t=o.getCiIdByCell(this);h[t]||p.push(t)}})};i.get(u).success(function(e){var i=e.data;t.$parent.view=i,t.$parent.showOption=!0;var o=[],u=i.content;"string"==typeof i.content&&(u=JSON.parse(i.content));for(var h=0;h<u.views.length;h++)o.push(u.views[h]);n.getByIds({viewIds:o}).success(function(t){var e=u.content.d3setting.layers,i={};$.each(t.data,function(){this.json=JSON.parse(this.svg),i[this.id]=this}),u.content.d3setting.layerCount=u.content.d3setting.rows,u.content.d3setting.layerItemCount=u.content.d3setting.cols;for(var n=0;n<e.length;n++)for(var o=0;o<e[n].length;o++){var h=e[n][o];if(h&&i[h.viewid]){var g=i[h.viewid];

h.name=g.name,h.viewid=g.id,h.graphHeight=g.json.graphHeight,h.graphWidth=g.json.graphWidth,h.containers=g.json.containers,h.edges=g.json.edges,h.nodes=g.json.nodes,d(g.json.nodes),e[n][o]=h}}u.content.d3setting.$container=$("#show3DView"),s.get({cis:p}).success(function(t){var e=[];t.data&&($.each(t.data,function(){e.push({source:l.CI_PREFIX+this.startCi,target:l.CI_PREFIX+this.endCi})}),u.content.d3setting.relation=e),$("#show3DView>canvas").remove(),c=new a(u.content.d3setting),e.length&&r(function(){c.showLayerLine()},3e3)})})}),t.$watch("isExpand",function(){console.log("resize..."),c&&c.resize()})}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(t){"use strict";t.app.controller("GetEdit2DViewCtrl",["$scope","$state","GroupService","ViewService","Unit","Outline",function(t,e,i,n,o,a){var r=e.params.id;t.$parent.is2D=!0,t.$parent.showView=!0,i.get(r).success(function(e){var i=e.data;t.$parent.view=i,t.$parent.showOption=!0,t.$parent.isOption=!0;var o=[],r=i.content;"string"==typeof i.content&&(r=JSON.parse(i.content));for(var s=0;s<r.views.length;s++)o.push(r.views[s]);n.getByIds({viewIds:o}).success(function(e){for(var i=[],n=0;n<o.length;n++)for(var s=0;s<e.data.length;s++)e.data[s].id===o[n]&&i.push(e.data[s]);$("#scroll").remove(),$("#main").remove(),t.$parent.$parent.outline=new a(i,$("#showView")[0],r.content.d2setting),$("#items > div").eq(0).find("div[data-id]").css("opacity",0),$("#scroll").css("backgroundColor","rgba(0,0,0,0.1)")})})}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(t){"use strict";t.app.controller("PrivateViewCtrl",["$rootScope","$scope","$state","GroupService","ViewService","Unit",function(t,e,i,n,o,a){e.isPublic=!1,e.showOption=!1,e.is2D=!0,e.opensArr={},n["private"]().success(function(t){for(var i=t.data,n=0;n<i.length;n++){var o=i[n],a=new Date(o.time);o.time=a.getUTCFullYear()+"/"+(a.getUTCMonth()+1)+"/"+a.getUTCDate(),e.opensArr[o.id]=o.open}e.views=i}),e.showView=function(t){e.is2D=!0,e.showOption=!0,e.view=t,e.isOpen=t.open,$(".popover").remove(),i.go("home.group.list.private.get",{id:t.id})},e.deleteView=function(){a.confirm("确认删除视图？",function(){n.deleteById(e.view.id).success(function(){e.showOption=!1,i.go("home.group.list.private");for(var t=0;t<e.views.length;t++){var n=e.views[t];if(n.id===e.view.id){e.views.splice(t,1);break}}}),$(".main-box-content-panel-container-body").html("")})},e.editView=function(){i.go("home.group.edit",{id:e.view.id})},e.show3DView=function(t){e.showOption=!0,e.view=t,e.is2D=!1,i.go("home.group.list.private.get3d",{id:t.id})},e.closeView=function(){n.closeView(e.view.id).success(function(){e.isOpen=!1,e.opensArr[e.view.id]=!1})},e.openView=function(){n.openView(e.view.id).success(function(){e.isOpen=!0,e.opensArr[e.view.id]=!0})}}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(t){"use strict";t.app.controller("GetViewCtrl",["$scope","$state","GroupService","ViewService","Unit","Outline",function(t,e,i,n,o,a){var r=e.params.id;t.$parent.is2D=!0,i.get(r).success(function(e){var i=e.data;t.$parent.view=i,t.$parent.showOption=!0,t.$parent.isOption=!0;var o=[],r=i.content;"string"==typeof i.content&&(r=JSON.parse(i.content));for(var s=0;s<r.views.length;s++)o.push(r.views[s]);n.getByIds({viewIds:o}).success(function(e){for(var i=[],n=0;n<o.length;n++)for(var s=0;s<e.data.length;s++)e.data[s].id===o[n]&&i.push(e.data[s]);$("#scroll").remove(),$("#main").remove(),t.$parent.$parent.outline=new a(i,$(".main-box-content-panel-container-body")[0],r.content.d2setting),$("#items > div").eq(0).find("div[data-id]").css("opacity",0),$("#scroll").css("backgroundColor","rgba(0,0,0,0.1)")})})}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(t){"use strict";t.app.controller("Get3DViewCtrl",["$scope","$state","GroupService","ViewService","Unit","Universe","$timeout","CiRelationService","Const",function(t,e,i,n,o,a,r,s,l){var c,u=e.params.id,p=[],h={};t.$parent.is2D=!1;var d=function(t){$.each(t,function(){if(o.isCiCell(this)){var t=o.getCiIdByCell(this);h[t]||p.push(t)}})};i.get(u).success(function(e){var i=e.data;t.$parent.view=i,t.$parent.showOption=!0;var o=[],u=i.content;"string"==typeof i.content&&(u=JSON.parse(i.content));for(var h=0;h<u.views.length;h++)o.push(u.views[h]);n.getByIds({viewIds:o}).success(function(t){var e=u.content.d3setting.layers,i={};$.each(t.data,function(){this.json=JSON.parse(this.svg),i[this.id]=this}),u.content.d3setting.layerCount=u.content.d3setting.rows,u.content.d3setting.layerItemCount=u.content.d3setting.cols;for(var n=0;n<e.length;n++)for(var o=0;o<e[n].length;o++){var h=e[n][o];if(h&&i[h.viewid]){var g=i[h.viewid];h.name=g.name,h.viewid=g.id,h.graphHeight=g.json.graphHeight,h.graphWidth=g.json.graphWidth,h.containers=g.json.containers,h.edges=g.json.edges,h.nodes=g.json.nodes,d(g.json.nodes),e[n][o]=h}}u.content.d3setting.$container=$(".main-box-content-panel-container-body-3d"),s.get({cis:p}).success(function(t){var e=[];t.data&&($.each(t.data,function(){e.push({source:l.CI_PREFIX+this.startCi,target:l.CI_PREFIX+this.endCi})}),u.content.d3setting.relation=e),$(".main-box-content-panel-container-body-3d>canvas").remove(),c=new a(u.content.d3setting),e.length&&r(function(){c.showLayerLine()},3e3)})})}),t.$watch("isExpand",function(){console.log("resize..."),c&&c.resize()})}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(t){"use strict";t.app.controller("PublicListViewCtrl",["$scope","$state","GroupService","Unit",function(t,e,i,n){t.pageSize=4,t.currentPage=1,t.isPublic=!0,i["public"]().success(function(e){t.publicViews=[];for(var i=e.data,o=0;o<i.length;o++){var a={},r=i[o];a.userName=r.userName,a.loginName=r.loginName,a.userIconUrl=n["static"](r.icon),t.publicViews.push(a)}t.totalItems=t.publicViews.length,t.publicViewsShow=t.publicViews.slice(0,t.pageSize)}),t.showPrivateViewList=function(i,n,o){$(o.currentTarget).popover("hide"),t.$parent.optionalUser=n,e.go("home.group.list.user",{userName:i})},t.pageChanged=function(){t.publicViewsShow=t.publicViews.slice((t.currentPage-1)*t.pageSize,t.currentPage*t.pageSize)}}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(t){"use strict";t.app.controller("PublicUserViewCtrl",["$scope","$state","GroupService",function(t,e,i){var n=e.params.userName;t.isPublic=!0,t.isOption=!1,t.is2D=!0,t.userName=t.$parent.optionalUser,$(".popover").hide(),i.getPublicViewByUser(n).success(function(e){for(var i=e.data,n=0;n<i.length;n++){var o=new Date(i[n].time);i[n].time=o.getUTCFullYear()+"/"+(o.getUTCMonth()+1)+"/"+o.getUTCDate();var a=i[n].content;"string"==typeof a&&(a=JSON.parse(a)),i[n].content=a}t.views=i}),t.goBack=function(){e.go("home.group.list.public")},t.showPublicView=function(i){t.is2D=!0,t.view=i,t.isOption=!0,$(".popover").remove(),e.go("home.group.list.user.get",{id:i.id,userName:i.userName})},t.showPublic3DView=function(i){t.is2D=!1,t.view=i,t.isOption=!0,e.go("home.group.list.user.get3d",{id:i.id,userName:i.userName})},t.subscribeView=function(){t.isSubscribe=!0,i.subscription(t.view.id)},t.cancelSubscribe=function(){t.isSubscribe=!1,i.unsubscription(t.view.id)}}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page"));
//# sourceMappingURL=data:application/json;base64,