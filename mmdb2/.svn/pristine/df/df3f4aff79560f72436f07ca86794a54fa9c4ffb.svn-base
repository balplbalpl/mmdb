/* global mxRectangleShape */
/* global mxCellOverlay */
/* global mxImage */
/* global mxEvent */
/* global mxGeometry */
/* global mxRectangle */


(function(graph){

	'use strict';



	// ========
	// mxGraph
	// ========
	

	// =========
	// Index
	// =========
	var Index = {

		updateIconLib: function(){
			graph.utils.updateIconLib(nameSpace.reg('graph.ICO_LIB_VIEW'), graph.api.getCiCate);
		},

		onload: function(){
			if(typeof graph.onload === 'function'){
				graph.onload();
			}
		},

		checkBrowser: function(){
			if(graph.utils.isIE(6) || graph.utils.isIE(7) || graph.utils.isIE(8)){
				window.location.href = 'browser-support.html';
			}
		},

		tooltips: function(){
			$('*[data-toggle=tooltip]').tooltip();
		},

		collapse: function(){
			$('body').on('click', '.portlet > .portlet-title > .tools > .collapse, .portlet .portlet-title > .tools > .expand', function(e) {
				e.preventDefault();
				var el = $(this).closest('.portlet').children('.portlet-body');
				if ($(this).hasClass('collapse')) {
					$(this).removeClass('collapse').addClass('expand');
					el.slideUp(200);
				} else {
					$(this).removeClass('expand').addClass('collapse');
					el.slideDown(200);
				}
			});
		},

		initSwimlaneStyle: function(){
			graph.event.reg(graph.DEFINE_EVENT.GRAPH_GET_CELL_STYLE, function(evt){
				var url, overlay;

				if (this.isCollapsed(evt.cell)){
					evt.cell.geometry.height = graph.DEFINE_CONFIG_INFO.DRAG_HEIGHT;
					url = evt.graph.getCellAttr(evt.cell, 'collapsed');
					url = url ? url : graph.DEFINE_SWIMLANE.COLLAPSED_IMG;
					evt.style = evt.style + ';shape=image;image=' + url + ';verticalLabelPosition=bottom;verticalAlign=top;';

					//overlay = new mxCellOverlay(new mxImage('images/group.png', 16, 16));
                    //
					//// Installs a handler for clicks on the overlay
					//overlay.addListener(mxEvent.CLICK, function (sender, e) {
					//	var cell = e.getProperty('cell');
					//	//var oriX = cell.geometry.x;
					//	//var oriY = cell.geometry.y;
					//	cell.setCollapsed(false);
					//	cell.setGeometry(new mxGeometry(
					//		cell.geometry.x,
					//		cell.geometry.y,
					//		cell.geometry.alternateBounds.width,
					//		cell.geometry.alternateBounds.height
					//	));
                    //
					//	cell.setStyle('swimlane');
					//	evt.graph.removeCellOverlays(cell);
					//	evt.graph.refresh(cell);
					//	cell.geometry.alternateBounds = new mxRectangle(0, 0, graph.DEFINE_CONFIG_INFO.DRAG_WIDTH, graph.DEFINE_CONFIG_INFO.DRAG_HEIGHT);
					//	evt.graph.clearSelection();
					//	evt.graph.selectionModel.setCell(cell);
                    //
					//	if (evt.graph.foldHandle) {
					//		evt.graph.foldHandle(cell);
					//	}
                    //
					//	evt.graph.removeCellOverlays(cell);
					//	evt.graph.cellsFolded([cell], false);
					//	//console.log(oriX);
					//	//cell.geometry.x = oriX;
					//	//cell.geometry.y = oriY;
					//});
                    //
					// evt.graph.addCellOverlay(evt.cell, overlay);
				}
			});
		}

	};


	$(window).ready(function(){

		//// check browser
		//Index.checkBrowser();
		//// init ICO
		//Index.updateIconLib();
        //
		//Index.tooltips();
        //
		//Index.initSwimlaneStyle();
        //
		//Index.collapse();
		//// onload
		//Index.onload();
	});

})(nameSpace.reg('graph'));


