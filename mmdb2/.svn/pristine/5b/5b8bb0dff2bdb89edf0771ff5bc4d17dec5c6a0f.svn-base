package com.mmdb.service.info;

import com.mmdb.core.framework.neo4j.annotation.Transaction;
import com.mmdb.model.categroy.UserCategory;
import com.mmdb.model.info.UserInformation;

import java.util.List;
import java.util.Map;

/**
 * 用户 用户 - 服务层
 *
 * @author XIE
 */
public interface IUserInfoService {
    /**
     * 添加用户
     *
     * @param info 用户用户对象
     * @return
     * @throws Exception
     */
//    @Transaction
    public UserInformation save(UserInformation info) throws Exception;

    /**
     * [批量]添加用户
     *
     * @param infos 用户用户对象
     * @throws Exception
     */
//    @Transaction
    public void save(List<UserInformation> infos) throws Exception;

    /**
     * 通过键值对获取用户
     *
     * @param key
     * @param value
     * @return
     * @throws Exception
     */
    public UserInformation getByProperty(String key, Object value) throws Exception;

    /**
     * 通过键值对获取用户
     *
     * @param key
     * @param value
     * @return
     * @throws Exception
     */
    public List<UserInformation> getByPropertys(String key, Object value) throws Exception;

    /**
     * 通过id获取用户
     *
     * @param cateId 分类id
     * @param UserId 用户id
     * @return
     * @throws Exception
     */
    public UserInformation getById(String cateId, String UserId) throws Exception;
 
    /**
     * 通过jsonId获取用户
     *
     * @param jsonId ciid+id
     * @return
     * @throws Exception
     */
    public UserInformation getById(String jsonId) throws Exception;

    /**
     * 删除用户
     *
     * @param info 用户
     * @throws Exception
     */
    @Transaction
    public void delete(UserInformation info) throws Exception;

    /**
     * [批量]删除用户
     *
     * @param informations
     * @throws Exception
     */
    @Transaction
    public void delete(List<UserInformation> informations) throws Exception;

    /**
     * 更新用户
     *
     * @param information 原始用户
     * @param password         要更新的密码
     * @param phone         要更新的 手机
     * @param email        p邮箱
     * @return
     * @throws Exception
     */
    @Transaction
    public UserInformation update(UserInformation information, String password, String phone, String email) throws Exception;

    /**
     * 更新用户
     *
     * @param information 需要更新的用户
     * @return
     * @throws Exception
     */
    @Transaction
    public UserInformation update(UserInformation information) throws Exception;

    /**
     * 获取所有用户
     *
     * @return
     * @throws Exception
     */
    public List<UserInformation> getAll() throws Exception;

    /**
     * 高级查询
     *
     * @param category 分类 null时获取所有
     * @param mustExp  必备查询条件
     * @param orExp    模糊查询条件
     * @param extend   是否继承
     * @return
     * @throws Exception
     */
    public List<UserInformation> qureyByAdvanced(UserCategory category, Map<String, String> mustExp, Map<String, String> orExp,
                                                 boolean extend) throws Exception;

    /**
     * 模糊搜索
     *
     * @param keyWord 关键字
     * @return
     */
    public List<UserInformation> qureyFuzzy(String keyWord) throws Exception;
}