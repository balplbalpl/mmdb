!function(t){"use strict";t.stateUrl=function(t){return"app/state"+t},t.app=angular.module("graph",["ngSanitize","ui.router","ui.bootstrap","graphToolbar","graphViewtree","graphInfo","graphTable","treeControl","angular-md5","colorpicker.module","ngTable","ngFileUpload","rzModule","ngCookies"]),t.app.config(["$stateProvider","$urlRouterProvider","$httpProvider",function(e,n,i){n.otherwise("/edit"),i.interceptors.push("HttpInterceptor"),e.state("home",{url:"/",templateUrl:t.stateUrl("/main/main.html"),controller:"MainCtrl"})}]),t.app.run(["$rootScope","$state","$cookies",function(t,e,n){t.$state=e,t._refresh=function(){t.$$phase||t.$apply()},t.$on("$stateChangeSuccess",function(t,e,n){}),t.$on("$stateChangeStart",function(t,i){if("/login"!=i.url){var o;o=n.get("token"),o||(t.preventDefault(),e.go("login"))}})}]),"object"==typeof mxRectangleShape&&(mxRectangleShape.prototype.crisp=!0),Editor.prototype.gridImage=IMAGE_PATH+"/grid_bg.png",mxLog.WARN=!1,mxLog.DEBUG=!1}(nameSpace.reg("graph")),function(t){"use strict";var e=function(e,n,i,o,a,r,s,l){return function(i){this.clearHight=function(){i.graph.removeLight()},this.hightLightCi=function(){var t=this.getCis();$.each(t,function(){i.graph.addLight(this)})},this.backgroundImage=function(){e.open({size:"lg",animation:!0,templateUrl:"app/modal/image/image.html",controller:"ModalImageCtrl",resolve:{fn:function(){return function(t){var e=n["static"](t.url),o=document.createElement("img");o.src=e,o.onload=function(){var t=new mxImage(e,this.width,this.height);i.graph.setBackgroundImage(t),i.graph.view.validate(),$(o).remove()}}}}})},this.clearBackgroundImage=function(){i.graph.setBackgroundImage(null),i.graph.view.validate()},this.save=function(){e.open({size:"lg",animation:!0,templateUrl:"app/modal/view/save.html",controller:"ModalViewSaveCtrl",resolve:{editor:function(){return i}}})},this.update=function(){e.open({size:"lg",animation:!0,templateUrl:"app/modal/view/save.html",controller:"ModalViewUpdateCtrl",resolve:{editor:function(){return i}}})},this.open=function(){e.open({animation:!0,templateUrl:"app/modal/view/open.html",controller:"ModalViewOpenCtrl",resolve:{fn:function(){return function(t){i.action.openView(t)}}}})},this.create=function(){this.clear(),this.syncGrid(),i.graph.zoomActual(),i.state.empty()},this.clear=function(){i.graph.model.clear()},this.zoomIn=function(){i.graph.zoomIn(),this.syncGrid()},this.zoomOut=function(){i.graph.zoomOut(),this.syncGrid()},this.zoomActual=function(){i.graph.zoomActual()},this.zoomCenter=function(){i.graph.zoomToCenter(),this.syncGrid()},this.syncGrid=function(){var t=i.graph.getView().getScale(),e=o.GRAPH_GRID_WIDTH*t+"px",n=o.GRAPH_GRID_HEIGHT*t+"px";$(i.graph.container).find("svg")[0].style.backgroundSize=e+" "+n},this.assistLine=function(){i.graph.graphHandler.guidesEnabled=!i.graph.graphHandler.guidesEnabled,i.state.isAssistLine=i.graph.graphHandler.guidesEnabled},this.orderDown=function(){i.graph.orderCells(!0)},this.orderUp=function(){i.graph.orderCells(!1)},this.alignCells=function(t){i.graph.alignCells(t)},this.alignDistribute=function(t){i.graph.distributeCells(t)},this.undo=function(){i.graph.stopEditing(!1),i.undoManager.undo()},this.redo=function(){i.graph.stopEditing(!1),i.undoManager.redo()},this.removeCells=function(){i.graph.removeCells()},this.edgeStyle=function(t){this.edgeClearStyle(),"elbowHorizontal"===t&&(t="elbowEdgeStyle",this.elbowStyle("horizontal")),"elbowVertical"===t&&(t="elbowEdgeStyle",this.elbowStyle("vertical")),i.graph.setCellStyles(mxConstants.STYLE_EDGE,t)},this.elbowStyle=function(t){i.graph.setCellStyles(mxConstants.STYLE_ELBOW,t)},this.edgeClearStyle=function(){var t=i.graph.getSelectionEdges();$.each(t,function(){this.geometry.points=[]});var e=[mxConstants.STYLE_EDGE,mxConstants.STYLE_ELBOW,"noEdgeStyle","orthogonal"];$.each(e,function(){i.graph.setCellStyles(this,null,t)})},this.startArrow=function(t){i.graph.setCellStyles(mxConstants.STYLE_STARTARROW,t),i.graph.setCellStyles("startFill",0)},this.startArrowFill=function(t){i.graph.setCellStyles(mxConstants.STYLE_STARTARROW,t),i.graph.setCellStyles("startFill",1)},this.endArrow=function(t){i.graph.setCellStyles(mxConstants.STYLE_ENDARROW,t),i.graph.setCellStyles("endFill",0)},this.endArrowFill=function(t){i.graph.setCellStyles(mxConstants.STYLE_ENDARROW,t),i.graph.setCellStyles("endFill",1)},this.linkEdit=function(){var t,e;t=i.graph.getSelectionCells(),t.length>=1&&(e=i.graph.getLinkForCell(t[0],"link"),e=e?e:"",n.prompt("请输入URL",function(e){null!==e&&$.each(t,function(){i.graph.setLinkForCell(this,e)})},e))},this.shoadow=function(){var e,n;e=i.graph.getSelectionCells(),e.length>=1&&(n=t.utils.getStyleForAttr(e[0],"shadow"),n="1"===n?"none":"1",i.graph.setCellStyles(mxConstants.STYLE_SHADOW,n,e))},this.cellFillColor=function(){var t=i.graph.getSelectionCells();if(t.length){var n=i.graph.getCellStyle(t[0]);e.open({size:"sm",templateUrl:"app/modal/color/color.html",controller:"ModalColorCtrl",resolve:{title:function(){return"填充颜色"},originalColor:function(){return n.fillColor},fn:function(){return function(e){i.graph.setCellStyles(mxConstants.STYLE_FILLCOLOR,e,t)}}}})}},this.cellStrokeColor=function(){var t=i.graph.getSelectionCells();if(t.length){var n=i.graph.getCellStyle(t[0]);e.open({size:"sm",templateUrl:"app/modal/color/color.html",controller:"ModalColorCtrl",resolve:{title:function(){return"边框颜色"},originalColor:function(){return n.strokeColor},fn:function(){return function(e){i.graph.setCellStyles(mxConstants.STYLE_STROKECOLOR,e,t)}}}})}},this.font=function(){e.open({templateUrl:"app/modal/font/font.html",controller:"ModalFontCtrl",resolve:{editor:function(){return i}}})},this.grid=function(){var t=$(i.graph.container).find("svg")[0];t.style.backgroundImage?(t.style.backgroundImage=null,i.state.isShowGrid=!1):(t.style.backgroundImage="url(assets/plugins/mxGraph/images/grid_bg.png)",i.state.isShowGrid=!0,this.syncGrid())},this.getCisId=function(){var t,e=[];return t=i.graph.getDepCells(),$.each(t,function(){n.isCiCell(this)&&e.push(n.getCiIdByCell(this))}),e},this.getCis=function(){var t,e=[];return t=i.graph.getDepCells(),$.each(t,function(){n.isCiCell(this)&&e.push(this)}),e},this.getXml=function(){var t,e;return t=i.getGraphXml(),e=i.graph.getBackgroundImage(),e&&(t.setAttribute("background-url",e.src),t.setAttribute("background-width",e.width),t.setAttribute("background-height",e.height)),mxUtils.getXml(t)},this.openXml=function(t){var e,o="",a=0,r=0,s=null,l=null;if(e=mxUtils.parseXml(t),"parsererror"===e.documentElement.nodeName)throw n.alert("错误：解析XML文档错误，可能XML文档损坏！"),new Error("parsererror");i.graph.setBackgroundImage(null),l=e.documentElement,i.graph.model.clear(),i.setGraphXml(l),i.graph.zoomActual(),i.graph.view.setTranslate(0,0),i.graph.zoomToCenter(),o=l.getAttribute("background-url"),a=l.getAttribute("background-width"),r=l.getAttribute("background-height"),o&&a&&r&&(s=new mxImage(o,a,r),i.graph.setBackgroundImage(s),i.graph.view.validate())},this.openView=function(t){t.xml&&(this.openXml(t.xml),i.state.setView(t))},this.disabled=function(){i.graph.setCellsMovable(!1),i.graph.setCellsCloneable(!1),i.graph.setCellsEditable(!1),i.graph.setCellsDisconnectable(!1),i.graph.setCellsResizable(!1),i.graph.setCellsSelectable(!1),i.graph.setCellsMovable(!1),i.graph.setConnectable(!1)},this.enabled=function(){i.graph.setCellsMovable(!0),i.graph.setCellsCloneable(!0),i.graph.setCellsEditable(!0),i.graph.setCellsDisconnectable(!0),i.graph.setCellsResizable(!0),i.graph.setExtendParents(!0),i.graph.setConnectable(!0)},this.monitor=function(){i.monitor||(i.monitor=new r({editor:i}))},this.toggleAutoLayout=function(){i.state.isAutoLayout=!i.state.isAutoLayout},this.toggleAutoLine=function(){i.state.isAutoLine=!i.state.isAutoLine},this.showCiTable=function(){i.table.show()},this.hideCiTable=function(){i.table.hide()},this.expandNode=function(){e.open({size:"lg",templateUrl:"app/modal/expand/expand.html",controller:"ModalExpandCtrl",resolve:{editor:function(){return i}}})},this.exportPng=function(){l.exportPng(this.getSvg()).success(function(t){n.download(t.data.url)})},this.exportPdf=function(){l.exportPdf(this.getSvg()).success(function(t){n.download(t.data.url)})},this.exportXml=function(){var t="ita_"+Date.now()+".xml",e=this.getXml();"function"==typeof Blob?saveAs(new Blob([e],{type:"text/plain;charset=utf-8"}),t):n.alert("系统错误")},this.exportSvg=function(){var t="ita_"+Date.now()+".svg",e=this.getSvg();"function"==typeof Blob?saveAs(new Blob([e],{type:"text/plain;charset=utf-8"}),t):n.alert("系统错误")},this.getSvg=function(){var t=i.graph.getSvg();return angular.isObject(t)?t.outerHTML:t},this.copy=function(){mxClipboard.copy(i.graph)},this.cut=function(){mxClipboard.cut(i.graph)},this.paste=function(){mxClipboard.paste(i.graph)},this.layoutHorizontal=function(){n.layout(i.graph,new mxHierarchicalLayout(i.graph,mxConstants.DIRECTION_WEST),!0),this.zoomCenter()},this.layoutVertical=function(){n.layout(i.graph,new mxHierarchicalLayout(i.graph,mxConstants.DIRECTION_NORTH),!0),this.zoomCenter()},this.layoutCircle=function(){n.layout(i.graph,new mxCircleLayout(i.graph),!0),this.zoomCenter()},this.layoutOrganic=function(){n.layout(i.graph,new mxFastOrganicLayout(i.graph),!0),this.zoomCenter()},this.layoutParallel=function(){n.layout(i.graph,new mxParallelEdgeLayout(i.graph),!0),this.zoomCenter()},this.layoutStackVertical=function(){n.layout(i.graph,new mxStackLayout(i.graph,!1),!0),this.zoomCenter()},this.layoutStackHorizontal=function(){n.layout(i.graph,new mxStackLayout(i.graph,!0),!0),this.zoomCenter()},this.tag=function(){var t=i.graph.getDepCells();$.each(t,function(){this.vertex&&!n.isCiIn(this)&&(i.graph.setOriStyle(this,this.getStyle()),this.setStyle("whiteSpace=wrap;"),i.graph.refresh(this))})},this.original=function(){var t=i.graph.getDepCells();$.each(t,function(){this.vertex&&!n.isCiIn(this)&&(this.setStyle(i.graph.getOriStyle(this)),i.graph.refresh(this))})},this.cellStrokeSize=function(){var t=i.graph.getSelectionCells();if(t.length){var n=i.graph.getCellStyle(t[0]);e.open({templateUrl:"app/modal/number/number.html",controller:"ModalNumberCtrl",resolve:{title:function(){return"边框大小"},defaultValue:function(){return n.strokeWidth?n.strokeWidth:1},maxValue:function(){return 12},minValue:function(){return 1},fn:function(){return function(t){i.graph.setCellStyles(mxConstants.STYLE_STROKEWIDTH,t)}}}})}},this.cellOpacity=function(){var t=i.graph.getSelectionCells();if(t.length){var n=i.graph.getCellStyle(t[0]);e.open({templateUrl:"app/modal/number/number.html",controller:"ModalNumberCtrl",resolve:{title:function(){return"透明度"},defaultValue:function(){return n.opacity?n.opacity:1},maxValue:function(){return 100},minValue:function(){return 0},fn:function(){return function(t){i.graph.setCellStyles(mxConstants.STYLE_OPACITY,t)}}}})}},this.relationViewSet=function(){i.graph.getSelectionCell()&&e.open({size:"lg",templateUrl:"app/modal/relationView/set.html",controller:"ModalRelationViewSetCtrl",resolve:{editor:function(){return i}}})},this.relationViewOpen=function(){i.graph.getSelectionCell()&&e.open({size:"lg",templateUrl:"app/modal/relationView/open.html",controller:"ModalRelationViewOpenCtrl",resolve:{editor:function(){return i}}})},this.historyBack=function(){i.history.back()},this.openUrl=function(){var t=i.graph.getSelectionCell();t&&(link=i.graph.getCellAttr(t,"link"),link&&window.open(link))},this.toolbarRefresh=function(){i.toolbar&&i.toolbar.refresh()}}};e.$inject=["$modal","Unit","$rootScope","Const","CiMonitorService","GraphMonitor","Event","ExportService"],t.app.factory("GraphAction",e)}(nameSpace.reg("graph")),function(t){"use strict";t.app.factory("AutoLayout",function(){var t=function(){var t={};return t.util={},t.util.Point=function(t,e){this.absoluteX=t,this.absoluteY=e,this.relativeX=0,this.relativeY=0},t.util.Point.prototype.absolute2relative=function(t){this.relativeX=this.absoluteX-t.absoluteX,this.relativeY=this.absoluteY-t.absoluteY},t.util.Point.prototype.relative2absolute=function(t){this.absoluteX=this.relativeX+t.absoluteX,this.absoluteY=this.relativeY+t.absoluteY},t.util.Point.prototype.expandIt=function(e,n,i,o,a){var r=o/n,s=a/i,l=o-n,c=a-i;this.relativeX=t.util.math.changeIt(this.relativeX,n,r,l),this.relativeY=t.util.math.changeIt(this.relativeY,i,s,c),this.relative2absolute(e)},t.util.math={},t.util.math.changeIt=function(t,e,n,i){return t>=-1*e&&e>=t?t*n:-1*e>t?t-i:t+i},t.util.math.changeBack=function(t,e,n,i){return t>=-1*e&&e>=t?t/n:-1*e>t?t+i:t-i},t}(),e=function(t){this.graph=t,this.foldHandle()};return e.prototype.foldHandle=function(){var t,e=this;e.graph.foldHandle=function(t){e.expandLayout(t),e.graph.clearSelection()},t=function(t,n){var i=n.getProperty("cells");i[0].collapsed?(e.collaspeLayout(i[0]),e.graph.clearSelection()):(e.expandLayout(i[0]),e.graph.clearSelection())},e.graph.addListener(mxEvent.FOLD_CELLS,t)},e.prototype.collaspeLayout=function(e){var n,i=this,o=e,a=Math.round((e.geometry.alternateBounds.width-e.geometry.width)/2),r=Math.round((e.geometry.alternateBounds.height-e.geometry.height)/2);n=function(e){var n=i.graph.getChildVertices(e.getParent()),s=e.getParent(),l={};"1"!==s.id?(s.geometry.width-=2*a,s.geometry.height-=2*r,$.each(n,function(){var t=this;return e.id===t.id?!0:(t.geometry.x-=a,void(t.geometry.y-=r))})):(e.geometry.x+=a,e.geometry.y+=r),l.x=e.geometry.x+window.parseInt(e.geometry.width/2,10),l.y=e.geometry.y+window.parseInt(e.geometry.height/2,10),$.each(n,function(){var n,i,s=this,c={};return e.id===s.id?!0:(c.x=s.geometry.x+window.parseInt(s.geometry.width/2,10),c.y=s.geometry.y+window.parseInt(s.geometry.height/2,10),n=new t.util.Point(l.x,l.y),i=new t.util.Point(c.x,c.y),i.absolute2relative(n),o.id===e.id?i.expandIt(n,e.geometry.alternateBounds.width/2,e.geometry.alternateBounds.height/2,e.geometry.width/2,e.geometry.height/2):i.expandIt(n,e.geometry.width/2+a,e.geometry.height/2+r,e.geometry.width/2,e.geometry.height/2),s.geometry.x=Math.round(i.absoluteX-s.geometry.width/2),void(s.geometry.y=Math.round(i.absoluteY-s.geometry.height/2)))})};do i.graph.refresh(),n(e),e=e.getParent();while("1"!==e.id);i.graph.refresh(),i.graph.clearSelection(),i.graph.setSelectionCell(o)},e.prototype.expandLayout=function(e){var n,i=this,o=e,a=Math.round((e.geometry.width-e.geometry.alternateBounds.width)/2),r=Math.round((e.geometry.height-e.geometry.alternateBounds.height)/2);n=function(e){var n=i.graph.getChildVertices(e.getParent()),s=e.getParent(),l={};"1"!==s.id?(s.geometry.width+=2*a,s.geometry.height+=2*r,$.each(n,function(){var t=this;return e.id===t.id?!0:(t.geometry.x+=a,void(t.geometry.y+=r))})):(e.geometry.x-=a,e.geometry.y-=r),l.x=e.geometry.x+window.parseInt(e.geometry.width/2,10),l.y=e.geometry.y+window.parseInt(e.geometry.height/2,10),$.each(n,function(){var n,i,s=this,c={};return e.id===s.id?!0:(c.x=s.geometry.x+window.parseInt(s.geometry.width/2,10),c.y=s.geometry.y+window.parseInt(s.geometry.height/2,10),n=new t.util.Point(l.x,l.y),i=new t.util.Point(c.x,c.y),i.absolute2relative(n),o.id===e.id?i.expandIt(n,e.geometry.alternateBounds.width/2,e.geometry.alternateBounds.height/2,e.geometry.width/2,e.geometry.height/2):i.expandIt(n,e.geometry.width/2-a,e.geometry.height/2-r,e.geometry.width/2,e.geometry.height/2),s.geometry.x=Math.round(i.absoluteX-s.geometry.width/2),void(s.geometry.y=Math.round(i.absoluteY-s.geometry.height/2)))})};do i.graph.refresh(),n(e),e=e.getParent();while("1"!==e.id);i.graph.refresh(),i.graph.clearSelection(),i.graph.setSelectionCell(o)},e})}(nameSpace.reg("graph")),function(t){"use strict";t.app.factory("Const",[function(){return{CI_PREFIX:"ci_",IN_PREFIX:"in_",GRAPH_DRAG_WIDTH:80,GRAPH_DRAG_HEIGHT:80,GRAPH_GRID_WIDTH:81,GRAPH_GRID_HEIGHT:80,MENU_OPEN_URL:"打开URL",MENU_EDIT_URL:"编辑URL",MENU_FONT_STYLE:"字体样式",MENU_STROKE_WIDTH:"边框宽度",MENU_OPACITY:"透明度",MENU_ZOOM:"缩放",MENU_ZOOM_IN:"放大",MENU_ZOOM_OUT:"缩小",MENU_ZOOM_CENTER:"适应画布",MENU_ZOOM_ACTUAL:"实际大小",MENU_STYLE:"样式",MENU_VIEW:"视图",MENU_VIEW_SAVE:"保存视图",MENU_VIEW_UPDATE:"更新视图",MENU_VIEW_OPEN:"打开视图",MENU_VIEW_NEW:"新建视图",MENU_VIEW_URL:"视图URL",MENU_VIEW_NEW_WINDOW:"在新标签页打开此视图",MENU_VIEW_RELATION:"视图关联",MENU_VIEW_RELATION_SET:"管理关联视图",MENU_VIEW_RELATION_OPEN:"打开关联视图",MENU_LAYOUT:"布局",MENU_LAYOUT_HORIZONTAL:"横向布局",MENU_LAYOUT_VERTICAL:"纵向布局",MENU_LAYOUT_CIRCLE:"圆形布局",MENU_LAYOUT_ORGANIC:"有机布局",MENU_LAYOUT_PARALLEL:"平行线布局",MENU_LAYOUT_STACK_VERTICAL:"垂直堆栈",MENU_LAYOUT_STACK_HORIZONTAL:"水平堆栈",MENU_EXPORT:"导出",MENU_EXPORT_PNG:"导出PNG",MENU_EXPORT_PDF:"导出PDF",MENU_EXPORT_XML:"导出XML",MENU_EXPORT_SVG:"导出SVG",MENU_EXPAND_NODE:"展开子节点",MENU_EDIT:"编辑",MENU_CELL_DELETE:"删除",MENU_CELL_COPY:"复制",MENU_CELL_CUT:"剪切",MENU_CELL_PASTE:"粘贴",MENU_GRAPH_CLEAR:"清空画布",MENU_RELATION_CREATE:"创建关系",MENU_MODULE:"模式",MENU_MODULE_ORI:"原始模式",MENU_MODULE_TAG:"标签模式",MENU_VIEW_RELATION_BACK:"返回上层视图",WEBGL_FONT:"lisu",WEBGL_RESOURCE_DIR:"../resource/3d/",WEBGL_DEFAULT_MESH_NAME:"LV",WEBGL_LAYER_MARGIN:360,WEBGL_LAYER_WIDTH:1500,WEBGL_LAYER_HEIGHT:900,WEBGL_LAYER_FONT_COLOR:3306404,WEBGL_LAYER_FONT_SIDE_COLOR:11184810,WEBGL_LAYER_OPACITY:.8,WEBGL_LAYER_COLOR:14540253,WEBGL_LAYER_NAME_PREFIX:"图层",WEBGL_LAYER_FONT_FAMILY:"lisu",WEBGL_LAYER_FONT_SIZE:30,WEBGL_LAYER_FONT_HEIGHT:4,WEBGL_NODE_DEPTH:8,WEBGL_NODE_FONT_SIDE_COLOR:11184810,WEBGL_NODE_FONT_COLOR:3444464,WEBGL_NODE_FONT_SIZE:8,WEBGL_NODE_FONT_FAMILY:"lisu",WEBGL_CAMERA_POSITION_X:-300,WEBGL_CAMERA_POSITION_Y:600,WEBGL_CAMERA_NEAR:100,WEBGL_CAMERA_FAR:1e5,WEBGL_LINE_COLOR:6710886,WEBGL_LIGHT_POSITION:3500,WEBGL_LIGHT_COLOR:16777215,WEBGL_LAYER_LINE_COLOR:10066329,WEBGL_LAYER_LINE_COLOR_SELECTION:255,WEBGL_CONTAINER_COLOR:[15724527,14671839,13619151,12303359]}}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.factory("ContextLibs",["Const",function(t){var e={};return e[t.MENU_VIEW_OPEN]=function(){this.action.open()},e[t.MENU_VIEW_UPDATE]=function(){this.action.update()},e[t.MENU_VIEW_NEW]=function(){this.action.create()},e[t.MENU_VIEW_SAVE]=function(){this.action.save()},e[t.MENU_VIEW_RELATION_BACK]=function(){this.action.historyBack()},e[t.MENU_GRAPH_CLEAR]=function(){this.action.clear()},e[t.MENU_ZOOM_IN]=function(){this.action.zoomIn()},e[t.MENU_ZOOM_OUT]=function(){this.action.zoomOut()},e[t.MENU_ZOOM_ACTUAL]=function(){this.action.zoomActual()},e[t.MENU_ZOOM_CENTER]=function(){this.action.zoomCenter()},e[t.MENU_CELL_COPY]=function(){this.action.copy()},e[t.MENU_CELL_CUT]=function(){this.action.cut()},e[t.MENU_CELL_PASTE]=function(){this.action.paste()},e[t.MENU_CELL_DELETE]=function(){this.action.removeCells()},e[t.MENU_OPACITY]=function(){this.action.cellOpacity()},e[t.MENU_STROKE_WIDTH]=function(){this.action.cellStrokeSize()},e[t.MENU_FONT_STYLE]=function(){this.action.font()},e[t.MENU_OPEN_URL]=function(){this.action.openUrl()},e[t.MENU_EXPORT_PNG]=function(){this.action.exportPng()},e[t.MENU_EXPORT_XML]=function(){this.action.exportXml()},e[t.MENU_EXPORT_PDF]=function(){this.action.exportPdf()},e[t.MENU_EXPORT_SVG]=function(){this.action.exportSvg()},e[t.MENU_EXPAND_NODE]=function(){this.action.expandNode()},e[t.MENU_LAYOUT_HORIZONTAL]=function(){this.action.layoutHorizontal()},e[t.MENU_LAYOUT_VERTICAL]=function(){this.action.layoutVertical()},e[t.MENU_LAYOUT_CIRCLE]=function(){this.action.layoutCircle()},e[t.MENU_LAYOUT_ORGANIC]=function(){this.action.layoutOrganic()},e[t.MENU_LAYOUT_PARALLEL]=function(){this.action.layoutParallel()},e[t.MENU_LAYOUT_STACK_HORIZONTAL]=function(){this.action.layoutStackHorizontal()},e[t.MENU_LAYOUT_STACK_VERTICAL]=function(){this.action.layoutStackVertical()},e[t.MENU_VIEW_RELATION_SET]=function(){this.action.relationViewSet()},e[t.MENU_VIEW_RELATION_OPEN]=function(){this.action.relationViewOpen()},e}])}(nameSpace.reg("graph")),function(t){"use strict";var e=function(t){var e=function(){var e=this;e.split=15,e.id=t.createHash(Date.now().toString()),e.className="graph-contextmenu",e.childClassName="graph-contextmenu-sub",e.dividerClassName="graph-contextmenu-divider",e.itemClassName="graph-contextmenu-item",e.intoIconClassName="graph-contextmenu-into-icon",e.element=this.createMain(),e.element.id=this.id,e.lock=!1,document.body.addEventListener("click",function(){e.hide()}),document.body.appendChild(this.element)};return e.prototype.createMain=function(){var t,e=this;return t=document.createElement("div"),t.className=e.className,t},e.prototype.addItem=function(t,e,n,i,o){var a,r,s,l=this;return a=document.createElement("div"),a.className=l.itemClassName,!o||o&&!o.disabled?(a.addEventListener("click",function(){"function"==typeof n?(n(),l.hide()):l.getChild(this)||l.hide()}),a.addEventListener("mouseleave",function(){l.closeChild(this),$(this).removeClass("active")}),a.addEventListener("mouseenter",function(){$(this).addClass("active"),l.showChild(this)})):($(a).addClass("noselect"),a.style.cursor="auto",a.style.color="#aaa",a.addEventListener("click",function(t){t.stopPropagation()})),r=document.createElement("span"),r.innerHTML=t,a.appendChild(r),i?(s=i.querySelector("."+l.childClassName),s||(s=l.createMain(),s.className=l.childClassName,l.addChildLevelIco(i),i.appendChild(s)),s.appendChild(a)):l.element.appendChild(a),a},e.prototype.clearAllItems=function(){for(var t=this;t.element.firstChild;)t.element.removeChild(t.element.firstChild)},e.prototype.hasChildIco=function(t){var e=this;return t.querySelector("."+e.childIcoClassName)},e.prototype.createChildIco=function(t){var e,n=this;e=document.createElement("div"),e.className=n.intoIconClassName,t.appendChild(e)},e.prototype.addChildLevelIco=function(t){var e=this;e.hasChildIco(t)||e.createChildIco(t)},e.prototype.addSeparator=function(t){var e,n=this,i=null;e=document.createElement("div"),e.className=n.dividerClassName,t?(i=t.querySelector("."+n.childClassName),i.appendChild(e)):n.element.appendChild(e)},e.prototype.closeAllChild=function(){var t=this;$(t.element).find("."+t.childClassName).hide()},e.prototype.getChild=function(t){var e=this;return $(t).find("."+e.childClassName)[0]},e.prototype.showChild=function(t){var e,n=this;e=n.getChild(t),e&&(e.style.display="block")},e.prototype.closeChild=function(t){var e,n=this;e=n.getChild(t),e&&(e.style.display="none")},e.prototype.isIntoChild=function(t){var e,n,i=this;return e=i.getChild(t),n=!(!e||"block"!==e.style.display)},e.prototype.show=function(t,e){var n,i=this;i.element.children.length>=1&&(i.element.style.display="block",n=document.documentElement,n.clientHeight<e+i.element.clientHeight?e-=i.element.clientHeight+1:e--,n.clientWidth<t+i.element.clientWidth?t-=i.element.clientWidth+1:t--,i.element.style.left=t+"px",i.element.style.top=e+"px")},e.prototype.hide=function(){var t=this;t.element.style.display="none"},e};t.app.factory("ContextMenu",["md5",e])}(nameSpace.reg("graph")),function(t){"use strict";var e=function(e,n,i,o){var a=function(e){this.options=e,this.editor=e.editor,this.$table=e.$table,this.isSelectMore=!1,this.heightLightCell=null,this.utils=t.utils,this.binding()};return a.prototype.binding=function(){var e=this;e.$table.find("tbody tr").each(function(){$(this).attr("data-id")&&e.createDragSource(this,e.createDropHandler(this,!0),e.createDragPreview(t.DEFINE_CATE.DRAG_WIDTH,t.DEFINE_CATE.DRAG_HEIGHT))})},a.prototype.createCell=function(e,o,a,r,s,l,c){var p=this,u="";return $.each(p.options.ciData,function(){var t=this;t.categoryId===a&&(u=n["static"](t.icon))}),e.insertVertex(o,t.DEFINE_CI.GRAPH_PREFIX+r,s,l,c,i.GRAPH_DRAG_WIDTH,i.GRAPH_DRAG_HEIGHT,"image;image="+u)},a.prototype.createDragSource=function(t,e,n){var i,o=this,a="strokeColor=#0066FF;strokeWidth=4;fillColor=none;";return i=mxUtils.makeDraggable(t,o.editor.graph,e,n,0,0,o.editor.graph.autoscroll,!0,!0),i.getDropTarget=function(t,e,n){var i,r,s,l="";return r=mxDragSource.prototype.getDropTarget.apply(this,arguments),s=function(i){var o;return o=t.getCellAt(e,n,i,!0,!0),o&&o.children&&o.children.length>=1&&(o=s(o)),o},i=s(t.getDefaultParent()),i=i?i:r,i&&i.vertex&&!o.heightLightCell||i&&i.vertex&&o.heightLightCell.geometry.x!==i.geometry.x||i&&i.vertex&&o.heightLightCell.geometry.y!==i.geometry.y?(t.removeCells([o.heightLightCell]),o.lastTargetCell=i,o.heightLightCell=t.addLight(i)):!i&&o.heightLightCell&&(t.removeCells([o.heightLightCell]),o.heightLightCell=null,o.lastTargetCell=null),i&&i.edge&&!o.lastTargetEdge?(o.lastTargetEdge=i,t.setOriStyle(i,i.getStyle()),i.setStyle(a),t.refresh(i)):!i&&o.lastTargetEdge&&(l=t.getOriStyle(o.lastTargetEdge),t.setOriStyle(o.lastTargetEdge,""),o.lastTargetEdge.setStyle(l),t.refresh(o.lastTargetEdge),o.lastTargetEdge=null),t.isValidRoot(i)||(i=null),i},i},a.prototype.handle=function(e,n,i){var o,a,r,s,l,c,p,u,h=this,d="",g="",f=[];u=h.editor.graph,s=u.getDefaultParent(),p=u.getModel(),p.beginUpdate();try{for(o=0;o<e.length;o++)a=e[o],r=a.attr("data-id"),$.each(h.options.ciData,function(){this.id===r&&(d=this.name,g=this.categoryId)}),u.getCellById([t.DEFINE_CI.GRAPH_PREFIX,r].join(""))?h.lastTargetCell&&(h.lastTargetCell.setValue(d),u.refresh(h.lastTargetCell)):h.isSelectMore||!h.lastTargetCell||h.lastTargetCell.collapsed||h.lastTargetCell.style&&-1!==h.lastTargetCell.style.indexOf("swimlane")?!h.isSelectMore&&h.lastTargetCell&&h.lastTargetCell.collapsed?(u.setCellAttr(h.lastTargetCell,"collapsed",h.options.lib[g]),u.setCellAttr(h.lastTargetCell,"label",d),h.lastTargetCell.setId([h.options.prefix,r].join("")),u.refresh(),h.lastTargetCell=null):h.isSelectMore||!h.lastTargetCell||h.lastTargetCell.style&&-1!==h.lastTargetCell.style.indexOf("swimlane")?(h.lastTargetCell&&h.lastTargetCell.style.indexOf("swimlane")>=0&&(n-=h.lastTargetCell.geometry.x,i-=h.lastTargetCell.geometry.y,s=h.lastTargetCell),c=h.createCell(u,s,g,r,d,n,i),f.push(r),u.refresh(c)):(h.lastTargetCell.setId([h.options.prefix,r].join("")),l=u.getOriStyle(h.lastTargetCell),u.setOriStyle(h.lastTargetCell,""),h.lastTargetCell.setStyle(l),u.refresh(h.lastTargetCell),h.lastTargetCell=null):(h.lastTargetCell.setId([h.options.prefix,r].join("")),h.lastTargetCell.setValue(d),u.refresh(h.lastTargetCell),h.lastTargetCell=null)}finally{p.endUpdate()}return f},a.prototype.createDropHandler=function(t){var e=this;return function(n,i,o,a,r){var s;e.heightLightCell&&(n.removeCells([e.heightLightCell]),e.heightLightCell=null),s=e.getSelectTr(),e.isSelectMore=s.length>=2,s=s.length>=1?s:[$(t)],e.handle(s,a,r),e.autoCreateRelation(function(t){(t||e.isSelectMore)&&(e.editor.action.layoutVertical(),n.refresh(),n.zoomToCenter())}),e.$table.find("tr input").each(function(){$(this).attr("checked",!1)})}},a.prototype.createDragPreview=function(t,e,n){var i=document.createElement("div");return i.style.border="1px dashed black",i.style.width=t+"px",i.style.height=e+"px",i.innerHTML=n?n:"",i},a.prototype.getSelectTr=function(){var t=[],e=this;return e.$table.find("tbody tr").each(function(){$(this).find("input").is(":checked")&&t.push($(this))}),t},a.prototype.autoCreateRelation=function(n){var i=this;e.get({cis:i.editor.action.getCisId()}).success(function(e){if(e.data){var o,a,r=!1;a=i.editor.graph.getDefaultParent(),o=i.editor.graph.getModel(),o.beginUpdate(),$.each(e.data,function(){var e=i.editor.graph.getCellById([t.DEFINE_CI.GRAPH_PREFIX,this.startCi].join("")),n=i.editor.graph.getCellById([t.DEFINE_CI.GRAPH_PREFIX,this.endCi].join(""));i.clearEdges(e,n)});try{$.each(e.data,function(){var e=i.editor.graph.getCellById([t.DEFINE_CI.GRAPH_PREFIX,this.startCi].join("")),n=i.editor.graph.getCellById([t.DEFINE_CI.GRAPH_PREFIX,this.endCi].join(""));if(e&&n){var o=[t.DEFINE_CI.GRAPH_PREFIX_RELATION,this.relCateName].join("");i.editor.graph.insertEdge(a,o,this.relCateName,e,n),r=!0}})}finally{o.endUpdate()}angular.isFunction(n)&&n(r)}})},a.prototype.clearEdges=function(t,e){var n,i=this,o=[];if(t&&e&&Array.isArray(t.edges))for(n=0;n<t.edges.length;n++)(t.edges[n].source.id===e.id||t.edges[n].target.id===e.id)&&o.push(t.edges[n]);i.editor.graph.removeCells(o),i.editor.graph.refresh()},a};e.$inject=["CiRelationService","Unit","Const","$rootScope"],t.app.factory("DataDraw",e)}(nameSpace.reg("graph")),function(t){"use strict";t.app.factory("Editor",["GraphAction","GraphState","MxEditor","GraphHisotry",function(t,e,n,i){return function(o,a){var r;return r=new Editor,r.graph.init(o),r.graph.setTooltips(!1),r.graph.refresh(),r.graph.container.style.backgroundImage="url("+IMAGE_PATH+"/grid_bg.png)",r.graph.container.focus(),a&&r.outline.init(a),$(o).mousewheel(function(t,e){r.state.zoomLock||(e>0?r.action.zoomIn():r.action.zoomOut())}),new n(r),r.action=new t(r),r.state=new e(r),r.history=new i(r),r}}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.factory("Event",[function(){return{GRAPH_CELL_CLICK:"graphCellClick",GRAPH_CI_CELL_CLICK:"graphCiCellClick",GRAPH_CANVAS_CLICK:"graphCanvasClick",GRAPH_SCALE:"graphScale",VIEW_DELETE_BEFORE:"viewDeleteBefore",VIEW_DELETE_AFTER:"viewDeleteAfter",VIEW_UPDATE_BEFORE:"viewUpdateBefore",GRAPH_INFO_TOGGLE:"graphInfoToggle",GRAPH_TABLE_SHOW:"graphTableShow",GRAPH_TABLE_HIDE:"graphTableHide",GRAPH_CHANGE:"graphChange",GROUP_VIEW_ID_CHANGE:"groupViewIdChange"}}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.factory("GraphContextMenu",["md5","ContextMenu","Unit","Const",function(t,e,n,i){var o="-",a=function(t,e,n){var i,r=null;for(i=0;i<e.length;i++){if(!e[i])throw new Error(i);angular.isArray(e[i])?a(t,e[i],r):angular.isObject(e[i])?"object"==typeof n?t.addItem(e[i].name,null,e[i].fun,n,e[i]):r=t.addItem(e[i].name,null,e[i].fun,null,e[i]):angular.isString(e[i])&&(e[i]===o?t.addSeparator(n):"object"==typeof n?t.addItem(e[i],null,null,n):r=t.addItem(e[i],null,null))}},r=function(t,e,n,i){var o,a,s;for(s=function(t,o,a){var r,s;r=a?a:t,s=o?o:n[t],e.push("function"==typeof s?{name:r,fun:function(t){var e=t?t:i.evt;i.that?s.apply(i.that,[e,i.selectionCell]):s.apply(i.editor,[e,i.selectionCell])}}:r)},o=0;o<t.length;o++){if(!t[o])throw new Error(t[o]);t[o].constructor===Object&&t[o].name?s(t[o].name,t[o].fun,t[o].aliases):t[o].constructor===Array?(a=[],e.push(a),r(t[o],a,n,i)):s(t[o],n[t[o]])}},s={},l=function(t,n){this.editor=t.graph?t:{graph:t},this.option=n,this.menu=new e,this.items={cell:[],vertex:[],edge:[],canvas:[],all:[]},this.that=null,"object"==typeof n&&n.that&&(this.that=n.that),this.addLibs(n.libs),this.itemsInit(),this.bind()};return l.prototype.itemsInit=function(){var t,e,n=this;e=n.getLibs(),$.each(n.items,function(i){t=n.option[i]?n.option[i]:[],r(t,n.items[i],e,n)})},l.prototype.filter=function(t){var e,n,i=this,o=function(n){var a;for(a=0;a<n.length;a++)angular.isArray(n[a])?o(n[a]):e.apply(i,[n[a],t])&&(n[a]=i.createDisabledItem(n[a]))};return t&&t.vertex&&(e=i.filterVertex,n=angular.copy(i.items.vertex),o(n)),t&&t.edge&&(e=i.filterEdge,n=angular.copy(i.items.edge),o(n)),t||(e=i.filterCanvas,n=angular.copy(i.items.canvas),o(n)),n},l.prototype.filterVertex=function(t,e){var o,a=this;return angular.isObject(t)&&(o=t.name),(a.editor.graph.getCellAttr(e,"link")||o!==i.MENU_OPEN_URL)&&(a.editor.graph.getCellAttr(e,"view")||o!==i.MENU_VIEW_RELATION_OPEN)&&(n.isCiCell(e)||o!==i.MENU_EXPAND_NODE)?void 0:!0},l.prototype.filterEdge=function(t,e){},l.prototype.filterCanvas=function(t){var e,n=this;return angular.isObject(t)&&(e=t.name),angular.isString(t)&&(e=t),n.editor.state.view&&e===i.MENU_VIEW_SAVE&&(t.name="另存视图"),(n.editor.state.view||e!==i.MENU_VIEW_UPDATE&&e!==i.MENU_VIEW_NEW)&&(0!==n.editor.graph.getDepCells().length||e!==i.MENU_EXPORT&&e!==i.MENU_LAYOUT&&e!==i.MENU_ZOOM_CENTER)?0===n.editor.history.count()&&e===i.MENU_VIEW_RELATION_BACK?!0:mxClipboard.cells||e!==i.MENU_CELL_PASTE?void 0:!0:!0},l.prototype.createDisabledItem=function(t){var e;return angular.isObject(t)&&(e=t.name),angular.isString(t)&&(e=t),{disabled:!0,name:e}},l.prototype.bind=function(){var t=this;mxPopupMenu.prototype.popup=function(t,e,n,i){if(null!==this.div&&null!==this.tbody&&null!==this.factoryMethod){for(this.div.style.left=t+"px",this.div.style.top=e+"px";null!==this.tbody.firstChild;)mxEvent.release(this.tbody.firstChild),this.tbody.removeChild(this.tbody.firstChild);this.itemCount=0,this.factoryMethod(this,n,i),
this.itemCount>0&&(this.showMenu(),this.fireEvent(new mxEventObject(mxEvent.SHOW)))}},mxEvent.disableContextMenu(document.body),t.editor.graph.panningHandler.autoExpand=!0,t.editor.graph.popupMenuHandler.autoExpand=!0,t.editor.graph.popupMenuHandler.factoryMethod=function(e,n,i){t.selectionCell=n,t.evt=i,t.menu.clearAllItems(),a(t.menu,t.filter(n)),t.menu.show(i.clientX,i.clientY)}},l.prototype.addLibs=function(t){t&&t.constructor===Object&&$.each(t,function(e){this.constructor===Function&&(s[e]=t[e])})},l.prototype.getLibs=function(){return s},l}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.factory("GraphMonitor",["CiMonitorService","Unit","Const","$timeout",function(t,e,n,i){return function(o){this.editor=o.editor,this.inMapping={},this.width=24,this.height=24,this.style="ellipse;strokeWidth=none;strokeColor=none;movable=0;",this.getData=function(){var e=this;t.getView(this.editor.state.view.id).success(function(t){e.data=t.data,$.each(e.data,function(){e.create(this.id,Number(this.alarm),this.count)}),e.editor.graph.refresh()}),i(function(){e.getData()},6e4)},this.create=function(t,e,i){var o=this.getCi(t);if(o){var a=o.getGeometry();this.inMapping[o.id]=this.editor.graph.insertVertex(o.getParent(),n.IN_PREFIX+o.id,i?i:0,a.x-this.width/2,a.y-this.height/2,this.width,this.height,this.style),this.setValue(o.id,e,i)}},this.refresh=function(t,e,n){var i=this.getCi(t);i?this.inMapping[i.id]?this.setValue(i.id,e,n):this.create(t,e,n):this.create()},this.setValue=function(t,n,i){if(this.inMapping[t]){var o=this.inMapping[t],a=e.getLevelColor(n),r=this.style+"fillColor="+a.bg+";fontColor="+a.fc;o.setValue(i),o.setStyle(r)}},this.remove=function(t){this.inMapping[t]&&(this.editor.graph.removeCells(this.inMapping[t]),this.inMapping[t]=null)},this.getCi=function(t){var e=this;return angular.isString(t)&&(-1===t.indexOf(n.CI_PREFIX)&&(t=n.CI_PREFIX+t),t=e.editor.graph.getCellById(t)),t},this.getData()}}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.factory("GraphHisotry",function(){return function(t){this.history=[],this.push=function(t){this.history.push(t)},this.back=function(){if(this.history.length){var e=this.history.pop();t.action.openView(e),this.refreshNavigation()}},this.showNavigation=function(){},this.hideNavigation=function(){},this.refreshNavigation=function(){},this.count=function(){return this.history.length}}})}(nameSpace.reg("graph")),function(t){"use strict";t.app.factory("HttpInterceptor",["$q","Unit","$cookies",function(t,e,n){return{request:function(t){return t.headers.token=n.get("token"),t.cache||e.loadingbar.show(),t},response:function(t){return angular.isObject(t.data)&&t.data.message&&"GET"!=t.config.method&&e.success(t.data.message),angular.isObject(t.data)&&t.data.message&&e.loadingbar.hide(),t},responseError:function(i){return e.loadingbar.error(),angular.isObject(i.data)&&i.data.message&&e.error(i.data.message),401===i.status&&n.remove("token"),t.reject(i)}}}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.factory("LoadMesh",["md5",function(t){return function(){this.cacheObj={},this.load=function(e,n){var i,o=this;if(i=t.createHash(e.img),o.cacheObj[i])n(o.cacheObj[i].clone());else{var a;a=new THREE.OBJMTLLoader,a.load(e.mesh.obj,e.mesh.mtl,function(t){o.cacheObj[i]=t,n(t.clone())})}},this.destroy=function(){this.cacheObj={}}}}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.factory("MxEditor",["$rootScope","Unit","Event","$timeout",function(e,n,i,o){return function(a){var r=a.graph.model.getStyle,s=new mxEditor(mxUtils.load(STENCIL_PATH+"/keyhandler-commons.xml").getDocumentElement());s.graph=a.graph,s.installDblClickHandler(s.graph),s.installUndoHandler(s.graph),s.installDrillHandler(s.graph),s.installChangeHandler(s.graph),s.installInsertHandler(s.graph),s.graph.panningHandler.factoryMethod=mxUtils.bind(s,function(t,e,n){return this.createPopupMenu(t,e,n)}),s.graph.connectionHandler.factoryMethod=mxUtils.bind(s,function(t,e){return this.createEdge(t,e)}),s.createLayoutManager(s.graph),s.graph.connectionHandler.createTargetVertex=function(e,n){var i=mxConnectionHandler.prototype.createTargetVertex.apply(s.graph.connectionHandler,arguments);return t.event.trigger(t.DEFINE_EVENT.GRAPH_VERTEX_CLONE,{source:n,clone:i,graph:s.graph}),i},s.graph.addListener(mxEvent.CLICK,function(t,o){var r,s;r=o.getProperty("event"),s=o.getProperty("cell"),s&&1===r.which&&(e.$broadcast(i.GRAPH_CELL_CLICK,n.eventData({editor:a,cell:s})),n.isCiCell(s)&&e.$broadcast(i.GRAPH_CI_CELL_CLICK,n.eventData({editor:a,cell:s}))),s||(e.$broadcast(i.GRAPH_CANVAS_CLICK,n.eventData({editor:a})),e.$emit(i.GRAPH_CANVAS_CLICK,n.eventData({editor:a})))}),s.graph.model.getStyle=function(t){if(null!==t){var e={style:r.apply(this,arguments),cell:t,graph:s.graph,editor:s};return e.style}return null},s.keyHandler.handler.enabled=!1,s.graph.keyHandler=s.keyHandler,s.graph.getCursorForCell=function(e){var n;return n=mxGraph.prototype.getCursorForCell.apply(this,arguments),(e&&t.utils.isCiIn(e)||e&&t.utils.isCiHeader(e))&&(n="pointer"),n},e.$on(i.GRAPH_INFO_TOGGLE,function(){o(function(){a.action.zoomCenter()})})}}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.factory("Outline",["Editor","Unit","AutoLayout",function(t,e,n){var i=function(t,e,n){var i=this;n=n||{},i.isIE=navigator.userAgent.indexOf("MSIE")>=0||navigator.userAgent.search(/Trident/i)>=0,i.layout=n.layout||"top",i.json=t,i.container=e,i.speed=400,i.graphMargin=10,i.clearClassName="clear",i.maskClassName="mask",i.maskHoverClassName="maskHover",i.maskElements=[],i.graphElements=[],i.scrollDivSize=n.toolbarSize||130,i.outLineDiv={Magnification:1.5,borderWidth:1,size:n.outLineSize||.9,marginLR:10,boxBgColor:"#000",boxBorderWidth:0,boxBorderColor:"#FFF",maxDisplayCount:n.maxCount||4},i.loading={width:300,height:30,borderWidth:1,borderColor:"green",padding:5,fontSize:30,color:"green",bgColor:"#F5F5F5",text:"Waiting Please ..."},i.tip={height:24,fontSize:14,padding:5,bgColor:"rgb(112, 176, 222)",color:"#FFF"},i.page={size:20,padding:3,fontSize:10,color:"#FFF",bgColor:"rgb(112, 176, 222)",opacity:.8},i.pageBtnStyle={size:20,marginLR:20,offset:5,color:n.btnColor||"white"},i.upBgColor=n.toolbarBgColor||"black",i.init(),i.loadData(),i.createDiv(),i.createGraph(),i.outlineEvents(),i.json.length>i.outLineDiv.maxDisplayCount&&(i.createPageBtn(),i.pageBtnEvents()),i.contextMenu()};i.prototype.init=function(){var t,e=this;t=e.outLineDiv,t.size>.9?t.size=.9:t.size<.1&&(t.size=.1),e.isHorizontalLayout()?(t.height=parseInt(e.scrollDivSize*t.size,10),t.width=parseInt(t.height*t.Magnification,10)):(t.width=parseInt(e.scrollDivSize*t.size,10),t.height=parseInt(t.width/t.Magnification,10))};var o=function(t){var e=document.createElement("div");return e.id=t,e},a=function(){var t=this,e=t.outLineDiv,n=t.loading;t.scrollContainer=o("scroll"),t.scrollContainer.style.cssText=["width: "+t.scrollDivSize+"px","height: 100%","overflow: hidden","background: "+t.upBgColor,"position: absolute","top: 0",t.layout+" : 0","z-index: 9"].join(";"),t.centerElement=o("center"),t.centerElement.style.cssText=["border: "+e.boxBorderWidth+"px solid "+e.boxBorderColor,"position: absolute","left: 0","right: 0","bottom: 0","top :0","height: "+(e.height+2*e.marginLR)*e.maxDisplayCount+"px","width: "+(e.width+2*e.borderWidth)+"px","margin: auto"].join(";"),t.actionElement=o("action"),t.actionElement.style.cssText=["width: 100%","height: 100%","overflow: hidden"].join(";"),t.scrollItemsContainer=o("items"),t.scrollItemsContainer.style.cssText=["height: "+(e.width+2*e.borderWidth+2*e.marginLR)*t.json.length+"px","width: 100%","overflow: hidden"].join(";"),t.scrollItemsContainer.className=t.clearClassName,t.actionElement.appendChild(t.scrollItemsContainer),t.centerElement.appendChild(t.actionElement),t.scrollContainer.appendChild(t.centerElement),t.mainContainer=o("main"),t.mainContainer.style.cssText=["position: absolute","width: "+($(t.container).width()-t.scrollDivSize)+"px","height: 100%","top: 0","left"===t.layout?"right: 0":"left: 0"].join(";"),t.loadingContainer=o("loading"),t.loadingContainer.style.cssText=["width: "+n.width+"px","height: "+n.height+"px","padding: "+n.padding+"px","color: "+n.color,"background: "+n.bgColor,"position: absolute","font-size: "+n.fontSize+"px","border: "+n.borderWidth+"px solid "+n.borderColor,"left: 0","top: 0","right: 0","bottom: 0","font-width: bold","line-height: "+n.height+"px","text-align: center","font-family: Arial","margin: auto"].join(";"),t.loadingContainer.innerHTML=n.text,t.mainContainer.appendChild(t.loadingContainer),t.container.appendChild(t.scrollContainer),t.container.appendChild(t.mainContainer)},r=function(){var t=this,e=t.outLineDiv,n=t.loading;t.scrollContainer=o("scroll"),t.scrollContainer.style.cssText=["width: 100%","overflow: hidden","position: absolute","background: "+t.upBgColor,"height: "+t.scrollDivSize+"px","left: 0","z-index: 9",t.layout+": 0"].join(";"),t.centerElement=o("center"),t.centerElement.style.cssText=["border: "+e.boxBorderWidth+"px solid "+e.boxBorderColor,"position: absolute","left: 0","right: 0","bottom: 0","top :0","width: "+(e.width+2*e.marginLR)*e.maxDisplayCount+"px","height: "+(e.height+2*e.borderWidth)+"px","margin: auto"].join(";"),t.actionElement=o("action"),t.actionElement.style.cssText=["width: 100%","height: 100%","overflow: hidden"].join(";"),t.scrollItemsContainer=o("items"),t.scrollItemsContainer.style.cssText=["width: "+(e.width+2*e.borderWidth+2*e.marginLR)*t.json.length+"px","height: 100%","overflow: hidden"].join(";"),t.scrollItemsContainer.className=t.clearClassName,t.actionElement.appendChild(t.scrollItemsContainer),t.centerElement.appendChild(t.actionElement),t.scrollContainer.appendChild(t.centerElement),t.mainContainer=o("main"),t.mainContainer.style.cssText=["position: absolute","width: 100%","height: "+($(t.container).height()-t.scrollDivSize)+"px","left: 0","top"===t.layout?"bottom: 0":"top: 0"].join(";"),t.loadingContainer=o("loading"),t.loadingContainer.style.cssText=["width: "+n.width+"px","height: "+n.height+"px","padding: "+n.padding+"px","color: "+n.color,"background: "+n.bgColor,"position: absolute","font-size: "+n.fontSize+"px","border: "+n.borderWidth+"px solid "+n.borderColor,"left: 0","top: 0","right: 0","bottom: 0","font-width: bold","line-height: "+n.height+"px","text-align: center","font-family: Arial","margin: auto"].join(";"),t.loadingContainer.innerHTML=n.text,t.mainContainer.appendChild(t.loadingContainer),t.container.appendChild(t.scrollContainer),t.container.appendChild(t.mainContainer)};i.prototype.resize=function(){var t=this;t.mainContainer.style.height=$(t.container).height()-t.scrollDivSize+"px"},i.prototype.createDiv=function(){var t=this;t.isHorizontalLayout()?r.apply(t):a.apply(t)},i.prototype.isHorizontalLayout=function(){var t,e=this;return t=!("top"!==e.layout&&"bottom"!==e.layout)},i.prototype.openXml=function(t){var e=this;"string"==typeof t.xml?(e.editor.action.openXml(t.xml),e.editor.graph.setConnectable(!1),e.editor.graph.json=t,e.editor.viewid=t.id):"function"==typeof t.xml&&t.xml(e.editor,t)},i.prototype.createGraph=function(){var i,o,a,r,s=this,l=s.outLineDiv,c=null,p=null,u=null,h=null,d=null,g=null;for(a=document.createElement("div"),a.style.cssText=["width: 100%","height: 100%","position: absolute","background: #FFF","left: 0","top: 0"].join(";"),s.mainContainer.appendChild(a),r=new t(a),r.zoomLock=!0,r.graph.setCellsSelectable(!1),r.graph.setCellsMovable(!1),r.graph.setCellsEditable(!1),r.graph.setExtendParents(!1),r.graph.setConnectable(!1),a.style.background="#FFF",new n(r.graph),r.graph.refresh(),s.editor=r,i=0,o=s.json.length;o>i;i++)c=document.createElement("div"),c.style.cssText=["width: "+l.width+"px","height: "+l.height+"px",s.isHorizontalLayout()?"margin:0 "+l.marginLR+"px":"margin:"+l.marginLR+"px 0","border: "+l.borderWidth+"px solid #CCC","overflow: hidden","position: relative","float: left","background: #FFF"].join(";"),d=document.createElement("img"),d.style.cssText=["width: 100%","height: 100%","position: absolute","left: 0","top: 0"].join(";"),d.src=e["static"](s.json[i].imageUrl),g=document.createElement("div"),g.style.cssText=["width: 100%","height: 100%","position: absolute","background: #000","cursor: pointer","left: 0","opacity: .2","top: 0","z-index: 9999"].join(";"),g.title=s.json[i].name,g.setAttribute("data-id",s.json[i].id),s.maskElements.push(g),u=document.createElement("div"),u.style.cssText=["width: 100%","height: "+s.tip.height+"px","position: absolute","background: "+s.tip.bgColor,"z-index: 22","left: 0","bottom: 0"].join(";"),h=document.createElement("div"),h.style.cssText=["position: absolute","padding: "+s.tip.padding+"px","color: "+s.tip.color,"font-size: "+s.tip.fontSize+"px","z-index: 22","line-height: 1em","left: 0","bottom: 0","top: 0","right: 0","margin: auto"].join(";"),h.innerHTML=s.json[i].name,u.appendChild(h),p=document.createElement("div"),p.style.cssText=["width: "+2*s.page.size+"px","height: "+s.page.size+"px","border-radius: "+(s.page.size+2*s.page.padding)/2+"px","padding: "+s.page.padding+"px","position: absolute","text-align: center","line-height: 15px","color: "+s.page.color,"font-size: "+s.page.fontSize+"px","opacity: "+s.page.opacity,"background: "+s.page.bgColor,"z-index: 22","right: 0","top: 0","margin: 5px 5px 0 0"].join(";"),p.innerHTML=[i+1,o].join("/"),c.appendChild(d),c.appendChild(g),c.appendChild(p),c.appendChild(u),s.scrollItemsContainer.appendChild(c)},i.prototype.loadData=function(){var t=0,e=this;if(e.map={},e.json)for(t=0;t<e.json.length;t++)e.map[e.json[t].id]=e.json[t]};var s=function(){var t=this,e=$(t.centerElement).width(),n=$(t.centerElement).height(),i=t.pageBtnStyle;t.nextBtn=document.createElement("div"),t.nextBtn.style.cssText=["width: 0px","height: 0px","font-size: 0px","line-height: 0px","position: absolute","cursor: pointer","border-bottom: "+i.size+"px solid transparent","border-top: "+i.size+"px solid transparent","border-left: "+i.size+"px solid "+i.color,"top: "+(n-2*i.size)/2+"px","z-index: 99999","left: "+(e+i.offset)+"px"].join(";"),t.prevBtn=document.createElement("div"),t.prevBtn.style.cssText=["width: 0px","height: 0px","font-size: 0px","line-height: 0px","position: absolute","cursor: pointer","border-bottom: "+i.size+"px solid transparent","border-top: "+i.size+"px solid transparent","border-right: "+i.size+"px solid "+i.color,"top: "+(n-2*i.size)/2+"px","z-index: 99999","left: "+-1*(i.offset+i.size)+"px"].join(";"),t.centerElement.appendChild(t.nextBtn),t.centerElement.appendChild(t.prevBtn)},l=function(){var t=this,e=$(t.centerElement).height(),n=t.pageBtnStyle;t.nextBtn=document.createElement("div"),t.nextBtn.style.cssText=["width: 0px","height: 0px","font-size: 0px","line-height: 0px","position: absolute","cursor: pointer","border-right: "+n.size+"px solid transparent","border-left: "+n.size+"px solid transparent","border-top: "+n.size+"px solid "+n.color,"left: 0","right: 0","top: "+(e+n.offset)+"px","z-index: 99999","margin: auto"].join(";"),t.prevBtn=document.createElement("div"),t.prevBtn.style.cssText=["width: 0px","height: 0px","font-size: 0px","line-height: 0px","position: absolute","cursor: pointer","border-left: "+n.size+"px solid transparent","border-right: "+n.size+"px solid transparent","border-bottom: "+n.size+"px solid "+n.color,"z-index: 99999","left: 0","right: 0","top: "+-1*(n.offset+n.size)+"px","margin: auto"].join(";"),t.centerElement.appendChild(t.nextBtn),t.centerElement.appendChild(t.prevBtn)};i.prototype.createPageBtn=function(){var t=this;t.isHorizontalLayout()?s.apply(t):l.apply(t)};var c=function(t,e){var n,i;for(n=0,i=t.length;i>n;n++)e.apply(t[n],[n])};i.prototype.outlineEvents=function(){var t=this;t.openXml(t.json[0]),c(t.maskElements,function(e){var n,i;0===e&&$(this).addClass(t.maskClassName);var o=$(this).css("opacity"),a=1;$(this).mouseover(function(){a=$(this).css("opacity"),$(this).addClass(t.maskHoverClassName),$(this).css("opacity",0)}).mouseout(function(){$(this).removeClass(t.maskHoverClassName),$(this).css("opacity",a)}).click(function(){0!=$(this).css("opacity")&&(o=$(this).css("opacity")),$("#items > div").each(function(){$(this).find("div[data-id]").css("opacity",o)}),a=0,$(this).css("opacity",0);var e;i=this,e=t.map[$(i).attr("data-id")],t.openXml(e),t.outlineClick&&t.outlineClick(),c(t.maskElements,function(e){i===t.maskElements[e]?(n=e,$(this).addClass(t.maskClassName)):$(this).removeClass(t.maskClassName)})})})};var p=function(){var t=this,e=t.outLineDiv,n=e.width+2*e.marginLR,i=(t.json.length-t.outLineDiv.maxDisplayCount)*n;t.scrollLock=!1,$(t.nextBtn).click(function(){if(!t.scrollLock){var e=$(t.actionElement).scrollLeft()+n;i>=e&&(t.scrollLock=!0,$(t.actionElement).animate({scrollLeft:e},t.speed,function(){t.scrollLock=!1}))}}),$(t.prevBtn).click(function(){if(!t.scrollLock){var e=$(t.actionElement).scrollLeft()-n;$(t.actionElement).scrollLeft()>0&&(t.scrollLock=!0,$(t.actionElement).animate({scrollLeft:e},t.speed,function(){t.scrollLock=!1}))}})},u=function(){var t=this,e=t.outLineDiv,n=e.height+2*e.marginLR+2*e.borderWidth,i=(t.json.length-t.outLineDiv.maxDisplayCount)*n;$(t.nextBtn).click(function(){$(t.actionElement).stop();var e=$(t.actionElement).scrollTop()+n;i>=e&&$(t.actionElement).animate({scrollTop:e},t.speed)}),$(t.prevBtn).click(function(){$(t.actionElement).stop();var e=$(t.actionElement).scrollTop()-n;$(t.actionElement).scrollTop()>0&&$(t.actionElement).animate({scrollTop:e},t.speed)})};return i.prototype.pageBtnEvents=function(){var t=this;t.isHorizontalLayout()?p.apply(t):u.apply(t)},i.prototype.contextMenu=function(){},i}])}(nameSpace.reg("graph")),function(t){"use strict";var e=function(t,e){return function(t){this.setView=function(t){this.view=t},this.empty=function(){this.view=null},this.isShowGrid=!0,this.isAssistLine=!0,this.isAutoLayout=!0,this.isAutoLine=!0}};t.app.factory("GraphState",["$modal","Unit",e])}(nameSpace.reg("graph")),function(t){"use strict";t.app.factory("Unit",["$window","$interval",function(e,n){var i={};return i.options={},i.options.toastr={closeButton:!0,progressBar:!0,timeOut:1500},i.api=function(t){return"../api/rest"+t},i["static"]=function(t){return angular.isString(t)?(0===t.indexOf("../")&&(t=t.substr(3)),0===t.indexOf("/")&&(t=t.substr(1)),"../static/"+t):t},i.success=function(t){toastr.success(t,null,i.options.toastr)},i.error=function(t){toastr.error(t,null,i.options.toastr)},i.basename=function(t){var e=t.split("/");return e.pop()},i.formatCategoryData=function(t){angular.forEach(t,function(t){t.icon=i["static"](t.icon)})},i.getStyleForAttr=function(t,e){var n="",i="";return t.style&&""!==t.style?(n=t.style.split(";"),$.each(n,function(){return this.indexOf(e)>=0?(i=this.split("=")[1],!1):void 0})):i="",i},i.isCiCell=function(e){return"object"==typeof e&&"string"==typeof e.id&&0===e.id.indexOf(t.DEFINE_CI.GRAPH_PREFIX)},i.isCiIn=function(e){return e.id.indexOf(t.DEFINE_CI.GRAPH_PREFIX_IN)>=0},i.getCiIdByCell=function(t){return t.id.split("_").pop()},i.alert=function(t){bootbox.alert(String(t))},i.confirm=function(t,e){bootbox.confirm(String(t),function(t){t&&e()})},i.prompt=function(t,e,n){bootbox.prompt({title:String(t),value:String(n),callback:function(t){e(t)}})},i.unixToDatetime=function(t){var e=new Date(t);return[[e.getFullYear(),e.getMonth()+1<10?"0"+(e.getMonth()+1):e.getMonth()+1,e.getDate()<10?"0"+e.getDate():e.getDate()].join("-"),[e.getHours()<10?"0"+e.getHours():e.getHours(),e.getMinutes()<10?"0"+e.getMinutes():e.getMinutes(),e.getSeconds()<10?"0"+e.getSeconds():e.getSeconds()].join(":")].join(" ")},i.eventData=function(t){return i.isCiCell(t.cell)&&(t.cell.dbid=i.getCiIdByCell(t.cell)),t},i.loadingbar=function(){var t,e,i=$(".loadingbar-process"),o=-50;return{show:function(){o=-50,n.cancel(t),n.cancel(e),$(i).stop(),$(i).fadeIn("slow"),t=n(function(){100>o?o+=10:900>=o&&(o+=Math.ceil(40*Math.random()/10)),o>=900&&n.cancel(t),i.css("width",.1*o+"%")},17)},hide:function(){n.cancel(t),n.cancel(e);var a=o;$(i).stop(),i.css("opacity",1),e=n(function(){o>1e3?(n.cancel(e),$(i).fadeOut("slow",function(){i.css("width","0").css("opacity",1)})):i.css("width",.1*o+"%"),o+=100>a?10:500>a?5:800>a?3:2},10)},error:function(){$(i).fadeOut()}}}(),i.getLevelColor=function(t){var e;switch(t){case 5:e={bg:"#FD0004",fc:"#FFFFFF"};break;case 4:e={bg:"#FFC100",fc:"#FFFFFF"};break;case 3:e={bg:"#FF8201",fc:"#000000"};break;case 2:e={bg:"#03B0ED",fc:"#FFFFFF"};break;default:e={bg:"#94D04A",fc:"#FFFFFF"}}return e},i.download=function(t){var e;e=document.createElement("a"),e.download=t,e.target="_blank",e.href=i.api("/download/")+t,document.body.appendChild(e),e.click(),document.body.removeChild(e)},i.layout=function(t,e,n){var i;i=t.getChildVertices(),t.getModel().beginUpdate();try{e.execute(t.getDefaultParent(),i)}catch(o){throw o}finally{if(n&&navigator.userAgent.indexOf("Camino")<0){var a=new mxMorphing(t);a.addListener(mxEvent.DONE,mxUtils.bind(this,function(){t.getModel().endUpdate()})),a.startAnimation()}else t.getModel().endUpdate()}},i.handleGraphJson=function(t){},i}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.factory("Universe",["Const","LoadMesh","FontService",function(e,n,i){function o(t){this.options=t,this.loadObj=new n,this.meshBizInfo={},this.$container=t.$container,this.defaultNodeDepth=e.WEBGL_NODE_DEPTH,this.defaultLayerWidth=e.WEBGL_LAYER_WIDTH,this.defaultLayerHeight=e.WEBGL_LAYER_HEIGHT,this.margin=e.WEBGL_LAYER_MARGIN,this.sceneWidth=this.$container.width(),this.sceneHeight=this.$container.height(),this.fov=30,this.selected=[],this.layers=[],this.ballAnimationQueue=[],this.allNodes=[],this.allTexts=[],this.textsMap={},this.allCiIds=[],this.allCiObj={},this.allLineMesh=[],this.initThree(),this.initScene(),this.initCamera(),this.initLight(),this.enableScrollWheelZoom(),this.resize(),this.animate(),this.click(),this.event(),this.initLayer()}return o.prototype.blink=function(t,e){for(var n={},i=t,o=0,a=i.children.length;a>o;o++)0===o?n=i.children[o].geometry.clone():THREE.GeometryUtils.merge(n,i.children[o]);this.blinkList[e]=this.blinkList[e]||new THREE.Mesh(n,new THREE.MeshBasicMaterial({color:16711680,transparent:!0,opacity:.4})),this.blinkList[e].geometry=n;var r=t.scale;this.blinkList[e].scale.set(r.x,r.y,r.z),t.parent.updateMatrixWorld();var s=new THREE.Vector3;s.setFromMatrixPosition(t.matrixWorld),this.blinkList[e].position.set(s.x,s.y,s.z),t.parent.rotation.x===Math.PI&&(this.blinkList[e].rotation.x=Math.PI/2),this.scene.add(this.blinkList[e])},o.prototype.showTimeline=function(){var e,n=this,i=[];n.blinkObj={},n.blinkList={},e=function(e){$.each(e,function(e){var o,a=this;$.each(n.layers,function(t){var i=this;$.each(i,function(i){var o=[t,i,e].join("_");6===a.alarmLevel?n.blinkObj[o]&&(n.scene.remove(n.blinkList[o]),delete n.blinkObj[o]):n.allCiObj[o]&&(n.blinkObj[o]=n.allCiObj[o],n.blink(n.blinkObj[o],o))})}),6!==a.alarmLevel&&(o=t.utils.getLevelColor(a.alarmLevel),i.push({id:e,bg:o.bg,fc:o.fc}))})},n.timeline=t.Timeline({onload:function(){},clickedPoint:function(t){t&&e(t)},show:function(){},hide:function(){},ids:n.allCiIds,container:this.$container.parent()[0]}),e(n.timeline.timeData[1].data),n.timeline.show()},o.prototype.closeTimeline=function(){var t=this;$.each(t.blinkList,function(){t.scene.remove(this)}),t.blinkObj=null,t.blinkList=null,t.removeHighlightSelected(),t.timeline.remove()},o.prototype.close=function(){var t=this;t.timeline&&t.timeline.stopUpdateInterval(),$.each(t.scene.children,function(){t.scene.remove(this)})},o.prototype.event=function(){},o.prototype.removeHighlightSelected=function(){var t=this;$.each(t.selected,function(){t.scene.remove(this)}),t.selected=[]},o.prototype.getCiMesh=function(t){var e=[],n=this;return $.each(n.allCiObj,function(n){var i=this;n.split("_").pop()===t&&e.push(i)}),e},o.prototype.highlightNodeId=function(t){var n=this,i=[];n.hideLayerLine(),$.each(n.allNodes,function(){var o=this;o.id===t&&(i.push(o),$.each(n.getRelationLineByNodeId(o.id),function(){var t=this;i.push(t.node),t.line.material.color.setHex(e.WEBGL_LAYER_LINE_COLOR_SELECTION),t.line.visible=!0}))}),n.highlightSelected(i)},o.prototype.highlightSelected=function(t){var e=this;$.each(t,function(){for(var t,n=this,i={},o=n,a=0,r=o.children.length;r>a;a++)0===a?i=o.children[a].geometry.clone():THREE.GeometryUtils.merge(i,o.children[a]);t=new THREE.Mesh(i,new THREE.MeshBasicMaterial({color:16750848,transparent:!0,opacity:.4})),e.selected.push(t),t.geometry=i;var s=n.scale;t.scale.set(s.x,s.y,s.z),n.parent.updateMatrixWorld();var l=new THREE.Vector3;l.setFromMatrixPosition(n.matrixWorld),t.position.set(l.x,l.y,l.z),n.parent.rotation.x===Math.PI&&(t.rotation.x=Math.PI/2),e.scene.add(t)})},o.prototype.click=function(){var t,e,n=this;e=n.renderer.domElement,$(e).click(function(i){i.preventDefault();var o=e.offsetLeft,a=e.offsetTop,r=e.offsetWidth,s=e.offsetHeight,l=new THREE.Vector3((i.clientX-o)/r*2-1,-(i.clientY-a)/s*2+1,1);l.unproject(n.camera),l.sub(n.camera.position),l.normalize();var c=new THREE.Raycaster(n.camera.position,l),p=c.intersectObjects(n.allNodes,!0);n.removeHighlightSelected(),p.length>0&&(n.hideLayerLine(),t=p[0].object.parent,n.highlightNodeId(t.id));var u=c.intersectObjects(n.allTexts,!0);u.length>0})},o.prototype.showMesh=function(t){$.each(showMesh,function(){var t=this;t.visible=!0})},o.prototype.converPosition=function(t,e,n){var i,o,a,r,s,l,c,p,u,h,d,g;if(p=this,a=0,r=0,l=p.defaultLayerHeight/e,c=p.defaultLayerWidth/t,c*p.defaultLayerHeight<=e?(s=c,r=(p.defaultLayerHeight-e*s)/2):(s=l,a=(p.defaultLayerWidth-t*s)/2),n.nodes)for(d=n.nodes,u=0,h=d.length;h>u;u++)o=d[u],o.width=o.width*s,o.height=o.height*s,o.x=o.x*s+a,o.y=o.y*s+r;if(n.containers)for(d=n.containers,u=0,h=d.length;h>u;u++)o=d[u],o.width=o.width*s,o.height=o.height*s,o.x=o.x*s+a,o.y=o.y*s+r;return n.edges?(i=function(t){t.x=t.x*s+a,t.y=t.y*s+r},g=[],$.each(n.edges,function(){var t=this;$.each(t.points,function(){g.push(i(this))})}),g):void 0},o.prototype.drawNode=function(n,i){var o,a,r,s;o=this,n.node={},r=t.utils.clone(n.nodes),a=function(t,i){var a;t.position.set(i.x-o.defaultLayerWidth/2+i.width/2,i.y-o.defaultLayerHeight/2+i.height/2,o.defaultNodeDepth/2*-1),t.rotation.x=Math.PI/2*-1,t.scale.x=i.width,t.scale.y=i.height,t.scale.z=i.width,n.node[i.id]={info:i,cube:t},o.drawNodeTexture(n,i),n.plane.add(t),o.allNodes.push(t),0===i.id.indexOf(e.CI_PREFIX)&&(a=i.id.substr(e.CI_PREFIX.length),o.allCiIds.push(a),o.allCiObj[[n.row,n.col,a].join("_")]=t),o.meshBizInfo[t.id]=n.node[i.id].info},(s=function(t){var e=t.pop();o.loadObj.load(e,function(n){a(n,e),t.length>=1?s(t):i()})})(r)},o.prototype.getResource=function(n){var i,o;return n?(i=n.split("/"),o=i.pop(),o=o.substring(0,o.lastIndexOf("."))):o=e.WEBGL_DEFAULT_MESH_NAME,{obj:t.DEFINE_WEBGL.RESOURCE_DIR+encodeURIComponent(o)+".obj",mtl:t.DEFINE_WEBGL.RESOURCE_DIR+encodeURIComponent(o)+".mtl"}},o.prototype.drawLine=function(t){var n,i,o,a,r,s;if(o=this,t.edges){for(n=function(n){var i,a,r,s,l,c,p,u;for(l=new THREE.LineBasicMaterial({color:e.WEBGL_LINE_COLOR}),r=new THREE.Geometry,i=function(t){return r.vertices.push(new THREE.Vector3(t.x-o.defaultLayerWidth/2,t.y-o.defaultLayerHeight/2,-4))},u=n.points,c=0,p=u.length;p>c;c++)a=u[c],i(a);s=new THREE.Line(r,l),t.plane.add(s)},s=[],a=0,r=t.edges.length;r>a;a++)i=t.edges[a],s.push(n(i));return s}},o.prototype.drawNodeTexture=function(t,n){var i,o,a,r,s,l,c,p,u,h;return s=this,r=t.node[n.id].cube.position,o=new THREE.MeshBasicMaterial({color:e.WEBGL_NODE_FONT_COLOR}),a=new THREE.MeshBasicMaterial({color:e.WEBGL_NODE_FONT_SIDE_COLOR}),i=[o,a],l=new THREE.TextGeometry(n.name,{size:e.WEBGL_NODE_FONT_SIZE,height:1,curveSegments:1,font:"lisu",weight:"normal",style:"normal",extrudeMaterial:0}),p=new THREE.MeshFaceMaterial(i),u=new THREE.Mesh(l,p),l.computeBoundingBox(),h=l.boundingBox.max.x-l.boundingBox.min.x,c=l.boundingBox.max.y-l.boundingBox.min.y,u.rotation.x=-1*Math.PI,u.position.set(r.x-h/2,r.y+n.height/2+c+2,s.defaultNodeDepth/2*-1),t.plane.add(u),t.node[n.id].textMesh=u,u},o.prototype.resize=function(){return THREEx.ContainerResize(this.$container[0],this.renderer,this.camera)},o.prototype.initThree=function(){this.renderer=new THREE.WebGLRenderer({antialias:!0,alpha:!0}),this.renderer.setSize(this.sceneWidth,this.sceneHeight),this.$container.append(this.renderer.domElement),this.renderer.setClearColor(16777215,1)},o.prototype.loadTexture=function(t){return THREE.ImageUtils.loadTexture(t)},o.prototype.initCamera=function(){var t,n,i;n=this.getLayerBox(),i=n.w>n.h?n.w:n.h,t=i/(2*Math.tan(this.fov/3*.017453293)),this.cameraDis=t,this.camera=new THREE.PerspectiveCamera(this.fov,this.sceneWidth/this.sceneHeight,e.WEBGL_CAMERA_NEAR,e.WEBGL_CAMERA_FAR),this.camera.rotation.x=Math.PI/2,this.camera.position.set(e.WEBGL_CAMERA_POSITION_X,e.WEBGL_CAMERA_POSITION_Y,.5*t),this.camera.lookAt(this.scene.position),this.scene.add(this.camera),this.scene.updateMatrixWorld(!0)},o.prototype.initScene=function(){this.scene=new THREE.Scene},o.prototype.initLight=function(){for(var t=[],n=0;4>n;n++)t[n]=new THREE.DirectionalLight(e.WEBGL_LIGHT_COLOR,.4),this.scene.add(t[n]);t[0].position.set(35e3,35e3,35e3),t[1].position.set(-35e3,35e3,-35e3),t[2].position.set(-35e3,35e3,-35e3),t[3].position.set(35e3,35e3,35e3)},o.prototype.render=function(){this.renderer.render(this.scene,this.camera)},o.prototype.drawText=function(t,n,i){var o,a,r,s,l,c,p,u,h,d,g,f=1.3;return a=new THREE.MeshBasicMaterial({color:e.WEBGL_LAYER_FONT_COLOR}),r=new THREE.MeshBasicMaterial({color:e.WEBGL_LAYER_FONT_SIDE_COLOR}),o=[a,r],s=new THREE.TextGeometry(n,{size:e.WEBGL_LAYER_FONT_SIZE,height:e.WEBGL_LAYER_FONT_HEIGHT,curveSegments:3,font:e.WEBGL_LAYER_FONT_FAMILY,weight:"normal",style:"normal",extrudeMaterial:1}),c=new THREE.MeshFaceMaterial(o),p=new THREE.Mesh(s,c),s.computeBoundingBox(),u=s.boundingBox.max.x-s.boundingBox.min.x,l=s.boundingBox.max.y-s.boundingBox.min.y,p.rotation.x=i?Math.PI/2*-1:Math.PI,p.position.set(this.defaultLayerWidth/2-u,this.defaultLayerHeight/2-l,0),t.add(p),h=new THREE.BoxGeometry(u*f,l*f,20),g=new THREE.MeshBasicMaterial,d=new THREE.Mesh(h,g),d.position.set(this.defaultLayerWidth/2-u/2,this.defaultLayerHeight/2-l,-1*e.WEBGL_LAYER_FONT_HEIGHT*3),d.rotation.x=i?Math.PI/2*-1:Math.PI,i||(d.position.y-=4*e.WEBGL_LAYER_FONT_HEIGHT),d.visible=!1,t.add(d),{textMesh:p,textBoxMesh:d}},o.prototype.drawContainer=function(n){var i=this;n.container={},$.each(t.utils.clone(n.containers),function(){var t=this;t.color=t.color?t.color:e.WEBGL_CONTAINER_COLOR[t.level];var o=new THREE.BoxGeometry(t.width,t.height,1),a=new THREE.MeshBasicMaterial({color:t.color,transparent:!0}),r=new THREE.Mesh(o,a);r.position.set(t.x-i.defaultLayerWidth/2+t.width/2,t.y-i.defaultLayerHeight/2+t.height/2,-t.level),n.container[t.id]={info:t,cube:r},n.plane.add(r)})},o.prototype.loadFont=function(n){var i,o,a=[],r=[],s={};$.each(n.split(""),function(){var t=this;s[t]||(s[t]=!0,r.push(t))}),o=_typeface_js.faces[e.WEBGL_FONT].normal.normal.glyphs,$.each(r,function(){var t=this;o[t]||a.push(t)}),a.length>=1&&(i=t.api.getFonts(a),t.utils.isTrueRet(i)&&$.each(i.data,function(t){o[t]=this}))},o.prototype.getLayerFonts=function(t){var e="";return t.name&&(e+=t.name),$.each(t.nodes,function(){e+=this.name}),$.each(t.containers,function(){e+=this.name}),$.each(t.edges,function(){e+=this.sourceName,e+=this.targetName}),e},o.prototype.getLayerBox=function(){var t=this,e=0,n={};return $.each(t.options.layers,function(){var t,n=this;for(t=0;t<n.length;t++){var i=n[t];if(i&&i.isVertical){e++;break}}}),n.h=t.options.layerMargin*(t.options.layerCount-1)+e*t.defaultLayerHeight,n.w=(t.options.layerItemCount-1)*t.defaultLayerWidth+(t.options.layerItemCount-1)*t.options.layerItemMargin,n.w=0===n.w?.7*t.defaultLayerWidth:n.w,n},o.prototype.getLayerPosByIndex=function(t,e){var n=this,i={},o=0,a=0;return $.each(n.options.layers,function(e){var i,r=this;for(i=0;i<r.length;i++){var s=r[i];if(s&&s.isVertical){t>e?o+=n.defaultLayerHeight:e===t&&(o+=n.defaultLayerHeight/2),
a++;break}}}),i.y=(n.options.layerMargin*(n.options.layerCount-1)+a*n.defaultLayerHeight)/2-(t*n.options.layerMargin+o),i.x=e*(n.defaultLayerWidth+n.options.layerItemMargin)-((n.options.layerItemCount-1)*n.defaultLayerWidth+(n.options.layerItemCount-1)*n.options.layerItemMargin)/2,i.z=0,i},o.prototype.initLayer=function(){var t,e,n=this,i={},o=[];n.layers=[],e=function(t,e){return t+""+e},$.each(n.options.layers,function(t){$.each(this,function(n){this&&(o.push(e(t,n)),i[e(t,n)]=!1)})}),t=function(){var t;for(t=0;t<o.length;t++)if(!i[o[t]])return!1;return!0},$.each(n.options.layers,function(o){var a=this,r=[];$.each(a,function(a){var s=this;s&&(s.pos=n.getLayerPosByIndex(o,a),s.row=o,s.col=a,n.addLayer(s,function(){i[e(o,a)]=!0,t()&&(n.options.relation&&n.drawLayerLine(n.options.relation),n.options.isShowTimeline&&n.showTimeline())})),r.push(s)}),n.layers.push(r)})},o.prototype.addLayer=function(t,n){var i,o,a,r=this;t.node=t.node?t.node:[],t.width=t.width?t.width:r.defaultLayerWidth,t.height=t.height?t.height:r.defaultLayerHeight,t.planeQuality=t.planeQuality?t.planeQuality:10,i={side:THREE.DoubleSide,transparent:!0,opacity:e.WEBGL_LAYER_OPACITY,color:t.floorBgColor?t.floorBgColor:e.WEBGL_LAYER_COLOR},t.material=t.material?t.material:new THREE.MeshBasicMaterial(i),o=new THREE.Mesh(new THREE.PlaneBufferGeometry(t.width,t.height,t.planeQuality,t.planeQuality),t.material),o.receiveShadow=!0,o.rotation.x=t.isVertical?Math.PI:Math.PI/2,o.position.x=t.pos.x,o.position.z=t.pos.z,o.position.y=t.pos.y,r.scene.add(o),t.name=t.name?t.name:e.WEBGL_LAYER_NAME_PREFIX+(this.layers.length+1),this.loadFont(this.getLayerFonts(t)),a=this.drawText(o,t.name,!t.isVertical),t.textMesh=a.textMesh,t.textBoxMesh=a.textBoxMesh,t.plane=o,r.allTexts.push(a.textBoxMesh),r.textsMap[a.textBoxMesh.id]=t.viewid,this.converPosition(t.graphWidth,t.graphHeight,t),this.drawNode(t,function(){n&&n(t)}),this.drawContainer(t),this.drawLine(t),r.render()},o.prototype.autoLayoutLayer=function(){var t,e,n,i,o,a,r,s,l;for(i=this,o=(i.layers.length-1)*i.margin/2*-1,t=function(t,e){t.plane.position.y=o+e*i.margin},s=i.layers,l=[],e=a=0,r=s.length;r>a;e=++a)n=s[e],l.push(t(n,e));return l},o.prototype.enableScrollWheelZoom=function(){var t;t=this,this.orbitControls=new THREE.OrbitControls(this.camera,this.renderer.domElement),this.orbitControls.damping=.2,this.orbitControls.addEventListener("change",function(){return t.render()})},o.prototype.animate=function(){var t,e;return e=this,(t=function(){requestAnimationFrame(t),e.orbitControls.update(),e.render(),$.each(e.selected,function(){var t=this,e=t.material.opacity;t.material.opacity=e>=.1?e-.01:.8}),e.blinkList&&$.each(e.blinkList,function(){var t=this.material.opacity;this.material.opacity=t>=.1?t-.02:.8}),!e.isCloseCameraAnimate&&e.cameraDis>e.camera.position.z?e.camera.position.z+=60:e.isCloseCameraAnimate=!0})()},o.prototype.getPointsTween=function(t){var e,n,i,o,a,r,s;for(o=2,i=[],a=function(t,e){var n,a,r,s,l;for(r=Math.max(Math.abs(t.x-e.x),Math.abs(t.y-e.y),Math.abs(t.z-e.z))/o,n=function(n){var o;return o={},o.x=t.x>e.x?t.x-Math.abs(t.x-e.x)/r*n:t.x+Math.abs(t.x-e.x)/r*n,o.y=t.y>e.y?t.y-Math.abs(t.y-e.y)/r*n:t.y+Math.abs(t.y-e.y)/r*n,o.z=t.z>e.z?t.z-Math.abs(t.z-e.z)/r*n:t.z+Math.abs(t.z-e.z)/r*n,i.push(o)},l=[],a=s=1;r>=1?r>=s:s>=r;a=r>=1?++s:--s)l.push(n(a));return l},e=r=0,s=t.length;s>r;e=++r)n=t[e],t[e+1]&&a(n,t[e+1]);return i},o.prototype.crateLineBallAnimation=function(t){var e,n,i,o;return o=this,e=new THREE.SphereGeometry(3,100,50),e.computeTangents(),i=new THREE.Mesh(e,new THREE.MeshLambertMaterial({color:16777215})),o.scene.add(i),n=o.getPointsTween(t),i.position.set(t[0].x,t[0].y,t[0].z),o.ballAnimationQueue.push({ball:i,points:t,animatePoints:n,back:[]})},o.prototype.updateBallAnimation=function(){var t,e,n,i,o,a,r;for(n=this,t=function(t){var e;return 0===t.animatePoints.length&&(t.animatePoints=t.back,t.back=[]),e=t.animatePoints.shift(),t.back.push(e),t.ball.position.set(e.x,e.y,e.z)},a=n.ballAnimationQueue,r=[],i=0,o=a.length;o>i;i++)e=a[i],r.push(t(e));return r},o.prototype.getSnodeAndTnodeById=function(t,e){var n,i=this,o=[];return n=function(t,e){var n,o=[];return n=function(e){var n=[];return $.each(e,function(){var e=this;e&&e.node[t]&&n.push(e.node[t])}),n},"undefined"==typeof e?$.each(i.layers,function(t){o.push({index:t,nodes:n(i.layers[t])})}):$.each(e,function(){var t=this;o.push({index:t,nodes:n(i.layers[t])})}),o},$.each(n(t),function(){var t=this,a=[];t.index>0&&a.push(t.index-1),t.index+1<i.layers.length&&a.push(t.index+1),$.each(t.nodes,function(){var t=this;$.each(n(e,a),function(){$.each(this.nodes,function(){o.push({source:t,target:this})})})})}),o},o.prototype.getNodeAbsolutePosition=function(t){var e;return e={},e.x=t.parent.position.x+t.position.x,e.y=t.parent.position.y+t.position.z,e.z=t.parent.position.z+t.position.y,e},o.prototype.getNodeBetweenPoints=function(t,e){var n,i;return n=e.y>t.y?t.y+(e.y-t.y)/2:e.y+(t.y-e.y)/2,i=[],i.push(new THREE.Vector3(t.x,t.y,t.z)),i.push(new THREE.Vector3(t.x,n,t.z)),i.push(new THREE.Vector3(e.x,n,t.z)),i.push(new THREE.Vector3(e.x,n,e.z)),i.push(new THREE.Vector3(e.x,e.y,e.z)),i},o.prototype.getLineByNodeId=function(t){var e=this,n=[];return $.each(e.allLineMesh,function(){var e=this;(e.source.id===t||e.target.id===t)&&n.push(e.line)}),n},o.prototype.getDonwLineByNodeId=function(t){var e,n=this,i=[];return e=function(t){var o=[];$.each(t,function(){var t=this;$.each(n.allLineMesh,function(){var e=this;e.source.id===t&&e.source.parent.position.y>e.target.parent.position.y&&(i.push({line:e.line,node:e.target}),o.push(e.target.id)),e.target.id===t&&e.target.parent.position.y>e.source.parent.position.y&&(i.push({line:e.line,node:e.source}),o.push(e.source.id))})}),o.length>=1&&e(o)},e([t]),i},o.prototype.getUpLineByNodeId=function(t){var e,n=this,i=[];return e=function(t){var o=[];$.each(t,function(){var t=this;$.each(n.allLineMesh,function(){var e=this;e.source.id===t&&e.source.parent.position.y<e.target.parent.position.y&&(i.push({line:e.line,node:e.target}),o.push(e.target.id)),e.target.id===t&&e.target.parent.position.y<e.source.parent.position.y&&(i.push({line:e.line,node:e.source}),o.push(e.source.id))})}),o.length>=1&&e(o)},e([t]),i},o.prototype.getRelationLineByNodeId=function(t){var e=this,n=[];return $.each(e.getDonwLineByNodeId(t),function(){n.push(this)}),$.each(e.getUpLineByNodeId(t),function(){n.push(this)}),n},o.prototype.getRelationCiByNodeId=function(t){var e=this,n=[],i=[],o={};return $.each(e.allNodes,function(){var i=this;i.id===t&&(n.push(i.id),$.each(e.getRelationLineByNodeId(i.id),function(){var t=this;n.push(t.node.id)}))}),$.each(n,function(){var t=this;$.each(e.allCiObj,function(e){var n=this,a=e.split("_").pop();n.id!==t||o[a]||(o[a]=!0,i.push(a))})}),i},o.prototype.hideLayerLine=function(){var t=this;$.each(t.allLineMesh,function(){var t=this;t.line.material.color.setHex(e.WEBGL_LAYER_LINE_COLOR),t.line.visible=!1})},o.prototype.showLayerLine=function(){var t=this;t.hideLayerLine(),$.each(t.allLineMesh,function(){var t=this;t.line.visible=!0})},o.prototype.drawLayerLine=function(t){var n,i,o,a,r,s;for(o=this,n=function(t){var n,i,a,r,s;s=o.getSnodeAndTnodeById(t.source,t.target),$.each(s,function(){var t,s;t=this.source,s=this.target,t&&s&&(t.cube.parent.updateMatrixWorld(),t.cube.updateMatrixWorld(),s.cube.updateMatrixWorld(),r=[(new THREE.Vector3).setFromMatrixPosition(t.cube.matrixWorld),(new THREE.Vector3).setFromMatrixPosition(s.cube.matrixWorld)],i=new THREE.Geometry,i.vertices=r,a=new THREE.LineBasicMaterial({color:e.WEBGL_LAYER_LINE_COLOR,linecap:"round"}),i.computeLineDistances(r),n=new THREE.Line(i,a),n.visible=!1,o.scene.add(n),o.allLineMesh.push({line:n,source:t.cube,target:s.cube}))})},s=[],a=0,r=t.length;r>a;a++)i=t[a],s.push(n(i));return s},o}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.service("AuthService",["$http","Unit",function(t,e){var n={};return n.login=function(n){return t.post(e.api("/login"),n)},n}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.service("CiCateService",["$http","Unit",function(t,e){var n={};return n.get=function(){return t.get(e.api("/cicate"))},n.save=function(n){return t.post(e.api("/cicate"),n)},n.update=function(n,i){return t.put(e.api("/cicate/"+n),i)},n.remove=function(n){return t["delete"](e.api("/cicate/"+n))},n}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.service("CiMonitorService",["$http","Unit",function(t,e){var n={};return n.getView=function(n){return t.post(e.api("/view/getmonitorforview"),{id:n})},n.getCi=function(n,i){return t.post(e.api("/view/getwholeinfo"),{id:n,viewId:i})},n}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.service("CiRelationService",["$http","Unit",function(t,e){var n={};return n.get=function(n){return t.post(e.api("/cirel/query"),n)},n.getCategory=function(){return t.get(e.api("/relcate"))},n}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.service("CiService",["$http","Unit",function(t,e){var n={};return n.get=function(n){return n.all=!0,t.post(e.api("/ci"),n)},n.getCi=function(n){return t.get(e.api("/ci/"+n))},n.ids=function(n){return t.post(e.api("/ci"),{ids:n})},n.expand=function(n){return t.post(e.api("/cirel/query"),n)},n}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.service("ExportService",["$http","Unit",function(t,e){return{exportPdf:function(n){return t.post(e.api("/view/exportpdf"),{svg:n})},exportPng:function(n){return t.post(e.api("/view/exportpng"),{svg:n})}}}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.service("FontService",["$http","Unit",function(t,e){return{get:function(n){return t.post(e.api("/icon/font"),{font:n})}}}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.service("GroupService",["$http","Unit",function(t,e){var n={};return n.get=function(n){return t.get(n?e.api("/portfolio/"+n):e.api("/portfolio"))},n.save=function(n){return t.post(e.api("/portfolio"),n)},n.update=function(n){return t.put(e.api("/portfolio"),n)},n["delete"]=function(n){return n?t["delete"](e.api("/portfolio/"+n)):void 0},n["private"]=function(){return t.get(e.api("/portfolio/private"))},n["public"]=function(){return t.get(e.api("/portfolio/public"))},n.deleteById=function(n){return t["delete"](e.api("/portfolio/"+n))},n.create=function(n){return t.post(e.api("/portfolio"),n)},n.deletePrivateOrPublic=function(n){return t["delete"](n?e.api("/portfolio/public"):e.api("/portfolio/private"))},n}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.service("IconService",["$http","Upload","Unit",function(t,e,n){var i={};return i.get=function(e){return t.post(n.api("/viewicon"),e)},i.upload=function(t){return e.upload({url:n.api("/viewicon/save"),file:t})},i}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.service("ImageService",["$http","Unit","Upload",function(t,e,n){var i={};return i.uploadBackground=function(t){return n.upload({url:e.api("/view/background"),file:t})},i.getBackgound=function(n){return t.post(e.api("/view/fuzzybackground"),n)},i.removeBackground=function(n){return t["delete"](e.api("/view/background/"+n))},i}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.service("MeshService",["$http","Unit",function(t,e){return{svgToMesh:function(n){return t.post(e.api("/icon/3dpathsbysvg"),{paths:n})}}}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.service("OtherService",["$http","Unit",function(t,e){return{getSvgPath:function(t){return{success:function(t){t({data:"resource/svg/blue"})}}}}}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.service("SearchService",["$http","Unit",function(t,e){var n={};return n.fuzzy=function(n){return t.post(e.api("/view/fuzzysearch"),{keyWord:n})},n}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.service("ViewCateService",["$http","Unit",function(t,e){var n={};return n.get=function(){return t.get(e.api("/viewcate"))},n.getPrivate=function(){return t.get(e.api("/viewcate/private"))},n.getPublic=function(){return t.get(e.api("/viewcate/public"))},n.create=function(n){return t.post(e.api("/viewcate"),n)},n.remove=function(n){return t["delete"](e.api("/viewcate/"+n))},n.update=function(n){return t.put(e.api("/viewcate"),n)},n}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.service("ViewService",["$http","Unit",function(t,e){var n={};return n.get=function(n){return t.post(e.api("/view"),n)},n["private"]=function(){return t.get(e.api("/view/private"))},n["public"]=function(){return t.get(e.api("/view/public"))},n.getView=function(n){return t.get(e.api("/view/"+n))},n.create=function(n){return t.post(e.api("/view"),n)},n.update=function(n){return t.put(e.api("/view"),n)},n.remove=function(n){return t["delete"](e.api("/view/"+n))},n.uploadImage=function(){},n.getByIds=function(n){return t.post(e.api("/view"),n)},n}])}(nameSpace.reg("graph")),function(){"use strict";var t=angular.module("graphTable",[]);t.factory("GraphTable",["Unit","CiService","$rootScope","Event",function(t,e,n,i){return function(t){this.showFlag=!1,this.data=[],this.show=function(){this.getData(),this.showFlag=!0},this.hide=function(){this.showFlag=!1},this.format=function(t){var e={},n=this,i=function(t){var e=[];return $.each(t,function(t){e.push({label:t,key:t})}),e.sort(function(t){return"名称"===t.key?-1:1}),e};$.each(t,function(){e[this.categoryId]||(e[this.categoryId]={name:this.categoryName,id:this.categoryId,head:i(this.data),rows:[]}),e[this.categoryId].rows.push(this.data)}),$.each(e,function(){n.data.push(this)}),console.log(n.data)},this.getData=function(){var n=this;t&&(this.ids=t.action.getCisId(),this.ids.length&&e.ids(this.ids).success(function(t){n.data.splice(0),n.format(t.data)}))},t&&(t.table=this)}}]),t.controller("DirectiveGraphTableCtrl",["$scope","GraphTable","$parse","Event","CiService","CiMonitorService","Unit",function(t,e,n,i,o,a,r){t.hasOwnProperty("params")||(t.params=new e),this.setupBindingsToInternalScope=function(e){var i=n(e);t.$watch(i,function(e){angular.isUndefined(e)||(t.params=e)},!1)}}]),t.directive("graphTable",["$q","$parse",function(){return{restrict:"A",priority:1001,transclude:!0,scope:!0,templateUrl:"app/directive/graphTable/graphTable.html",controller:"DirectiveGraphTableCtrl",compile:function(){return function(t,e,n,i){i.setupBindingsToInternalScope(n.graphTable)}}}}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(t){"use strict";t.app.directive("ngRepeatDone",["$timeout",function(t){return function(e,n,i){e.$last&&t(function(){e.$eval(i.ngRepeatDone)})}}])}(nameSpace.reg("graph")),function(t,e){"use strict";var n=angular.module("graphInfo",[]);n.factory("GraphInfo",["Unit","CiService","$rootScope","Event",function(t,e,n,i){return function(e){this.showFlag=!1,this.view=function(e){this.type="view",this.data=e;var o=function(){n.$broadcast(i.VIEW_DELETE_BEFORE,t.eventData(e))},a=function(){n.$broadcast(i.VIEW_UPDATE_BEFORE,t.eventData(e))};this.out.title="视图信息",this.out.btns=[{btnClass:"btn-danger",label:"删除",clickHandle:o},{btnClass:"btn-primary",label:"更新",clickHandle:a}]},this.ci=function(t){var e=this;e.type="ci",e.data=t,e.out.title="CI信息",e.out.btns=[]},this.update=function(t,e){this.out.rows.splice(0),this.out.btns=[],this.out.title="",this[t]&&this[t](e),this.show(),n._refresh()},this.custom=function(t){this.out=t},this.hide=function(){this.showFlag&&this.toggle()},this.show=function(){this.showFlag||this.toggle()},this.toggle=function(){this.showFlag=!this.showFlag,n.$broadcast(i.GRAPH_INFO_TOGGLE,this)},this.out={title:"",rows:[],btns:[]},this.editor=e}}]);var i=function(t,e,n,i,o,a,r){t.hasOwnProperty("params")||(t.params=new e),this.setupBindingsToInternalScope=function(e){var i=n(e);t.$watch(i,function(e){angular.isUndefined(e)||(t.params=e)},!1)},t.callapse={},t.formatBool=function(t){return t?"是":"否"},t.formatDate=function(t){return r.unixToDatetime(t).substr(0,10)},t.$on(i.GRAPH_CI_CELL_CLICK,function(e,n){t.params.editor.state.view?a.getCi(n.cell.dbid,t.params.editor.state.view.id).success(function(e){t.params.update("ci",e.data)}):o.getCi(n.cell.dbid).success(function(e){t.params.update("ci",{config:e.data})})})};n.controller("DirectiveGraphInfoCtrl",["$scope","GraphInfo","$parse","Event","CiService","CiMonitorService","Unit",i]),n.directive("graphInfo",["$q","$parse",function(){return{restrict:"A",priority:1001,scope:!0,templateUrl:"app/directive/info/info.html",controller:"DirectiveGraphInfoCtrl",compile:function(){return function(t,e,n,i){i.setupBindingsToInternalScope(n.graphInfo)}}}}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(t){"use strict";t.app.directive("ngEnter",function(){return function(t,e,n){e.bind("keydown keypress",function(e){13===e.which&&(t.$apply(function(){t.$eval(n.ngEnter,{event:e})}),e.preventDefault())})}})}(nameSpace.reg("graph")),function(t){"use strict";t.app.directive("ngScroll",function(){var t={},e=[];return window.setInterval(function(){var n,i,o;for(n=0;n<e.length;n++)i=e[n],o=t[i],o&&i.scrollHeight!==o.lastScrollHeight&&(o.lastScrollHeight=i.scrollHeight,o.lastClientHeight=i.clientHeight,Ps.update(i))},200),function(n,i,o){if(Ps.initialize(i[0]),e.push(i[0]),t[i[0]]={lastScrollHeight:i[0].scrollHeight,lastClientHeight:i[0].clientHeight},""!=o.ngScroll){var a=o.ngScroll.split(","),r=a[0],s=a[1];Ps.initialize(i[0],{suppressScrollX:"false"===r?!0:!1,suppressScrollY:"false"===s?!0:!1})}else Ps.initialize(i[0])}})}(nameSpace.reg("graph")),function(t){"use strict";t.app.factory("timeLine",function(){var t=function(t,e,n){this.options=n,this.data=e,this.elem=$(".timeLine-line"),this.getDotData=function(t){t&&(this.data=t);var e=[];if(this.options){if(this.options.endTime&&this.options.startTime){var i=new Date,o=new Date(i.getMonth()+1+" "+i.getDay()+","+i.getFullYear()+" "+n.endTime+":0").getTime(),a=new Date(i.getMonth()+1+" "+i.getDay()+","+i.getFullYear()+" "+n.startTime+":0").getTime();this.options.endTime=o,this.options.startTime=a}}else this.options={};var r={tick:this.options.tick||10,showPlace:this.options.showPlace||"bottom",dataShow:this.options.dataShow||!1,endTime:this.options.endTime||(new Date).getTime(),startTime:this.options.startTime||(new Date).getTime()-72e5},s=null;r.endTime>r.startTime?s=r.endTime-r.startTime:(alert("结束时间与开始时间填入错误，请重新填写"),s=72e5),r.tick=Math.round(this.elem.width()/100);for(var l=s/(r.tick-1),c=r.tick-1;c>=0;c--){var p={};p.dotLeft=this.elem.width()/(r.tick-1)*(r.tick-1-c)+"px",p.titleLeft=this.elem.width()/(r.tick-1)*(r.tick-1-c)-10+"px";var i=r.endTime,u=new Date(i-l*c),h=u.getMinutes();10>h&&(h="0"+h),p.title=u.getHours()+":"+h;for(var d=0;d<this.data.length;d++)if(p.title===this.data[d].time){p.level=this.data[d].level,p.dataId=this.data[d].id,p.event=this.data[d].event;break}e.push(p)}return e},this.setTime=function(){this.getDotData()}};return t}),t.app.directive("myLine",["$interval","timeLine",function(t,e){return{restrict:"A",replace:!0,scope:{myId:"@",myData:"=",myOptions:"="},link:function(n,i){n.point=new e(i,n.myData),n.initData=n.point.getDotData(n.myData),n.time={},t(function(){n.time.now=new Date},6e4),n.$watch("time.now",function(){n.initData=n.point.getDotData(n.myData)})},templateUrl:"temp.html"}}])}(nameSpace.reg("graph")),function(t){"use strict";var e={save:"保存/另存为",refresh:"更新",search:"适应画布",zoomOut:"缩小",zoomIn:"放大",orderUp:"置前",orderDown:"置后",alignExpand:"对齐",undo:"撤销",redo:"重做",trash:"移除选中对象",link:"设置链接",paint:"填充颜色",border:"边框颜色",shadow:"阴影",fontExpand:"文本样式",lineExpand:"关系线样式",grid:"开启/禁止 画布表格",assistLine:"开启/禁止 辅助线",imageExpand:"画布背景图",penExpand:"标注",autoLayout:"开启/禁止 自动布局",autoLine:"开启/禁止 自动连线",searchExpand:"搜索",tableExpand:"显示模式",image:"上传背景图片",noimage:"清除背景图片",pen:"标注CI",nopen:"清除CI标注",newFile:"新建画布",folder:"打开视图"},n=function(t){var e=t.action;this.image=function(){e.backgroundImage()},this.noimage=function(){e.clearBackgroundImage()},this.grid=function(){e.grid()},this.assistLine=function(){e.assistLine()},this.save=function(){e.save()},this.refresh=function(){e.update()},this.newFile=function(){e.create()},this.folder=function(){e.open()},this.shadow=function(){e.shoadow()},this.link=function(){e.linkEdit()},this.zoomOut=function(){e.zoomOut()},this.zoomIn=function(){e.zoomIn()},this.search=function(){e.zoomCenter()},this.orderUp=function(){e.orderUp()},this.orderDown=function(){e.orderDown()},this.redo=function(){e.redo()},this.undo=function(){e.undo()},this.alignLeft=function(){e.alignCells(mxConstants.ALIGN_LEFT)},this.alignCenter=function(){e.alignCells(mxConstants.ALIGN_CENTER)},this.alignRight=function(){e.alignCells(mxConstants.ALIGN_RIGHT)},this.alignTop=function(){e.alignCells(mxConstants.ALIGN_TOP)},this.alignMiddle=function(){e.alignCells(mxConstants.ALIGN_MIDDLE)},this.alignBottom=function(){e.alignCells(mxConstants.ALIGN_BOTTOM)},this.alignDistributeHorizontal=function(){e.alignDistribute(!0)},this.alignDistributeVertical=function(){e.alignDistribute(!1)},this.lineStraight=function(){e.edgeClearStyle()},this.lineEntityRelation=function(){e.edgeStyle("entityRelationEdgeStyle")},this.lineElbowHorizontal=function(){e.edgeStyle("elbowHorizontal")},this.lineElbowVertical=function(){e.edgeStyle("elbowVertical")},this.lineSegment=function(){e.edgeStyle("segmentEdgeStyle")},this.lineOrthogonal=function(){e.edgeStyle("orthogonalEdgeStyle")},this.startNoarrow=function(){e.startArrow(mxConstants.NONE)},this.startClassic=function(){e.startArrowFill(mxConstants.ARROW_CLASSIC)},this.startOpen=function(){e.startArrowFill(mxConstants.ARROW_OPEN)},this.startBlock=function(){e.startArrowFill(mxConstants.ARROW_BLOCK)},this.startOval=function(){e.startArrowFill(mxConstants.ARROW_OVAL)},this.startDiamond=function(){e.startArrowFill(mxConstants.ARROW_DIAMOND)},this.startThinDiamond=function(){e.startArrowFill(mxConstants.ARROW_DIAMOND_THIN)},this.startClassicTrans=function(){e.startArrow(mxConstants.ARROW_CLASSIC)},this.startBlockTrans=function(){e.startArrow(mxConstants.ARROW_BLOCK)},this.startOvalTrans=function(){e.startArrow(mxConstants.ARROW_OVAL)},this.startDiamondTrans=function(){e.startArrow(mxConstants.ARROW_DIAMOND)},this.startThinDiamondTrans=function(){e.startArrow(mxConstants.ARROW_DIAMOND_THIN)},this.endNoarrow=function(){e.endArrow(mxConstants.NONE)},this.endClassic=function(){e.endArrowFill(mxConstants.ARROW_CLASSIC)},this.endOpen=function(){e.endArrowFill(mxConstants.ARROW_OPEN)},this.endBlock=function(){e.endArrowFill(mxConstants.ARROW_BLOCK)},this.endOval=function(){e.endArrowFill(mxConstants.ARROW_OVAL)},this.endDiamond=function(){e.endArrowFill(mxConstants.ARROW_DIAMOND)},this.endThinDiamond=function(){e.endArrowFill(mxConstants.ARROW_DIAMOND_THIN)},this.endClassicTrans=function(){e.endArrow(mxConstants.ARROW_CLASSIC)},this.endBlockTrans=function(){e.endArrow(mxConstants.ARROW_BLOCK)},this.endOvalTrans=function(){e.endArrow(mxConstants.ARROW_OVAL)},this.endDiamondTrans=function(){e.endArrow(mxConstants.ARROW_DIAMOND)},this.endThinDiamondTrans=function(){e.endArrow(mxConstants.ARROW_DIAMOND_THIN)},this.trash=function(){e.removeCells()},this.paint=function(){e.cellFillColor()},this.border=function(){e.cellStrokeColor()},this.fontExpand=function(){e.font()},this.pen=function(){e.hightLightCi()},this.nopen=function(){e.clearHight()},this.autoLayout=function(){e.toggleAutoLayout()},this.autoLine=function(){e.toggleAutoLine()},this.table=function(){e.showCiTable()},this.sitemap=function(){e.hideCiTable()}},i=angular.module("graphToolbar",[]),o=function(){return function(t){return this.toolbarGroup=[["newFile","folder","save","refresh"],["search","zoomOut","zoomIn"],["orderUp","orderDown","alignExpand"],["undo","redo","trash","link"],["paint","border","shadow"],["fontExpand"],["lineExpand"],["grid","assistLine"],["image","noimage"],["pen","nopen"],["autoLayout","autoLine"],["searchExpand"],["tableExpand"]],this.dropdown={alignExpand:["alignLeft","alignCenter","alignRight","alignTop","alignMiddle","alignBottom","alignDistributeHorizontal","alignDistributeVertical"],lineExpand:[["lineStraight","lineEntityRelation","lineElbowHorizontal","lineElbowVertical","lineSegment","lineOrthogonal"],"-",["startNoarrow","startClassic","startOpen","startBlock","startOval","startDiamond","startThinDiamond","startClassicTrans","startBlockTrans","startOvalTrans","startDiamondTrans","startThinDiamondTrans"],"-",["endNoarrow","endClassic","endOpen","endBlock","endOval","endDiamond","endThinDiamond","endClassicTrans","endBlockTrans","endOvalTrans","endDiamondTrans","endThinDiamondTrans"]],tableExpand:["table","sitemap"]},this.settings=function(t){t&&(t.toolbarGroup&&(this.toolbarGroup=t.toolbarGroup),t.editor&&(this.editor=t.editor,this.action=new n(this.editor)))},this.triggerAction=function(t,e){this.action[t]&&(this.action[t](e.target),this.editor.graph.refresh(),this.refresh())},this.refresh=function(){return this.editor&&this.editor.state?(this.statusMap.autoLayout=this.editor.state.isAutoLayout?null:!0,this.statusMap.autoLine=this.editor.state.isAutoLine?null:!0,this.statusMap.grid=this.editor.state.isShowGrid?null:!0,void(this.statusMap.assistLine=this.editor.state.isAssistLine?null:!0)):!1},this.statusMap={},this.settings(t),this.refresh(),this}};i.factory("GraphToolbar",o),i.controller("DirectiveGraphToolbarCtrl",["$scope","$element","$attrs","$compile","$parse","GraphToolbar","Event","$interval",function(t,n,i,o,a,r,s,l){t.hasOwnProperty("params")||(t.params=new r),this.setupBindingsToInternalScope=function(e){var n=a(e);t.$watch(n,function(e){angular.isUndefined(e)||(t.params=e)},!1)},t.actionTransferClass=function(t){var e,n=t.split("");for(e=0;e<n.length;e++)e&&n[e]===n[e].toUpperCase()&&(n[e]="-"+n[e].toLowerCase());return n.join("")},t.actionTransferLabel=function(t){return e[t]},t.isString=function(t){return angular.isString(t)},t.isArray=function(t){return angular.isArray(t)},t.showPopover=function(t){$(t.currentTarget).popover("show")},t.hidePopover=function(t){$(t.currentTarget).popover("hide")},t.isDisabled=function(e){var n=!1;return t.params.editor?("refresh"!==e||t.params.editor.state.view||(n=!0),t.params.editor.graph.getSelectionCell()||"orderUp"!==e&&"orderDown"!==e&&"alignExpand"!==e&&"fontExpand"!==e&&"trash"!==e&&"link"!==e&&"paint"!==e&&"border"!==e&&"shadow"!==e&&"lineExpand"!==e||(n=!0),t.params.editor.graph.getDepCells().length||"searchExpand"!==e||(n=!0),t.params.editor.action.getCis().length||"tableExpand"!==e&&"pen"!==e&&"nopen"!==e||(n=!0),t.params.editor.undoManager.history.length||"redo"!==e&&"undo"!==e||(n=!0),n):!0},l(function(){t._refresh()},1e3)}]),i.directive("graphToolbar",["$q","$parse",function(){return{restrict:"A",priority:1001,scope:!0,templateUrl:"app/directive/toolbar/toolbar.html",controller:"DirectiveGraphToolbarCtrl",compile:function(){return function(t,e,n,i){i.setupBindingsToInternalScope(n.graphToolbar)}}}}])}(nameSpace.reg("graph")),function(){"use strict";var t=function(t){var e,n=[];for($.each(t,function(){this.children=[]}),e=0;e<t.length;e++){var i=t[e];if(i.parent){if(!i._count||i._count<10){var o,a;for(o=0;o<n.length;o++){var r=n[o];r.id===i.parent&&(angular.isArray(r.children)||(r.children=[]),a=!0,o=n.length,r.children.push(i))}a||(i._count||(i._count=0),i._count++,t.push(i))}}else i.random=Math.random(),n.push(i)}return n},e=angular.module("graphViewtree",[]);e.factory("GraphViewtree",["$rootScope",function(t){return function(e){var n=null;this.options={},this["public"]=!1,this.settings=function(t){var e=this;$.each(t,function(t){e.options[t]=this})},this.getSelectNode=function(){return n},this.setSelectNode=function(t){n=t},this.selectNode=function(t){this.setSelectNode(t),this.options.selectNode&&this.options.selectNode.apply(this,[t])},this.togglePublic=function(t){this["public"]=t},this.isPublic=function(){return this["public"]},this.getNodePath=function(t){return[t]},this.reloadTree=function(){t.reloadTree()},e&&this.settings(e)}}]);var n=function(e,n,i,o,a,r,s,l,c,p,u){e.hasOwnProperty("params")||(e.params=new r),this.setupBindingsToInternalScope=function(t){var n=a(t);e.$watch(n,function(t){angular.isUndefined(t)||(e.params=t)},!1)},e.isCollapsedCreateForm=e.params.options.showForm,e.treeOptions={nodeChildren:"children",dirSelectable:!0,injectClasses:{ul:"a1",li:"a2",liSelected:"a7",iExpanded:"a3",iCollapsed:"a4",iLeaf:"a5",label:"a6",labelSelected:"a8"}},e.treeData=[],e.originalTreeData=[],e.form={cate:{name:"root",id:""}},e.cateParams={open:!1},e.createCate=function(){if(e.form.name){var t={name:e.form.name,parent:e.form.cate.id,open:e.cateParams.open};l.create(t).success(function(){e.reloadTree(),e.form.name=""})}},e.updateCate=function(){if(e.editCate.name){var t={parent:e.editCate.parent.id,id:e.editCate.id,name:e.editCate.name,open:e.editCate.open};l.update(t).success(function(){e.reloadTree()})}},e.reloadTree=function(){var n=function(n){e.treeData.splice(0);var i=t(n.data);$.each(i,function(){e.treeData.push(this)}),e.originalTreeData=n.data,e.editCate&&$.each(e.originalTreeData,function(){this.id===e.editCate.parent.id&&(e.editCate.parent=this)})};e.cateParams.open?l.getPublic().success(n):l.getPrivate().success(n)},e.formatSelect=function(t){var n=[];return n.push(e.form.cate),$.each(t,function(){n.push(this)}),n},e.showSelected=function(t){e.params.selectNode(angular.copy(t)),t.xml?e.editCate=null:(e.editCate=angular.copy(t),e.editCate.show=!0,t.parent?$.each(e.originalTreeData,function(){this.id===t.parent&&(e.editCate.parent=this)}):e.editCate.parent=e.form.cate)},e.showToggle=function(t,n){n&&t.id&&e.params.options.queryView&&c.get({cateId:t.id,all:!1,page:1,pageSize:1e3}).success(function(n){e.appendList(t,n.data.datas)})},e.appendList=function(t,n){if(!n||n.length){var i=function(e){var n,o;for(n=0;n<e.length;n++){if(e[n].id===t.id){o=e[n];break}angular.isArray(e[n].children)&&(o=i(e[n].children))}return o},o=i(e.treeData);if(o){var a=[];angular.isArray(o.children)||(o.children=[]),$.each(o.children,function(){this.xml||a.push(this)}),o.children.splice(0),$.each(a,function(){this.label=this.name,o.children.push(this)}),$.each(n,function(){this.label=this.name,o.children.push(this)})}}},e.deleteNodeById=function(t){var n,i,o;for(n=0;n<e.originalTreeData.length;n++)if(e.originalTreeData[n].id===t){e.originalTreeData.splice(n,1);break}i=function(e){var n;for(n=0;n<e.length;n++){if(e[n].id===t){e.splice(n,1);break}angular.isArray(e[n].children)&&i(e[n].children)}},o=function(t){var e;for(e=0;e<t.length;e++)angular.isArray(t[e].children)&&t[e].children.length&&i(t[e].children)},i(e.treeData),o(e.treeData),e._refresh()},e.deleteCate=function(){e.editCate&&e.editCate.id&&u.confirm("删除分类将会清除该分类下所有的子分类以及视图数据，请确认是否要继续本次操作？",function(t){t&&l.remove(e.editCate.id).success(function(){e.reloadTree()})})},e.$watch("cateParams.open",function(){e.params.togglePublic(e.cateParams.open),e.reloadTree()},!1),e.$on(p.VIEW_DELETE_AFTER,function(t,n){e.deleteNodeById(n.id)})};e.controller("DirectiveGraphViewtreeCtrl",["$scope","$element","$attrs","$compile","$parse","GraphViewtree","CiCateService","ViewCateService","ViewService","Event","Unit",n]),e.directive("graphViewtree",["$q","$parse",function(){return{restrict:"A",priority:1001,scope:!0,templateUrl:"app/directive/viewtree/viewtree.html",controller:"DirectiveGraphViewtreeCtrl",compile:function(){return function(t,e,n,i){i.setupBindingsToInternalScope(n.graphViewtree)}}}}])}(nameSpace.reg("graph")),function(t){var e=function(t,e,n,i,o){t.ok=function(){e.close(),o&&o(t.color)},t.$modal=e,t.title=n,t.color=i?i:"#FFFFFF",t.change=function(t){console.log(t)}};t.app.controller("ModalColorCtrl",["$scope","$modalInstance","title","originalColor","fn",e])}(nameSpace.reg("graph")),function(t){"use strict";t.app.controller("ModalExpandCtrl",["$scope","$modalInstance","CiRelationService","CiCateService","CiService","editor","Unit",function(t,e,n,i,o,a,r){t.ok=function(){var n={},i=a.graph.getSelectionCell();n.dirDepth=t.dep,n.ciRels=[],n.ci=r.getCiIdByCell(i),n.like={},$.each(t.relations,function(){this._checked&&n.ciRels.push(this.id)}),$.each(t.categorys,function(){
n.like[this.category.id]||(n.like[this.category.id]={});var t=n.like[this.category.id];this.attribute?t[this.attribute]=this.like?"*"+this.like+"*":"*":t["*"]=this.like?"*"+this.like+"*":"*"}),o.expand(n).success(function(t){console.log(t),e.close(),$.each(t.data,function(){a.graph.getCellById(Const.CI_PREFIX+this.id)||a.graph.insertVertex(a.graph.getDefaultParent(),Const.CI_PREFIX+this.id,this.name,0,0,Const.GRAPH_DRAG_WIDTH,Const.GRAPH_DRAG_HEIGHT,"image;image="+image)})})},t.$modal=e,t.relations=[],t.categorys=[],t.dep={up:"1",down:"1"},t.add=function(){t.categorys.push({})},t.remove=function(e){t.categorys.splice(e,1)},i.get().success(function(e){t.categorysLib=e.data}),n.getCategory().success(function(e){t.relations=e.data})}])}(nameSpace.reg("graph")),function(t){var e=function(t,e,n){var i=function(){return $("#font-example")},o=n.graph.getSelectionCells();if(t.$modal=e,t.font={},1===o.length){var a=n.graph.getCellStyle(o[0]);console.log(a),a.fontSize&&(t.font.size=a.fontSize),a.fontFamily&&(t.font.family=a.fontFamily),a.fontColor&&(t.font.color=a.fontColor),a.align&&(t.font.alignHorizonal=a.align),a.verticalAlign&&(t.font.alignVertical=a.verticalAlign),5===a.fontStyle&&(t.font.bold=a["true"],t.font.underline=a["true"]),4===a.fontStyle&&(t.font.underline=a["true"]),1===a.fontStyle&&(t.font.bold=a["true"])}t.ok=function(){t.font.family&&n.graph.setCellStyles(mxConstants.STYLE_FONTFAMILY,t.font.family,o),t.font.size&&n.graph.setCellStyles(mxConstants.STYLE_FONTSIZE,t.font.size,o),t.font.color&&n.graph.setCellStyles(mxConstants.STYLE_FONTCOLOR,t.font.color,o),t.font.bold&&n.graph.toggleCellStyleFlags(mxConstants.STYLE_FONTSTYLE,mxConstants.FONT_BOLD),t.font.italic&&n.graph.toggleCellStyleFlags(mxConstants.STYLE_FONTSTYLE,mxConstants.FONT_ITALIC),t.font.underline&&n.graph.toggleCellStyleFlags(mxConstants.STYLE_FONTSTYLE,mxConstants.FONT_UNDERLINE),t.font.alignHorizontal&&n.graph.setCellStyles(mxConstants.STYLE_ALIGN,t.font.alignHorizontal,cell),t.font.alignVertical&&n.graph.setCellStyles(mxConstants.STYLE_VERTICAL_ALIGN,t.font.alignVertical,cell)},t.size=function(){i().css("font-size",t.font.size+"px")},t.changeFamily=function(){i().css("font-family",t.font.family)},t.changeColor=function(){i().css("color",t.font.color)},t.$watch("font.bold",function(t){t?i().css("font-weight","bold"):i().css("font-weight","normal")},!1),t.$watch("font.italic",function(t){t?i().css("font-style","italic"):i().css("font-style","normal")},!1),t.$watch("font.underline",function(t){t?i().css("text-decoration","underline"):i().css("text-decoration","none")},!1)};e.$inject=["$scope","$modalInstance","editor"],t.app.controller("ModalFontCtrl",e)}(nameSpace.reg("graph")),function(t){"use strict";t.app.controller("ModalImageCtrl",["$scope","$modalInstance","ImageService","Unit","fn",function(t,e,n,i,o){t.ok=function(){e.close(),o&&o(t.selectItem)},t.selectItem=null,t.$modal=e,t.image="",t.file=null,t.selectFile=function(e){if(e.length>=1){t.file=e[0];var n=new FileReader;n.readAsDataURL(e[0]),n.onload=function(){t.image=this.result,t._refresh()}}},t.upload=function(){t.file?n.uploadBackground(t.file).success(function(){t.image=null,t.startUpload=!1,t.refresh()}):t.startUpload=!0},t.page=1,t.pageSize=10,t.total=0,t.staticUrl=i["static"],t.click=function(e){t.selectItem=e},t.remove=function(e){n.removeBackground(i.basename(e.url)).success(function(n){console.log(n),t.refresh(),e.url===t.selectItem.url&&(t.selectItem=null)})},t.refresh=function(){n.getBackgound({page:t.page,pageSize:t.pageSize}).success(function(e){t.total=e.data.count,t.images=e.data.datas})},t.refresh()}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.controller("ModalNumberCtrl",["$scope","$modalInstance","title","defaultValue","minValue","maxValue","fn",function(t,e,n,i,o,a,r){t.ok=function(){e.close(),r&&r(t.number)},t.$modal=e,t.title=n,t.number=i?i:0,t.maxValue=a?a:100,t.minValue=o?o:0,t._refresh()}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.controller("ModalRelationViewOpenCtrl",["$scope","$modalInstance","ViewService","Unit","editor",function(t,e,n,i,o){var a=o.graph.getSelectionCell();t.ok=function(){e.close(),t.data.selected&&(o.history.push(o.state.view),o.action.openView(t.data.selected))},t.$modal=e,t.staticUrl=i["static"],t.data={},t.views=[],n["private"]().success(function(e){var n=o.graph.getCellAttr(a,"view");n&&$.each(n.split("$"),function(){var n;for(n=0;n<e.data.length;n++)e.data[n].id===this&&t.views.push(e.data[n])})})}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.controller("ModalRelationViewSetCtrl",["$scope","$modalInstance","ViewService","Unit","editor",function(t,e,n,i,o){var a=o.graph.getSelectionCell();t.ok=function(){if(e.close(),t.checked.length){var n=[];$.each(t.checked,function(){n.push(this.id)}),o.graph.setCellAttr(a,"view",n.join("$"))}},t.$modal=e,t.staticUrl=i["static"],t.checked=[],t.refresh=function(){t.checked=[],$.each(t.views,function(){this._checked&&t.checked.push(this)})},n["private"]().success(function(e){if(t.views=e.data,a){var n=o.graph.getCellAttr(a,"view");n&&$.each(n.split("$"),function(){var e;for(e=0;e<t.views.length;e++)t.views[e].id===this&&(t.views[e]._checked=!0,t.checked.push(t.views[e]))})}})}])}(nameSpace.reg("graph")),function(t){var e=function(t,e,n,i){t.$modal=e,t.cancel=function(){e.close()},t.ok=function(){t.view.xml&&(n(t.view),e.close())},t.viewtreeParams=new i({allowEdit:!1,queryView:!0,showForm:!1,selectNode:function(e){t.view=e}})};e.$inject=["$scope","$modalInstance","fn","GraphViewtree"],t.app.controller("ModalViewOpenCtrl",e)}(nameSpace.reg("graph")),function(t){var e=function(t,e,n,i,o,a,r){t.view={name:"",categoryId:"",description:"",pos:""},t.title="保存视图",t.$modal=e,t.cancel=function(){e.close()},t.ok=function(){var i=t.viewtreeParams.getSelectNode();if(i&&t.view.name){var s=n.graph.getJson(),l=[];$.each(s.nodes,function(){this.img&&l.push(this.img)}),r.svgToMesh(l).success(function(r){$.each(s.nodes,function(){this.mesh={mtl:a["static"](r.data[this.img].mtl),obj:a["static"](r.data[this.img].obj)}});var l=n.graph.getSvg(),c={categoryId:i.id,name:t.view.name,description:t.view.description,cis:n.action.getCisId(),points:JSON.stringify(s),svg:angular.isObject(l)?l.outerHTML:l,xml:n.action.getXml()};o.create(c).success(function(t){n.state.setView(t.data),e.close()})})}else a.alert("错误：未填写视图名称或者未选择保存视图的位置")},t.viewtreeParams=new i({allowEdit:!0,selectNode:function(e){var n=this.getNodePath(e),i=[];$.each(n,function(){i.push(this.name)}),t.view.pos=i.join(this.isPublic()?" -> ":" -> "),t._refresh()}})};e.$inject=["$scope","$modalInstance","editor","GraphViewtree","ViewService","Unit","MeshService"],t.app.controller("ModalViewSaveCtrl",e)}(nameSpace.reg("graph")),function(t){var e=function(t,e,n,i,o,a,r){t.view={name:n.state.view.name,description:n.state.view.description,categoryId:n.state.view.categoryId,pos:""},t.title="更新视图",t.$modal=e,t.cancel=function(){e.close()},t.ok=function(){if(t.view.categoryId&&t.view.name){var i=n.graph.getJson(),s=[];$.each(i.nodes,function(){this.img&&s.push(this.img)}),r.svgToMesh(s).success(function(r){$.each(i.nodes,function(){this.mesh={mtl:a["static"](r.data[this.img].mtl),obj:a["static"](r.data[this.img].obj)}});var s=n.graph.getSvg(),l={categoryId:t.view.categoryId,name:t.view.name,description:t.view.description,cis:n.action.getCisId(),points:JSON.stringify(i),svg:angular.isObject(s)?s.outerHTML:s,xml:n.action.getXml(),id:n.state.view.id};o.update(l).success(function(){e.close()})})}else a.alert("错误：未填写视图名称或者未选择保存视图的位置")},t.pos=function(e){var n=t.viewtreeParams.getNodePath(e),i=[];$.each(n,function(){i.push(this.name)}),t.view.pos=i.join(t.viewtreeParams.isPublic()?" -> ":" -> "),t._refresh()},t.viewtreeParams=new i({allowEdit:!0,selectNode:function(e){t.view.categoryId=e.id,t.pos(e)}}),t.pos({name:n.state.view.categoryName,id:n.state.view.category})};e.$inject=["$scope","$modalInstance","editor","GraphViewtree","ViewService","Unit","MeshService"],t.app.controller("ModalViewUpdateCtrl",e)}(nameSpace.reg("graph")),function(t,e){t.app.controller("LoginCtrl",["$scope","$cookies","AuthService","$state",function(t,e,n,i){t.online=!0,$(".loadingbar").remove();var o=e.get("token");void 0!==o&&""!==o&&(t.online=!1,t.user="admini"),t.login=function(){n.login({username:t.userName,password:t.password}).success(function(n){var o=n.data;if(t.rememberMe){var a=new Date;a.setYear(a.getYear()+1),e.put("token",o.token,{expires:a})}else e.put("token",o.token);i.go("home.edit")})},t.into=function(){i.go("home.edit")},t["switch"]=function(){t.online=!0},t.$watch("online",function(){t.online})}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(t){"use strict";var e=t.stateUrl;t.app.config(["$stateProvider",function(t){t.state("login",{url:"/login",templateUrl:e("/login/login.html"),controller:"LoginCtrl",data:{title:""}})}])}(nameSpace.reg("graph")),function(t){"use strict";t.app.controller("MainCtrl",["$scope",function(t){t.LAYOUT={},t.LAYOUT.collapsedMainLeft=!1,t.LAYOUT.collapsedSidebar=!1,t.keyword="",t.search=function(){t.keyword&&t.$state.go("home.search.result",{keyword:t.keyword})}}])}(nameSpace.reg("graph")),function(t,e){e.isInit={},e.initCate=function(){var n=$("#category_icon");n.find(".drag-box-item").each(function(){e.sidebar.addImagePalette(this,$(this).attr("data-name"),$(this).attr("data-icon"),t.DEFINE_CATE.DRAG_WIDTH,t.DEFINE_CATE.DRAG_HEIGHT,t.DEFINE_CATE.DRAG_WIDTH,t.DEFINE_CATE.DRAG_HEIGHT)})},e.initOwnIcon=function(){var n=$("#own_icon");n.find(".drag-box-item").each(function(){e.sidebar.addImagePalette(this,$(this).attr("data-name"),$(this).attr("data-icon"),t.DEFINE_CATE.DRAG_WIDTH,t.DEFINE_CATE.DRAG_HEIGHT,t.DEFINE_CATE.DRAG_WIDTH,t.DEFINE_CATE.DRAG_HEIGHT)})},e.initBaseIcon=function(){var t=document.querySelector("#base_icon");e.sidebar.addGeneralPalette(t,"swimlane",200,200,"Container"),e.sidebar.addGeneralPalette(t,"swimlane;horizontal=0",200,200,"Pool"),e.sidebar.addGeneralPalette(t,"text",40,26,"Text"),e.sidebar.addGeneralPalette(t,null,120,60),e.sidebar.addGeneralPalette(t,"rounded=1",120,60),e.sidebar.addGeneralPalette(t,"ellipse",80,80),e.sidebar.addGeneralPalette(t,"ellipse;shape=doubleEllipse",80,80),e.sidebar.addGeneralPalette(t,"triangle",60,80),e.sidebar.addGeneralPalette(t,"rhombus",80,80),e.sidebar.addGeneralPalette(t,"shape=hexagon",120,80),e.sidebar.addGeneralPalette(t,"shape=actor;verticalLabelPosition=bottom;verticalAlign=top",40,60),e.sidebar.addGeneralPalette(t,"ellipse;shape=cloud",120,80),e.sidebar.addGeneralPalette(t,"shape=cylinder",60,80),e.sidebar.addGeneralPalette(t,"line",160,10),e.sidebar.addGeneralPalette(t,"line;direction=south",10,160),e.sidebar.addGeneralPalette(t,"shape=xor",60,80),e.sidebar.addGeneralPalette(t,"shape=or",60,80),e.sidebar.addGeneralPalette(t,"shape=step",120,80),e.sidebar.addGeneralPalette(t,"shape=tape",120,100),e.sidebar.addGeneralPalette(t,"shape=cube",120,80),e.sidebar.addGeneralPalette(t,"shape=note",80,100),e.sidebar.addGeneralPalette(t,"shape=folder",120,120),e.sidebar.addGeneralPalette(t,"shape=card",60,80),e.sidebar.addGeneralPalette(t,"shape=plus",20,20),e.sidebar.createEdgeTemplate(t,"edgeStyle=none;endArrow=none;",100,100),e.sidebar.createEdgeTemplate(t,"edgeStyle=none",100,100),e.sidebar.createEdgeTemplate(t,"edgeStyle=elbowEdgeStyle;elbow=horizontal",100,100),e.sidebar.createEdgeTemplate(t,"edgeStyle=elbowEdgeStyle;elbow=vertical",100,100),e.sidebar.createEdgeTemplate(t,"edgeStyle=segmentEdgeStyle",100,100),e.sidebar.createEdgeTemplate(t,"arrow",100,100)},e.format=function(t){var e,n=[];for(e=0;e<t.length;e++){var i={items:[]},o=t[e];if(o.parent){var a,r,s=!1;for(a=0;a<n.length;a++)for(r=0;r<n[a].items.length;r++)if(n[a].items[r].id===o.parent){n[a].items.push(o),s=!0;break}s||o._count&&!(o._count<=3)||(o._count||(o._count=0),o._count++,t.push(o))}else i.items.push(o),i.label=o.name,n.push(i)}return n};var n=function(t,n,i,o,a,r,s,l,c,p,u,h,d,g,f,m,v,E){t.isSearch=!1,t.cates=[],t.config={},t.selectCates=[],t.initCate=e.initCate,t.checkboxes={checked:!1,items:{}},t.icon={page:1,pageSize:30,total:0},t.icons=[],t.initBaseIcon=function(){e.isInit.baseIcon||(e.isInit.baseIcon=!0,n(e.initBaseIcon,100))},t.initOwnIcon=function(){e.isInit.ownIcon||(e.isInit.ownIcon=!0,t.reloadIcon())},t.reloadIcon=function(){u.get(t.icon).success(function(i){t.icon.total=i.data.count,t.icons=i.data.datas,n(e.initOwnIcon,100)})},t.initConfig=function(){e.isInit.config||i.get().success(function(e){t.selectCates=e.data,t._refresh()})},t.configSearch=function(){t.config.cate&&(t.isSearch=!0,t.tableParams.page(1),t.tableParams.reload())},t.uploadIcon=function(i){if(i&&i.length){var o=i[0];t.showProgressbar=!0,e.progressPromise&&n.cancel(e.progressPromise),u.upload(o).progress(function(e){t.iconUploaProgressPercentage=parseInt(100*e.loaded/e.total)}).success(function(){t.reloadIcon(),t.hideProgressbar()}).error(function(){t.hideProgressbar()})}},t.hideProgressbar=function(){e.progressPromise=n(function(){t.showProgressbar=!1},3e3)},t.preStatic=function(t){return h["static"](t)},t.$on("$viewContentLoaded",function(){e.editor=new a(document.querySelector("#graph"),document.querySelector("#graph-outline")),t.graphTableParams=new m(e.editor),new r(e.editor,{vertex:[v.MENU_CELL_COPY,v.MENU_CELL_CUT,v.MENU_CELL_DELETE,"-",v.MENU_STYLE,[v.MENU_FONT_STYLE,v.MENU_STROKE_WIDTH,v.MENU_OPACITY],"-",v.MENU_EXPAND_NODE,v.MENU_OPEN_URL,v.MENU_VIEW_RELATION,[v.MENU_VIEW_RELATION_SET,v.MENU_VIEW_RELATION_OPEN]],edge:[v.MENU_CELL_COPY,v.MENU_CELL_CUT,v.MENU_CELL_DELETE,"-",v.MENU_STYLE,[v.MENU_FONT_STYLE,v.MENU_STROKE_WIDTH,v.MENU_OPACITY]],canvas:[v.MENU_VIEW_NEW,v.MENU_VIEW_OPEN,v.MENU_VIEW_SAVE,v.MENU_VIEW_UPDATE,"-",v.MENU_EXPORT,[v.MENU_EXPORT_PNG,v.MENU_EXPORT_PDF,v.MENU_EXPORT_SVG,v.MENU_EXPORT_XML],"-",v.MENU_GRAPH_CLEAR,v.MENU_CELL_PASTE,"-",v.MENU_LAYOUT,[v.MENU_LAYOUT_HORIZONTAL,v.MENU_LAYOUT_VERTICAL,v.MENU_LAYOUT_ORGANIC,v.MENU_LAYOUT_CIRCLE,v.MENU_LAYOUT_STACK_HORIZONTAL,v.MENU_LAYOUT_STACK_VERTICAL],"-",v.MENU_ZOOM,[v.MENU_ZOOM_IN,v.MENU_ZOOM_OUT,v.MENU_ZOOM_CENTER,v.MENU_ZOOM_ACTUAL],"-",v.MENU_VIEW_RELATION_BACK],libs:f}),t.toolbarParams=new o({editor:e.editor}),e.editor.toolbar=t.toolbarParams,n(function(){e.sidebar=new Sidebar(e.editor,document.querySelector("#category_icon")),e.editor.graph.keyHandler.handler.enabled=!0}),t.infoParams=new g(e.editor),t.$state.params.id&&d.getView(t.$state.params.id).success(function(t){e.editor.action.openView(t.data)})}),t.tableParams=new c({page:1,count:10},{total:0,counts:[],getData:function(i,o){var a={},r={};t.config.cate?(t.config.attr?r[t.config.attr.name]=t.config.like?"*"+t.config.like+"*":"*":r["*"]=t.config.like?"*"+t.config.like+"*":"*",a.categoryId=t.config.cate.id,a.page=o.page(),a.pageSize=o.count(),a.like=r,l.get(a).success(function(t){e.ciData=t.data.datas,i.resolve(e.ciData),o.total(t.data.count),n(function(){new p({editor:e.editor,$table:$("#config-table"),ciData:e.ciData})})})):(i.resolve([]),o.total(0))}}),t.$watch("checkboxes.checked",function(n){angular.forEach(e.ciData,function(e){angular.isDefined(e.id)&&(t.checkboxes.items[e.id]=n)})}),t.showPopover=function(t){var e=t.target;e.offsetWidth<e.scrollWidth&&$(e).popover("show")},t.hidePopover=function(t){$(t.target).popover("hide")},t.openXml=function(t){if(t.length){var n=new FileReader;n.readAsText(t[0]),n.onload=function(t){e.editor.action.create(),e.editor.action.openXml(t.target.result)}}},i.get().success(function(n){h.formatCategoryData(n.data),t.cates=e.format(n.data),t._refresh()}),t.$on(E.GRAPH_CANVAS_CLICK,function(e,n){n.editor.state.view?t.infoParams.update("view",n.editor.state.view):t.infoParams.hide()})};n.$inject=["$scope","$timeout","CiCateService","GraphToolbar","Editor","GraphContextMenu","$modal","CiService","ngTableParams","DataDraw","IconService","Unit","ViewService","GraphInfo","ContextLibs","GraphTable","Const","Event"],t.app.controller("MainEditCtrl",n)}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(t){"use strict";var e=t.stateUrl;t.app.config(["$stateProvider",function(t){t.state("home.edit",{url:"edit",templateUrl:e("/main/edit/edit.html"),controller:"MainEditCtrl",data:{title:""}}).state("home.edit.view",{url:"/:id",templateUrl:e("/main/edit/edit.html"),controller:"MainEditCtrl",data:{title:""}})}])}(nameSpace.reg("graph")),function(t,e){"use strict";t.app.controller("MainGroupCtrl",["$scope","$state","Unit","GroupService",function(t,e,n,i){t.groupItemArray=[],t.groupImgBox=[],t.setNum={},t.colorBox={},t.group={},t.group.content={},t.group.content.viewDescription="",t.group.content.d2setting={},t.group.content.d3setting={},t.group.content.d2setting.views=[],t.group.content.d3setting.rows=3,t.group.content.d3setting.cols=3,t.group.content.d3setting.layerMargin=200,t.group.content.d3setting.layerItemMargin=10,t.group.content.d2setting.toolbarSize=130,t.group.content.d2setting.outLineSize=90,t.group.content.d2setting.layout="top",t.group.content.d2setting.maxCount=4,t.group.content.d2setting.toolbarBgColor="#C0C0C0",t.group.content.d2setting.btnColor="#616161";t.allowDrop=function(t){t.stopPropagation(),t.preventDefault()},t.drag=function(e){void 0!==$(e.target).parents(".group-box-item-box").data("index")&&(t.bgColor=t.group.content.d3setting.layers[$(e.target).parents(".group-box-item-box").data("index")][$(e.target).parents(".group-box-item-box").data("col")].floorBgColor,t.transform=t.group.content.d3setting.layers[$(e.target).parents(".group-box-item-box").data("index")][$(e.target).parents(".group-box-item-box").data("col")].isVertical,t.group.content.d3setting.layers[$(e.target).parents(".group-box-item-box").data("index")][$(e.target).parents(".group-box-item-box").data("col")]=null),e.dataTransfer.setData("Text",e.target.id)},t.drop=function(e){e.stopPropagation(),e.preventDefault();var n=e.dataTransfer.getData("Text"),i=$("#"+n),o=i.parent().attr("id");if(void 0!==$(e.target).parents(".group-box-item-box").data("index")){t.group.content.d3setting.layers[$(e.target).parents(".group-box-item-box").data("index")][$(e.target).parents(".group-box-item-box").data("col")]={};var a=t.group.content.d3setting.layers[$(e.target).parents(".group-box-item-box").data("index")][$(e.target).parents(".group-box-item-box").data("col")]}else{t.group.content.d3setting.layers[$(e.target).data("index")][$(e.target).data("col")]={};var a=t.group.content.d3setting.layers[$(e.target).data("index")][$(e.target).data("col")]}if(o&&-1!==o.indexOf("group"))a.viewid=i.attr("id"),a.viewTitle=i.attr("data-content"),a.viewText=i.attr("data-text");else{var r=i.clone(!0);r.attr("title",i.attr("id")),t.group.content.d2setting.views.push(r.attr("title")),a.viewid=r.attr("title"),a.viewTitle=r.attr("data-title"),a.viewText=r.attr("data-text"),t.colorBox.bgColor=void 0,t.bgColor="#f5f5f5"}a.src=i.attr("src"),a.floorBgColor=t.bgColor?t.bgColor:"#f5f5f5",a.isVertical=void 0!==t.transform?t.transform:!1,t.groupImgBox=angular.copy(t.group.content.d3setting.layers),t.setBgColor(a,e)},t.translate=function(t){return t+"px"},t.formatToPercentage=function(t){return t+"%"},t.formatToN=function(t){return t+"N"},t.hasImg=function(t){$(t.target).parents(".group-box-item").find(".group-box-item-operateBtn").css($(t.target).parents(".group-box-item").find("img").attr("id")?{display:"block"}:{display:"none"})},t.hasImgOut=function(t){$(t.target).parents(".group-box-item").find(".group-box-item-operateBtn").css({display:"none"})},t.setView=function(e,n){t.setD=e.isVertical?!0:!1,t.setD=!t.setD,t.setD?($(n.target).parents(".group-box-item").find("img").css({transform:"skew(0deg)",width:"90%",height:"90%"}),e.isVertical=!0):($(n.target).parents(".group-box-item").find("img").css({transform:"skew(45deg)",width:"60%",height:"40%"}),e.isVertical=!1)},t.setBgColor=function(e,n){setTimeout(function(){$(n.target).parents(".group-box-item").find("img")&&$(n.target).parents(".group-box-item").find("img").attr("id")?(t.setConfig=!0,$(".group-box-item-box").each(function(){$(this).css("boxShadow","2px 2px 2px #eee")}),"group-box-item-box"===$(n.target).attr("class")?$(n.target).css("boxShadow","0 0 3px #047FF5"):$(n.target).parents(".group-box-item-box").css("boxShadow","0 0 3px #047FF5")):(t.setConfig=!1,$(".group-box-item-box").each(function(){$(this).css("boxShadow","2px 2px 2px #eee")})),t.$apply()},10),t.viewContent={viewTitle:e.viewTitle,viewText:e.viewText},t.delViewBtn=function(){"group-box-item-box"===$(n.target).attr("class")?($(n.target).css("boxShadow","2px 2px 2px #eee"),t.del2dView(t.group.content.d3setting.layers[$(n.target).data("index")][$(n.target).data("col")]),t.group.content.d3setting.layers[$(n.target).data("index")][$(n.target).data("col")]={}):($(n.target).parents(".group-box-item-box").css("boxShadow","2px 2px 2px #eee"),t.del2dView(t.group.content.d3setting.layers[$(n.target).parents(".group-box-item-box").data("index")][$(n.target).parents(".group-box-item-box").data("col")]),t.group.content.d3setting.layers[$(n.target).parents(".group-box-item-box").data("index")][$(n.target).parents(".group-box-item-box").data("col")]={}),t.setConfig=!1},t.del2dView=function(e){for(e=0;e<t.group.content.d2setting.views.length;e++)if(t.group.content.d2setting.views.length[e]===e.viewid){t.group.content.d2setting.views.splice(e,1);break}},t.recoverColor=function(){t.colorBox.bgColor="#f5f5f5",e.floorBgColor=t.colorBox.bgColor},t.setBg=function(){$(n.target).hasClass("group-box-item-out")?$(n.target).css({backgroundColor:t.colorBox.bgColor}):$(n.target).parents(".group-box-item-out").css({backgroundColor:t.colorBox.bgColor}),e.floorBgColor=t.colorBox.bgColor}},t.delView=function(e,n){t.del2dView(e),t.group.content.d3setting.layers[$(n.target).parents(".group-box-item-box").data("index")][$(n.target).parents(".group-box-item-box").data("col")]={}},t.saveView=function(){if(t.group.views=angular.copy(t.group.content.d2setting.views),void 0===t.group.name||""===t.group.name||""===t.group.content.viewDescription)return void n.error("请填写名称或描述");var o=JSON.stringify(t.group),a={views:t.group.views,name:t.group.name,content:o};i.save(a).success(function(){n.success("保存成功"),e.go("home.group.list.private")})},t.goList=function(){e.go("home.group.list.private")}}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(t){"use strict";var e=t.stateUrl;t.app.config(["$stateProvider",function(t){t.state("home.group",{url:"group",templateUrl:e("/main/group/group.html"),controller:"MainGroupCtrl"}).state("home.group.create",{url:"/create",templateUrl:e("/main/group/create/create.html"),controller:"MainGroupCreateCtrl"}).state("home.group.edit",{url:"/edit/:id",templateUrl:e("/main/group/create/create.html"),controller:"MainGroupEditCtrl"}).state("home.group.list",{url:"/list",templateUrl:e("/main/group/list/list.html"),controller:"MainGroupListCtrl as listCtrl"}).state("home.group.list.private",{url:"/private",templateUrl:e("/main/group/list/private/private.html"),controller:"PrivateViewCtrl"}).state("home.group.list.private.get",{url:"/2d/:id",views:{ViewContent:{controller:"GetViewCtrl"}}}).state("home.group.list.private.get3d",{url:"/3d/:id",views:{ViewContent3D:{controller:"Get3DViewCtrl"}}}).state("home.group.list.public",{url:"/public",templateUrl:e("/main/group/list/public/list/public.list.html"),controller:"PublicListViewCtrl"}).state("home.group.list.user",{url:"/public/user/:userName",templateUrl:e("/main/group/list/public/user/public.user.html"),controller:"PublicUserViewCtrl"}).state("home.group.list.user.get",{url:"/2d/:id",views:{ViewContent:{controller:"GetViewCtrl"}}}).state("home.group.list.user.get3d",{url:"/3d/:id",views:{ViewContent3D:{controller:"Get3DViewCtrl"}}})}])}(nameSpace.reg("graph")),function(t,e){"use strict";t.app.controller("MainMonitorCtrl",["$scope","GraphViewtree","ViewService","Editor","GraphContextMenu","GraphInfo","Event",function(t,n,i,o,a,r,s){t.$on("$viewContentLoaded",function(){e.editor=new o(document.querySelector("#graph-monitor")),e.editor.action.disabled(),t.infoParams=new r(e.editor),t.$state.params.id&&i.getView(t.$state.params.id).success(function(n){t.infoParams.update("view",n.data),t.LAYOUT.collapsedSidebar=!0,e.editor.action.openView(n.data),e.editor.action.monitor()})}),t.viewtreeParams=new n({queryView:!0,allowShowPubview:!0,selectNode:function(n){n.xml&&(t.infoParams.update("view",n),e.editor.action.openView(n),e.editor.action.monitor())}}),t.$on(s.GRAPH_CANVAS_CLICK,function(e,n){n.editor.state.view?t.infoParams.update("view",n.editor.state.view):t.infoParams.hide()})}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(t){"use strict";var e=t.stateUrl;t.app.config(["$stateProvider",function(t){t.state("home.monitor",{url:"monitor",templateUrl:e("/main/monitor/monitor.html"),controller:"MainMonitorCtrl"}).state("home.monitor.id",{url:"/:id",templateUrl:e("/main/monitor/monitor.html"),controller:"MainMonitorCtrl"})}])}(nameSpace.reg("graph")),function(t,e){t.app.controller("MainSearchCtrl",["$scope","$timeout",function(t,e){}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(t){"use strict";var e=t.stateUrl;t.app.config(["$stateProvider",function(t){t.state("home.search",{url:"search",templateUrl:e("/main/search/search.html"),controller:"MainSearchCtrl"}).state("home.search.home",{url:"/home",templateUrl:e("/main/search/home/home.html"),controller:"MainSearchHomeCtrl"}).state("home.search.result",{url:"/:keyword",templateUrl:e("/main/search/result/result.html"),controller:"MainSearchResultCtrl"})}])}(nameSpace.reg("graph")),function(t){"use strict";var e=t.stateUrl;t.app.config(["$stateProvider",function(t){t.state("home.view",{url:"view",templateUrl:e("/main/view/view.html"),controller:"MainViewCtrl"})}])}(nameSpace.reg("graph")),function(t,e){"use strict";t.app.controller("MainViewCtrl",["$scope","GraphViewtree","ViewService","Editor","GraphContextMenu","GraphToolbar","GraphInfo","Event","Unit","Const","ContextLibs",function(t,n,i,o,a,r,s,l,c,p,u){t.graphId="graph-view",t.$on("$viewContentLoaded",function(){e.editor=new o(document.querySelector("#graph-view")),new a(e.editor,{vertex:[p.MENU_CELL_COPY,p.MENU_CELL_CUT,p.MENU_CELL_DELETE,"-",p.MENU_STYLE,[p.MENU_FONT_STYLE,p.MENU_STROKE_WIDTH,p.MENU_OPACITY],"-",p.MENU_EXPAND_NODE,p.MENU_OPEN_URL,p.MENU_VIEW_RELATION,[p.MENU_VIEW_RELATION_SET,p.MENU_VIEW_RELATION_OPEN]],edge:[p.MENU_CELL_COPY,p.MENU_CELL_CUT,p.MENU_CELL_DELETE,"-",p.MENU_STYLE,[p.MENU_FONT_STYLE,p.MENU_STROKE_WIDTH,p.MENU_OPACITY]],canvas:[p.MENU_VIEW_NEW,p.MENU_VIEW_OPEN,p.MENU_VIEW_SAVE,p.MENU_VIEW_UPDATE,"-",p.MENU_EXPORT,[p.MENU_EXPORT_PNG,p.MENU_EXPORT_PDF,p.MENU_EXPORT_SVG,p.MENU_EXPORT_XML],"-",p.MENU_GRAPH_CLEAR,p.MENU_CELL_PASTE,"-",p.MENU_LAYOUT,[p.MENU_LAYOUT_HORIZONTAL,p.MENU_LAYOUT_VERTICAL,p.MENU_LAYOUT_ORGANIC,p.MENU_LAYOUT_CIRCLE,p.MENU_LAYOUT_STACK_HORIZONTAL,p.MENU_LAYOUT_STACK_VERTICAL],"-",p.MENU_ZOOM,[p.MENU_ZOOM_IN,p.MENU_ZOOM_OUT,p.MENU_ZOOM_CENTER,p.MENU_ZOOM_ACTUAL],"-",p.MENU_VIEW_RELATION_BACK],libs:u}),t.toolbarParams=new r({editor:e.editor}),t.infoParams=new s(e.editor)}),t.viewtreeParams=new n({queryView:!0,showForm:!0,allowEdit:!0,allowShowPubview:!0,selectNode:function(n){t.infoParams.update("view",n),n.xml&&e.editor.action.openView(n)}}),t.$on(l.GRAPH_CANVAS_CLICK,function(e,n){n.editor.state.view?t.infoParams.update("view",n.editor.state.view):t.infoParams.hide()}),t.$on(l.VIEW_DELETE_BEFORE,function(n,o){c.confirm("删除后无法恢复，请确认是否要继续？",function(n){i.remove(o.id).success(function(){e.editor.action.clear(),t.$broadcast(l.VIEW_DELETE_AFTER,c.eventData(o)),t.infoParams.hide()})})}),t.$on(l.VIEW_UPDATE_BEFORE,function(){e.editor.action.update()})}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(t,e){"use strict";t.app.controller("MainGroupCreateCtrl",["$scope","ViewService","Unit",function(t,e,n){var i,o;t["static"]=n["static"],t.views=[],t.filter="",t.row=3,t.col=3,t.basicSet={},t.twoDSet={},t.threeDSet={},t.$parent.setConfig=!1,t.$parent.groupItemArray=[],t.$parent.groupImgBox=[],t.$parent.setNum={},t.$parent.colorBox={},t.$parent.group={},t.$parent.group.content={},t.$parent.group.content.viewDescription="",t.$parent.group.content.d2setting={},t.$parent.group.content.d3setting={},t.$parent.group.content.d2setting.views=[],t.$parent.group.content.d3setting.rows=3,t.$parent.group.content.d3setting.cols=3,t.$parent.group.content.d3setting.layerMargin=200,t.$parent.group.content.d3setting.layerItemMargin=10,t.$parent.group.content.d2setting.toolbarSize=130,t.$parent.group.content.d2setting.outLineSize=90,t.$parent.group.content.d2setting.layout="top",t.$parent.group.content.d2setting.maxCount=4,t.$parent.group.content.d2setting.toolbarBgColor="#C0C0C0",t.$parent.group.content.d2setting.btnColor="#616161",t.$watchGroup(["group.content.d3setting.rows","group.content.d3setting.cols"],function(e){for(t.group.content.d3setting.layers=[],i=0;i<e[0];i++){var n=[];for(o=0;o<e[1];o++)n[o]=0!==t.groupImgBox.length&&null!==t.groupImgBox[i][o]?t.groupImgBox[i][o]:null;t.group.content.d3setting.layers.push(n)}var a=e[0]*e[1];for(t.groupItemArray=[],i=0;a>i;i++)t.groupItemArray.push({});t.width=100/e[1]+"%",t.height=$(".main-box-content-panel-container-body").width()*Number(100/e[1])/100*1/2}),e["private"]().success(function(e){t.views=e.data}),t.refresh=function(){e["private"]().success(function(e){t.views=e.data})}}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(t,e){"use strict";t.app.controller("MainGroupEditCtrl",["$scope","$state","ViewService","GroupService","Unit",function(t,e,n,i,o){var a,r,s=e.params.id;t["static"]=o["static"],t.views=[],t.filter="",t.row=3,t.col=3;var l=[];n["private"]().success(function(e){t.views=e.data,console.log(e)}),i.get(s).success(function(e){var n=$.parseJSON(e.data.content);t.$parent.group=n,l=angular.copy(t.$parent.group.content.d3setting.layers),t.$watchGroup(["group.content.d3setting.rows","group.content.d3setting.cols"],function(e){for(t.$parent.group.content.d3setting.layers=[],a=0;a<e[0];a++){var n=[];for(r=0;r<e[1];r++)n[r]=null!==l[a][r]?l[a][r]:null;t.$parent.group.content.d3setting.layers.push(n)}var i=e[0]*e[1];for(t.$parent.groupItemArray=[],a=0;i>a;a++)t.$parent.groupItemArray.push({});t.width=100/e[1]+"%",t.height=$(".main-box-content-panel-container-body").width()*Number(100/e[1])/100*1/2})}),t.updateView=function(){if(t.$parent.group.views=angular.copy(t.$parent.group.content.d2setting.views),void 0===t.$parent.group.name||""===t.$parent.group.name||""===t.$parent.group.content.viewDescription)return void o.error("请填写名称或描述");var n=JSON.stringify(t.$parent.group),a={views:t.$parent.group.views,id:e.params.id,name:t.$parent.group.name,content:n};i.update(a).success(function(){o.success("更新成功"),e.go("home.group.list")})},t.saveAsView=function(){o.prompt("请输入视图名称",function(n){if(t.$parent.group.name=n,t.$parent.group.views=angular.copy(t.$parent.group.content.d2setting.views),void 0===t.$parent.group.name||""===t.$parent.group.name||""===t.$parent.group.content.viewDescription)return void o.error("请填写名称或描述");var a=JSON.stringify(t.$parent.group),r={views:t.$parent.group.views,name:t.$parent.group.name,content:a};i.save(r).success(function(t){o.success("保存成功"),e.go("home.group.edit",{id:t.data.id})})},"视图名称")}}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(t,e){"use strict";t.app.controller("MainGroupListCtrl",["$scope","$state","GroupService","ViewService","Unit","Outline","$timeout",function(t,e,n,i,o,a,r){t.isExpand=!1,t.isFull=!1,t.popoverPlacement="top",t.$watch("filter",function(){""==t.filter&&t.isPublic&&(t.publicViewsShow=t.publicViews.slice(0,t.pageSize),t.currentPage=1)},!1),t.switchView=function(){t.hideOperation=!0,e.go(t.isPublic?"home.group.list.public":"home.group.list.private")},t.deleteView=function(){o.confirm("确认删除视图？",function(){n.deleteById(t.view.id).success(function(e){t.views.splice(t.currentIndex,1),t.hideOperation=!0}),$(".main-box-content-panel-container-body").html("")})},t.createView=function(){e.go("home.group.create");

},t.showPopover=function(t){var e=t.currentTarget;e.className.indexOf("group-public-view-list-div")>-1?$(e).children(".group-public-view-list-user")[0].scrollWidth>$(e).children(".group-public-view-list-user")[0].offsetWidth&&$(e).popover("show"):$(e)[0].scrollWidth>$(e)[0].offsetWidth&&$(e).popover("show")},t.hidePopover=function(t){$(t.currentTarget).popover("hide")},t.expandView=function(){t.isExpand=!0;var e=$(".main-box-content-panel-container"),n=$(".main-box-content-heading");n.css("position","fixed").css("top",0).css("left",0).css("width","100%").css("z-index",11),e.css("position","fixed").css("background-color","white").css("margin-top",n.css("height")).css("z-index",10),t.outline.resize(),t.isFull=!0,t.popoverPlacement="bottom"},t.compressView=function(){t.isExpand=!1;var e=$(".main-box-content-panel-container");e.css("position","absolute").css("z-index",1).css("margin-top",0).removeAttr("background-color");var n=$(".main-box-content-heading");n.css("position","relative").css("z-index",10).removeAttr("top"),n.removeAttr("left"),t.outline.resize(),t.isFull=!1,t.popoverPlacement="top"}}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(t,e){t.app.controller("MainSearchHomeCtrl",["$scope",function(t){t.keyword="",t.search=function(){t.keyword&&t.$state.go("home.search.result",{keyword:t.keyword})}}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(t,e){t.app.controller("MainSearchResultCtrl",["$scope","SearchService","ngTableParams","Unit","Outline","$timeout",function(t,e,n,i,o,a){t.keyword=t.$state.params.keyword,t.views=[],t.cis=[],t.tableParams=new n({page:1,count:10},{total:0,counts:[],data:[]}),t.staticUrl=function(t){return i["static"](t)},e.fuzzy(t.keyword).success(function(e){t.views=e.data.view,t.tableParams.page(1),t.tableParams.settings({data:e.data.ci,total:e.data.ci.length}),t.tableParams.reload()}),t.showCiViews=function(t){t.isInitChart||(a(function(){$("#"+t.config.id).height(.4*$("#"+t.config.id).width()),console.log($("#"+t.config.id).width()),new o(t.ciViews,$("#"+t.config.id)[0],{layout:"left",maxCount:4,outLineSize:90,toolbarSize:130})}),t.isInitChart=!0)}}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(t,e){"use strict";t.app.controller("PrivateViewCtrl",["$rootScope","$scope","$state","GroupService","ViewService","Unit","Outline","$timeout","Event",function(t,e,n,i,o,a,r,s,l){e.isPublic=!1,e.showOption=!1,e.is2D=!0,i["private"]().success(function(t){for(var n=t.data,i=0;i<n.length;i++){var o=n[i],a=new Date(o.time);o.time=a.toLocaleDateString()}e.views=n}),e.showView=function(t){e.is2D=!0,e.showOption=!0,e.view=t,$(".popover").remove(),n.go("home.group.list.private.get",{id:t.id},{reload:!0})},e.deleteView=function(){a.confirm("确认删除视图？",function(){i.deleteById(e.view.id).success(function(t){e.showOption=!1,n.go("home.group.list.private",{},{reload:!0})}),$(".main-box-content-panel-container-body").html("")})},e.editView=function(){n.go("home.group.edit",{id:e.view.id})},e.show3DView=function(t){e.showOption=!0,e.view=t,e.is2D=!1,n.go("home.group.list.private.get3d",{id:t.id})}}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(t,e){"use strict";t.app.controller("GetViewCtrl",["$scope","$state","GroupService","ViewService","Unit","Outline","$timeout",function(t,e,n,i,o,a,r){var s=e.params.id;t.$parent.is2D=!0,n.get(s).success(function(e){var n=e.data;t.$parent.view=n,t.$parent.showOption=!0,t.$parent.isOption=!0;var o=[],r=n.content;"string"==typeof n.content&&(r=JSON.parse(n.content));for(var s=0;s<r.views.length;s++)o.push(r.views[s]);i.getByIds({viewIds:o}).success(function(e){for(var n=[],i=0;i<o.length;i++)for(var s=0;s<e.data.length;s++)e.data[s].id==o[i]&&n.push(e.data[s]);$(".main-box-content-panel-container-body").html(""),t.$parent.$parent.outline=new a(n,$(".main-box-content-panel-container-body")[0],r.content.d2setting),$("#items > div").eq(0).find("div[data-id]").css("opacity",0),$("#scroll").css("backgroundColor","rgba(0,0,0,0.1)")})})}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(t,e){"use strict";t.app.controller("Get3DViewCtrl",["$scope","$state","GroupService","ViewService","Unit","Universe","$timeout",function(t,e,n,i,o,a,r){var s=e.params.id;t.$parent.is2D=!1,n.get(s).success(function(e){var n=e.data;t.$parent.view=n,t.$parent.showOption=!0;var o=[],r=n.content;"string"==typeof n.content&&(r=JSON.parse(n.content));for(var s=0;s<r.views.length;s++)o.push(r.views[s]);i.getByIds({viewIds:o}).success(function(t){var e=r.content.d3setting.layers,n={};$.each(t.data,function(){this.json=JSON.parse(this.svg),n[this.id]=this}),r.content.d3setting.layerCount=r.content.d3setting.rows,r.content.d3setting.layerItemCount=r.content.d3setting.cols;for(var i=0;i<e.length;i++)for(var o=0;o<e[i].length;o++){var s=e[i][o];if(s&&n[s.viewid]){var l=n[s.viewid];s.name=l.name,s.viewid=l.id,s.graphHeight=l.json.graphHeight,s.graphWidth=l.json.graphWidth,s.containers=l.json.containers,s.edges=l.json.edges,s.nodes=l.json.nodes,e[i][o]=s}}r.content.d3setting.$container=$(".main-box-content-panel-container-body-3d"),new a(r.content.d3setting)})})}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(t,e){"use strict";t.app.controller("PublicListViewCtrl",["$scope","$state","GroupService","ViewService","Unit","Outline","$timeout",function(t,e,n,i,o,a,r){console.log("PublicListViewCtrl"),t.pageSize=2,t.currentPage=1,t.isPublic=!0,n["public"]().success(function(e){for(var n=new Array,i={},o=e.data,a=(void 0!==t.publicViewId&&""!==t.publicViewId,0);a<o.length;a++){var r=o[a],s=new Date(r.time);r.time=s.toLocaleDateString(),void 0==i[r.userName]?i[r.userName]=[r]:i[r.userName].push(r)}for(var l in i){var c={};c.userName=l,c.views=i[l],c.userIconUrl="http://localhost:8080/mmdb2/resource/img/photo2.jpg",n.push(c),l===t.userName&&(t.views=c.views)}t.totalItems=n.length,t.publicViews=n,t.publicViewsShow=t.publicViews.slice(0,t.pageSize)}),t.showPrivateViewList=function(t,n,i){$(i.currentTarget).popover("hide"),e.go("home.group.list.user",{userName:t})},t.pageChanged=function(){t.publicViewsShow=t.publicViews.slice((t.currentPage-1)*t.pageSize,t.currentPage*t.pageSize)}}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page")),function(t,e){"use strict";t.app.controller("PublicUserViewCtrl",["$scope","$state","GroupService","ViewService","Unit","Outline","$timeout",function(t,e,n,i,o,a,r){var s=e.params.userName;t.isPublic=!0,t.isOption=!1,t.is2D=!0,$(".popover").hide(),n["public"]().success(function(e){for(var n=new Array,i={},o=e.data,a=(void 0!==t.publicViewId&&""!==t.publicViewId,0);a<o.length;a++){var r=o[a],l=new Date(r.time);r.time=l.toLocaleDateString(),void 0==i[r.userName]?i[r.userName]=[r]:i[r.userName].push(r)}for(var c in i){var p={};if(p.userName=c,p.views=i[c],p.userIconUrl="http://localhost:8080/mmdb2/resource/img/photo2.jpg",n.push(p),s===c){t.views=p.views;break}}}),t.goBack=function(t){e.go("home.group.list.public")},t.showPublicView=function(n){t.is2D=!0,t.view=n,t.isOption=!0,$(".popover").remove(),e.go("home.group.list.user.get",{id:n.id,userName:n.userName},{reload:!0})},t.showPublic3DView=function(n){t.is2D=!1,t.view=n,t.isOption=!0,e.go("home.group.list.user.get3d",{id:n.id,userName:n.userName})}}])}(nameSpace.reg("graph"),nameSpace.reg("graph.page"));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImpzL2FwcC03ZThhZTc1OC5qcyJdLCJuYW1lcyI6WyJncmFwaCIsInN0YXRlVXJsIiwidXJsIiwiYXBwIiwiYW5ndWxhciIsIm1vZHVsZSIsImNvbmZpZyIsIiRzdGF0ZVByb3ZpZGVyIiwiJHVybFJvdXRlclByb3ZpZGVyIiwiJGh0dHBQcm92aWRlciIsIm90aGVyd2lzZSIsImludGVyY2VwdG9ycyIsInB1c2giLCJzdGF0ZSIsInRlbXBsYXRlVXJsIiwiY29udHJvbGxlciIsInJ1biIsIiRyb290U2NvcGUiLCIkc3RhdGUiLCIkY29va2llcyIsIl9yZWZyZXNoIiwiJCRwaGFzZSIsIiRhcHBseSIsIiRvbiIsImV2ZW50IiwiY3VycmVudCIsInByZXZpb3VzIiwidG9TdGF0ZSIsInRva2VuIiwiZ2V0IiwicHJldmVudERlZmF1bHQiLCJnbyIsIm14UmVjdGFuZ2xlU2hhcGUiLCJwcm90b3R5cGUiLCJjcmlzcCIsIkVkaXRvciIsImdyaWRJbWFnZSIsIklNQUdFX1BBVEgiLCJteExvZyIsIldBUk4iLCJERUJVRyIsIm5hbWVTcGFjZSIsInJlZyIsImZhY3RvcnkiLCIkbW9kYWwiLCJVbml0IiwiQ29uc3QiLCJDaU1vbml0b3JTZXJ2aWNlIiwiR3JhcGhNb25pdG9yIiwiRXZlbnQiLCJFeHBvcnRTZXJ2aWNlIiwiZWRpdG9yIiwidGhpcyIsImNsZWFySGlnaHQiLCJyZW1vdmVMaWdodCIsImhpZ2h0TGlnaHRDaSIsImNpcyIsImdldENpcyIsIiQiLCJlYWNoIiwiYWRkTGlnaHQiLCJiYWNrZ3JvdW5kSW1hZ2UiLCJvcGVuIiwic2l6ZSIsImFuaW1hdGlvbiIsInJlc29sdmUiLCJmbiIsImltYWdlIiwiZWxlbWVudCIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsInNyYyIsIm9ubG9hZCIsImltZyIsIm14SW1hZ2UiLCJ3aWR0aCIsImhlaWdodCIsInNldEJhY2tncm91bmRJbWFnZSIsInZpZXciLCJ2YWxpZGF0ZSIsInJlbW92ZSIsImNsZWFyQmFja2dyb3VuZEltYWdlIiwic2F2ZSIsInVwZGF0ZSIsImFjdGlvbiIsIm9wZW5WaWV3IiwiY3JlYXRlIiwiY2xlYXIiLCJzeW5jR3JpZCIsInpvb21BY3R1YWwiLCJlbXB0eSIsIm1vZGVsIiwiem9vbUluIiwiem9vbU91dCIsInpvb21DZW50ZXIiLCJ6b29tVG9DZW50ZXIiLCJzY2FsZSIsImdldFZpZXciLCJnZXRTY2FsZSIsIkdSQVBIX0dSSURfV0lEVEgiLCJHUkFQSF9HUklEX0hFSUdIVCIsImNvbnRhaW5lciIsImZpbmQiLCJzdHlsZSIsImJhY2tncm91bmRTaXplIiwiYXNzaXN0TGluZSIsImdyYXBoSGFuZGxlciIsImd1aWRlc0VuYWJsZWQiLCJpc0Fzc2lzdExpbmUiLCJvcmRlckRvd24iLCJvcmRlckNlbGxzIiwib3JkZXJVcCIsImFsaWduQ2VsbHMiLCJhbGlnbiIsImFsaWduRGlzdHJpYnV0ZSIsImRpcmVjdGlvbiIsImRpc3RyaWJ1dGVDZWxscyIsInVuZG8iLCJzdG9wRWRpdGluZyIsInVuZG9NYW5hZ2VyIiwicmVkbyIsInJlbW92ZUNlbGxzIiwiZWRnZVN0eWxlIiwiZWRnZUNsZWFyU3R5bGUiLCJlbGJvd1N0eWxlIiwic2V0Q2VsbFN0eWxlcyIsIm14Q29uc3RhbnRzIiwiU1RZTEVfRURHRSIsIlNUWUxFX0VMQk9XIiwiZWRnZXMiLCJnZXRTZWxlY3Rpb25FZGdlcyIsImdlb21ldHJ5IiwicG9pbnRzIiwiYXR0ciIsInN0YXJ0QXJyb3ciLCJTVFlMRV9TVEFSVEFSUk9XIiwic3RhcnRBcnJvd0ZpbGwiLCJlbmRBcnJvdyIsIlNUWUxFX0VOREFSUk9XIiwiZW5kQXJyb3dGaWxsIiwibGlua0VkaXQiLCJjZWxscyIsIm9yaUxpbmsiLCJnZXRTZWxlY3Rpb25DZWxscyIsImxlbmd0aCIsImdldExpbmtGb3JDZWxsIiwicHJvbXB0IiwicmVzdWx0Iiwic2V0TGlua0ZvckNlbGwiLCJzaG9hZG93Iiwic2hhZG93IiwidXRpbHMiLCJnZXRTdHlsZUZvckF0dHIiLCJTVFlMRV9TSEFET1ciLCJjZWxsRmlsbENvbG9yIiwibyIsImdldENlbGxTdHlsZSIsInRpdGxlIiwib3JpZ2luYWxDb2xvciIsImZpbGxDb2xvciIsImNvbG9yIiwiU1RZTEVfRklMTENPTE9SIiwiY2VsbFN0cm9rZUNvbG9yIiwic3Ryb2tlQ29sb3IiLCJTVFlMRV9TVFJPS0VDT0xPUiIsImZvbnQiLCJncmlkIiwiaXNTaG93R3JpZCIsImdldENpc0lkIiwiaWRzIiwiZ2V0RGVwQ2VsbHMiLCJpc0NpQ2VsbCIsImdldENpSWRCeUNlbGwiLCJnZXRYbWwiLCJ4bWwiLCJnZXRHcmFwaFhtbCIsImdldEJhY2tncm91bmRJbWFnZSIsInNldEF0dHJpYnV0ZSIsIm14VXRpbHMiLCJvcGVuWG1sIiwiZG9jIiwicGFyc2VYbWwiLCJkb2N1bWVudEVsZW1lbnQiLCJub2RlTmFtZSIsImFsZXJ0IiwiRXJyb3IiLCJzZXRHcmFwaFhtbCIsInNldFRyYW5zbGF0ZSIsImdldEF0dHJpYnV0ZSIsInNldFZpZXciLCJkaXNhYmxlZCIsInNldENlbGxzTW92YWJsZSIsInNldENlbGxzQ2xvbmVhYmxlIiwic2V0Q2VsbHNFZGl0YWJsZSIsInNldENlbGxzRGlzY29ubmVjdGFibGUiLCJzZXRDZWxsc1Jlc2l6YWJsZSIsInNldENlbGxzU2VsZWN0YWJsZSIsInNldENvbm5lY3RhYmxlIiwiZW5hYmxlZCIsInNldEV4dGVuZFBhcmVudHMiLCJtb25pdG9yIiwidG9nZ2xlQXV0b0xheW91dCIsImlzQXV0b0xheW91dCIsInRvZ2dsZUF1dG9MaW5lIiwiaXNBdXRvTGluZSIsInNob3dDaVRhYmxlIiwidGFibGUiLCJzaG93IiwiaGlkZUNpVGFibGUiLCJoaWRlIiwiZXhwYW5kTm9kZSIsImV4cG9ydFBuZyIsImdldFN2ZyIsInN1Y2Nlc3MiLCJkb3dubG9hZCIsImRhdGEiLCJleHBvcnRQZGYiLCJleHBvcnRYbWwiLCJmaWxlTmFtZSIsIkRhdGUiLCJub3ciLCJCbG9iIiwic2F2ZUFzIiwidHlwZSIsImV4cG9ydFN2ZyIsInN2ZyIsImlzT2JqZWN0Iiwib3V0ZXJIVE1MIiwiY29weSIsIm14Q2xpcGJvYXJkIiwiY3V0IiwicGFzdGUiLCJsYXlvdXRIb3Jpem9udGFsIiwibGF5b3V0IiwibXhIaWVyYXJjaGljYWxMYXlvdXQiLCJESVJFQ1RJT05fV0VTVCIsImxheW91dFZlcnRpY2FsIiwiRElSRUNUSU9OX05PUlRIIiwibGF5b3V0Q2lyY2xlIiwibXhDaXJjbGVMYXlvdXQiLCJsYXlvdXRPcmdhbmljIiwibXhGYXN0T3JnYW5pY0xheW91dCIsImxheW91dFBhcmFsbGVsIiwibXhQYXJhbGxlbEVkZ2VMYXlvdXQiLCJsYXlvdXRTdGFja1ZlcnRpY2FsIiwibXhTdGFja0xheW91dCIsImxheW91dFN0YWNrSG9yaXpvbnRhbCIsInRhZyIsInZlcnRleCIsImlzQ2lJbiIsInNldE9yaVN0eWxlIiwiZ2V0U3R5bGUiLCJzZXRTdHlsZSIsInJlZnJlc2giLCJvcmlnaW5hbCIsImdldE9yaVN0eWxlIiwiY2VsbFN0cm9rZVNpemUiLCJkZWZhdWx0VmFsdWUiLCJzdHJva2VXaWR0aCIsIm1heFZhbHVlIiwibWluVmFsdWUiLCJudW1iZXIiLCJTVFlMRV9TVFJPS0VXSURUSCIsImNlbGxPcGFjaXR5Iiwib3BhY2l0eSIsIlNUWUxFX09QQUNJVFkiLCJyZWxhdGlvblZpZXdTZXQiLCJnZXRTZWxlY3Rpb25DZWxsIiwicmVsYXRpb25WaWV3T3BlbiIsImhpc3RvcnlCYWNrIiwiaGlzdG9yeSIsImJhY2siLCJvcGVuVXJsIiwiY2VsbCIsImxpbmsiLCJnZXRDZWxsQXR0ciIsIndpbmRvdyIsInRvb2xiYXJSZWZyZXNoIiwidG9vbGJhciIsIiRpbmplY3QiLCJ0cmFuc2l0IiwidXRpbCIsIlBvaW50IiwiaVgiLCJpWSIsImFic29sdXRlWCIsImFic29sdXRlWSIsInJlbGF0aXZlWCIsInJlbGF0aXZlWSIsImFic29sdXRlMnJlbGF0aXZlIiwib0Jhc2VQb2ludCIsInJlbGF0aXZlMmFic29sdXRlIiwiZXhwYW5kSXQiLCJvUG9pbnQiLCJpUngiLCJpUnkiLCJpTngiLCJpTnkiLCJpVG54IiwiaVRueSIsImlUbHgiLCJpVGx5IiwibWF0aCIsImNoYW5nZUl0IiwiaUQiLCJpUiIsImlOIiwiaUwiLCJjaGFuZ2VCYWNrIiwiRiIsImZvbGRIYW5kbGUiLCJmb2xkaW5nSGFuZGxlciIsIl90aGlzIiwiZXhwYW5kTGF5b3V0IiwiY2xlYXJTZWxlY3Rpb24iLCJzZW5kZXIiLCJldnQiLCJnZXRQcm9wZXJ0eSIsImNvbGxhcHNlZCIsImNvbGxhc3BlTGF5b3V0IiwiYWRkTGlzdGVuZXIiLCJteEV2ZW50IiwiRk9MRF9DRUxMUyIsImYiLCJvcmlDZWxsIiwib2Zmc2V0WCIsIk1hdGgiLCJyb3VuZCIsImFsdGVybmF0ZUJvdW5kcyIsIm9mZnNldFkiLCJnZXRDaGlsZFZlcnRpY2VzIiwiZ2V0UGFyZW50IiwicENlbGwiLCJvcmlQb2ludCIsImlkIiwieCIsInkiLCJwYXJzZUludCIsIm9UYXJnZXRQb2ludCIsImNlbnRlclBvaW50Iiwic2V0U2VsZWN0aW9uQ2VsbCIsIkNJX1BSRUZJWCIsIklOX1BSRUZJWCIsIkdSQVBIX0RSQUdfV0lEVEgiLCJHUkFQSF9EUkFHX0hFSUdIVCIsIk1FTlVfT1BFTl9VUkwiLCJNRU5VX0VESVRfVVJMIiwiTUVOVV9GT05UX1NUWUxFIiwiTUVOVV9TVFJPS0VfV0lEVEgiLCJNRU5VX09QQUNJVFkiLCJNRU5VX1pPT00iLCJNRU5VX1pPT01fSU4iLCJNRU5VX1pPT01fT1VUIiwiTUVOVV9aT09NX0NFTlRFUiIsIk1FTlVfWk9PTV9BQ1RVQUwiLCJNRU5VX1NUWUxFIiwiTUVOVV9WSUVXIiwiTUVOVV9WSUVXX1NBVkUiLCJNRU5VX1ZJRVdfVVBEQVRFIiwiTUVOVV9WSUVXX09QRU4iLCJNRU5VX1ZJRVdfTkVXIiwiTUVOVV9WSUVXX1VSTCIsIk1FTlVfVklFV19ORVdfV0lORE9XIiwiTUVOVV9WSUVXX1JFTEFUSU9OIiwiTUVOVV9WSUVXX1JFTEFUSU9OX1NFVCIsIk1FTlVfVklFV19SRUxBVElPTl9PUEVOIiwiTUVOVV9MQVlPVVQiLCJNRU5VX0xBWU9VVF9IT1JJWk9OVEFMIiwiTUVOVV9MQVlPVVRfVkVSVElDQUwiLCJNRU5VX0xBWU9VVF9DSVJDTEUiLCJNRU5VX0xBWU9VVF9PUkdBTklDIiwiTUVOVV9MQVlPVVRfUEFSQUxMRUwiLCJNRU5VX0xBWU9VVF9TVEFDS19WRVJUSUNBTCIsIk1FTlVfTEFZT1VUX1NUQUNLX0hPUklaT05UQUwiLCJNRU5VX0VYUE9SVCIsIk1FTlVfRVhQT1JUX1BORyIsIk1FTlVfRVhQT1JUX1BERiIsIk1FTlVfRVhQT1JUX1hNTCIsIk1FTlVfRVhQT1JUX1NWRyIsIk1FTlVfRVhQQU5EX05PREUiLCJNRU5VX0VESVQiLCJNRU5VX0NFTExfREVMRVRFIiwiTUVOVV9DRUxMX0NPUFkiLCJNRU5VX0NFTExfQ1VUIiwiTUVOVV9DRUxMX1BBU1RFIiwiTUVOVV9HUkFQSF9DTEVBUiIsIk1FTlVfUkVMQVRJT05fQ1JFQVRFIiwiTUVOVV9NT0RVTEUiLCJNRU5VX01PRFVMRV9PUkkiLCJNRU5VX01PRFVMRV9UQUciLCJNRU5VX1ZJRVdfUkVMQVRJT05fQkFDSyIsIldFQkdMX0ZPTlQiLCJXRUJHTF9SRVNPVVJDRV9ESVIiLCJXRUJHTF9ERUZBVUxUX01FU0hfTkFNRSIsIldFQkdMX0xBWUVSX01BUkdJTiIsIldFQkdMX0xBWUVSX1dJRFRIIiwiV0VCR0xfTEFZRVJfSEVJR0hUIiwiV0VCR0xfTEFZRVJfRk9OVF9DT0xPUiIsIldFQkdMX0xBWUVSX0ZPTlRfU0lERV9DT0xPUiIsIldFQkdMX0xBWUVSX09QQUNJVFkiLCJXRUJHTF9MQVlFUl9DT0xPUiIsIldFQkdMX0xBWUVSX05BTUVfUFJFRklYIiwiV0VCR0xfTEFZRVJfRk9OVF9GQU1JTFkiLCJXRUJHTF9MQVlFUl9GT05UX1NJWkUiLCJXRUJHTF9MQVlFUl9GT05UX0hFSUdIVCIsIldFQkdMX05PREVfREVQVEgiLCJXRUJHTF9OT0RFX0ZPTlRfU0lERV9DT0xPUiIsIldFQkdMX05PREVfRk9OVF9DT0xPUiIsIldFQkdMX05PREVfRk9OVF9TSVpFIiwiV0VCR0xfTk9ERV9GT05UX0ZBTUlMWSIsIldFQkdMX0NBTUVSQV9QT1NJVElPTl9YIiwiV0VCR0xfQ0FNRVJBX1BPU0lUSU9OX1kiLCJXRUJHTF9DQU1FUkFfTkVBUiIsIldFQkdMX0NBTUVSQV9GQVIiLCJXRUJHTF9MSU5FX0NPTE9SIiwiV0VCR0xfTElHSFRfUE9TSVRJT04iLCJXRUJHTF9MSUdIVF9DT0xPUiIsIldFQkdMX0xBWUVSX0xJTkVfQ09MT1IiLCJXRUJHTF9MQVlFUl9MSU5FX0NPTE9SX1NFTEVDVElPTiIsIldFQkdMX0NPTlRBSU5FUl9DT0xPUiIsInNlbGYiLCJtZDUiLCJDb250ZXh0TWVudSIsInNwbGl0IiwiY3JlYXRlSGFzaCIsInRvU3RyaW5nIiwiY2xhc3NOYW1lIiwiY2hpbGRDbGFzc05hbWUiLCJkaXZpZGVyQ2xhc3NOYW1lIiwiaXRlbUNsYXNzTmFtZSIsImludG9JY29uQ2xhc3NOYW1lIiwiY3JlYXRlTWFpbiIsImxvY2siLCJib2R5IiwiYWRkRXZlbnRMaXN0ZW5lciIsImFwcGVuZENoaWxkIiwiYWRkSXRlbSIsImZ1biIsInBhcmVudEVsZW1lbnQiLCJvYmoiLCJpdGVtRWxlbWVudCIsImlubmVyRWxlbWVudCIsIm5vZGVFbGVtZW50IiwiZ2V0Q2hpbGQiLCJjbG9zZUNoaWxkIiwicmVtb3ZlQ2xhc3MiLCJhZGRDbGFzcyIsInNob3dDaGlsZCIsImN1cnNvciIsInN0b3BQcm9wYWdhdGlvbiIsImlubmVySFRNTCIsInF1ZXJ5U2VsZWN0b3IiLCJhZGRDaGlsZExldmVsSWNvIiwiY2xlYXJBbGxJdGVtcyIsImZpcnN0Q2hpbGQiLCJyZW1vdmVDaGlsZCIsImhhc0NoaWxkSWNvIiwiY2hpbGRJY29DbGFzc05hbWUiLCJjcmVhdGVDaGlsZEljbyIsImljb0VsZW1lbnQiLCJhZGRTZXBhcmF0b3IiLCJzZXBhcmF0b3JFbGVtZW50IiwiY2xvc2VBbGxDaGlsZCIsImNoaWxkIiwiZGlzcGxheSIsImlzSW50b0NoaWxkIiwiaXNWaXNpYmxlIiwiY2hpbGRyZW4iLCJjbGllbnRIZWlnaHQiLCJjbGllbnRXaWR0aCIsImxlZnQiLCJ0b3AiLCJDaVJlbGF0aW9uU2VydmljZSIsIm9wdGlvbnMiLCIkdGFibGUiLCJpc1NlbGVjdE1vcmUiLCJoZWlnaHRMaWdodENlbGwiLCJiaW5kaW5nIiwiY3JlYXRlRHJhZ1NvdXJjZSIsImNyZWF0ZURyb3BIYW5kbGVyIiwiY3JlYXRlRHJhZ1ByZXZpZXciLCJERUZJTkVfQ0FURSIsIkRSQUdfV0lEVEgiLCJEUkFHX0hFSUdIVCIsImNyZWF0ZUNlbGwiLCJnIiwicGFyZW50IiwiY2F0ZWlkIiwidmFsdWUiLCJjaURhdGEiLCJpdGVtIiwiY2F0ZWdvcnlJZCIsImljb24iLCJpbnNlcnRWZXJ0ZXgiLCJERUZJTkVfQ0kiLCJHUkFQSF9QUkVGSVgiLCJlbHQiLCJkcm9wSGFuZGxlciIsInByZXZpZXciLCJkcmFnU291cmNlIiwibWFrZURyYWdnYWJsZSIsImF1dG9zY3JvbGwiLCJnZXREcm9wVGFyZ2V0IiwidGFyZ2V0IiwidXBUYXJnZXQiLCJsb29wIiwibXhEcmFnU291cmNlIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJnZXRDZWxsQXQiLCJnZXREZWZhdWx0UGFyZW50IiwibGFzdFRhcmdldENlbGwiLCJlZGdlIiwibGFzdFRhcmdldEVkZ2UiLCJpc1ZhbGlkUm9vdCIsImhhbmRsZSIsImxpc3QiLCJpIiwibmFtZSIsImNhdGUiLCJnZXRNb2RlbCIsImJlZ2luVXBkYXRlIiwiZ2V0Q2VsbEJ5SWQiLCJqb2luIiwic2V0VmFsdWUiLCJpbmRleE9mIiwic2V0Q2VsbEF0dHIiLCJsaWIiLCJzZXRJZCIsInByZWZpeCIsImVuZFVwZGF0ZSIsInNDZWxsIiwic2VsZWN0cyIsImdldFNlbGVjdFRyIiwiYXV0b0NyZWF0ZVJlbGF0aW9uIiwiaXNDcmVhdGVSZWxhdGlvbiIsImh0bWwiLCJib3JkZXIiLCJhcnIiLCJpcyIsImlzTGF5b3V0IiwidjEiLCJzdGFydENpIiwidjIiLCJlbmRDaSIsImNsZWFyRWRnZXMiLCJlZGdlSWQiLCJHUkFQSF9QUkVGSVhfUkVMQVRJT04iLCJyZWxDYXRlTmFtZSIsImluc2VydEVkZ2UiLCJpc0Z1bmN0aW9uIiwiQXJyYXkiLCJpc0FycmF5Iiwic291cmNlIiwiR3JhcGhBY3Rpb24iLCJHcmFwaFN0YXRlIiwiTXhFZGl0b3IiLCJHcmFwaEhpc290cnkiLCJkaWFncmFtQ29udGFpbmVyIiwib3V0bGluZUNvbnRhaW5lciIsImluaXQiLCJzZXRUb29sdGlwcyIsImZvY3VzIiwib3V0bGluZSIsIm1vdXNld2hlZWwiLCJkZWx0YSIsInpvb21Mb2NrIiwiR1JBUEhfQ0VMTF9DTElDSyIsIkdSQVBIX0NJX0NFTExfQ0xJQ0siLCJHUkFQSF9DQU5WQVNfQ0xJQ0siLCJHUkFQSF9TQ0FMRSIsIlZJRVdfREVMRVRFX0JFRk9SRSIsIlZJRVdfREVMRVRFX0FGVEVSIiwiVklFV19VUERBVEVfQkVGT1JFIiwiR1JBUEhfSU5GT19UT0dHTEUiLCJHUkFQSF9UQUJMRV9TSE9XIiwiR1JBUEhfVEFCTEVfSElERSIsIkdSQVBIX0NIQU5HRSIsIkdST1VQX1ZJRVdfSURfQ0hBTkdFIiwiYWRkSXRlbXMiLCJtZW51IiwiaXRlbXMiLCJwYXJlbnRNZW51IiwiaXRlbU1lbnUiLCJpc1N0cmluZyIsImFwcGVuZCIsImxpYnMiLCJ0ZW1wIiwiYWxpYXNlcyIsInRleHQiLCJmdW50IiwiZSIsInRoYXQiLCJzZWxlY3Rpb25DZWxsIiwiY29uc3RydWN0b3IiLCJPYmplY3QiLCJHcmFwaENvbnRleHRNZW51Iiwib3B0aW9uIiwiY2FudmFzIiwiYWxsIiwiYWRkTGlicyIsIml0ZW1zSW5pdCIsImJpbmQiLCJnZXRMaWJzIiwiZmlsdGVyIiwiY3JlYXRlRGlzYWJsZWRJdGVtIiwiZmlsdGVyVmVydGV4IiwiZmlsdGVyRWRnZSIsImZpbHRlckNhbnZhcyIsImNvdW50IiwibXhQb3B1cE1lbnUiLCJwb3B1cCIsImRpdiIsInRib2R5IiwiZmFjdG9yeU1ldGhvZCIsInJlbGVhc2UiLCJpdGVtQ291bnQiLCJzaG93TWVudSIsImZpcmVFdmVudCIsIm14RXZlbnRPYmplY3QiLCJTSE9XIiwiZGlzYWJsZUNvbnRleHRNZW51IiwicGFubmluZ0hhbmRsZXIiLCJhdXRvRXhwYW5kIiwicG9wdXBNZW51SGFuZGxlciIsImNsaWVudFgiLCJjbGllbnRZIiwiRnVuY3Rpb24iLCIkdGltZW91dCIsImluTWFwcGluZyIsImdldERhdGEiLCJOdW1iZXIiLCJhbGFybSIsImNpIiwibGV2ZWwiLCJkZWZ1YWx0VmFsdWUiLCJnZXRDaSIsImdldEdlb21ldHJ5IiwiaW5DZWxsIiwiZ2V0TGV2ZWxDb2xvciIsImJnIiwiZmMiLCJzb21ldGhpbmciLCJwb3AiLCJyZWZyZXNoTmF2aWdhdGlvbiIsInNob3dOYXZpZ2F0aW9uIiwiaGlkZU5hdmlnYXRpb24iLCIkcSIsInJlcXVlc3QiLCJoZWFkZXJzIiwiY2FjaGUiLCJsb2FkaW5nYmFyIiwicmVzcG9uc2UiLCJtZXNzYWdlIiwibWV0aG9kIiwicmVzcG9uc2VFcnJvciIsImVycm9yIiwic3RhdHVzIiwicmVqZWN0IiwiY2FjaGVPYmoiLCJsb2FkIiwiaGFzaCIsImNsb25lIiwibG9hZGVyIiwiVEhSRUUiLCJPQkpNVExMb2FkZXIiLCJtZXNoIiwibXRsIiwib2JqZWN0IiwiZGVzdHJveSIsInBhcmFtRWRpdG9yIiwibW9kZWxHZXRTdHlsZSIsIm14RWRpdG9yIiwiU1RFTkNJTF9QQVRIIiwiZ2V0RG9jdW1lbnRFbGVtZW50IiwiaW5zdGFsbERibENsaWNrSGFuZGxlciIsImluc3RhbGxVbmRvSGFuZGxlciIsImluc3RhbGxEcmlsbEhhbmRsZXIiLCJpbnN0YWxsQ2hhbmdlSGFuZGxlciIsImluc3RhbGxJbnNlcnRIYW5kbGVyIiwiY3JlYXRlUG9wdXBNZW51IiwiY29ubmVjdGlvbkhhbmRsZXIiLCJjcmVhdGVFZGdlIiwiY3JlYXRlTGF5b3V0TWFuYWdlciIsImNyZWF0ZVRhcmdldFZlcnRleCIsIm14Q29ubmVjdGlvbkhhbmRsZXIiLCJ0cmlnZ2VyIiwiREVGSU5FX0VWRU5UIiwiR1JBUEhfVkVSVEVYX0NMT05FIiwiQ0xJQ0siLCJ3aGljaCIsIiRicm9hZGNhc3QiLCJldmVudERhdGEiLCIkZW1pdCIsImtleUhhbmRsZXIiLCJoYW5kbGVyIiwiZ2V0Q3Vyc29yRm9yQ2VsbCIsIm14R3JhcGgiLCJpc0NpSGVhZGVyIiwiQXV0b0xheW91dCIsIkFwcCIsImpzb24iLCJpc0lFIiwibmF2aWdhdG9yIiwidXNlckFnZW50Iiwic2VhcmNoIiwic3BlZWQiLCJncmFwaE1hcmdpbiIsImNsZWFyQ2xhc3NOYW1lIiwibWFza0NsYXNzTmFtZSIsIm1hc2tIb3ZlckNsYXNzTmFtZSIsIm1hc2tFbGVtZW50cyIsImdyYXBoRWxlbWVudHMiLCJzY3JvbGxEaXZTaXplIiwidG9vbGJhclNpemUiLCJvdXRMaW5lRGl2IiwiTWFnbmlmaWNhdGlvbiIsImJvcmRlcldpZHRoIiwib3V0TGluZVNpemUiLCJtYXJnaW5MUiIsImJveEJnQ29sb3IiLCJib3hCb3JkZXJXaWR0aCIsImJveEJvcmRlckNvbG9yIiwibWF4RGlzcGxheUNvdW50IiwibWF4Q291bnQiLCJsb2FkaW5nIiwiYm9yZGVyQ29sb3IiLCJwYWRkaW5nIiwiZm9udFNpemUiLCJiZ0NvbG9yIiwidGlwIiwicGFnZSIsInBhZ2VCdG5TdHlsZSIsIm9mZnNldCIsImJ0bkNvbG9yIiwidXBCZ0NvbG9yIiwidG9vbGJhckJnQ29sb3IiLCJsb2FkRGF0YSIsImNyZWF0ZURpdiIsImNyZWF0ZUdyYXBoIiwib3V0bGluZUV2ZW50cyIsImNyZWF0ZVBhZ2VCdG4iLCJwYWdlQnRuRXZlbnRzIiwiY29udGV4dE1lbnUiLCJpc0hvcml6b250YWxMYXlvdXQiLCJjcmVhdGVWZXJ0aWNhbExheW91dCIsInQiLCJzY3JvbGxDb250YWluZXIiLCJjc3NUZXh0IiwiY2VudGVyRWxlbWVudCIsImFjdGlvbkVsZW1lbnQiLCJzY3JvbGxJdGVtc0NvbnRhaW5lciIsIm1haW5Db250YWluZXIiLCJsb2FkaW5nQ29udGFpbmVyIiwiY3JlYXRlSG9yaXpvbnRhbExheW91dCIsInJlc2l6ZSIsInZpZXdpZCIsImsiLCJvdXRsaW5lQm94IiwicGFnZUNvbnRhaW5lciIsInRpcENvbnRhaW5lciIsInRpcENvbnRhaW5lckNoaWxkIiwib3V0bGluZU1hc2siLCJiYWNrZ3JvdW5kIiwiaW1hZ2VVcmwiLCJtYXAiLCJjcmVhdGVIb3Jpem9udGFsQnRuIiwiaXRlbXNXaWR0aCIsIml0ZW1zSGVpZ2h0IiwibmV4dEJ0biIsInByZXZCdG4iLCJjcmVhdGVWZXJ0aWNhbEJ0biIsImluZGV4Iiwib3JpZ2luYWxPcGFjaXR5IiwiY3NzIiwiY3Vyck9wYWNpdHkiLCJtb3VzZW92ZXIiLCJtb3VzZW91dCIsImNsaWNrIiwib3V0bGluZUNsaWNrIiwiaG9yaXpvbnRhbE1vdmUiLCJvdXRsaW5lT2Zmc2V0V2lkdGgiLCJtYXhMZWZ0Iiwic2Nyb2xsTG9jayIsInNjcm9sbExlZnQiLCJhbmltYXRlIiwidmVydGljYWxNb3ZlIiwib3V0bGluZU9mZnNldEhlaWdodCIsInN0b3AiLCJzY3JvbGxUb3AiLCIkd2luZG93IiwiJGludGVydmFsIiwidG9hc3RyIiwiY2xvc2VCdXR0b24iLCJwcm9ncmVzc0JhciIsInRpbWVPdXQiLCJhcGkiLCJzdWJzdHIiLCJiYXNlbmFtZSIsInBhdGgiLCJmb3JtYXRDYXRlZ29yeURhdGEiLCJmb3JFYWNoIiwia2V5IiwicmV0IiwiR1JBUEhfUFJFRklYX0lOIiwibXNnIiwiYm9vdGJveCIsIlN0cmluZyIsImNvbmZpcm0iLCJjYWxsYmFjayIsInVuaXhUb0RhdGV0aW1lIiwidW5peCIsImdldEZ1bGxZZWFyIiwiZ2V0TW9udGgiLCJnZXREYXRlIiwiZ2V0SG91cnMiLCJnZXRNaW51dGVzIiwiZ2V0U2Vjb25kcyIsImRiaWQiLCJ0aW1tZXIxIiwidGltbWVyMiIsIiRsb2FkaW5nYmFyIiwicGVyY2VudCIsImNhbmNlbCIsImZhZGVJbiIsImNlaWwiLCJyYW5kb20iLCJpbml0UGVyY2VudCIsImZhZGVPdXQiLCJuIiwiZmlsZW5hbWUiLCJocmVmIiwiZXhlY3V0ZSIsIm1vcnBoIiwibXhNb3JwaGluZyIsIkRPTkUiLCJzdGFydEFuaW1hdGlvbiIsImhhbmRsZUdyYXBoSnNvbiIsIkxvYWRNZXNoIiwiRm9udFNlcnZpY2UiLCJVbml2ZXJzZSIsImxvYWRPYmoiLCJtZXNoQml6SW5mbyIsIiRjb250YWluZXIiLCJkZWZhdWx0Tm9kZURlcHRoIiwiZGVmYXVsdExheWVyV2lkdGgiLCJkZWZhdWx0TGF5ZXJIZWlnaHQiLCJtYXJnaW4iLCJzY2VuZVdpZHRoIiwic2NlbmVIZWlnaHQiLCJmb3YiLCJzZWxlY3RlZCIsImxheWVycyIsImJhbGxBbmltYXRpb25RdWV1ZSIsImFsbE5vZGVzIiwiYWxsVGV4dHMiLCJ0ZXh0c01hcCIsImFsbENpSWRzIiwiYWxsQ2lPYmoiLCJhbGxMaW5lTWVzaCIsImluaXRUaHJlZSIsImluaXRTY2VuZSIsImluaXRDYW1lcmEiLCJpbml0TGlnaHQiLCJlbmFibGVTY3JvbGxXaGVlbFpvb20iLCJpbml0TGF5ZXIiLCJibGluayIsImwiLCJHZW9tZXRyeVV0aWxzIiwibWVyZ2UiLCJibGlua0xpc3QiLCJNZXNoIiwiTWVzaEJhc2ljTWF0ZXJpYWwiLCJ0cmFuc3BhcmVudCIsInYiLCJzZXQiLCJ6IiwidXBkYXRlTWF0cml4V29ybGQiLCJwIiwiVmVjdG9yMyIsInNldEZyb21NYXRyaXhQb3NpdGlvbiIsIm1hdHJpeFdvcmxkIiwicG9zaXRpb24iLCJyb3RhdGlvbiIsIlBJIiwic2NlbmUiLCJhZGQiLCJzaG93VGltZWxpbmUiLCJ1cGRhdGVCbGluayIsImNoYW5nZUxpc3QiLCJibGlua09iaiIsInJvdyIsImxheWVyIiwiY29sIiwiYWxhcm1MZXZlbCIsInRpbWVsaW5lIiwiVGltZWxpbmUiLCJjbGlja2VkUG9pbnQiLCJ0aW1lRGF0YSIsImNsb3NlVGltZWxpbmUiLCJyZW1vdmVIaWdobGlnaHRTZWxlY3RlZCIsImNsb3NlIiwic3RvcFVwZGF0ZUludGVydmFsIiwiZ2V0Q2lNZXNoIiwiaGlnaGxpZ2h0Tm9kZUlkIiwibm9kZXMiLCJoaWRlTGF5ZXJMaW5lIiwiZ2V0UmVsYXRpb25MaW5lQnlOb2RlSWQiLCJfaXRlbSIsIm5vZGUiLCJsaW5lIiwibWF0ZXJpYWwiLCJzZXRIZXgiLCJ2aXNpYmxlIiwiaGlnaGxpZ2h0U2VsZWN0ZWQiLCJvQ29udGFpbmVyIiwicmVuZGVyZXIiLCJkb21FbGVtZW50Iiwib2Zmc2V0TGVmdCIsIm9mZnNldFRvcCIsIm9mZnNldFciLCJvZmZzZXRXaWR0aCIsIm9mZnNldEgiLCJvZmZzZXRIZWlnaHQiLCJ2ZWN0b3IiLCJ1bnByb2plY3QiLCJjYW1lcmEiLCJzdWIiLCJub3JtYWxpemUiLCJyYXljYXN0ZXIiLCJSYXljYXN0ZXIiLCJpbnRlcnNlY3RzIiwiaW50ZXJzZWN0T2JqZWN0cyIsImludGVyVGV4dHMiLCJzaG93TWVzaCIsIm1lc2hzIiwiY29udmVyUG9zaXRpb24iLCJncmFwaFdpZHRoIiwiZ3JhcGhIZWlnaHQiLCJmbjIiLCJyIiwicjEiLCJyMiIsIl9pIiwiX2xlbiIsIl9yZWYiLCJfcmVzdWx0cyIsImNvbnRhaW5lcnMiLCJpbmZvIiwiZHJhd05vZGUiLCJkcmF3IiwiY29weURhdGEiLCJjdWJlIiwiZHJhd05vZGVUZXh0dXJlIiwicGxhbmUiLCJnZXRSZXNvdXJjZSIsInN1YnN0cmluZyIsImxhc3RJbmRleE9mIiwiREVGSU5FX1dFQkdMIiwiUkVTT1VSQ0VfRElSIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiZHJhd0xpbmUiLCJjZm4iLCJjaXRlbSIsIkxpbmVCYXNpY01hdGVyaWFsIiwiR2VvbWV0cnkiLCJ2ZXJ0aWNlcyIsIkxpbmUiLCJtYXRlcmlhbEFycmF5IiwibWF0ZXJpYWxGcm9udCIsIm1hdGVyaWFsU2lkZSIsInRleHRHZW9tIiwidGV4dEhlaWdodCIsInRleHRNYXRlcmlhbCIsInRleHRNZXNoIiwidGV4dFdpZHRoIiwiVGV4dEdlb21ldHJ5IiwiY3VydmVTZWdtZW50cyIsIndlaWdodCIsImV4dHJ1ZGVNYXRlcmlhbCIsIk1lc2hGYWNlTWF0ZXJpYWwiLCJjb21wdXRlQm91bmRpbmdCb3giLCJib3VuZGluZ0JveCIsIm1heCIsIm1pbiIsIlRIUkVFeCIsIkNvbnRhaW5lclJlc2l6ZSIsIldlYkdMUmVuZGVyZXIiLCJhbnRpYWxpYXMiLCJhbHBoYSIsInNldFNpemUiLCJzZXRDbGVhckNvbG9yIiwibG9hZFRleHR1cmUiLCJJbWFnZVV0aWxzIiwiZGlzIiwidyIsImdldExheWVyQm94IiwiaCIsInRhbiIsImNhbWVyYURpcyIsIlBlcnNwZWN0aXZlQ2FtZXJhIiwibG9va0F0IiwiU2NlbmUiLCJsaWdodCIsImxpIiwiRGlyZWN0aW9uYWxMaWdodCIsInJlbmRlciIsImRyYXdUZXh0IiwiaXNWZXJ0aWNhbCIsIkJveEdlb21ldHJ5IiwidGV4dEJveE1lc2giLCJkcmF3Q29udGFpbmVyIiwibG9hZEZvbnQiLCJzdHIiLCJfdHlwZWZhY2VfanMiLCJmYWNlcyIsIm5vcm1hbCIsImdseXBocyIsImdldEZvbnRzIiwiaXNUcnVlUmV0IiwiZ2V0TGF5ZXJGb250cyIsInNvdXJjZU5hbWUiLCJ0YXJnZXROYW1lIiwiYWxsVkNvdW50IiwibGF5ZXJNYXJnaW4iLCJsYXllckNvdW50IiwibGF5ZXJJdGVtQ291bnQiLCJsYXllckl0ZW1NYXJnaW4iLCJnZXRMYXllclBvc0J5SW5kZXgiLCJwb3MiLCJjaGVjayIsImdldEtleSIsImxvYWRNYXAiLCJrZXlzIiwiYWRkTGF5ZXIiLCJyZWxhdGlvbiIsImRyYXdMYXllckxpbmUiLCJpc1Nob3dUaW1lbGluZSIsIm1hdGVPcHRpb24iLCJ0ZXh0T2JqIiwicGxhbmVRdWFsaXR5Iiwic2lkZSIsIkRvdWJsZVNpZGUiLCJmbG9vckJnQ29sb3IiLCJQbGFuZUJ1ZmZlckdlb21ldHJ5IiwicmVjZWl2ZVNoYWRvdyIsImF1dG9MYXlvdXRMYXllciIsInN0YXJ0TnVtIiwib3JiaXRDb250cm9scyIsIk9yYml0Q29udHJvbHMiLCJkYW1waW5nIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwib3BjIiwiaXNDbG9zZUNhbWVyYUFuaW1hdGUiLCJnZXRQb2ludHNUd2VlbiIsInN0ZXAiLCJ0d29Qb2ludHMiLCJzdGVwcyIsImFicyIsImNyYXRlTGluZUJhbGxBbmltYXRpb24iLCJwYXRoUG9pbnRzIiwicmVjdE1lc2giLCJTcGhlcmVHZW9tZXRyeSIsImNvbXB1dGVUYW5nZW50cyIsIk1lc2hMYW1iZXJ0TWF0ZXJpYWwiLCJiYWxsIiwiYW5pbWF0ZVBvaW50cyIsInVwZGF0ZUJhbGxBbmltYXRpb24iLCJwb2ludCIsInNoaWZ0IiwiZ2V0U25vZGVBbmRUbm9kZUJ5SWQiLCJzaWQiLCJ0aWQiLCJnZXROb2RlIiwibGF5ZXJJbmRleHMiLCJnZXRMYXllck5vZGUiLCJyZXRzIiwicmFuZ2UiLCJnZXROb2RlQWJzb2x1dGVQb3NpdGlvbiIsImdldE5vZGVCZXR3ZWVuUG9pbnRzIiwibWlkZGxlUG9pbnQiLCJnZXRMaW5lQnlOb2RlSWQiLCJnZXREb253TGluZUJ5Tm9kZUlkIiwibmV3SWRzIiwiZ2V0VXBMaW5lQnlOb2RlSWQiLCJnZXRSZWxhdGlvbkNpQnlOb2RlSWQiLCJjaUlkcyIsImNpSWQiLCJzaG93TGF5ZXJMaW5lIiwiZm4xIiwibGluZUdlb21ldHJ5IiwibGluZU1hdGVyaWFsIiwibGluZWNhcCIsImNvbXB1dGVMaW5lRGlzdGFuY2VzIiwic2VydmljZSIsIiRodHRwIiwibG9naW4iLCJwYXJhbXMiLCJwb3N0IiwicHV0Iiwidmlld0lkIiwiZ2V0Q2F0ZWdvcnkiLCJleHBhbmQiLCJkZWxldGVCeUlkIiwiZGVsZXRlUHJpdmF0ZU9yUHVibGljIiwiaXNQdWJsaWMiLCJVcGxvYWQiLCJ1cGxvYWQiLCJmaWxlIiwidXBsb2FkQmFja2dyb3VuZCIsImdldEJhY2tnb3VuZCIsInJlbW92ZUJhY2tncm91bmQiLCJzdmdUb01lc2giLCJwYXRocyIsImdldFN2Z1BhdGgiLCJ0aGVtZSIsImZ1enp5Iiwia2V5V29yZCIsImdldFByaXZhdGUiLCJnZXRQdWJsaWMiLCJ1cGxvYWRJbWFnZSIsImdldEJ5SWRzIiwiQ2lTZXJ2aWNlIiwic2hvd0ZsYWciLCJmb3JtYXQiLCJnZXRIZWFkIiwibGFiZWwiLCJzb3J0IiwiY2F0ZWdvcnlOYW1lIiwiaGVhZCIsInJvd3MiLCJjb25zb2xlIiwibG9nIiwic3BsaWNlIiwiJHNjb3BlIiwiR3JhcGhUYWJsZSIsIiRwYXJzZSIsImhhc093blByb3BlcnR5Iiwic2V0dXBCaW5kaW5nc1RvSW50ZXJuYWxTY29wZSIsImluZm9QYXJhbXNFeHByIiwiaW5mb1BhcmFtc0dldHRlciIsIiR3YXRjaCIsImlzVW5kZWZpbmVkIiwiZGlyZWN0aXZlIiwicmVzdHJpY3QiLCJwcmlvcml0eSIsInRyYW5zY2x1ZGUiLCJzY29wZSIsImNvbXBpbGUiLCJhdHRycyIsImdyYXBoVGFibGUiLCIkbGFzdCIsIiRldmFsIiwibmdSZXBlYXREb25lIiwiZGVsZXRlSGFuZGxlIiwiZWRpdEhhbmRsZSIsIm91dCIsImJ0bnMiLCJidG5DbGFzcyIsImNsaWNrSGFuZGxlIiwiY3VzdG9tIiwidG9nZ2xlIiwiR3JhcGhJbmZvIiwiY2FsbGFwc2UiLCJmb3JtYXRCb29sIiwiYm9vbCIsImZvcm1hdERhdGUiLCJncmFwaEluZm8iLCJuZ0VudGVyIiwiZWxlbWVudHMiLCJzZXRJbnRlcnZhbCIsInNjcm9sbEhlaWdodCIsImxhc3RTY3JvbGxIZWlnaHQiLCJsYXN0Q2xpZW50SGVpZ2h0IiwiUHMiLCJpbml0aWFsaXplIiwibmdTY3JvbGwiLCJ4eSIsInNjcm9sbFgiLCJzY3JvbGxZIiwic3VwcHJlc3NTY3JvbGxYIiwic3VwcHJlc3NTY3JvbGxZIiwidGltZUxpbmUiLCJlbGVtIiwiZ2V0RG90RGF0YSIsImNoYW5nZURhdGEiLCJlbmRUaW1lIiwic3RhcnRUaW1lIiwiZCIsInNFIiwiZ2V0RGF5IiwiZ2V0VGltZSIsInNUIiwib3B0IiwidGljayIsInNob3dQbGFjZSIsImRhdGFTaG93IiwidGltZVZhbHVlIiwidGltZUF2ZXJhZ2UiLCJ0ZW1wT2JqIiwiZG90TGVmdCIsInRpdGxlTGVmdCIsInMiLCJtIiwiaiIsInRpbWUiLCJkYXRhSWQiLCJzZXRUaW1lIiwicmVwbGFjZSIsIm15SWQiLCJteURhdGEiLCJteU9wdGlvbnMiLCJpbml0RGF0YSIsImxhYmVsTWFwIiwiYWxpZ25FeHBhbmQiLCJ0cmFzaCIsInBhaW50IiwiZm9udEV4cGFuZCIsImxpbmVFeHBhbmQiLCJpbWFnZUV4cGFuZCIsInBlbkV4cGFuZCIsImF1dG9MYXlvdXQiLCJhdXRvTGluZSIsInNlYXJjaEV4cGFuZCIsInRhYmxlRXhwYW5kIiwibm9pbWFnZSIsInBlbiIsIm5vcGVuIiwibmV3RmlsZSIsImZvbGRlciIsIkFjdGlvbiIsImFjIiwiYWxpZ25MZWZ0IiwiQUxJR05fTEVGVCIsImFsaWduQ2VudGVyIiwiQUxJR05fQ0VOVEVSIiwiYWxpZ25SaWdodCIsIkFMSUdOX1JJR0hUIiwiYWxpZ25Ub3AiLCJBTElHTl9UT1AiLCJhbGlnbk1pZGRsZSIsIkFMSUdOX01JRERMRSIsImFsaWduQm90dG9tIiwiQUxJR05fQk9UVE9NIiwiYWxpZ25EaXN0cmlidXRlSG9yaXpvbnRhbCIsImFsaWduRGlzdHJpYnV0ZVZlcnRpY2FsIiwibGluZVN0cmFpZ2h0IiwibGluZUVudGl0eVJlbGF0aW9uIiwibGluZUVsYm93SG9yaXpvbnRhbCIsImxpbmVFbGJvd1ZlcnRpY2FsIiwibGluZVNlZ21lbnQiLCJsaW5lT3J0aG9nb25hbCIsInN0YXJ0Tm9hcnJvdyIsIk5PTkUiLCJzdGFydENsYXNzaWMiLCJBUlJPV19DTEFTU0lDIiwic3RhcnRPcGVuIiwiQVJST1dfT1BFTiIsInN0YXJ0QmxvY2siLCJBUlJPV19CTE9DSyIsInN0YXJ0T3ZhbCIsIkFSUk9XX09WQUwiLCJzdGFydERpYW1vbmQiLCJBUlJPV19ESUFNT05EIiwic3RhcnRUaGluRGlhbW9uZCIsIkFSUk9XX0RJQU1PTkRfVEhJTiIsInN0YXJ0Q2xhc3NpY1RyYW5zIiwic3RhcnRCbG9ja1RyYW5zIiwic3RhcnRPdmFsVHJhbnMiLCJzdGFydERpYW1vbmRUcmFucyIsInN0YXJ0VGhpbkRpYW1vbmRUcmFucyIsImVuZE5vYXJyb3ciLCJlbmRDbGFzc2ljIiwiZW5kT3BlbiIsImVuZEJsb2NrIiwiZW5kT3ZhbCIsImVuZERpYW1vbmQiLCJlbmRUaGluRGlhbW9uZCIsImVuZENsYXNzaWNUcmFucyIsImVuZEJsb2NrVHJhbnMiLCJlbmRPdmFsVHJhbnMiLCJlbmREaWFtb25kVHJhbnMiLCJlbmRUaGluRGlhbW9uZFRyYW5zIiwic2l0ZW1hcCIsInNldHRpbmdzIiwidG9vbGJhckdyb3VwIiwiZHJvcGRvd24iLCJ0cmlnZ2VyQWN0aW9uIiwiJGV2ZW50Iiwic3RhdHVzTWFwIiwiJGVsZW1lbnQiLCIkYXR0cnMiLCIkY29tcGlsZSIsIkdyYXBoVG9vbGJhciIsInRvb2xiYXJQYXJhbXNFeHByIiwidG9vbGJhclBhcmFtc0dldHRlciIsImFjdGlvblRyYW5zZmVyQ2xhc3MiLCJ0b1VwcGVyQ2FzZSIsInRvTG93ZXJDYXNlIiwiYWN0aW9uVHJhbnNmZXJMYWJlbCIsInNob3dQb3BvdmVyIiwiY3VycmVudFRhcmdldCIsInBvcG92ZXIiLCJoaWRlUG9wb3ZlciIsImlzRGlzYWJsZWQiLCJyZWwiLCJncmFwaFRvb2xiYXIiLCJ0cmVlRGF0YVRyYW5zZmVyIiwiX2NvdW50IiwiaXNQdXNoIiwic2VsZWN0Tm9kZSIsImdldFNlbGVjdE5vZGUiLCJzZXRTZWxlY3ROb2RlIiwidG9nZ2xlUHVibGljIiwiZ2V0Tm9kZVBhdGgiLCJyZWxvYWRUcmVlIiwiR3JhcGhWaWV3dHJlZSIsIkNpQ2F0ZVNlcnZpY2UiLCJWaWV3Q2F0ZVNlcnZpY2UiLCJWaWV3U2VydmljZSIsInZpZXd0cmVlUGFyYW1zR2V0dGVyIiwiaXNDb2xsYXBzZWRDcmVhdGVGb3JtIiwic2hvd0Zvcm0iLCJ0cmVlT3B0aW9ucyIsIm5vZGVDaGlsZHJlbiIsImRpclNlbGVjdGFibGUiLCJpbmplY3RDbGFzc2VzIiwidWwiLCJsaVNlbGVjdGVkIiwiaUV4cGFuZGVkIiwiaUNvbGxhcHNlZCIsImlMZWFmIiwibGFiZWxTZWxlY3RlZCIsInRyZWVEYXRhIiwib3JpZ2luYWxUcmVlRGF0YSIsImZvcm0iLCJjYXRlUGFyYW1zIiwiY3JlYXRlQ2F0ZSIsInVwZGF0ZUNhdGUiLCJlZGl0Q2F0ZSIsImZvcm1hdFNlbGVjdCIsInNob3dTZWxlY3RlZCIsInNlbCIsInNob3dUb2dnbGUiLCJpc0V4cGFuZCIsInF1ZXJ5VmlldyIsImNhdGVJZCIsInBhZ2VTaXplIiwiYXBwZW5kTGlzdCIsImRhdGFzIiwiZGVsZXRlTm9kZUJ5SWQiLCJjaGVja0NoaWxkcmVuTGVuZ3RoIiwiZGVsZXRlQ2F0ZSIsImdyYXBoVmlld3RyZWUiLCIkbW9kYWxJbnN0YW5jZSIsIm9rIiwiY2hhbmdlIiwiZXYiLCJkaXJEZXB0aCIsImRlcCIsImNpUmVscyIsImxpa2UiLCJyZWxhdGlvbnMiLCJfY2hlY2tlZCIsImNhdGVnb3J5cyIsImNhdGVnb3J5IiwiYXR0cmlidXRlIiwidXAiLCJkb3duIiwiY2F0ZWdvcnlzTGliIiwiZm9udEZhbWlseSIsImZhbWlseSIsImZvbnRDb2xvciIsImFsaWduSG9yaXpvbmFsIiwidmVydGljYWxBbGlnbiIsImFsaWduVmVydGljYWwiLCJmb250U3R5bGUiLCJib2xkIiwidW5kZXJsaW5lIiwiU1RZTEVfRk9OVEZBTUlMWSIsIlNUWUxFX0ZPTlRTSVpFIiwiU1RZTEVfRk9OVENPTE9SIiwidG9nZ2xlQ2VsbFN0eWxlRmxhZ3MiLCJTVFlMRV9GT05UU1RZTEUiLCJGT05UX0JPTEQiLCJpdGFsaWMiLCJGT05UX0lUQUxJQyIsIkZPTlRfVU5ERVJMSU5FIiwiYWxpZ25Ib3Jpem9udGFsIiwiU1RZTEVfQUxJR04iLCJTVFlMRV9WRVJUSUNBTF9BTElHTiIsImNoYW5nZUZhbWlseSIsImNoYW5nZUNvbG9yIiwibmV3VmFsIiwiSW1hZ2VTZXJ2aWNlIiwic2VsZWN0SXRlbSIsInNlbGVjdEZpbGUiLCIkZmlsZXMiLCJGaWxlUmVhZGVyIiwicmVhZEFzRGF0YVVSTCIsInN0YXJ0VXBsb2FkIiwidG90YWwiLCJzdGF0aWNVcmwiLCJpbWFnZXMiLCJ2aWV3cyIsImNoZWNrZWQiLCJ2aWV3dHJlZVBhcmFtcyIsImFsbG93RWRpdCIsIk1lc2hTZXJ2aWNlIiwiZGVzY3JpcHRpb24iLCJnZXRKc29uIiwiSlNPTiIsInN0cmluZ2lmeSIsIkF1dGhTZXJ2aWNlIiwib25saW5lIiwiY29vayIsInVuZGVmaW5lZCIsInVzZXIiLCJ1c2VybmFtZSIsInVzZXJOYW1lIiwicGFzc3dvcmQiLCJyZXREYXRhIiwicmVtZW1iZXJNZSIsImV4cGlyZURhdGUiLCJzZXRZZWFyIiwiZ2V0WWVhciIsImV4cGlyZXMiLCJpbnRvIiwiTEFZT1VUIiwiY29sbGFwc2VkTWFpbkxlZnQiLCJjb2xsYXBzZWRTaWRlYmFyIiwia2V5d29yZCIsImlzSW5pdCIsImluaXRDYXRlIiwic2lkZWJhciIsImFkZEltYWdlUGFsZXR0ZSIsImluaXRPd25JY29uIiwiaW5pdEJhc2VJY29uIiwiY29udGVudCIsImFkZEdlbmVyYWxQYWxldHRlIiwiY3JlYXRlRWRnZVRlbXBsYXRlIiwiaXNFeHN0aW5nIiwibmdUYWJsZVBhcmFtcyIsIkRhdGFEcmF3IiwiSWNvblNlcnZpY2UiLCJDb250ZXh0TGlicyIsImlzU2VhcmNoIiwiY2F0ZXMiLCJzZWxlY3RDYXRlcyIsImNoZWNrYm94ZXMiLCJpY29ucyIsImJhc2VJY29uIiwib3duSWNvbiIsInJlbG9hZEljb24iLCJpbml0Q29uZmlnIiwiY29uZmlnU2VhcmNoIiwidGFibGVQYXJhbXMiLCJyZWxvYWQiLCJ1cGxvYWRJY29uIiwiZmlsZXMiLCJzaG93UHJvZ3Jlc3NiYXIiLCJwcm9ncmVzc1Byb21pc2UiLCJwcm9ncmVzcyIsImljb25VcGxvYVByb2dyZXNzUGVyY2VudGFnZSIsImxvYWRlZCIsImhpZGVQcm9ncmVzc2JhciIsInByZVN0YXRpYyIsImdyYXBoVGFibGVQYXJhbXMiLCJ0b29sYmFyUGFyYW1zIiwiU2lkZWJhciIsImluZm9QYXJhbXMiLCJjb3VudHMiLCIkZGVmZXIiLCJzZWxlY3RQYXJhbXMiLCJpc0RlZmluZWQiLCJkb20iLCJzY3JvbGxXaWR0aCIsInJlYWRBc1RleHQiLCJHcm91cFNlcnZpY2UiLCJncm91cEl0ZW1BcnJheSIsImdyb3VwSW1nQm94Iiwic2V0TnVtIiwiY29sb3JCb3giLCJncm91cCIsInZpZXdEZXNjcmlwdGlvbiIsImQyc2V0dGluZyIsImQzc2V0dGluZyIsImNvbHMiLCJhbGxvd0Ryb3AiLCJkcmFnIiwicGFyZW50cyIsInRyYW5zZm9ybSIsImRhdGFUcmFuc2ZlciIsInNldERhdGEiLCJkcm9wIiwiJG5vZGUiLCJwYXJlbnRJZCIsImVsZSIsInZpZXdUaXRsZSIsInZpZXdUZXh0IiwiJG5vZGUyIiwic2V0QmdDb2xvciIsInRyYW5zbGF0ZSIsImZvcm1hdFRvUGVyY2VudGFnZSIsImZvcm1hdFRvTiIsImhhc0ltZyIsImhhc0ltZ091dCIsInNldEQiLCJzZXRUaW1lb3V0Iiwic2V0Q29uZmlnIiwidmlld0NvbnRlbnQiLCJkZWxWaWV3QnRuIiwiZGVsMmRWaWV3IiwicmVjb3ZlckNvbG9yIiwic2V0QmciLCJoYXNDbGFzcyIsImJhY2tncm91bmRDb2xvciIsImRlbFZpZXciLCJzYXZlVmlldyIsImNvbiIsInNhdmVEYXRlIiwiZ29MaXN0IiwiVmlld0NvbnRlbnQiLCJWaWV3Q29udGVudDNEIiwiYWxsb3dTaG93UHVidmlldyIsImdyYXBoSWQiLCJiYXNpY1NldCIsInR3b0RTZXQiLCJ0aHJlZURTZXQiLCIkcGFyZW50IiwiJHdhdGNoR3JvdXAiLCJuZXdWYWx1ZXMiLCJyZXMiLCJwYXJzZUpTT04iLCJ1cGRhdGVWaWV3Iiwic2F2ZUFzVmlldyIsIk91dGxpbmUiLCJpc0Z1bGwiLCJwb3BvdmVyUGxhY2VtZW50IiwicHVibGljVmlld3NTaG93IiwicHVibGljVmlld3MiLCJzbGljZSIsImN1cnJlbnRQYWdlIiwic3dpdGNoVmlldyIsImhpZGVPcGVyYXRpb24iLCJkZWxldGVWaWV3IiwiY3VycmVudEluZGV4IiwiY3JlYXRlVmlldyIsImV4cGFuZFZpZXciLCIkZG9tIiwiJGRvbTEiLCJjb21wcmVzc1ZpZXciLCJyZW1vdmVBdHRyIiwiU2VhcmNoU2VydmljZSIsInNob3dDaVZpZXdzIiwiaXNJbml0Q2hhcnQiLCJjaVZpZXdzIiwic2hvd09wdGlvbiIsImlzMkQiLCJyZXREYXRhcyIsImNyZWF0ZURhdGUiLCJ0b0xvY2FsZURhdGVTdHJpbmciLCJzaG93VmlldyIsImVkaXRWaWV3Iiwic2hvdzNEVmlldyIsImlzT3B0aW9uIiwicGFyc2UiLCJ2aWV3SWRzIiwidmlld0RhdGFCeUlkcyIsImVxIiwicHVibGljVmlld0RhdGEiLCJ2aWV3c0ZvclVzZXIiLCJwdWJsaWNWaWV3SWQiLCJ1c2VySW5mbyIsInRvdGFsSXRlbXMiLCJzaG93UHJpdmF0ZVZpZXdMaXN0IiwicGFnZUNoYW5nZWQiLCJ1c2VyTiIsImdvQmFjayIsInNob3dQdWJsaWNWaWV3Iiwic2hvd1B1YmxpYzNEVmlldyJdLCJtYXBwaW5ncyI6IkNBQ0EsU0FBVUEsR0FFVCxZQUVBQSxHQUFNQyxTQUFXLFNBQVNDLEdBQ3pCLE1BQU8sWUFBY0EsR0FHdEJGLEVBQU1HLElBQU1DLFFBQVFDLE9BQU8sU0FFMUIsYUFFQSxZQUNBLGVBQ0EsZUFDQSxnQkFDQSxZQUNBLGFBQ0EsY0FDQSxjQUNBLHFCQUNBLFVBQ0EsZUFDQSxXQUNBLGNBR0RMLEVBQU1HLElBQUlHLFFBQUEsaUJBQUEscUJBQUEsZ0JBQU8sU0FBU0MsRUFBZ0JDLEVBQW9CQyxHQUU3REQsRUFBbUJFLFVBQVUsU0FDN0JELEVBQWNFLGFBQWFDLEtBQUssbUJBRWhDTCxFQUNFTSxNQUFNLFFBQ05YLElBQUssSUFDTFksWUFBYWQsRUFBTUMsU0FBUyxtQkFDNUJjLFdBQVksZ0JBS2ZmLEVBQU1HLElBQUlhLEtBQUssYUFBYyxTQUFVLFdBQVksU0FBU0MsRUFBWUMsRUFBUUMsR0FDL0VGLEVBQVdDLE9BQVNBLEVBQ3BCRCxFQUFXRyxTQUFXLFdBQ2pCSCxFQUFXSSxTQUNkSixFQUFXSyxVQUliTCxFQUFXTSxJQUFJLHNCQUF1QixTQUFTQyxFQUFPQyxFQUFTQyxNQUcvRFQsRUFBV00sSUFBSSxvQkFBcUIsU0FBU0MsRUFBT0csR0FDbkQsR0FBa0IsVUFBZkEsRUFBUXpCLElBQWdCLENBQzFCLEdBQUkwQixFQUNKQSxHQUFRVCxFQUFTVSxJQUFJLFNBQ2pCRCxJQUNISixFQUFN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ZHhhLEVBQU9oaUMsS0FBT0EsRUFDZGdpQyxFQUFPK2EsVUFBVyxFQUNsQm4rQyxFQUFFLFlBQVlzQixTQUNkOUQsRUFBT2EsR0FBRyw0QkFBNkIrUyxHQUFJaFEsRUFBS2dRLEdBQUk2akMsU0FBVTd6QyxFQUFLNnpDLFdBQVlzQyxRQUFPLEtBRzFGblUsRUFBTzhiLGlCQUFtQixTQUFTOTlDLEdBQy9CZ2lDLEVBQU93YSxNQUFPLEVBQ2R4YSxFQUFPaGlDLEtBQU9BLEVBQ2RnaUMsRUFBTythLFVBQVcsRUFDbEIzZ0QsRUFBT2EsR0FBRyw4QkFBK0IrUyxHQUFJaFEsRUFBS2dRLEdBQUk2akMsU0FBVTd6QyxFQUFLNnpDLGdCQUs5RWwyQyxVQUFVQyxJQUFJLFNBQVVELFVBQVVDLElBQUkiLCJmaWxlIjoianMvYXBwLTdlOGFlNzU4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG4oZnVuY3Rpb24oZ3JhcGgpe1xuXG5cdCd1c2Ugc3RyaWN0JztcblxuXHRncmFwaC5zdGF0ZVVybCA9IGZ1bmN0aW9uKHVybCl7XG5cdFx0cmV0dXJuICdhcHAvc3RhdGUnICsgdXJsO1xuXHR9O1xuXG5cdGdyYXBoLmFwcCA9IGFuZ3VsYXIubW9kdWxlKCdncmFwaCcsIFtcblx0XHQvLyduZ0FuaW1hdGUnLFxuXHRcdCduZ1Nhbml0aXplJyxcblx0XHQvLyd0b2FzdHInLFxuXHRcdCd1aS5yb3V0ZXInLFxuXHRcdCd1aS5ib290c3RyYXAnLFxuXHRcdCdncmFwaFRvb2xiYXInLFxuXHRcdCdncmFwaFZpZXd0cmVlJyxcblx0XHQnZ3JhcGhJbmZvJyxcblx0XHQnZ3JhcGhUYWJsZScsXG5cdFx0J3RyZWVDb250cm9sJyxcblx0XHQnYW5ndWxhci1tZDUnLFxuXHRcdCdjb2xvcnBpY2tlci5tb2R1bGUnLFxuXHRcdCduZ1RhYmxlJyxcblx0XHQnbmdGaWxlVXBsb2FkJyxcblx0XHQncnpNb2R1bGUnLFxuXHRcdCduZ0Nvb2tpZXMnXG5cdF0pO1xuXG5cdGdyYXBoLmFwcC5jb25maWcoZnVuY3Rpb24oJHN0YXRlUHJvdmlkZXIsICR1cmxSb3V0ZXJQcm92aWRlciwgJGh0dHBQcm92aWRlcikge1xuXG5cdFx0JHVybFJvdXRlclByb3ZpZGVyLm90aGVyd2lzZSgnL2VkaXQnKTtcblx0XHQkaHR0cFByb3ZpZGVyLmludGVyY2VwdG9ycy5wdXNoKCdIdHRwSW50ZXJjZXB0b3InKTtcblxuXHRcdCRzdGF0ZVByb3ZpZGVyXG5cdFx0XHQuc3RhdGUoJ2hvbWUnLCB7XG5cdFx0XHRcdHVybDogJy8nLFxuXHRcdFx0XHR0ZW1wbGF0ZVVybDogZ3JhcGguc3RhdGVVcmwoJy9tYWluL21haW4uaHRtbCcpLFxuXHRcdFx0XHRjb250cm9sbGVyOiAnTWFpbkN0cmwnXG5cdFx0XHR9KTtcblxuXHR9KTtcblxuXHRncmFwaC5hcHAucnVuKFsnJHJvb3RTY29wZScsICckc3RhdGUnLCAnJGNvb2tpZXMnLCBmdW5jdGlvbigkcm9vdFNjb3BlLCAkc3RhdGUsICRjb29raWVzKXtcblx0XHQkcm9vdFNjb3BlLiRzdGF0ZSA9ICRzdGF0ZTtcblx0XHQkcm9vdFNjb3BlLl9yZWZyZXNoID0gZnVuY3Rpb24oKXtcblx0XHRcdGlmKCEkcm9vdFNjb3BlLiQkcGhhc2Upe1xuXHRcdFx0XHQkcm9vdFNjb3BlLiRhcHBseSgpO1xuXHRcdFx0fVxuXHRcdH07XG5cblx0XHQkcm9vdFNjb3BlLiRvbignJHN0YXRlQ2hhbmdlU3VjY2VzcycsIGZ1bmN0aW9uKGV2ZW50LCBjdXJyZW50LCBwcmV2aW91cyl7XG5cdFx0fSk7XG5cblx0XHQkcm9vdFNjb3BlLiRvbignJHN0YXRlQ2hhbmdlU3RhcnQnLCBmdW5jdGlvbihldmVudCwgdG9TdGF0ZSl7XG5cdFx0XHRpZih0b1N0YXRlLnVybCAhPSAnL2xvZ2luJyl7XG5cdFx0XHRcdHZhciB0b2tlbjtcblx0XHRcdFx0dG9rZW4gPSAkY29va2llcy5nZXQoJ3Rva2VuJyk7XG5cdFx0XHRcdGlmKCF0b2tlbil7XG5cdFx0XHRcdFx0ZXZlbnQucHJldmVudERlZmF1bHQoKTtcblx0XHRcdFx0XHQkc3RhdGUuZ28oJ2xvZ2luJyk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9KTtcblx0fV0pO1xuXG5cblx0Ly8gSU5JVFxuXHQvLyBFbmFibGVzIGNyaXNwIHJlbmRlcmluZyBvZiByZWN0YW5nbGVzIGluIFNWR1xuXHRpZih0eXBlb2YgbXhSZWN0YW5nbGVTaGFwZSA9PT0gJ29iamVjdCcpe1xuXHRcdG14UmVjdGFuZ2xlU2hhcGUucHJvdG90eXBlLmNyaXNwID0gdHJ1ZTtcblx0fVxuXG5cdC8vIFNldCBkZWZhdWx0IGdyYXBoIGJhY2tncm91bmQgaW1hZ2VzXG5cdEVkaXRvci5wcm90b3R5cGUuZ3JpZEltYWdlID0gSU1BR0VfUEFUSCArICcvZ3JpZF9iZy5wbmcnO1xuXG5cdG14TG9nLldBUk4gPSBmYWxzZTtcblx0bXhMb2cuREVCVUcgPSBmYWxzZTtcblxuXG59KShuYW1lU3BhY2UucmVnKCdncmFwaCcpKTtcblxuXG4oZnVuY3Rpb24oZ3JhcGgpe1xuXG5cdCd1c2Ugc3RyaWN0JztcblxuXHR2YXIgZmFjdG9yeSA9IGZ1bmN0aW9uKCRtb2RhbCwgVW5pdCwgJHJvb3RTY29wZSwgQ29uc3QsIENpTW9uaXRvclNlcnZpY2UsIEdyYXBoTW9uaXRvciwgRXZlbnQsIEV4cG9ydFNlcnZpY2Upe1xuXG5cdFx0cmV0dXJuIGZ1bmN0aW9uKGVkaXRvcil7XG5cblx0XHRcdHRoaXMuY2xlYXJIaWdodCA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRcdGVkaXRvci5ncmFwaC5yZW1vdmVMaWdodCgpO1xuXHRcdFx0fTtcblxuXHRcdFx0dGhpcy5oaWdodExpZ2h0Q2kgPSBmdW5jdGlvbigpe1xuXHRcdFx0XHR2YXIgY2lzID0gdGhpcy5nZXRDaXMoKTtcblxuXHRcdFx0XHQkLmVhY2goY2lzLCBmdW5jdGlvbigpe1xuXHRcdFx0XHRcdGVkaXRvci5ncmFwaC5hZGRMaWdodCh0aGlzKTtcblx0XHRcdFx0fSk7XG5cdFx0XHR9O1xuXG5cdFx0XHR0aGlzLmJhY2tncm91bmRJbWFnZSA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRcdCRtb2RhbC5vcGVuKHtcblx0XHRcdFx0XHRzaXplOiAnbGcnLFxuXHRcdFx0XHRcdGFuaW1hdGlvbjogdHJ1ZSxcblx0XHRcdFx0XHR0ZW1wbGF0ZVVybDogJ2FwcC9tb2RhbC9pbWFnZS9pbWFnZS5odG1sJyxcblx0XHRcdFx0XHRjb250cm9sbGVyOiAnTW9kYWxJbWFnZUN0cmwnLFxuXHRcdFx0XHRcdHJlc29sdmU6IHtcblx0XHRcdFx0XHRcdGZuOiBmdW5jdGlvbigpe1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gZnVuY3Rpb24oaW1hZ2Upe1xuXHRcdFx0XHRcdFx0XHRcdHZhciB1cmwgPSBVbml0LnN0YXRpYyhpbWFnZS51cmwpO1xuXHRcdFx0XHRcdFx0XHRcdHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW1nJyk7XG5cdFx0XHRcdFx0XHRcdFx0ZWxlbWVudC5zcmMgPSB1cmw7XG5cdFx0XHRcdFx0XHRcdFx0ZWxlbWVudC5vbmxvYWQgPSBmdW5jdGlvbigpe1xuXHRcdFx0XHRcdFx0XHRcdFx0dmFyIGltZyA9IG5ldyBteEltYWdlKHVybCwgdGhpcy53aWR0aCwgdGhpcy5oZWlnaHQpO1xuXHRcdFx0XHRcdFx0XHRcdFx0ZWRpdG9yLmdyYXBoLnNldEJhY2tncm91bmRJbWFnZShpbWcpO1xuXHRcdFx0XHRcdFx0XHRcdFx0ZWRpdG9yLmdyYXBoLnZpZXcudmFsaWRhdGUoKTtcblx0XHRcdFx0XHRcdFx0XHRcdCQoZWxlbWVudCkucmVtb3ZlKCk7XG5cdFx0XHRcdFx0XHRcdFx0fTtcblx0XHRcdFx0XHRcdFx0fTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0pO1xuXHRcdFx0fTtcblxuXHRcdFx0dGhpcy5jbGVhckJhY2tncm91bmRJbWFnZSA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRcdGVkaXRvci5ncmFwaC5zZXRCYWNrZ3JvdW5kSW1hZ2UobnVsbCk7XG5cdFx0XHRcdGVkaXRvci5ncmFwaC52aWV3LnZhbGlkYXRlKCk7XG5cdFx0XHR9O1xuXG5cdFx0XHR0aGlzLnNhdmUgPSBmdW5jdGlvbigpe1xuXHRcdFx0XHQkbW9kYWwub3Blbih7XG5cdFx0XHRcdFx0c2l6ZTogJ2xnJyxcblx0XHRcdFx0XHRhbmltYXRpb246IHRydWUsXG5cdFx0XHRcdFx0dGVtcGxhdGVVcmw6ICdhcHAvbW9kYWwvdmlldy9zYXZlLmh0bWwnLFxuXHRcdFx0XHRcdGNvbnRyb2xsZXI6ICdNb2RhbFZpZXdTYXZlQ3RybCcsXG5cdFx0XHRcdFx0cmVzb2x2ZToge1xuXHRcdFx0XHRcdFx0ZWRpdG9yOiBmdW5jdGlvbiAoKSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiBlZGl0b3I7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9KTtcblx0XHRcdH07XG5cblx0XHRcdHRoaXMudXBkYXRlID0gZnVuY3Rpb24oKXtcblx0XHRcdFx0JG1vZGFsLm9wZW4oe1xuXHRcdFx0XHRcdHNpemU6ICdsZycsXG5cdFx0XHRcdFx0YW5pbWF0aW9uOiB0cnVlLFxuXHRcdFx0XHRcdHRlbXBsYXRlVXJsOiAnYXBwL21vZGFsL3ZpZXcvc2F2ZS5odG1sJyxcblx0XHRcdFx0XHRjb250cm9sbGVyOiAnTW9kYWxWaWV3VXBkYXRlQ3RybCcsXG5cdFx0XHRcdFx0cmVzb2x2ZToge1xuXHRcdFx0XHRcdFx0ZWRpdG9yOiBmdW5jdGlvbiAoKSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiBlZGl0b3I7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9KTtcblx0XHRcdH07XG5cblx0XHRcdHRoaXMub3BlbiA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRcdCRtb2RhbC5vcGVuKHtcblx0XHRcdFx0XHRhbmltYXRpb246IHRydWUsXG5cdFx0XHRcdFx0dGVtcGxhdGVVcmw6ICdhcHAvbW9kYWwvdmlldy9vcGVuLmh0bWwnLFxuXHRcdFx0XHRcdGNvbnRyb2xsZXI6ICdNb2RhbFZpZXdPcGVuQ3RybCcsXG5cdFx0XHRcdFx0cmVzb2x2ZToge1xuXHRcdFx0XHRcdFx0Zm46IGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIGZ1bmN0aW9uKHZpZXcpe1xuXHRcdFx0XHRcdFx0XHRcdGVkaXRvci5hY3Rpb24ub3BlblZpZXcodmlldyk7XG5cdFx0XHRcdFx0XHRcdH07XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9KTtcblx0XHRcdH07XG5cblx0XHRcdHRoaXMuY3JlYXRlID0gZnVuY3Rpb24oKXtcblx0XHRcdFx0dGhpcy5jbGVhcigpO1xuXHRcdFx0XHR0aGlzLnN5bmNHcmlkKCk7XG5cblx0XHRcdFx0ZWRpdG9yLmdyYXBoLnpvb21BY3R1YWwoKTtcblx0XHRcdFx0ZWRpdG9yLnN0YXRlLmVtcHR5KCk7XG5cdFx0XHR9O1xuXG5cdFx0XHR0aGlzLmNsZWFyID0gZnVuY3Rpb24oKXtcblx0XHRcdFx0ZWRpdG9yLmdyYXBoLm1vZGVsLmNsZWFyKCk7XG5cdFx0XHR9O1xuXG5cdFx0XHR0aGlzLnpvb21JbiA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRcdGVkaXRvci5ncmFwaC56b29tSW4oKTtcblx0XHRcdFx0dGhpcy5zeW5jR3JpZCgpO1xuXHRcdFx0fTtcblxuXHRcdFx0dGhpcy56b29tT3V0ID0gZnVuY3Rpb24oKXtcblx0XHRcdFx0ZWRpdG9yLmdyYXBoLnpvb21PdXQoKTtcblx0XHRcdFx0dGhpcy5zeW5jR3JpZCgpO1xuXHRcdFx0fTtcblxuXHRcdFx0dGhpcy56b29tQWN0dWFsID0gZnVuY3Rpb24oKXtcblx0XHRcdFx0ZWRpdG9yLmdyYXBoLnpvb21BY3R1YWwoKTtcblx0XHRcdH07XG5cblx0XHRcdHRoaXMuem9vbUNlbnRlciA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRcdGVkaXRvci5ncmFwaC56b29tVG9DZW50ZXIoKTtcblx0XHRcdFx0dGhpcy5zeW5jR3JpZCgpO1xuXHRcdFx0fTtcblxuXHRcdFx0dGhpcy5zeW5jR3JpZCA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRcdHZhciBzY2FsZSA9IGVkaXRvci5ncmFwaC5nZXRWaWV3KCkuZ2V0U2NhbGUoKTtcblx0XHRcdFx0dmFyIHdpZHRoID0gQ29uc3QuR1JBUEhfR1JJRF9XSURUSCAqIHNjYWxlICsgJ3B4Jztcblx0XHRcdFx0dmFyIGhlaWdodCA9IENvbnN0LkdSQVBIX0dSSURfSEVJR0hUICogc2NhbGUgKyAncHgnO1xuXHRcdFx0XHQkKGVkaXRvci5ncmFwaC5jb250YWluZXIpLmZpbmQoJ3N2ZycpWzBdLnN0eWxlLmJhY2tncm91bmRTaXplID0gd2lkdGggKyAnICcgKyBoZWlnaHQ7XG5cdFx0XHR9O1xuXG5cdFx0XHR0aGlzLmFzc2lzdExpbmUgPSBmdW5jdGlvbigpe1xuXHRcdFx0XHRlZGl0b3IuZ3JhcGguZ3JhcGhIYW5kbGVyLmd1aWRlc0VuYWJsZWQgPSAhZWRpdG9yLmdyYXBoLmdyYXBoSGFuZGxlci5ndWlkZXNFbmFibGVkO1xuXHRcdFx0XHRlZGl0b3Iuc3RhdGUuaXNBc3Npc3RMaW5lID0gZWRpdG9yLmdyYXBoLmdyYXBoSGFuZGxlci5ndWlkZXNFbmFibGVkO1xuXHRcdFx0fTtcblxuXHRcdFx0dGhpcy5vcmRlckRvd24gPSBmdW5jdGlvbigpe1xuXHRcdFx0XHRlZGl0b3IuZ3JhcGgub3JkZXJDZWxscyh0cnVlKTtcblx0XHRcdH07XG5cblx0XHRcdHRoaXMub3JkZXJVcCA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRcdGVkaXRvci5ncmFwaC5vcmRlckNlbGxzKGZhbHNlKTtcblx0XHRcdH07XG5cblx0XHRcdHRoaXMuYWxpZ25DZWxscyA9IGZ1bmN0aW9uKGFsaWduKXtcblx0XHRcdFx0ZWRpdG9yLmdyYXBoLmFsaWduQ2VsbHMoYWxpZ24pO1xuXHRcdFx0fTtcblxuXHRcdFx0dGhpcy5hbGlnbkRpc3RyaWJ1dGUgPSBmdW5jdGlvbihkaXJlY3Rpb24pe1xuXHRcdFx0XHRlZGl0b3IuZ3JhcGguZGlzdHJpYnV0ZUNlbGxzKGRpcmVjdGlvbik7XG5cdFx0XHR9O1xuXG5cdFx0XHR0aGlzLnVuZG8gPSBmdW5jdGlvbigpe1xuXHRcdFx0XHRlZGl0b3IuZ3JhcGguc3RvcEVkaXRpbmcoZmFsc2UpO1xuXHRcdFx0XHRlZGl0b3IudW5kb01hbmFnZXIudW5kbygpO1xuXHRcdFx0fTtcblxuXHRcdFx0dGhpcy5yZWRvID0gZnVuY3Rpb24oKXtcblx0XHRcdFx0ZWRpdG9yLmdyYXBoLnN0b3BFZGl0aW5nKGZhbHNlKTtcblx0XHRcdFx0ZWRpdG9yLnVuZG9NYW5hZ2VyLnJlZG8oKTtcblx0XHRcdH07XG5cblx0XHRcdHRoaXMucmVtb3ZlQ2VsbHMgPSBmdW5jdGlvbigpe1xuXHRcdFx0XHRlZGl0b3IuZ3JhcGgucmVtb3ZlQ2VsbHMoKTtcblx0XHRcdH07XG5cblx0XHRcdHRoaXMuZWRnZVN0eWxlID0gZnVuY3Rpb24oc3R5bGUpe1xuXHRcdFx0XHR0aGlzLmVkZ2VDbGVhclN0eWxlKCk7XG5cblx0XHRcdFx0aWYoc3R5bGUgPT09ICdlbGJvd0hvcml6b250YWwnKXtcblx0XHRcdFx0XHRzdHlsZSA9ICdlbGJvd0VkZ2VTdHlsZSc7XG5cdFx0XHRcdFx0dGhpcy5lbGJvd1N0eWxlKCdob3Jpem9udGFsJyk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRpZihzdHlsZSA9PT0gJ2VsYm93VmVydGljYWwnKXtcblx0XHRcdFx0XHRzdHlsZSA9ICdlbGJvd0VkZ2VTdHlsZSc7XG5cdFx0XHRcdFx0dGhpcy5lbGJvd1N0eWxlKCd2ZXJ0aWNhbCcpO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0ZWRpdG9yLmdyYXBoLnNldENlbGxTdHlsZXMobXhDb25zdGFudHMuU1RZTEVfRURHRSwgc3R5bGUpO1xuXHRcdFx0fTtcblxuXHRcdFx0dGhpcy5lbGJvd1N0eWxlID0gZnVuY3Rpb24oc3R5bGUpe1xuXHRcdFx0XHRlZGl0b3IuZ3JhcGguc2V0Q2VsbFN0eWxlcyggbXhDb25zdGFudHMuU1RZTEVfRUxCT1csIHN0eWxlKTtcblx0XHRcdH07XG5cblx0XHRcdHRoaXMuZWRnZUNsZWFyU3R5bGUgPSBmdW5jdGlvbigpe1xuXHRcdFx0XHR2YXIgZWRnZXMgPSBlZGl0b3IuZ3JhcGguZ2V0U2VsZWN0aW9uRWRnZXMoKTtcblxuXHRcdFx0XHQkLmVhY2goZWRnZXMsIGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFx0dGhpcy5nZW9tZXRyeS5wb2ludHMgPSBbXTtcblx0XHRcdFx0fSk7XG5cblx0XHRcdFx0dmFyIGF0dHIgPSBbXG5cdFx0XHRcdFx0bXhDb25zdGFudHMuU1RZTEVfRURHRSxcblx0XHRcdFx0XHRteENvbnN0YW50cy5TVFlMRV9FTEJPVyxcblx0XHRcdFx0XHQnbm9FZGdlU3R5bGUnLFxuXHRcdFx0XHRcdCdvcnRob2dvbmFsJ1xuXHRcdFx0XHRdO1xuXG5cdFx0XHRcdCQuZWFjaChhdHRyLCBmdW5jdGlvbigpe1xuXHRcdFx0XHRcdGVkaXRvci5ncmFwaC5zZXRDZWxsU3R5bGVzKHRoaXMsIG51bGwsIGVkZ2VzKTtcblx0XHRcdFx0fSk7XG5cdFx0XHR9O1xuXG5cdFx0XHR0aGlzLnN0YXJ0QXJyb3cgPSBmdW5jdGlvbihzdHlsZSl7XG5cdFx0XHRcdGVkaXRvci5ncmFwaC5zZXRDZWxsU3R5bGVzKG14Q29uc3RhbnRzLlNUWUxFX1NUQVJUQVJST1csIHN0eWxlKTtcblx0XHRcdFx0ZWRpdG9yLmdyYXBoLnNldENlbGxTdHlsZXMoJ3N0YXJ0RmlsbCcsIDApO1xuXHRcdFx0fTtcblxuXHRcdFx0dGhpcy5zdGFydEFycm93RmlsbCA9IGZ1bmN0aW9uKHN0eWxlKXtcblx0XHRcdFx0ZWRpdG9yLmdyYXBoLnNldENlbGxTdHlsZXMobXhDb25zdGFudHMuU1RZTEVfU1RBUlRBUlJPVywgc3R5bGUpO1xuXHRcdFx0XHRlZGl0b3IuZ3JhcGguc2V0Q2VsbFN0eWxlcygnc3RhcnRGaWxsJywgMSk7XG5cdFx0XHR9O1xuXG5cdFx0XHR0aGlzLmVuZEFycm93ID0gZnVuY3Rpb24oc3R5bGUpe1xuXHRcdFx0XHRlZGl0b3IuZ3JhcGguc2V0Q2VsbFN0eWxlcyhteENvbnN0YW50cy5TVFlMRV9FTkRBUlJPVywgc3R5bGUpO1xuXHRcdFx0XHRlZGl0b3IuZ3JhcGguc2V0Q2VsbFN0eWxlcygnZW5kRmlsbCcsIDApO1xuXHRcdFx0fTtcblxuXHRcdFx0dGhpcy5lbmRBcnJvd0ZpbGwgPSBmdW5jdGlvbihzdHlsZSl7XG5cdFx0XHRcdGVkaXRvci5ncmFwaC5zZXRDZWxsU3R5bGVzKG14Q29uc3RhbnRzLlNUWUxFX0VOREFSUk9XLCBzdHlsZSk7XG5cdFx0XHRcdGVkaXRvci5ncmFwaC5zZXRDZWxsU3R5bGVzKCdlbmRGaWxsJywgMSk7XG5cdFx0XHR9O1xuXG5cdFx0XHR0aGlzLmxpbmtFZGl0ID0gZnVuY3Rpb24oKXtcblx0XHRcdFx0dmFyIGNlbGxzLCBsaW5rLCBvcmlMaW5rO1xuXG5cdFx0XHRcdGNlbGxzID0gZWRpdG9yLmdyYXBoLmdldFNlbGVjdGlvbkNlbGxzKCk7XG5cdFx0XHRcdGlmKGNlbGxzLmxlbmd0aCA+PSAxKXtcblxuXHRcdFx0XHRcdG9yaUxpbmsgPSBlZGl0b3IuZ3JhcGguZ2V0TGlua0ZvckNlbGwoY2VsbHNbMF0sICdsaW5rJyk7XG5cdFx0XHRcdFx0b3JpTGluayA9IG9yaUxpbmsgPyBvcmlMaW5rIDogJyc7XG5cblx0XHRcdFx0XHRVbml0LnByb21wdCgn6K+36L6T5YWlVVJMJywgZnVuY3Rpb24ocmVzdWx0KXtcblx0XHRcdFx0XHRcdGlmKHJlc3VsdCAhPT0gbnVsbCl7XG5cdFx0XHRcdFx0XHRcdCQuZWFjaChjZWxscywgZnVuY3Rpb24oKXtcblx0XHRcdFx0XHRcdFx0XHRlZGl0b3IuZ3JhcGguc2V0TGlua0ZvckNlbGwodGhpcywgcmVzdWx0KTtcblx0XHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fSwgb3JpTGluayk7XG5cdFx0XHRcdH1cblx0XHRcdH07XG5cblx0XHRcdHRoaXMuc2hvYWRvdyA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRcdHZhciBjZWxscywgc2hhZG93O1xuXG5cdFx0XHRcdGNlbGxzID0gZWRpdG9yLmdyYXBoLmdldFNlbGVjdGlvbkNlbGxzKCk7XG5cblx0XHRcdFx0aWYoY2VsbHMubGVuZ3RoID49IDEpe1xuXHRcdFx0XHRcdHNoYWRvdyA9IGdyYXBoLnV0aWxzLmdldFN0eWxlRm9yQXR0cihjZWxsc1swXSwgJ3NoYWRvdycpO1xuXHRcdFx0XHRcdHNoYWRvdyA9IHNoYWRvdyA9PT0gJzEnID8gJ25vbmUnIDogJzEnO1xuXHRcdFx0XHRcdGVkaXRvci5ncmFwaC5zZXRDZWxsU3R5bGVzKG14Q29uc3RhbnRzLlNUWUxFX1NIQURPVywgc2hhZG93LCBjZWxscyk7XG5cdFx0XHRcdH1cblx0XHRcdH07XG5cblx0XHRcdHRoaXMuY2VsbEZpbGxDb2xvciA9IGZ1bmN0aW9uKCl7XG5cblx0XHRcdFx0dmFyIGNlbGxzID0gZWRpdG9yLmdyYXBoLmdldFNlbGVjdGlvbkNlbGxzKCk7XG5cblx0XHRcdFx0aWYoY2VsbHMubGVuZ3RoKXtcblx0XHRcdFx0XHR2YXIgbyA9IGVkaXRvci5ncmFwaC5nZXRDZWxsU3R5bGUoY2VsbHNbMF0pO1xuXG5cdFx0XHRcdFx0JG1vZGFsLm9wZW4oe1xuXHRcdFx0XHRcdFx0c2l6ZTogJ3NtJyxcblx0XHRcdFx0XHRcdHRlbXBsYXRlVXJsOiAnYXBwL21vZGFsL2NvbG9yL2NvbG9yLmh0bWwnLFxuXHRcdFx0XHRcdFx0Y29udHJvbGxlcjogJ01vZGFsQ29sb3JDdHJsJyxcblx0XHRcdFx0XHRcdHJlc29sdmU6IHtcblx0XHRcdFx0XHRcdFx0dGl0bGU6IGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFx0XHRcdFx0cmV0dXJuICfloavlhYXpopzoibInO1xuXHRcdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFx0XHRvcmlnaW5hbENvbG9yOiBmdW5jdGlvbigpe1xuXHRcdFx0XHRcdFx0XHRcdHJldHVybiBvLmZpbGxDb2xvcjtcblx0XHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRcdFx0Zm46IGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFx0XHRcdFx0cmV0dXJuIGZ1bmN0aW9uKGNvbG9yKXtcblx0XHRcdFx0XHRcdFx0XHRcdGVkaXRvci5ncmFwaC5zZXRDZWxsU3R5bGVzKG14Q29uc3RhbnRzLlNUWUxFX0ZJTExDT0xPUiwgY29sb3IsIGNlbGxzKTtcblx0XHRcdFx0XHRcdFx0XHR9O1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdH1cblx0XHRcdH07XG5cblx0XHRcdHRoaXMuY2VsbFN0cm9rZUNvbG9yID0gZnVuY3Rpb24oKXtcblx0XHRcdFx0dmFyIGNlbGxzID0gZWRpdG9yLmdyYXBoLmdldFNlbGVjdGlvbkNlbGxzKCk7XG5cblx0XHRcdFx0aWYoY2VsbHMubGVuZ3RoKXtcblx0XHRcdFx0XHR2YXIgbyA9IGVkaXRvci5ncmFwaC5nZXRDZWxsU3R5bGUoY2VsbHNbMF0pO1xuXG5cdFx0XHRcdFx0JG1vZGFsLm9wZW4oe1xuXHRcdFx0XHRcdFx0c2l6ZTogJ3NtJyxcblx0XHRcdFx0XHRcdHRlbXBsYXRlVXJsOiAnYXBwL21vZGFsL2NvbG9yL2NvbG9yLmh0bWwnLFxuXHRcdFx0XHRcdFx0Y29udHJvbGxlcjogJ01vZGFsQ29sb3JDdHJsJyxcblx0XHRcdFx0XHRcdHJlc29sdmU6IHtcblx0XHRcdFx0XHRcdFx0dGl0bGU6IGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFx0XHRcdFx0cmV0dXJuICfovrnmoYbpopzoibInO1xuXHRcdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFx0XHRvcmlnaW5hbENvbG9yOiBmdW5jdGlvbigpe1xuXHRcdFx0XHRcdFx0XHRcdHJldHVybiBvLnN0cm9rZUNvbG9yO1xuXHRcdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFx0XHRmbjogZnVuY3Rpb24oKXtcblx0XHRcdFx0XHRcdFx0XHRyZXR1cm4gZnVuY3Rpb24oY29sb3Ipe1xuXHRcdFx0XHRcdFx0XHRcdFx0ZWRpdG9yLmdyYXBoLnNldENlbGxTdHlsZXMobXhDb25zdGFudHMuU1RZTEVfU1RST0tFQ09MT1IsIGNvbG9yLCBjZWxscyk7XG5cdFx0XHRcdFx0XHRcdFx0fTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH0pO1xuXHRcdFx0XHR9XG5cblx0XHRcdH07XG5cblx0XHRcdHRoaXMuZm9udCA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRcdCRtb2RhbC5vcGVuKHtcblx0XHRcdFx0XHR0ZW1wbGF0ZVVybDogJ2FwcC9tb2RhbC9mb250L2ZvbnQuaHRtbCcsXG5cdFx0XHRcdFx0Y29udHJvbGxlcjogJ01vZGFsRm9udEN0cmwnLFxuXHRcdFx0XHRcdHJlc29sdmU6IHtcblx0XHRcdFx0XHRcdGVkaXRvcjogZnVuY3Rpb24oKXtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIGVkaXRvcjtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0pO1xuXHRcdFx0fTtcblxuXHRcdFx0dGhpcy5ncmlkID0gZnVuY3Rpb24oKXtcblx0XHRcdFx0dmFyIGNvbnRhaW5lciA9ICQoZWRpdG9yLmdyYXBoLmNvbnRhaW5lcikuZmluZCgnc3ZnJylbMF07XG5cblx0XHRcdFx0aWYoY29udGFpbmVyLnN0eWxlLmJhY2tncm91bmRJbWFnZSl7XG5cdFx0XHRcdFx0Y29udGFpbmVyLnN0eWxlLmJhY2tncm91bmRJbWFnZSA9IG51bGw7XG5cdFx0XHRcdFx0ZWRpdG9yLnN0YXRlLmlzU2hvd0dyaWQgPSBmYWxzZTtcblx0XHRcdFx0fWVsc2V7XG5cdFx0XHRcdFx0Y29udGFpbmVyLnN0eWxlLmJhY2tncm91bmRJbWFnZSA9ICd1cmwoYXNzZXRzL3BsdWdpbnMvbXhHcmFwaC9pbWFnZXMvZ3JpZF9iZy5wbmcpJztcblx0XHRcdFx0XHRlZGl0b3Iuc3RhdGUuaXNTaG93R3JpZCA9IHRydWU7XG5cdFx0XHRcdFx0dGhpcy5zeW5jR3JpZCgpO1xuXHRcdFx0XHR9XG5cdFx0XHR9O1xuXG5cdFx0XHR0aGlzLmdldENpc0lkID0gZnVuY3Rpb24oKXtcblx0XHRcdFx0dmFyIGNlbGxzLCBpZHMgPSBbXTtcblxuXHRcdFx0XHRjZWxscyA9IGVkaXRvci5ncmFwaC5nZXREZXBDZWxscygpO1xuXHRcdFx0XHQkLmVhY2goY2VsbHMsIGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFx0aWYoVW5pdC5pc0NpQ2VsbCh0aGlzKSl7XG5cdFx0XHRcdFx0XHRpZHMucHVzaChVbml0LmdldENpSWRCeUNlbGwodGhpcykpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSk7XG5cblx0XHRcdFx0cmV0dXJuIGlkcztcblx0XHRcdH07XG5cblx0XHRcdHRoaXMuZ2V0Q2lzID0gZnVuY3Rpb24oKXtcblx0XHRcdFx0dmFyIGNlbGxzLCBjaXMgPSBbXTtcblxuXHRcdFx0XHRjZWxscyA9IGVkaXRvci5ncmFwaC5nZXREZXBDZWxscygpO1xuXHRcdFx0XHQkLmVhY2goY2VsbHMsIGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFx0aWYoVW5pdC5pc0NpQ2VsbCh0aGlzKSl7XG5cdFx0XHRcdFx0XHRjaXMucHVzaCh0aGlzKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0pO1xuXG5cdFx0XHRcdHJldHVybiBjaXM7XG5cdFx0XHR9O1xuXG5cblx0XHRcdHRoaXMuZ2V0WG1sID0gZnVuY3Rpb24oKXtcblx0XHRcdFx0dmFyIHhtbCxcblx0XHRcdFx0XHRpbWc7XG5cblx0XHRcdFx0eG1sID0gZWRpdG9yLmdldEdyYXBoWG1sKCk7XG5cdFx0XHRcdGltZyA9IGVkaXRvci5ncmFwaC5nZXRCYWNrZ3JvdW5kSW1hZ2UoKTtcblxuXHRcdFx0XHRpZihpbWcpe1xuXHRcdFx0XHRcdHhtbC5zZXRBdHRyaWJ1dGUoJ2JhY2tncm91bmQtdXJsJywgaW1nLnNyYyk7XG5cdFx0XHRcdFx0eG1sLnNldEF0dHJpYnV0ZSgnYmFja2dyb3VuZC13aWR0aCcsIGltZy53aWR0aCk7XG5cdFx0XHRcdFx0eG1sLnNldEF0dHJpYnV0ZSgnYmFja2dyb3VuZC1oZWlnaHQnLCBpbWcuaGVpZ2h0KTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldHVybiBteFV0aWxzLmdldFhtbCh4bWwpO1xuXHRcdFx0fTtcblxuXG5cdFx0XHR0aGlzLm9wZW5YbWwgPSBmdW5jdGlvbih4bWwpe1xuXHRcdFx0XHR2YXIgZG9jLFxuXHRcdFx0XHRcdHVybCA9ICcnLFxuXHRcdFx0XHRcdHdpZHRoID0gMCxcblx0XHRcdFx0XHRoZWlnaHQgPSAwLFxuXHRcdFx0XHRcdGltZyA9IG51bGwsXG5cdFx0XHRcdFx0ZWxlbWVudCA9IG51bGw7XG5cblx0XHRcdFx0ZG9jID0gbXhVdGlscy5wYXJzZVhtbCh4bWwpO1xuXG5cdFx0XHRcdGlmKGRvYy5kb2N1bWVudEVsZW1lbnQubm9kZU5hbWUgPT09ICdwYXJzZXJlcnJvcicpe1xuXHRcdFx0XHRcdFVuaXQuYWxlcnQoJ+mUmeivr++8muino+aekFhNTOaWh+aho+mUmeivr++8jOWPr+iDvVhNTOaWh+aho+aNn+Wdj++8gScpO1xuXHRcdFx0XHRcdHRocm93IG5ldyBFcnJvcigncGFyc2VyZXJyb3InKTtcblx0XHRcdFx0fWVsc2V7XG5cblx0XHRcdFx0XHRlZGl0b3IuZ3JhcGguc2V0QmFja2dyb3VuZEltYWdlKG51bGwpO1xuXHRcdFx0XHRcdGVsZW1lbnQgPSBkb2MuZG9jdW1lbnRFbGVtZW50O1xuXHRcdFx0XHRcdGVkaXRvci5ncmFwaC5tb2RlbC5jbGVhcigpO1xuXHRcdFx0XHRcdGVkaXRvci5zZXRHcmFwaFhtbChlbGVtZW50KTtcblx0XHRcdFx0XHRlZGl0b3IuZ3JhcGguem9vbUFjdHVhbCgpO1xuXHRcdFx0XHRcdGVkaXRvci5ncmFwaC52aWV3LnNldFRyYW5zbGF0ZSgwLCAwKTtcblx0XHRcdFx0XHRlZGl0b3IuZ3JhcGguem9vbVRvQ2VudGVyKCk7XG5cblx0XHRcdFx0XHR1cmwgPSBlbGVtZW50LmdldEF0dHJpYnV0ZSgnYmFja2dyb3VuZC11cmwnKTtcblx0XHRcdFx0XHR3aWR0aCA9IGVsZW1lbnQuZ2V0QXR0cmlidXRlKCdiYWNrZ3JvdW5kLXdpZHRoJyk7XG5cdFx0XHRcdFx0aGVpZ2h0ID0gZWxlbWVudC5nZXRBdHRyaWJ1dGUoJ2JhY2tncm91bmQtaGVpZ2h0Jyk7XG5cblx0XHRcdFx0XHRpZih1cmwgJiYgd2lkdGggJiYgaGVpZ2h0KXtcblx0XHRcdFx0XHRcdGltZyA9IG5ldyBteEltYWdlKHVybCwgd2lkdGgsIGhlaWdodCk7XG5cdFx0XHRcdFx0XHRlZGl0b3IuZ3JhcGguc2V0QmFja2dyb3VuZEltYWdlKGltZyk7XG5cdFx0XHRcdFx0XHRlZGl0b3IuZ3JhcGgudmlldy52YWxpZGF0ZSgpO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdC8vZ3JhcGguZXZlbnQudHJpZ2dlcihncmFwaC5ERUZJTkVfRVZFTlQuR1JBUEhfT1BFTl9YTUwsIHtlZGl0b3I6IGVkaXRvcn0pO1xuXHRcdFx0XHR9XG5cdFx0XHR9O1xuXG5cdFx0XHR0aGlzLm9wZW5WaWV3ID0gZnVuY3Rpb24odmlldyl7XG5cdFx0XHRcdGlmKHZpZXcueG1sKXtcblx0XHRcdFx0XHR0aGlzLm9wZW5YbWwodmlldy54bWwpO1xuXHRcdFx0XHRcdGVkaXRvci5zdGF0ZS5zZXRWaWV3KHZpZXcpO1xuXHRcdFx0XHR9XG5cdFx0XHR9O1xuXG5cdFx0XHR0aGlzLmRpc2FibGVkID0gZnVuY3Rpb24oKXtcblx0XHRcdFx0ZWRpdG9yLmdyYXBoLnNldENlbGxzTW92YWJsZShmYWxzZSk7XG5cdFx0XHRcdGVkaXRvci5ncmFwaC5zZXRDZWxsc0Nsb25lYWJsZShmYWxzZSk7XG5cdFx0XHRcdGVkaXRvci5ncmFwaC5zZXRDZWxsc0VkaXRhYmxlKGZhbHNlKTtcblx0XHRcdFx0ZWRpdG9yLmdyYXBoLnNldENlbGxzRGlzY29ubmVjdGFibGUoZmFsc2UpO1xuXHRcdFx0XHRlZGl0b3IuZ3JhcGguc2V0Q2VsbHNSZXNpemFibGUoZmFsc2UpO1xuXHRcdFx0XHRlZGl0b3IuZ3JhcGguc2V0Q2VsbHNTZWxlY3RhYmxlKGZhbHNlKTtcblx0XHRcdFx0ZWRpdG9yLmdyYXBoLnNldENlbGxzTW92YWJsZShmYWxzZSk7XG5cdFx0XHRcdC8vZWRpdG9yLmdyYXBoLnNldEV4dGVuZFBhcmVudHMoZmFsc2UpO1xuXHRcdFx0XHRlZGl0b3IuZ3JhcGguc2V0Q29ubmVjdGFibGUoZmFsc2UpO1xuXG5cdFx0XHR9O1xuXG5cdFx0XHR0aGlzLmVuYWJsZWQgPSBmdW5jdGlvbigpe1xuXHRcdFx0XHRlZGl0b3IuZ3JhcGguc2V0Q2VsbHNNb3ZhYmxlKHRydWUpO1xuXHRcdFx0XHRlZGl0b3IuZ3JhcGguc2V0Q2VsbHNDbG9uZWFibGUodHJ1ZSk7XG5cdFx0XHRcdGVkaXRvci5ncmFwaC5zZXRDZWxsc0VkaXRhYmxlKHRydWUpO1xuXHRcdFx0XHRlZGl0b3IuZ3JhcGguc2V0Q2VsbHNEaXNjb25uZWN0YWJsZSh0cnVlKTtcblx0XHRcdFx0ZWRpdG9yLmdyYXBoLnNldENlbGxzUmVzaXphYmxlKHRydWUpO1xuXHRcdFx0XHRlZGl0b3IuZ3JhcGguc2V0RXh0ZW5kUGFyZW50cyh0cnVlKTtcblx0XHRcdFx0ZWRpdG9yLmdyYXBoLnNldENvbm5lY3RhYmxlKHRydWUpO1xuXHRcdFx0fTtcblxuXG5cdFx0XHR0aGlzLm1vbml0b3IgPSBmdW5jdGlvbigpe1xuXHRcdFx0XHRpZihlZGl0b3IubW9uaXRvcil7XG5cdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0ZWRpdG9yLm1vbml0b3IgPSBuZXcgR3JhcGhNb25pdG9yKHtlZGl0b3I6IGVkaXRvcn0pO1xuXHRcdFx0fTtcblxuXG5cdFx0XHR0aGlzLnRvZ2dsZUF1dG9MYXlvdXQgPSBmdW5jdGlvbigpe1xuXHRcdFx0XHRlZGl0b3Iuc3RhdGUuaXNBdXRvTGF5b3V0ID0gIWVkaXRvci5zdGF0ZS5pc0F1dG9MYXlvdXQ7XG5cdFx0XHR9O1xuXG5cdFx0XHR0aGlzLnRvZ2dsZUF1dG9MaW5lID0gZnVuY3Rpb24oKXtcblx0XHRcdFx0ZWRpdG9yLnN0YXRlLmlzQXV0b0xpbmUgPSAhZWRpdG9yLnN0YXRlLmlzQXV0b0xpbmU7XG5cdFx0XHR9O1xuXG5cdFx0XHR0aGlzLnNob3dDaVRhYmxlID0gZnVuY3Rpb24oKXtcblx0XHRcdFx0ZWRpdG9yLnRhYmxlLnNob3coKTtcblx0XHRcdH07XG5cblx0XHRcdHRoaXMuaGlkZUNpVGFibGUgPSBmdW5jdGlvbigpe1xuXHRcdFx0XHRlZGl0b3IudGFibGUuaGlkZSgpO1xuXHRcdFx0fTtcblxuXHRcdFx0dGhpcy5leHBhbmROb2RlID0gZnVuY3Rpb24oKXtcblx0XHRcdFx0JG1vZGFsLm9wZW4oe1xuXHRcdFx0XHRcdHNpemU6ICdsZycsXG5cdFx0XHRcdFx0dGVtcGxhdGVVcmw6ICdhcHAvbW9kYWwvZXhwYW5kL2V4cGFuZC5odG1sJyxcblx0XHRcdFx0XHRjb250cm9sbGVyOiAnTW9kYWxFeHBhbmRDdHJsJyxcblx0XHRcdFx0XHRyZXNvbHZlOiB7XG5cdFx0XHRcdFx0XHRlZGl0b3I6IGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFx0XHRcdHJldHVybiBlZGl0b3I7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9KTtcblx0XHRcdH07XG5cblx0XHRcdHRoaXMuZXhwb3J0UG5nID0gZnVuY3Rpb24oKXtcblx0XHRcdFx0RXhwb3J0U2VydmljZS5leHBvcnRQbmcodGhpcy5nZXRTdmcoKSlcblx0XHRcdFx0XHQuc3VjY2VzcyhmdW5jdGlvbihyZXN1bHQpe1xuXHRcdFx0XHRcdFx0VW5pdC5kb3dubG9hZChyZXN1bHQuZGF0YS51cmwpO1xuXHRcdFx0XHRcdH0pO1xuXHRcdFx0fTtcblxuXHRcdFx0dGhpcy5leHBvcnRQZGYgPSBmdW5jdGlvbigpe1xuXHRcdFx0XHRFeHBvcnRTZXJ2aWNlLmV4cG9ydFBkZih0aGlzLmdldFN2ZygpKVxuXHRcdFx0XHRcdC5zdWNjZXNzKGZ1bmN0aW9uKHJlc3VsdCl7XG5cdFx0XHRcdFx0XHRVbml0LmRvd25sb2FkKHJlc3VsdC5kYXRhLnVybCk7XG5cdFx0XHRcdFx0fSk7XG5cdFx0XHR9O1xuXG5cdFx0XHR0aGlzLmV4cG9ydFhtbCA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRcdHZhciBmaWxlTmFtZSA9ICdpdGFfJyArIChEYXRlLm5vdygpKSArICcueG1sJztcblx0XHRcdFx0dmFyIHhtbCA9IHRoaXMuZ2V0WG1sKCk7XG5cdFx0XHRcdGlmKHR5cGVvZiBCbG9iID09PSAnZnVuY3Rpb24nKXtcblx0XHRcdFx0XHRzYXZlQXMoXG5cdFx0XHRcdFx0XHRuZXcgQmxvYihbeG1sXSwge3R5cGU6ICd0ZXh0L3BsYWluO2NoYXJzZXQ9dXRmLTgnfSksXG5cdFx0XHRcdFx0XHRmaWxlTmFtZVxuXHRcdFx0XHRcdCk7XG5cdFx0XHRcdH1lbHNle1xuXHRcdFx0XHRcdFVuaXQuYWxlcnQoJ+ezu+e7n+mUmeivrycpO1xuXHRcdFx0XHR9XG5cdFx0XHR9O1xuXG5cdFx0XHR0aGlzLmV4cG9ydFN2ZyA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRcdHZhciBmaWxlTmFtZSA9ICdpdGFfJyArIChEYXRlLm5vdygpKSArICcuc3ZnJztcblx0XHRcdFx0dmFyIHN2ZyA9IHRoaXMuZ2V0U3ZnKCk7XG5cblx0XHRcdFx0aWYodHlwZW9mIEJsb2IgPT09ICdmdW5jdGlvbicpe1xuXHRcdFx0XHRcdHNhdmVBcyhcblx0XHRcdFx0XHRcdG5ldyBCbG9iKFtzdmddLCB7dHlwZTogJ3RleHQvcGxhaW47Y2hhcnNldD11dGYtOCd9KSxcblx0XHRcdFx0XHRcdGZpbGVOYW1lXG5cdFx0XHRcdFx0KTtcblx0XHRcdFx0fWVsc2V7XG5cdFx0XHRcdFx0VW5pdC5hbGVydCgn57O757uf6ZSZ6K+vJyk7XG5cdFx0XHRcdH1cblx0XHRcdH07XG5cblx0XHRcdHRoaXMuZ2V0U3ZnID0gZnVuY3Rpb24oKXtcblx0XHRcdFx0dmFyIHN2ZyA9IGVkaXRvci5ncmFwaC5nZXRTdmcoKTtcblx0XHRcdFx0cmV0dXJuIGFuZ3VsYXIuaXNPYmplY3Qoc3ZnKSA/IHN2Zy5vdXRlckhUTUwgOiBzdmdcblx0XHRcdH07XG5cblx0XHRcdHRoaXMuY29weSA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRcdG14Q2xpcGJvYXJkLmNvcHkoZWRpdG9yLmdyYXBoKTtcblx0XHRcdH07XG5cblx0XHRcdHRoaXMuY3V0ID0gZnVuY3Rpb24oKXtcblx0XHRcdFx0bXhDbGlwYm9hcmQuY3V0KGVkaXRvci5ncmFwaCk7XG5cdFx0XHR9O1xuXG5cdFx0XHR0aGlzLnBhc3RlID0gZnVuY3Rpb24oKXtcblx0XHRcdFx0bXhDbGlwYm9hcmQucGFzdGUoZWRpdG9yLmdyYXBoKTtcblx0XHRcdH07XG5cblx0XHRcdHRoaXMubGF5b3V0SG9yaXpvbnRhbCA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFVuaXQubGF5b3V0KFxuXHRcdFx0XHRcdGVkaXRvci5ncmFwaCxcblx0XHRcdFx0XHRuZXcgbXhIaWVyYXJjaGljYWxMYXlvdXQoZWRpdG9yLmdyYXBoLCBteENvbnN0YW50cy5ESVJFQ1RJT05fV0VTVCksXG5cdFx0XHRcdFx0dHJ1ZVxuXHRcdFx0XHQpO1xuXG5cdFx0XHRcdHRoaXMuem9vbUNlbnRlcigpO1xuXHRcdFx0fTtcblxuXHRcdFx0dGhpcy5sYXlvdXRWZXJ0aWNhbCA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFVuaXQubGF5b3V0KFxuXHRcdFx0XHRcdGVkaXRvci5ncmFwaCxcblx0XHRcdFx0XHRuZXcgbXhIaWVyYXJjaGljYWxMYXlvdXQoZWRpdG9yLmdyYXBoLCBteENvbnN0YW50cy5ESVJFQ1RJT05fTk9SVEgpLFxuXHRcdFx0XHRcdHRydWVcblx0XHRcdFx0KTtcblxuXHRcdFx0XHR0aGlzLnpvb21DZW50ZXIoKTtcblx0XHRcdH07XG5cblxuXHRcdFx0dGhpcy5sYXlvdXRDaXJjbGUgPSBmdW5jdGlvbigpe1xuXHRcdFx0XHRVbml0LmxheW91dChcblx0XHRcdFx0XHRlZGl0b3IuZ3JhcGgsXG5cdFx0XHRcdFx0bmV3IG14Q2lyY2xlTGF5b3V0KGVkaXRvci5ncmFwaCksXG5cdFx0XHRcdFx0dHJ1ZVxuXHRcdFx0XHQpO1xuXG5cdFx0XHRcdHRoaXMuem9vbUNlbnRlcigpO1xuXHRcdFx0fTtcblxuXG5cdFx0XHR0aGlzLmxheW91dE9yZ2FuaWMgPSBmdW5jdGlvbigpe1xuXHRcdFx0XHRVbml0LmxheW91dChcblx0XHRcdFx0XHRlZGl0b3IuZ3JhcGgsXG5cdFx0XHRcdFx0bmV3IG14RmFzdE9yZ2FuaWNMYXlvdXQoZWRpdG9yLmdyYXBoKSxcblx0XHRcdFx0XHR0cnVlXG5cdFx0XHRcdCk7XG5cblx0XHRcdFx0dGhpcy56b29tQ2VudGVyKCk7XG5cdFx0XHR9O1xuXG5cdFx0XHR0aGlzLmxheW91dFBhcmFsbGVsID0gZnVuY3Rpb24oKXtcblx0XHRcdFx0VW5pdC5sYXlvdXQoXG5cdFx0XHRcdFx0ZWRpdG9yLmdyYXBoLFxuXHRcdFx0XHRcdG5ldyBteFBhcmFsbGVsRWRnZUxheW91dChlZGl0b3IuZ3JhcGgpLFxuXHRcdFx0XHRcdHRydWVcblx0XHRcdFx0KTtcblxuXHRcdFx0XHR0aGlzLnpvb21DZW50ZXIoKTtcblx0XHRcdH07XG5cblx0XHRcdHRoaXMubGF5b3V0U3RhY2tWZXJ0aWNhbCA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFVuaXQubGF5b3V0KFxuXHRcdFx0XHRcdGVkaXRvci5ncmFwaCxcblx0XHRcdFx0XHRuZXcgbXhTdGFja0xheW91dChlZGl0b3IuZ3JhcGgsIGZhbHNlKSxcblx0XHRcdFx0XHR0cnVlXG5cdFx0XHRcdCk7XG5cblx0XHRcdFx0dGhpcy56b29tQ2VudGVyKCk7XG5cdFx0XHR9O1xuXG5cdFx0XHR0aGlzLmxheW91dFN0YWNrSG9yaXpvbnRhbCA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFVuaXQubGF5b3V0KFxuXHRcdFx0XHRcdGVkaXRvci5ncmFwaCxcblx0XHRcdFx0XHRuZXcgbXhTdGFja0xheW91dChlZGl0b3IuZ3JhcGgsIHRydWUpLFxuXHRcdFx0XHRcdHRydWVcblx0XHRcdFx0KTtcblxuXHRcdFx0XHR0aGlzLnpvb21DZW50ZXIoKTtcblx0XHRcdH07XG5cblx0XHRcdHRoaXMudGFnID0gZnVuY3Rpb24oKXtcblx0XHRcdFx0dmFyIGNlbGxzID0gZWRpdG9yLmdyYXBoLmdldERlcENlbGxzKCk7XG5cdFx0XHRcdCQuZWFjaChjZWxscywgZnVuY3Rpb24oKXtcblx0XHRcdFx0XHRpZih0aGlzLnZlcnRleCAmJiAhVW5pdC5pc0NpSW4odGhpcykpe1xuXHRcdFx0XHRcdFx0ZWRpdG9yLmdyYXBoLnNldE9yaVN0eWxlKHRoaXMsIHRoaXMuZ2V0U3R5bGUoKSk7XG5cdFx0XHRcdFx0XHR0aGlzLnNldFN0eWxlKCd3aGl0ZVNwYWNlPXdyYXA7Jyk7XG5cdFx0XHRcdFx0XHRlZGl0b3IuZ3JhcGgucmVmcmVzaCh0aGlzKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0pO1xuXHRcdFx0fTtcblxuXHRcdFx0dGhpcy5vcmlnaW5hbCA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRcdHZhciBjZWxscyA9IGVkaXRvci5ncmFwaC5nZXREZXBDZWxscygpO1xuXHRcdFx0XHQkLmVhY2goY2VsbHMsIGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFx0aWYodGhpcy52ZXJ0ZXggJiYgIVVuaXQuaXNDaUluKHRoaXMpKXtcblx0XHRcdFx0XHRcdHRoaXMuc2V0U3R5bGUoZWRpdG9yLmdyYXBoLmdldE9yaVN0eWxlKHRoaXMpKTtcblx0XHRcdFx0XHRcdGVkaXRvci5ncmFwaC5yZWZyZXNoKHRoaXMpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSk7XG5cdFx0XHR9O1xuXG5cdFx0XHR0aGlzLmNlbGxTdHJva2VTaXplID0gZnVuY3Rpb24oKXtcblxuXHRcdFx0XHR2YXIgY2VsbHMgPSBlZGl0b3IuZ3JhcGguZ2V0U2VsZWN0aW9uQ2VsbHMoKTtcblxuXHRcdFx0XHRpZihjZWxscy5sZW5ndGgpe1xuXHRcdFx0XHRcdHZhciBvID0gZWRpdG9yLmdyYXBoLmdldENlbGxTdHlsZShjZWxsc1swXSk7XG5cblx0XHRcdFx0XHQkbW9kYWwub3Blbih7XG5cdFx0XHRcdFx0XHR0ZW1wbGF0ZVVybDogJ2FwcC9tb2RhbC9udW1iZXIvbnVtYmVyLmh0bWwnLFxuXHRcdFx0XHRcdFx0Y29udHJvbGxlcjogJ01vZGFsTnVtYmVyQ3RybCcsXG5cdFx0XHRcdFx0XHRyZXNvbHZlOiB7XG5cdFx0XHRcdFx0XHRcdHRpdGxlOiBmdW5jdGlvbigpe1xuXHRcdFx0XHRcdFx0XHRcdHJldHVybiAn6L655qGG5aSn5bCPJztcblx0XHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRcdFx0ZGVmYXVsdFZhbHVlOiBmdW5jdGlvbigpe1xuXHRcdFx0XHRcdFx0XHRcdHJldHVybiBvLnN0cm9rZVdpZHRoID8gby5zdHJva2VXaWR0aCA6IDE7XG5cdFx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHRcdG1heFZhbHVlOiBmdW5jdGlvbigpeyByZXR1cm4gMTI7IH0sXG5cdFx0XHRcdFx0XHRcdG1pblZhbHVlOiBmdW5jdGlvbigpeyByZXR1cm4gMTsgfSxcblx0XHRcdFx0XHRcdFx0Zm46IGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFx0XHRcdFx0cmV0dXJuIGZ1bmN0aW9uKG51bWJlcil7XG5cdFx0XHRcdFx0XHRcdFx0XHRlZGl0b3IuZ3JhcGguc2V0Q2VsbFN0eWxlcyhteENvbnN0YW50cy5TVFlMRV9TVFJPS0VXSURUSCwgbnVtYmVyKTtcblx0XHRcdFx0XHRcdFx0XHR9O1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdH1cblxuXHRcdFx0fTtcblxuXHRcdFx0dGhpcy5jZWxsT3BhY2l0eSA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRcdHZhciBjZWxscyA9IGVkaXRvci5ncmFwaC5nZXRTZWxlY3Rpb25DZWxscygpO1xuXG5cdFx0XHRcdGlmKGNlbGxzLmxlbmd0aCl7XG5cdFx0XHRcdFx0dmFyIG8gPSBlZGl0b3IuZ3JhcGguZ2V0Q2VsbFN0eWxlKGNlbGxzWzBdKTtcblxuXHRcdFx0XHRcdCRtb2RhbC5vcGVuKHtcblx0XHRcdFx0XHRcdHRlbXBsYXRlVXJsOiAnYXBwL21vZGFsL251bWJlci9udW1iZXIuaHRtbCcsXG5cdFx0XHRcdFx0XHRjb250cm9sbGVyOiAnTW9kYWxOdW1iZXJDdHJsJyxcblx0XHRcdFx0XHRcdHJlc29sdmU6IHtcblx0XHRcdFx0XHRcdFx0dGl0bGU6IGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFx0XHRcdFx0cmV0dXJuICfpgI/mmI7luqYnO1xuXHRcdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFx0XHRkZWZhdWx0VmFsdWU6IGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFx0XHRcdFx0cmV0dXJuIG8ub3BhY2l0eSA/IG8ub3BhY2l0eSA6IDE7XG5cdFx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHRcdG1heFZhbHVlOiBmdW5jdGlvbigpeyByZXR1cm4gMTAwOyB9LFxuXHRcdFx0XHRcdFx0XHRtaW5WYWx1ZTogZnVuY3Rpb24oKXsgcmV0dXJuIDA7IH0sXG5cdFx0XHRcdFx0XHRcdGZuOiBmdW5jdGlvbigpe1xuXHRcdFx0XHRcdFx0XHRcdHJldHVybiBmdW5jdGlvbihudW1iZXIpe1xuXHRcdFx0XHRcdFx0XHRcdFx0ZWRpdG9yLmdyYXBoLnNldENlbGxTdHlsZXMobXhDb25zdGFudHMuU1RZTEVfT1BBQ0lUWSwgbnVtYmVyKTtcblx0XHRcdFx0XHRcdFx0XHR9O1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdH1cblx0XHRcdH07XG5cblx0XHRcdHRoaXMucmVsYXRpb25WaWV3U2V0ID0gZnVuY3Rpb24oKXtcblx0XHRcdFx0aWYoZWRpdG9yLmdyYXBoLmdldFNlbGVjdGlvbkNlbGwoKSl7XG5cdFx0XHRcdFx0JG1vZGFsLm9wZW4oe1xuXHRcdFx0XHRcdFx0c2l6ZTogJ2xnJyxcblx0XHRcdFx0XHRcdHRlbXBsYXRlVXJsOiAnYXBwL21vZGFsL3JlbGF0aW9uVmlldy9zZXQuaHRtbCcsXG5cdFx0XHRcdFx0XHRjb250cm9sbGVyOiAnTW9kYWxSZWxhdGlvblZpZXdTZXRDdHJsJyxcblx0XHRcdFx0XHRcdHJlc29sdmU6IHtcblx0XHRcdFx0XHRcdFx0ZWRpdG9yOiBmdW5jdGlvbigpeyByZXR1cm4gZWRpdG9yOyB9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdH1cblx0XHRcdH07XG5cblx0XHRcdHRoaXMucmVsYXRpb25WaWV3T3BlbiA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRcdGlmKGVkaXRvci5ncmFwaC5nZXRTZWxlY3Rpb25DZWxsKCkpe1xuXHRcdFx0XHRcdCRtb2RhbC5vcGVuKHtcblx0XHRcdFx0XHRcdHNpemU6ICdsZycsXG5cdFx0XHRcdFx0XHR0ZW1wbGF0ZVVybDogJ2FwcC9tb2RhbC9yZWxhdGlvblZpZXcvb3Blbi5odG1sJyxcblx0XHRcdFx0XHRcdGNvbnRyb2xsZXI6ICdNb2RhbFJlbGF0aW9uVmlld09wZW5DdHJsJyxcblx0XHRcdFx0XHRcdHJlc29sdmU6IHtcblx0XHRcdFx0XHRcdFx0ZWRpdG9yOiBmdW5jdGlvbigpeyByZXR1cm4gZWRpdG9yOyB9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdH1cblx0XHRcdH07XG5cblxuXHRcdFx0dGhpcy5oaXN0b3J5QmFjayA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRcdGVkaXRvci5oaXN0b3J5LmJhY2soKTtcblx0XHRcdH07XG5cblx0XHRcdHRoaXMub3BlblVybCA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRcdHZhciBjZWxsID0gZWRpdG9yLmdyYXBoLmdldFNlbGVjdGlvbkNlbGwoKTtcblxuXHRcdFx0XHRpZihjZWxsKXtcblx0XHRcdFx0XHRsaW5rID0gZWRpdG9yLmdyYXBoLmdldENlbGxBdHRyKGNlbGwsICdsaW5rJyk7XG5cdFx0XHRcdFx0aWYobGluayl7XG5cdFx0XHRcdFx0XHR3aW5kb3cub3BlbihsaW5rKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH07XG5cblxuXHRcdFx0dGhpcy50b29sYmFyUmVmcmVzaCA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRcdGlmKGVkaXRvci50b29sYmFyKXtcblx0XHRcdFx0XHRlZGl0b3IudG9vbGJhci5yZWZyZXNoKCk7XG5cdFx0XHRcdH1cblx0XHRcdH07XG5cblx0XHR9O1xuXHR9O1xuXG5cdGdyYXBoLmFwcC5mYWN0b3J5KCdHcmFwaEFjdGlvbicsIGZhY3RvcnkpO1xuXG59KShuYW1lU3BhY2UucmVnKCdncmFwaCcpKTtcblxuLyogZ2xvYmFsIG14RXZlbnQgKi9cblxuKGZ1bmN0aW9uIChncmFwaCkge1xuXG4gICAgJ3VzZSBzdHJpY3QnO1xuXG5cdGdyYXBoLmFwcC5mYWN0b3J5KCdBdXRvTGF5b3V0JywgZnVuY3Rpb24oKXtcblxuXHRcdHZhciB0cmFuc2l0ID0gKGZ1bmN0aW9uICgpIHtcblx0XHRcdHZhciB0cmFuc2l0ID0ge307XG5cdFx0XHR0cmFuc2l0LnV0aWwgPSB7fTtcblx0XHRcdHRyYW5zaXQudXRpbC5Qb2ludCA9IGZ1bmN0aW9uIChpWCwgaVkpIHtcblx0XHRcdFx0dGhpcy5hYnNvbHV0ZVggPSBpWDtcblx0XHRcdFx0dGhpcy5hYnNvbHV0ZVkgPSBpWTtcblx0XHRcdFx0dGhpcy5yZWxhdGl2ZVggPSAwO1xuXHRcdFx0XHR0aGlzLnJlbGF0aXZlWSA9IDA7XG5cdFx0XHR9O1xuXG5cdFx0XHR0cmFuc2l0LnV0aWwuUG9pbnQucHJvdG90eXBlLmFic29sdXRlMnJlbGF0aXZlID0gZnVuY3Rpb24gKG9CYXNlUG9pbnQpIHtcblx0XHRcdFx0dGhpcy5yZWxhdGl2ZVggPSB0aGlzLmFic29sdXRlWCAtIG9CYXNlUG9pbnQuYWJzb2x1dGVYO1xuXHRcdFx0XHR0aGlzLnJlbGF0aXZlWSA9IHRoaXMuYWJzb2x1dGVZIC0gb0Jhc2VQb2ludC5hYnNvbHV0ZVk7XG5cdFx0XHR9O1xuXHRcdFx0dHJhbnNpdC51dGlsLlBvaW50LnByb3RvdHlwZS5yZWxhdGl2ZTJhYnNvbHV0ZSA9IGZ1bmN0aW9uIChvQmFzZVBvaW50KSB7XG5cdFx0XHRcdHRoaXMuYWJzb2x1dGVYID0gdGhpcy5yZWxhdGl2ZVggKyBvQmFzZVBvaW50LmFic29sdXRlWDtcblx0XHRcdFx0dGhpcy5hYnNvbHV0ZVkgPSB0aGlzLnJlbGF0aXZlWSArIG9CYXNlUG9pbnQuYWJzb2x1dGVZO1xuXHRcdFx0fTtcblx0XHRcdHRyYW5zaXQudXRpbC5Qb2ludC5wcm90b3R5cGUuZXhwYW5kSXQgPSBmdW5jdGlvbiAob1BvaW50LCBpUngsIGlSeSwgaU54LCBpTnkpIHtcblx0XHRcdFx0dmFyIGlUbnggPSBpTnggLyBpUng7XG5cdFx0XHRcdHZhciBpVG55ID0gaU55IC8gaVJ5O1xuXHRcdFx0XHR2YXIgaVRseCA9IGlOeCAtIGlSeDtcblx0XHRcdFx0dmFyIGlUbHkgPSBpTnkgLSBpUnk7XG5cdFx0XHRcdHRoaXMucmVsYXRpdmVYID0gdHJhbnNpdC51dGlsLm1hdGguY2hhbmdlSXQodGhpcy5yZWxhdGl2ZVgsIGlSeCwgaVRueCwgaVRseCk7XG5cdFx0XHRcdHRoaXMucmVsYXRpdmVZID0gdHJhbnNpdC51dGlsLm1hdGguY2hhbmdlSXQodGhpcy5yZWxhdGl2ZVksIGlSeSwgaVRueSwgaVRseSk7XG5cdFx0XHRcdHRoaXMucmVsYXRpdmUyYWJzb2x1dGUob1BvaW50KTtcblx0XHRcdH07XG5cblx0XHRcdHRyYW5zaXQudXRpbC5tYXRoID0ge307XG5cdFx0XHR0cmFuc2l0LnV0aWwubWF0aC5jaGFuZ2VJdCA9IGZ1bmN0aW9uIChpRCwgaVIsIGlOLCBpTCkge1xuXHRcdFx0XHRyZXR1cm4gKGlEID49IC0xICogaVIgJiYgaUQgPD0gaVIpID8gaUQgKiBpTiA6IChpRCA8IC0xICogaVIgPyBpRCAtIGlMIDogaUQgKyBpTCk7XG5cdFx0XHR9O1xuXHRcdFx0dHJhbnNpdC51dGlsLm1hdGguY2hhbmdlQmFjayA9IGZ1bmN0aW9uIChpRCwgaVIsIGlOLCBpTCkge1xuXHRcdFx0XHRyZXR1cm4gKGlEID49IC0xICogaVIgJiYgaUQgPD0gaVIpID8gaUQgLyBpTiA6IChpRCA8IC0xICogaVIgPyBpRCArIGlMIDogaUQgLSBpTCk7XG5cdFx0XHR9O1xuXG5cdFx0XHRyZXR1cm4gdHJhbnNpdDtcblx0XHR9KSgpO1xuXG5cblx0XHR2YXIgRiA9IGZ1bmN0aW9uIChncmFwaCkge1xuXHRcdFx0dGhpcy5ncmFwaCA9IGdyYXBoO1xuXHRcdFx0dGhpcy5mb2xkSGFuZGxlKCk7XG5cdFx0fTtcblxuXHRcdEYucHJvdG90eXBlLmZvbGRIYW5kbGUgPSBmdW5jdGlvbiAoKSB7XG5cdFx0XHR2YXIgZm9sZGluZ0hhbmRsZXIsXG5cdFx0XHRcdF90aGlzID0gdGhpcztcblxuXHRcdFx0X3RoaXMuZ3JhcGguZm9sZEhhbmRsZSA9IGZ1bmN0aW9uIChjZWxsKSB7XG5cdFx0XHRcdF90aGlzLmV4cGFuZExheW91dChjZWxsKTtcblx0XHRcdFx0X3RoaXMuZ3JhcGguY2xlYXJTZWxlY3Rpb24oKTtcblx0XHRcdH07XG5cblxuXHRcdFx0Zm9sZGluZ0hhbmRsZXIgPSBmdW5jdGlvbiAoc2VuZGVyLCBldnQpIHtcblx0XHRcdFx0dmFyIGNlbGxzID0gZXZ0LmdldFByb3BlcnR5KCdjZWxscycpO1xuXG5cdFx0XHRcdGlmIChjZWxsc1swXS5jb2xsYXBzZWQpIHtcblx0XHRcdFx0XHRfdGhpcy5jb2xsYXNwZUxheW91dChjZWxsc1swXSk7XG5cdFx0XHRcdFx0X3RoaXMuZ3JhcGguY2xlYXJTZWxlY3Rpb24oKTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRfdGhpcy5leHBhbmRMYXlvdXQoY2VsbHNbMF0pO1xuXHRcdFx0XHRcdF90aGlzLmdyYXBoLmNsZWFyU2VsZWN0aW9uKCk7XG5cdFx0XHRcdH1cblx0XHRcdH07XG5cblx0XHRcdF90aGlzLmdyYXBoLmFkZExpc3RlbmVyKG14RXZlbnQuRk9MRF9DRUxMUywgZm9sZGluZ0hhbmRsZXIpO1xuXHRcdH07XG5cblxuXHRcdEYucHJvdG90eXBlLmNvbGxhc3BlTGF5b3V0ID0gZnVuY3Rpb24gKGNlbGwpIHtcblx0XHRcdHZhciBmLFxuXHRcdFx0XHRfdGhpcyA9IHRoaXMsXG5cdFx0XHRcdG9yaUNlbGwgPSBjZWxsLFxuXHRcdFx0XHRvZmZzZXRYID0gTWF0aC5yb3VuZCgoY2VsbC5nZW9tZXRyeS5hbHRlcm5hdGVCb3VuZHMud2lkdGggLSBjZWxsLmdlb21ldHJ5LndpZHRoKSAvIDIpLFxuXHRcdFx0XHRvZmZzZXRZID0gTWF0aC5yb3VuZCgoY2VsbC5nZW9tZXRyeS5hbHRlcm5hdGVCb3VuZHMuaGVpZ2h0IC0gY2VsbC5nZW9tZXRyeS5oZWlnaHQpIC8gMik7XG5cblx0XHRcdGYgPSBmdW5jdGlvbiAoY2VsbCkge1xuXHRcdFx0XHR2YXIgY2VsbHMgPSBfdGhpcy5ncmFwaC5nZXRDaGlsZFZlcnRpY2VzKGNlbGwuZ2V0UGFyZW50KCkpLFxuXHRcdFx0XHRcdHBDZWxsID0gY2VsbC5nZXRQYXJlbnQoKSxcblx0XHRcdFx0XHRvcmlQb2ludCA9IHt9O1xuXG5cdFx0XHRcdGlmIChwQ2VsbC5pZCAhPT0gJzEnKSB7XG5cdFx0XHRcdFx0cENlbGwuZ2VvbWV0cnkud2lkdGggLT0gb2Zmc2V0WCAqIDI7XG5cdFx0XHRcdFx0cENlbGwuZ2VvbWV0cnkuaGVpZ2h0IC09IG9mZnNldFkgKiAyO1xuXG5cdFx0XHRcdFx0JC5lYWNoKGNlbGxzLCBmdW5jdGlvbiAoKSB7XG5cdFx0XHRcdFx0XHR2YXIgX3RoaXMgPSB0aGlzO1xuXHRcdFx0XHRcdFx0aWYgKGNlbGwuaWQgPT09IF90aGlzLmlkKSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0X3RoaXMuZ2VvbWV0cnkueCAtPSBvZmZzZXRYO1xuXHRcdFx0XHRcdFx0X3RoaXMuZ2VvbWV0cnkueSAtPSBvZmZzZXRZO1xuXHRcdFx0XHRcdH0pO1xuXG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0Y2VsbC5nZW9tZXRyeS54ICs9IG9mZnNldFg7XG5cdFx0XHRcdFx0Y2VsbC5nZW9tZXRyeS55ICs9IG9mZnNldFk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRvcmlQb2ludC54ID0gY2VsbC5nZW9tZXRyeS54ICsgd2luZG93LnBhcnNlSW50KGNlbGwuZ2VvbWV0cnkud2lkdGggLyAyLCAxMCk7XG5cdFx0XHRcdG9yaVBvaW50LnkgPSBjZWxsLmdlb21ldHJ5LnkgKyB3aW5kb3cucGFyc2VJbnQoY2VsbC5nZW9tZXRyeS5oZWlnaHQgLyAyLCAxMCk7XG5cblx0XHRcdFx0JC5lYWNoKGNlbGxzLCBmdW5jdGlvbiAoKSB7XG5cdFx0XHRcdFx0dmFyIF90aGlzID0gdGhpcyxcblx0XHRcdFx0XHRcdGNlbnRlclBvaW50ID0ge30sXG5cdFx0XHRcdFx0XHRvQmFzZVBvaW50LFxuXHRcdFx0XHRcdFx0b1RhcmdldFBvaW50O1xuXG5cdFx0XHRcdFx0aWYgKGNlbGwuaWQgPT09IF90aGlzLmlkKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRjZW50ZXJQb2ludC54ID0gX3RoaXMuZ2VvbWV0cnkueCArIHdpbmRvdy5wYXJzZUludChfdGhpcy5nZW9tZXRyeS53aWR0aCAvIDIsIDEwKTtcblx0XHRcdFx0XHRjZW50ZXJQb2ludC55ID0gX3RoaXMuZ2VvbWV0cnkueSArIHdpbmRvdy5wYXJzZUludChfdGhpcy5nZW9tZXRyeS5oZWlnaHQgLyAyLCAxMCk7XG5cblx0XHRcdFx0XHRvQmFzZVBvaW50ID0gbmV3IHRyYW5zaXQudXRpbC5Qb2ludChvcmlQb2ludC54LCBvcmlQb2ludC55KTtcblx0XHRcdFx0XHRvVGFyZ2V0UG9pbnQgPSBuZXcgdHJhbnNpdC51dGlsLlBvaW50KGNlbnRlclBvaW50LngsIGNlbnRlclBvaW50LnkpO1xuXG5cdFx0XHRcdFx0b1RhcmdldFBvaW50LmFic29sdXRlMnJlbGF0aXZlKG9CYXNlUG9pbnQpO1xuXG5cdFx0XHRcdFx0aWYgKG9yaUNlbGwuaWQgPT09IGNlbGwuaWQpIHtcblx0XHRcdFx0XHRcdG9UYXJnZXRQb2ludC5leHBhbmRJdChcblx0XHRcdFx0XHRcdFx0b0Jhc2VQb2ludCxcblx0XHRcdFx0XHRcdFx0Y2VsbC5nZW9tZXRyeS5hbHRlcm5hdGVCb3VuZHMud2lkdGggLyAyLFxuXHRcdFx0XHRcdFx0XHRjZWxsLmdlb21ldHJ5LmFsdGVybmF0ZUJvdW5kcy5oZWlnaHQgLyAyLFxuXHRcdFx0XHRcdFx0XHRjZWxsLmdlb21ldHJ5LndpZHRoIC8gMixcblx0XHRcdFx0XHRcdFx0Y2VsbC5nZW9tZXRyeS5oZWlnaHQgLyAyXG5cdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRvVGFyZ2V0UG9pbnQuZXhwYW5kSXQoXG5cdFx0XHRcdFx0XHRcdG9CYXNlUG9pbnQsXG5cdFx0XHRcdFx0XHRcdGNlbGwuZ2VvbWV0cnkud2lkdGggLyAyICsgb2Zmc2V0WCxcblx0XHRcdFx0XHRcdFx0Y2VsbC5nZW9tZXRyeS5oZWlnaHQgLyAyICsgb2Zmc2V0WSxcblx0XHRcdFx0XHRcdFx0Y2VsbC5nZW9tZXRyeS53aWR0aCAvIDIsXG5cdFx0XHRcdFx0XHRcdGNlbGwuZ2VvbWV0cnkuaGVpZ2h0IC8gMlxuXHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRfdGhpcy5nZW9tZXRyeS54ID0gTWF0aC5yb3VuZChvVGFyZ2V0UG9pbnQuYWJzb2x1dGVYIC0gX3RoaXMuZ2VvbWV0cnkud2lkdGggLyAyKTtcblx0XHRcdFx0XHRfdGhpcy5nZW9tZXRyeS55ID0gTWF0aC5yb3VuZChvVGFyZ2V0UG9pbnQuYWJzb2x1dGVZIC0gX3RoaXMuZ2VvbWV0cnkuaGVpZ2h0IC8gMik7XG5cdFx0XHRcdH0pO1xuXHRcdFx0fTtcblxuXHRcdFx0ZG8ge1xuXHRcdFx0XHRfdGhpcy5ncmFwaC5yZWZyZXNoKCk7XG5cdFx0XHRcdGYoY2VsbCk7XG5cdFx0XHRcdGNlbGwgPSBjZWxsLmdldFBhcmVudCgpO1xuXHRcdFx0fSB3aGlsZSAoY2VsbC5pZCAhPT0gJzEnKTtcblx0XHRcdF90aGlzLmdyYXBoLnJlZnJlc2goKTtcblx0XHRcdF90aGlzLmdyYXBoLmNsZWFyU2VsZWN0aW9uKCk7XG5cdFx0XHRfdGhpcy5ncmFwaC5zZXRTZWxlY3Rpb25DZWxsKG9yaUNlbGwpO1xuXHRcdH07XG5cblx0XHRGLnByb3RvdHlwZS5leHBhbmRMYXlvdXQgPSBmdW5jdGlvbiAoY2VsbCkge1xuXHRcdFx0dmFyIGYsXG5cdFx0XHRcdF90aGlzID0gdGhpcyxcblx0XHRcdFx0b3JpQ2VsbCA9IGNlbGwsXG5cdFx0XHRcdG9mZnNldFggPSBNYXRoLnJvdW5kKChjZWxsLmdlb21ldHJ5LndpZHRoIC0gY2VsbC5nZW9tZXRyeS5hbHRlcm5hdGVCb3VuZHMud2lkdGgpIC8gMiksXG5cdFx0XHRcdG9mZnNldFkgPSBNYXRoLnJvdW5kKChjZWxsLmdlb21ldHJ5LmhlaWdodCAtIGNlbGwuZ2VvbWV0cnkuYWx0ZXJuYXRlQm91bmRzLmhlaWdodCkgLyAyKTtcblxuXHRcdFx0ZiA9IGZ1bmN0aW9uIChjZWxsKSB7XG5cdFx0XHRcdHZhciBjZWxscyA9IF90aGlzLmdyYXBoLmdldENoaWxkVmVydGljZXMoY2VsbC5nZXRQYXJlbnQoKSksXG5cdFx0XHRcdFx0cENlbGwgPSBjZWxsLmdldFBhcmVudCgpLFxuXHRcdFx0XHRcdG9yaVBvaW50ID0ge307XG5cblx0XHRcdFx0aWYgKHBDZWxsLmlkICE9PSAnMScpIHtcblx0XHRcdFx0XHRwQ2VsbC5nZW9tZXRyeS53aWR0aCArPSBvZmZzZXRYICogMjtcblx0XHRcdFx0XHRwQ2VsbC5nZW9tZXRyeS5oZWlnaHQgKz0gb2Zmc2V0WSAqIDI7XG5cblx0XHRcdFx0XHQkLmVhY2goY2VsbHMsIGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0XHRcdHZhciBfdGhpcyA9IHRoaXM7XG5cdFx0XHRcdFx0XHRpZiAoY2VsbC5pZCA9PT0gX3RoaXMuaWQpIHtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRfdGhpcy5nZW9tZXRyeS54ICs9IG9mZnNldFg7XG5cdFx0XHRcdFx0XHRfdGhpcy5nZW9tZXRyeS55ICs9IG9mZnNldFk7XG5cdFx0XHRcdFx0fSk7XG5cblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRjZWxsLmdlb21ldHJ5LnggLT0gb2Zmc2V0WDtcblx0XHRcdFx0XHRjZWxsLmdlb21ldHJ5LnkgLT0gb2Zmc2V0WTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdG9yaVBvaW50LnggPSBjZWxsLmdlb21ldHJ5LnggKyB3aW5kb3cucGFyc2VJbnQoY2VsbC5nZW9tZXRyeS53aWR0aCAvIDIsIDEwKTtcblx0XHRcdFx0b3JpUG9pbnQueSA9IGNlbGwuZ2VvbWV0cnkueSArIHdpbmRvdy5wYXJzZUludChjZWxsLmdlb21ldHJ5LmhlaWdodCAvIDIsIDEwKTtcblxuXHRcdFx0XHQkLmVhY2goY2VsbHMsIGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0XHR2YXIgX3RoaXMgPSB0aGlzLFxuXHRcdFx0XHRcdFx0Y2VudGVyUG9pbnQgPSB7fSxcblx0XHRcdFx0XHRcdG9CYXNlUG9pbnQsXG5cdFx0XHRcdFx0XHRvVGFyZ2V0UG9pbnQ7XG5cblx0XHRcdFx0XHRpZiAoY2VsbC5pZCA9PT0gX3RoaXMuaWQpIHtcblx0XHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdGNlbnRlclBvaW50LnggPSBfdGhpcy5nZW9tZXRyeS54ICsgd2luZG93LnBhcnNlSW50KF90aGlzLmdlb21ldHJ5LndpZHRoIC8gMiwgMTApO1xuXHRcdFx0XHRcdGNlbnRlclBvaW50LnkgPSBfdGhpcy5nZW9tZXRyeS55ICsgd2luZG93LnBhcnNlSW50KF90aGlzLmdlb21ldHJ5LmhlaWdodCAvIDIsIDEwKTtcblxuXHRcdFx0XHRcdG9CYXNlUG9pbnQgPSBuZXcgdHJhbnNpdC51dGlsLlBvaW50KG9yaVBvaW50LngsIG9yaVBvaW50LnkpO1xuXHRcdFx0XHRcdG9UYXJnZXRQb2ludCA9IG5ldyB0cmFuc2l0LnV0aWwuUG9pbnQoY2VudGVyUG9pbnQueCwgY2VudGVyUG9pbnQueSk7XG5cblx0XHRcdFx0XHRvVGFyZ2V0UG9pbnQuYWJzb2x1dGUycmVsYXRpdmUob0Jhc2VQb2ludCk7XG5cblx0XHRcdFx0XHRpZiAob3JpQ2VsbC5pZCA9PT0gY2VsbC5pZCkge1xuXHRcdFx0XHRcdFx0b1RhcmdldFBvaW50LmV4cGFuZEl0KFxuXHRcdFx0XHRcdFx0XHRvQmFzZVBvaW50LFxuXHRcdFx0XHRcdFx0XHRjZWxsLmdlb21ldHJ5LmFsdGVybmF0ZUJvdW5kcy53aWR0aCAvIDIsXG5cdFx0XHRcdFx0XHRcdGNlbGwuZ2VvbWV0cnkuYWx0ZXJuYXRlQm91bmRzLmhlaWdodCAvIDIsXG5cdFx0XHRcdFx0XHRcdGNlbGwuZ2VvbWV0cnkud2lkdGggLyAyLFxuXHRcdFx0XHRcdFx0XHRjZWxsLmdlb21ldHJ5LmhlaWdodCAvIDJcblx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdG9UYXJnZXRQb2ludC5leHBhbmRJdChcblx0XHRcdFx0XHRcdFx0b0Jhc2VQb2ludCxcblx0XHRcdFx0XHRcdFx0Y2VsbC5nZW9tZXRyeS53aWR0aCAvIDIgLSBvZmZzZXRYLFxuXHRcdFx0XHRcdFx0XHRjZWxsLmdlb21ldHJ5LmhlaWdodCAvIDIgLSBvZmZzZXRZLFxuXHRcdFx0XHRcdFx0XHRjZWxsLmdlb21ldHJ5LndpZHRoIC8gMixcblx0XHRcdFx0XHRcdFx0Y2VsbC5nZW9tZXRyeS5oZWlnaHQgLyAyXG5cdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdF90aGlzLmdlb21ldHJ5LnggPSBNYXRoLnJvdW5kKG9UYXJnZXRQb2ludC5hYnNvbHV0ZVggLSBfdGhpcy5nZW9tZXRyeS53aWR0aCAvIDIpO1xuXHRcdFx0XHRcdF90aGlzLmdlb21ldHJ5LnkgPSBNYXRoLnJvdW5kKG9UYXJnZXRQb2ludC5hYnNvbHV0ZVkgLSBfdGhpcy5nZW9tZXRyeS5oZWlnaHQgLyAyKTtcblx0XHRcdFx0fSk7XG5cdFx0XHR9O1xuXG5cdFx0XHRkbyB7XG5cdFx0XHRcdF90aGlzLmdyYXBoLnJlZnJlc2goKTtcblx0XHRcdFx0ZihjZWxsKTtcblx0XHRcdFx0Y2VsbCA9IGNlbGwuZ2V0UGFyZW50KCk7XG5cdFx0XHR9IHdoaWxlIChjZWxsLmlkICE9PSAnMScpO1xuXHRcdFx0X3RoaXMuZ3JhcGgucmVmcmVzaCgpO1xuXHRcdFx0X3RoaXMuZ3JhcGguY2xlYXJTZWxlY3Rpb24oKTtcblx0XHRcdF90aGlzLmdyYXBoLnNldFNlbGVjdGlvbkNlbGwob3JpQ2VsbCk7XG5cdFx0fTtcblxuXHRcdHJldHVybiBGO1xuXHR9KTtcblxufSkobmFtZVNwYWNlLnJlZygnZ3JhcGgnKSk7XG5cblxuKGZ1bmN0aW9uKGdyYXBoKXtcblxuXHQndXNlIHN0cmljdCc7XG5cblx0Z3JhcGguYXBwLmZhY3RvcnkoJ0NvbnN0JywgW2Z1bmN0aW9uKCl7XG5cblx0XHRyZXR1cm4ge1xuXG5cdFx0XHRDSV9QUkVGSVg6ICdjaV8nLFxuXHRcdFx0SU5fUFJFRklYOiAnaW5fJyxcblxuXHRcdFx0R1JBUEhfRFJBR19XSURUSDogODAsXG5cdFx0XHRHUkFQSF9EUkFHX0hFSUdIVDogODAsXG5cblx0XHRcdEdSQVBIX0dSSURfV0lEVEg6IDgxLFxuXHRcdFx0R1JBUEhfR1JJRF9IRUlHSFQ6IDgwLFxuXG5cdFx0XHRNRU5VX09QRU5fVVJMIDogJ+aJk+W8gFVSTCcsXG5cdFx0XHRNRU5VX0VESVRfVVJMIDogJ+e8lui+kVVSTCcsXG5cblx0XHRcdE1FTlVfRk9OVF9TVFlMRTogJ+Wtl+S9k+agt+W8jycsXG5cdFx0XHRNRU5VX1NUUk9LRV9XSURUSCA6ICfovrnmoYblrr3luqYnLFxuXHRcdFx0TUVOVV9PUEFDSVRZIDogJ+mAj+aYjuW6picsXG5cblx0XHRcdE1FTlVfWk9PTSA6ICfnvKnmlL4nLFxuXHRcdFx0TUVOVV9aT09NX0lOIDogJ+aUvuWkpycsXG5cdFx0XHRNRU5VX1pPT01fT1VUIDogJ+e8qeWwjycsXG5cdFx0XHRNRU5VX1pPT01fQ0VOVEVSIDogJ+mAguW6lOeUu+W4gycsXG5cdFx0XHRNRU5VX1pPT01fQUNUVUFMIDogJ+WunumZheWkp+WwjycsXG5cblx0XHRcdE1FTlVfU1RZTEUgOiAn5qC35byPJyxcblxuXHRcdFx0TUVOVV9WSUVXIDogJ+inhuWbvicsXG5cdFx0XHRNRU5VX1ZJRVdfU0FWRSA6ICfkv53lrZjop4blm74nLFxuXHRcdFx0TUVOVV9WSUVXX1VQREFURSA6ICfmm7TmlrDop4blm74nLFxuXHRcdFx0TUVOVV9WSUVXX09QRU4gOiAn5omT5byA6KeG5Zu+Jyxcblx0XHRcdE1FTlVfVklFV19ORVc6ICfmlrDlu7rop4blm74nLFxuXG5cdFx0XHRNRU5VX1ZJRVdfVVJMIDogJ+inhuWbvlVSTCcsXG5cdFx0XHRNRU5VX1ZJRVdfTkVXX1dJTkRPVyA6ICflnKjmlrDmoIfnrb7pobXmiZPlvIDmraTop4blm74nLFxuXG5cdFx0XHRNRU5VX1ZJRVdfUkVMQVRJT04gOiAn6KeG5Zu+5YWz6IGUJyxcblx0XHRcdE1FTlVfVklFV19SRUxBVElPTl9TRVQgOiAn566h55CG5YWz6IGU6KeG5Zu+Jyxcblx0XHRcdE1FTlVfVklFV19SRUxBVElPTl9PUEVOIDogJ+aJk+W8gOWFs+iBlOinhuWbvicsXG5cblx0XHRcdE1FTlVfTEFZT1VUIDogJ+W4g+WxgCcsXG5cdFx0XHRNRU5VX0xBWU9VVF9IT1JJWk9OVEFMIDogJ+aoquWQkeW4g+WxgCcsXG5cdFx0XHRNRU5VX0xBWU9VVF9WRVJUSUNBTCA6ICfnurXlkJHluIPlsYAnLFxuXHRcdFx0TUVOVV9MQVlPVVRfQ0lSQ0xFIDogJ+WchuW9ouW4g+WxgCcsXG5cdFx0XHRNRU5VX0xBWU9VVF9PUkdBTklDIDogJ+acieacuuW4g+WxgCcsXG5cdFx0XHRNRU5VX0xBWU9VVF9QQVJBTExFTCA6ICflubPooYznur/luIPlsYAnLFxuXHRcdFx0TUVOVV9MQVlPVVRfU1RBQ0tfVkVSVElDQUwgOiAn5Z6C55u05aCG5qCIJyxcblx0XHRcdE1FTlVfTEFZT1VUX1NUQUNLX0hPUklaT05UQUwgOiAn5rC05bmz5aCG5qCIJyxcblxuXHRcdFx0TUVOVV9FWFBPUlQgOiAn5a+85Ye6Jyxcblx0XHRcdE1FTlVfRVhQT1JUX1BORyA6ICflr7zlh7pQTkcnLFxuXHRcdFx0TUVOVV9FWFBPUlRfUERGIDogJ+WvvOWHulBERicsXG5cdFx0XHRNRU5VX0VYUE9SVF9YTUwgOiAn5a+85Ye6WE1MJyxcblx0XHRcdE1FTlVfRVhQT1JUX1NWRyA6ICflr7zlh7pTVkcnLFxuXG5cdFx0XHRNRU5VX0VYUEFORF9OT0RFIDogJ+WxleW8gOWtkOiKgueCuScsXG5cblx0XHRcdE1FTlVfRURJVCA6ICfnvJbovpEnLFxuXHRcdFx0TUVOVV9DRUxMX0RFTEVURSA6ICfliKDpmaQnLFxuXHRcdFx0TUVOVV9DRUxMX0NPUFkgOiAn5aSN5Yi2Jyxcblx0XHRcdE1FTlVfQ0VMTF9DVVQgOiAn5Ymq5YiHJyxcblx0XHRcdE1FTlVfQ0VMTF9QQVNURSA6ICfnspjotLQnLFxuXG5cblx0XHRcdE1FTlVfR1JBUEhfQ0xFQVIgOiAn5riF56m655S75biDJyxcblx0XHRcdE1FTlVfUkVMQVRJT05fQ1JFQVRFIDogJ+WIm+W7uuWFs+ezuycsXG5cblx0XHRcdE1FTlVfTU9EVUxFIDogJ+aooeW8jycsXG5cdFx0XHRNRU5VX01PRFVMRV9PUkkgOiAn5Y6f5aeL5qih5byPJyxcblx0XHRcdE1FTlVfTU9EVUxFX1RBRyA6ICfmoIfnrb7mqKHlvI8nLFxuXG5cdFx0XHRNRU5VX1ZJRVdfUkVMQVRJT05fQkFDSzogJ+i/lOWbnuS4iuWxguinhuWbvicsXG5cblxuXHRcdFx0V0VCR0xfRk9OVDogJ2xpc3UnLFx0XHRcdFx0XHRcdFx0XHQvLyDliqDovb3nmoTlrZfkvZNcblx0XHRcdFdFQkdMX1JFU09VUkNFX0RJUjogJy4uL3Jlc291cmNlLzNkLycsICAgICAgICAgIC8vIOe6v+adoeeahOminOiJslxuXHRcdFx0V0VCR0xfREVGQVVMVF9NRVNIX05BTUU6ICAnTFYnLCAgICAgICAgICAgICAgICAgIC8vIOWmguaenOi1hOa6kOS4jeWtmOWcqOm7mOiupOS9v+eUqOatpOabv+ihpeaooeWei1xuXHRcdFx0V0VCR0xfTEFZRVJfTUFSR0lOOiAzNjAsICAgICAgICAgICAgICAgICAgICAgICAgLy8g5Lik5Liq5Zu+5bGC5LmL6Ze055qE6Led56a7XG5cdFx0XHRXRUJHTF9MQVlFUl9XSURUSCA6IDE1MDAsICAgICAgICAgICAgICAgICAgICAgICAgLy8g5Zu+5bGC55qE5a695bqmXG5cdFx0XHRXRUJHTF9MQVlFUl9IRUlHSFQgOiA5MDAsICAgICAgICAgICAgICAgICAgICAgICAgLy8g5Zu+5bGC55qE6auY5bqmXG5cdFx0XHRXRUJHTF9MQVlFUl9GT05UX0NPTE9SIDogMHgzMjczQTQsICAgICAgICAgICAgICAgLy8g5Zu+5bGC5a2X5L2T6aKc6ImyXG5cdFx0XHRXRUJHTF9MQVlFUl9GT05UX1NJREVfQ09MT1IgOiAweEFBQUFBQSxcdFx0XHQvLyDlm77lsYLlrZfkvZPkvqfovrnpopzoibJcblx0XHRcdFdFQkdMX0xBWUVSX09QQUNJVFkgOiAwLjgsXHRcdFx0XHRcdFx0Ly8g5Zu+5bGC6YCP5piO5bqmXG5cdFx0XHRXRUJHTF9MQVlFUl9DT0xPUiA6IDB4RERERERELFx0XHRcdFx0XHQvLyDlm77lsYLpopzoibJcblx0XHRcdFdFQkdMX0xBWUVSX05BTUVfUFJFRklYIDogJ+WbvuWxgicsXHRcdFx0XHQvLyDlm77lsYLlkI3np7DliY3nvIBcblx0XHRcdFdFQkdMX0xBWUVSX0ZPTlRfRkFNSUxZIDogJ2xpc3UnLCAgICAgICAgICAgICAgICAvLyDlm77lsYLlrZfkvZNcblx0XHRcdFdFQkdMX0xBWUVSX0ZPTlRfU0laRSA6IDMwLCAgICAgICAgICAgICAgICAgICAgICAvLyDlm77lsYLmlofmnKzlpKflsI9cblx0XHRcdFdFQkdMX0xBWUVSX0ZPTlRfSEVJR0hUIDogNCwgICAgICAgICAgICAgICAgICAgICAvLyDlm77lsYLlrZfkvZPljprluqZcblx0XHRcdFdFQkdMX05PREVfREVQVEggOiA4LCAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDoioLngrnpq5jluqZcblx0XHRcdFdFQkdMX05PREVfRk9OVF9TSURFX0NPTE9SIDogMHhBQUFBQUEsICAgICAgICAgICAvLyDoioLngrnmlofmnKzkvqfovrnpopzoibJcblx0XHRcdFdFQkdMX05PREVfRk9OVF9DT0xPUiA6IDB4MzQ4RUYwLCAgICAgICAgICAgICAgICAvLyDoioLngrnpopzoibJcblx0XHRcdFdFQkdMX05PREVfRk9OVF9TSVpFIDogOCwgICAgICAgICAgICAgICAgICAgICAgICAvLyDoioLngrnmlofmnKzlpKflsI9cblx0XHRcdFdFQkdMX05PREVfRk9OVF9GQU1JTFkgOiAnbGlzdScsICAgICAgICAgICAgICAgICAvLyDoioLngrnlrZfkvZNcblx0XHRcdFdFQkdMX0NBTUVSQV9QT1NJVElPTl9YIDogLTMwMCwgICAgICAgICAgICAgICAgICAvLyDpu5jorqTmkYTlg4/mnLpY5L2N572uXG5cdFx0XHRXRUJHTF9DQU1FUkFfUE9TSVRJT05fWSA6IDYwMCwgICAgICAgICAgICAgICAgICAgLy8g6buY6K6k5pGE5YOP5py6WeS9jee9rlxuXHRcdFx0V0VCR0xfQ0FNRVJBX05FQVIgOiAxMDAsICAgICAgICAgICAgICAgICAgICAgICAgIC8vIOebuOacuuinhumUpei/keW5s+mdouWAvFxuXHRcdFx0V0VCR0xfQ0FNRVJBX0ZBUiA6IDEwMDAwMCwgICAgICAgICAgICAgICAgICAgICAgIC8vIOebuOacuuinhumUpei/nOW5s+mdouWAvFxuXHRcdFx0V0VCR0xfTElORV9DT0xPUiA6IDB4NjY2NjY2LCAgICAgICAgICAgICAgICAgICAgIC8vIOe6v+adoeeahOminOiJslxuXHRcdFx0V0VCR0xfTElHSFRfUE9TSVRJT04gOiAzNTAwLCAgICAgICAgICAgICAgICAgICAgIC8vIOWFieeahOS9jee9rlxuXHRcdFx0V0VCR0xfTElHSFRfQ09MT1IgOiAweGZmZmZmZiwgICAgICAgICAgICAgICAgICAgIC8vIOWFieminOiJslxuXHRcdFx0V0VCR0xfTEFZRVJfTElORV9DT0xPUiA6IDB4OTk5OTk5LCAgICAgICAgICAgICAgICAgICAgLy8g6buY6K6k6aKc6ImyXG5cdFx0XHRXRUJHTF9MQVlFUl9MSU5FX0NPTE9SX1NFTEVDVElPTiA6IDB4MDAwMEZGLCAgICAgICAgICAgICAgLy8g6YCJ5Lit6aKc6ImyXG5cblx0XHRcdFdFQkdMX0NPTlRBSU5FUl9DT0xPUiA6IFtcblx0XHRcdFx0MHhFRkVGRUYsXG5cdFx0XHRcdDB4REZERkRGLFxuXHRcdFx0XHQweENGQ0ZDRixcblx0XHRcdFx0MHhCQkJCRkZcblx0XHRcdF1cblx0XHR9O1xuXG5cdH1dKTtcblxufSkobmFtZVNwYWNlLnJlZygnZ3JhcGgnKSk7XG5cblxuKGZ1bmN0aW9uKGdyYXBoKXtcblxuXHQndXNlIHN0cmljdCc7XG5cblx0Z3JhcGguYXBwLmZhY3RvcnkoJ0NvbnRleHRMaWJzJywgZnVuY3Rpb24oQ29uc3Qpe1xuXG5cdFx0dmFyIHNlbGYgPSB7fTtcblxuXHRcdC8vID09PT09PT1cblx0XHQvLyBWSUVXXG5cdFx0Ly8gPT09PT09PVxuXHRcdHNlbGZbQ29uc3QuTUVOVV9WSUVXX09QRU5dID0gZnVuY3Rpb24oKXtcblx0XHRcdHRoaXMuYWN0aW9uLm9wZW4oKTtcblx0XHR9O1xuXG5cdFx0c2VsZltDb25zdC5NRU5VX1ZJRVdfVVBEQVRFXSA9IGZ1bmN0aW9uKCl7XG5cdFx0XHR0aGlzLmFjdGlvbi51cGRhdGUoKTtcblx0XHR9O1xuXG5cdFx0c2VsZltDb25zdC5NRU5VX1ZJRVdfTkVXXSA9IGZ1bmN0aW9uKCl7XG5cdFx0XHR0aGlzLmFjdGlvbi5jcmVhdGUoKTtcblx0XHR9O1xuXG5cdFx0c2VsZltDb25zdC5NRU5VX1ZJRVdfU0FWRV0gPSBmdW5jdGlvbigpe1xuXHRcdFx0dGhpcy5hY3Rpb24uc2F2ZSgpO1xuXHRcdH07XG5cblx0XHRzZWxmW0NvbnN0Lk1FTlVfVklFV19SRUxBVElPTl9CQUNLXSA9IGZ1bmN0aW9uKCl7XG5cdFx0XHR0aGlzLmFjdGlvbi5oaXN0b3J5QmFjaygpO1xuXHRcdH07XG5cblx0XHRzZWxmW0NvbnN0Lk1FTlVfR1JBUEhfQ0xFQVJdID0gZnVuY3Rpb24oKXtcblx0XHRcdHRoaXMuYWN0aW9uLmNsZWFyKCk7XG5cdFx0fTtcblxuXHRcdHNlbGZbQ29uc3QuTUVOVV9aT09NX0lOXSA9IGZ1bmN0aW9uKCl7XG5cdFx0XHR0aGlzLmFjdGlvbi56b29tSW4oKTtcblx0XHR9O1xuXG5cdFx0c2VsZltDb25zdC5NRU5VX1pPT01fT1VUXSA9IGZ1bmN0aW9uKCl7XG5cdFx0XHR0aGlzLmFjdGlvbi56b29tT3V0KCk7XG5cdFx0fTtcblxuXHRcdHNlbGZbQ29uc3QuTUVOVV9aT09NX0FDVFVBTF0gPSBmdW5jdGlvbigpe1xuXHRcdFx0dGhpcy5hY3Rpb24uem9vbUFjdHVhbCgpO1xuXHRcdH07XG5cblx0XHRzZWxmW0NvbnN0Lk1FTlVfWk9PTV9DRU5URVJdID0gZnVuY3Rpb24oKXtcblx0XHRcdHRoaXMuYWN0aW9uLnpvb21DZW50ZXIoKTtcblx0XHR9O1xuXHRcdC8vID09PT09PT1cblx0XHQvLyBWSUVXIEVORFxuXHRcdC8vID09PT09PT1cblxuXHRcdC8vID09PT09PT1cblx0XHQvLyBDRUxMXG5cdFx0Ly8gPT09PT09PVxuXHRcdHNlbGZbQ29uc3QuTUVOVV9DRUxMX0NPUFldID0gZnVuY3Rpb24oKXtcblx0XHRcdHRoaXMuYWN0aW9uLmNvcHkoKTtcblx0XHR9O1xuXG5cdFx0c2VsZltDb25zdC5NRU5VX0NFTExfQ1VUXSA9IGZ1bmN0aW9uKCl7XG5cdFx0XHR0aGlzLmFjdGlvbi5jdXQoKTtcblx0XHR9O1xuXG5cdFx0c2VsZltDb25zdC5NRU5VX0NFTExfUEFTVEVdID0gZnVuY3Rpb24oKXtcblx0XHRcdHRoaXMuYWN0aW9uLnBhc3RlKCk7XG5cdFx0fTtcblxuXHRcdHNlbGZbQ29uc3QuTUVOVV9DRUxMX0RFTEVURV0gPSBmdW5jdGlvbigpe1xuXHRcdFx0dGhpcy5hY3Rpb24ucmVtb3ZlQ2VsbHMoKTtcblx0XHR9O1xuXG5cdFx0c2VsZltDb25zdC5NRU5VX09QQUNJVFldID0gZnVuY3Rpb24oKXtcblx0XHRcdHRoaXMuYWN0aW9uLmNlbGxPcGFjaXR5KCk7XG5cdFx0fTtcblxuXHRcdHNlbGZbQ29uc3QuTUVOVV9TVFJPS0VfV0lEVEhdID0gZnVuY3Rpb24oKXtcblx0XHRcdHRoaXMuYWN0aW9uLmNlbGxTdHJva2VTaXplKCk7XG5cdFx0fTtcblxuXHRcdHNlbGZbQ29uc3QuTUVOVV9GT05UX1NUWUxFXSA9IGZ1bmN0aW9uKCl7XG5cdFx0XHR0aGlzLmFjdGlvbi5mb250KCk7XG5cdFx0fTtcblxuXHRcdHNlbGZbQ29uc3QuTUVOVV9PUEVOX1VSTF0gPSBmdW5jdGlvbigpe1xuXHRcdFx0dGhpcy5hY3Rpb24ub3BlblVybCgpO1xuXHRcdH07XG5cblx0XHQvLyA9PT09PT09XG5cdFx0Ly8gQ0VMTCBFTkRcblx0XHQvLyA9PT09PT09XG5cblxuXHRcdC8vID09PT09PT1cblx0XHQvLyBFWFBPUlRcblx0XHQvLyA9PT09PT09XG5cdFx0c2VsZltDb25zdC5NRU5VX0VYUE9SVF9QTkddID0gZnVuY3Rpb24oKXtcblx0XHRcdHRoaXMuYWN0aW9uLmV4cG9ydFBuZygpO1xuXHRcdH07XG5cblx0XHRzZWxmW0NvbnN0Lk1FTlVfRVhQT1JUX1hNTF0gPSBmdW5jdGlvbigpe1xuXHRcdFx0dGhpcy5hY3Rpb24uZXhwb3J0WG1sKCk7XG5cdFx0fTtcblxuXHRcdHNlbGZbQ29uc3QuTUVOVV9FWFBPUlRfUERGXSA9IGZ1bmN0aW9uKCl7XG5cdFx0XHR0aGlzLmFjdGlvbi5leHBvcnRQZGYoKTtcblx0XHR9O1xuXG5cdFx0c2VsZltDb25zdC5NRU5VX0VYUE9SVF9TVkddID0gZnVuY3Rpb24oKXtcblx0XHRcdHRoaXMuYWN0aW9uLmV4cG9ydFN2ZygpO1xuXHRcdH07XG5cblx0XHRzZWxmW0NvbnN0Lk1FTlVfRVhQQU5EX05PREVdID0gZnVuY3Rpb24oKXtcblx0XHRcdHRoaXMuYWN0aW9uLmV4cGFuZE5vZGUoKTtcblx0XHR9O1xuXG5cdFx0Ly8gPT09PT09PVxuXHRcdC8vIEVYUE9SVCBFTkRcblx0XHQvLyA9PT09PT09XG5cblxuXHRcdC8vID09PT09PT09XG5cdFx0Ly8gTEFZT1VUXG5cdFx0Ly8gPT09PT09PT1cblxuXHRcdHNlbGZbQ29uc3QuTUVOVV9MQVlPVVRfSE9SSVpPTlRBTF0gPSBmdW5jdGlvbigpe1xuXHRcdFx0dGhpcy5hY3Rpb24ubGF5b3V0SG9yaXpvbnRhbCgpO1xuXHRcdH07XG5cblx0XHRzZWxmW0NvbnN0Lk1FTlVfTEFZT1VUX1ZFUlRJQ0FMXSA9IGZ1bmN0aW9uKCl7XG5cdFx0XHR0aGlzLmFjdGlvbi5sYXlvdXRWZXJ0aWNhbCgpO1xuXHRcdH07XG5cblx0XHRzZWxmW0NvbnN0Lk1FTlVfTEFZT1VUX0NJUkNMRV0gPSBmdW5jdGlvbigpe1xuXHRcdFx0dGhpcy5hY3Rpb24ubGF5b3V0Q2lyY2xlKCk7XG5cdFx0fTtcblxuXHRcdHNlbGZbQ29uc3QuTUVOVV9MQVlPVVRfT1JHQU5JQ10gPSBmdW5jdGlvbigpe1xuXHRcdFx0dGhpcy5hY3Rpb24ubGF5b3V0T3JnYW5pYygpO1xuXHRcdH07XG5cblx0XHRzZWxmW0NvbnN0Lk1FTlVfTEFZT1VUX1BBUkFMTEVMXSA9IGZ1bmN0aW9uKCl7XG5cdFx0XHR0aGlzLmFjdGlvbi5sYXlvdXRQYXJhbGxlbCgpO1xuXHRcdH07XG5cblx0XHRzZWxmW0NvbnN0Lk1FTlVfTEFZT1VUX1NUQUNLX0hPUklaT05UQUxdID0gZnVuY3Rpb24oKXtcblx0XHRcdHRoaXMuYWN0aW9uLmxheW91dFN0YWNrSG9yaXpvbnRhbCgpO1xuXHRcdH07XG5cblx0XHRzZWxmW0NvbnN0Lk1FTlVfTEFZT1VUX1NUQUNLX1ZFUlRJQ0FMXSA9IGZ1bmN0aW9uKCl7XG5cdFx0XHR0aGlzLmFjdGlvbi5sYXlvdXRTdGFja1ZlcnRpY2FsKCk7XG5cdFx0fTtcblxuXHRcdC8vID09PT09PT09PVxuXHRcdC8vIExBWU9VVCBFTkRcblx0XHQvLyA9PT09PT09PT09XG5cblxuXHRcdC8vID09PT09PT09PVxuXHRcdC8vIFZJRVcgUkVMQVRJT05cblx0XHQvLyA9PT09PT09PT09XG5cdFx0c2VsZltDb25zdC5NRU5VX1ZJRVdfUkVMQVRJT05fU0VUXSA9IGZ1bmN0aW9uKCl7XG5cdFx0XHR0aGlzLmFjdGlvbi5yZWxhdGlvblZpZXdTZXQoKTtcblx0XHR9O1xuXG5cdFx0c2VsZltDb25zdC5NRU5VX1ZJRVdfUkVMQVRJT05fT1BFTl0gPSBmdW5jdGlvbigpe1xuXHRcdFx0dGhpcy5hY3Rpb24ucmVsYXRpb25WaWV3T3BlbigpO1xuXHRcdH07XG5cblx0XHQvLyA9PT09PT09PT1cblx0XHQvLyBWSUVXIFJFTEFUSU9OIEVORFxuXHRcdC8vID09PT09PT09PT1cblxuXHRcdHJldHVybiBzZWxmO1xuXG5cdH0pO1xuXG59KShuYW1lU3BhY2UucmVnKCdncmFwaCcpKTtcblxuLyogZ2xvYmFsIG1kNSAqL1xuXG4oZnVuY3Rpb24oZ3JhcGgpe1xuXG5cdCd1c2Ugc3RyaWN0JztcblxuXHR2YXIgZmFjdG9yeSA9IGZ1bmN0aW9uKG1kNSl7XG5cdFx0dmFyIENvbnRleHRNZW51ID0gZnVuY3Rpb24oKXtcblx0XHRcdHZhciBfdGhpcyA9IHRoaXM7XG5cdFx0XHRfdGhpcy5zcGxpdCA9IDE1O1xuXHRcdFx0X3RoaXMuaWQgPSBtZDUuY3JlYXRlSGFzaChEYXRlLm5vdygpLnRvU3RyaW5nKCkpO1xuXHRcdFx0X3RoaXMuY2xhc3NOYW1lID0gJ2dyYXBoLWNvbnRleHRtZW51Jztcblx0XHRcdF90aGlzLmNoaWxkQ2xhc3NOYW1lID0gJ2dyYXBoLWNvbnRleHRtZW51LXN1Yic7XG5cdFx0XHRfdGhpcy5kaXZpZGVyQ2xhc3NOYW1lID0gJ2dyYXBoLWNvbnRleHRtZW51LWRpdmlkZXInO1xuXHRcdFx0X3RoaXMuaXRlbUNsYXNzTmFtZSA9ICdncmFwaC1jb250ZXh0bWVudS1pdGVtJztcblx0XHRcdF90aGlzLmludG9JY29uQ2xhc3NOYW1lID0gJ2dyYXBoLWNvbnRleHRtZW51LWludG8taWNvbic7XG5cblx0XHRcdF90aGlzLmVsZW1lbnQgPSB0aGlzLmNyZWF0ZU1haW4oKTtcblx0XHRcdF90aGlzLmVsZW1lbnQuaWQgPSB0aGlzLmlkO1xuXHRcdFx0X3RoaXMubG9jayA9IGZhbHNlO1xuXHRcdFx0ZG9jdW1lbnQuYm9keS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKCl7XG5cdFx0XHRcdF90aGlzLmhpZGUoKTtcblx0XHRcdH0pO1xuXHRcdFx0ZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh0aGlzLmVsZW1lbnQpO1xuXHRcdH07XG5cblx0XHRDb250ZXh0TWVudS5wcm90b3R5cGUuY3JlYXRlTWFpbiA9IGZ1bmN0aW9uKCl7XG5cdFx0XHR2YXIgX3RoaXMgPSB0aGlzLCBlbGVtZW50O1xuXG5cdFx0XHRlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5cdFx0XHRlbGVtZW50LmNsYXNzTmFtZSA9IF90aGlzLmNsYXNzTmFtZTtcblx0XHRcdHJldHVybiBlbGVtZW50O1xuXHRcdH07XG5cblxuXHRcdENvbnRleHRNZW51LnByb3RvdHlwZS5hZGRJdGVtID0gZnVuY3Rpb24odGl0bGUsIGltYWdlLCBmdW4sIHBhcmVudEVsZW1lbnQsIG9iail7XG5cdFx0XHR2YXIgX3RoaXMgPSB0aGlzLCBpdGVtRWxlbWVudCwgaW5uZXJFbGVtZW50LCBub2RlRWxlbWVudDtcblxuXHRcdFx0aXRlbUVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcblx0XHRcdGl0ZW1FbGVtZW50LmNsYXNzTmFtZSA9IF90aGlzLml0ZW1DbGFzc05hbWU7XG5cblx0XHRcdGlmKCFvYmogfHwgKG9iaiAmJiAhb2JqLmRpc2FibGVkKSl7XG5cdFx0XHRcdGl0ZW1FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oKXtcblx0XHRcdFx0XHRpZih0eXBlb2YgZnVuID09PSAnZnVuY3Rpb24nKXtcblx0XHRcdFx0XHRcdGZ1bigpO1xuXHRcdFx0XHRcdFx0X3RoaXMuaGlkZSgpO1xuXHRcdFx0XHRcdH1lbHNlIGlmKCFfdGhpcy5nZXRDaGlsZCh0aGlzKSl7XG5cdFx0XHRcdFx0XHRfdGhpcy5oaWRlKCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9KTtcblxuXHRcdFx0XHRpdGVtRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWxlYXZlJywgZnVuY3Rpb24oKXtcblx0XHRcdFx0XHRfdGhpcy5jbG9zZUNoaWxkKHRoaXMpO1xuXHRcdFx0XHRcdCQodGhpcykucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpO1xuXHRcdFx0XHR9KTtcblx0XHRcdFx0aXRlbUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2VlbnRlcicsIGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFx0JCh0aGlzKS5hZGRDbGFzcygnYWN0aXZlJyk7XG5cdFx0XHRcdFx0X3RoaXMuc2hvd0NoaWxkKHRoaXMpO1xuXHRcdFx0XHR9KTtcblx0XHRcdH1lbHNle1xuXHRcdFx0XHQkKGl0ZW1FbGVtZW50KS5hZGRDbGFzcygnbm9zZWxlY3QnKTtcblx0XHRcdFx0aXRlbUVsZW1lbnQuc3R5bGUuY3Vyc29yID0gJ2F1dG8nO1xuXHRcdFx0XHRpdGVtRWxlbWVudC5zdHlsZS5jb2xvciA9ICcjYWFhJztcblx0XHRcdFx0aXRlbUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbihldmVudCl7XG5cdFx0XHRcdFx0ZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG5cdFx0XHRcdH0pO1xuXHRcdFx0fVxuXG5cdFx0XHRpbm5lckVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG5cdFx0XHRpbm5lckVsZW1lbnQuaW5uZXJIVE1MID0gdGl0bGU7XG5cblx0XHRcdGl0ZW1FbGVtZW50LmFwcGVuZENoaWxkKGlubmVyRWxlbWVudCk7XG5cdFx0XHRpZihwYXJlbnRFbGVtZW50KXtcblx0XHRcdFx0bm9kZUVsZW1lbnQgPSBwYXJlbnRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy4nICsgX3RoaXMuY2hpbGRDbGFzc05hbWUpO1xuXHRcdFx0XHRpZighbm9kZUVsZW1lbnQpe1xuXHRcdFx0XHRcdG5vZGVFbGVtZW50ID0gX3RoaXMuY3JlYXRlTWFpbigpO1xuXHRcdFx0XHRcdC8vbm9kZUVsZW1lbnQuc3R5bGUubGVmdCA9IChfdGhpcy53aWR0aCAtIF90aGlzLnNwbGl0KSArICdweCc7XG5cdFx0XHRcdFx0Ly9ub2RlRWxlbWVudC5zdHlsZS50b3AgPSAwICsgJ3B4Jztcblx0XHRcdFx0XHRub2RlRWxlbWVudC5jbGFzc05hbWUgPSBfdGhpcy5jaGlsZENsYXNzTmFtZTtcblx0XHRcdFx0XHRfdGhpcy5hZGRDaGlsZExldmVsSWNvKHBhcmVudEVsZW1lbnQpO1xuXHRcdFx0XHRcdHBhcmVudEVsZW1lbnQuYXBwZW5kQ2hpbGQobm9kZUVsZW1lbnQpO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0bm9kZUVsZW1lbnQuYXBwZW5kQ2hpbGQoaXRlbUVsZW1lbnQpO1xuXHRcdFx0fWVsc2V7XG5cdFx0XHRcdF90aGlzLmVsZW1lbnQuYXBwZW5kQ2hpbGQoaXRlbUVsZW1lbnQpO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gaXRlbUVsZW1lbnQ7XG5cdFx0fTtcblxuXHRcdENvbnRleHRNZW51LnByb3RvdHlwZS5jbGVhckFsbEl0ZW1zID0gZnVuY3Rpb24oKXtcblx0XHRcdHZhciBfdGhpcyA9IHRoaXM7XG5cdFx0XHR3aGlsZShfdGhpcy5lbGVtZW50LmZpcnN0Q2hpbGQpe1xuXHRcdFx0XHRfdGhpcy5lbGVtZW50LnJlbW92ZUNoaWxkKF90aGlzLmVsZW1lbnQuZmlyc3RDaGlsZCk7XG5cdFx0XHR9XG5cdFx0fTtcblxuXHRcdENvbnRleHRNZW51LnByb3RvdHlwZS5oYXNDaGlsZEljbyA9IGZ1bmN0aW9uKGVsZW1lbnQpe1xuXHRcdFx0dmFyIF90aGlzID0gdGhpcztcblx0XHRcdHJldHVybiBlbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy4nICsgX3RoaXMuY2hpbGRJY29DbGFzc05hbWUpO1xuXHRcdH07XG5cblx0XHRDb250ZXh0TWVudS5wcm90b3R5cGUuY3JlYXRlQ2hpbGRJY28gPSBmdW5jdGlvbihlbGVtZW50KXtcblx0XHRcdHZhciBpY29FbGVtZW50LCBfdGhpcyA9IHRoaXM7XG5cblx0XHRcdGljb0VsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcblx0XHRcdGljb0VsZW1lbnQuY2xhc3NOYW1lID0gX3RoaXMuaW50b0ljb25DbGFzc05hbWU7XG5cdFx0XHRlbGVtZW50LmFwcGVuZENoaWxkKGljb0VsZW1lbnQpO1xuXHRcdH07XG5cblx0XHRDb250ZXh0TWVudS5wcm90b3R5cGUuYWRkQ2hpbGRMZXZlbEljbyA9IGZ1bmN0aW9uKGVsZW1lbnQpe1xuXHRcdFx0dmFyIF90aGlzID0gdGhpcztcblx0XHRcdGlmKCFfdGhpcy5oYXNDaGlsZEljbyhlbGVtZW50KSl7XG5cdFx0XHRcdF90aGlzLmNyZWF0ZUNoaWxkSWNvKGVsZW1lbnQpO1xuXHRcdFx0fVxuXHRcdH07XG5cblxuXHRcdENvbnRleHRNZW51LnByb3RvdHlwZS5hZGRTZXBhcmF0b3IgPSBmdW5jdGlvbihwYXJlbnRFbGVtZW50KXtcblx0XHRcdHZhciBfdGhpcyA9IHRoaXMsXG5cdFx0XHRcdG5vZGVFbGVtZW50ID0gbnVsbCxcblx0XHRcdFx0c2VwYXJhdG9yRWxlbWVudDtcblxuXHRcdFx0c2VwYXJhdG9yRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuXG5cdFx0XHRzZXBhcmF0b3JFbGVtZW50LmNsYXNzTmFtZSA9IF90aGlzLmRpdmlkZXJDbGFzc05hbWU7XG5cblx0XHRcdGlmKHBhcmVudEVsZW1lbnQpe1xuXHRcdFx0XHRub2RlRWxlbWVudCA9IHBhcmVudEVsZW1lbnQucXVlcnlTZWxlY3RvcignLicgKyBfdGhpcy5jaGlsZENsYXNzTmFtZSk7XG5cdFx0XHRcdG5vZGVFbGVtZW50LmFwcGVuZENoaWxkKHNlcGFyYXRvckVsZW1lbnQpO1xuXHRcdFx0fWVsc2V7XG5cdFx0XHRcdF90aGlzLmVsZW1lbnQuYXBwZW5kQ2hpbGQoc2VwYXJhdG9yRWxlbWVudCk7XG5cdFx0XHR9XG5cdFx0fTtcblxuXG5cdFx0Q29udGV4dE1lbnUucHJvdG90eXBlLmNsb3NlQWxsQ2hpbGQgPSBmdW5jdGlvbigpe1xuXHRcdFx0dmFyIF90aGlzID0gdGhpcztcblx0XHRcdCQoX3RoaXMuZWxlbWVudCkuZmluZCgnLicgKyBfdGhpcy5jaGlsZENsYXNzTmFtZSkuaGlkZSgpO1xuXHRcdH07XG5cblx0XHRDb250ZXh0TWVudS5wcm90b3R5cGUuZ2V0Q2hpbGQgPSBmdW5jdGlvbihlbGVtZW50KXtcblx0XHRcdHZhciBfdGhpcyA9IHRoaXM7XG5cdFx0XHRyZXR1cm4gJChlbGVtZW50KS5maW5kKCcuJyArIF90aGlzLmNoaWxkQ2xhc3NOYW1lKVswXTtcblx0XHR9O1xuXG5cdFx0Q29udGV4dE1lbnUucHJvdG90eXBlLnNob3dDaGlsZCA9IGZ1bmN0aW9uKGVsZW1lbnQpe1xuXHRcdFx0dmFyIF90aGlzID0gdGhpcywgY2hpbGQ7XG5cdFx0XHRjaGlsZCA9IF90aGlzLmdldENoaWxkKGVsZW1lbnQpO1xuXHRcdFx0aWYoY2hpbGQpe1xuXHRcdFx0XHRjaGlsZC5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcblx0XHRcdH1cblx0XHR9O1xuXG5cdFx0Q29udGV4dE1lbnUucHJvdG90eXBlLmNsb3NlQ2hpbGQgPSBmdW5jdGlvbihlbGVtZW50KXtcblx0XHRcdHZhciBfdGhpcyA9IHRoaXMsIGNoaWxkO1xuXHRcdFx0Y2hpbGQgPSBfdGhpcy5nZXRDaGlsZChlbGVtZW50KTtcblx0XHRcdGlmKGNoaWxkKXtcblx0XHRcdFx0Y2hpbGQuc3R5bGUuZGlzcGxheSA9ICdub25lJztcblx0XHRcdH1cblx0XHR9O1xuXG5cblx0XHRDb250ZXh0TWVudS5wcm90b3R5cGUuaXNJbnRvQ2hpbGQgPSBmdW5jdGlvbihlbGVtZW50KXtcblx0XHRcdHZhciBfdGhpcyA9IHRoaXMsIGNoaWxkLCBpc1Zpc2libGU7XG5cblx0XHRcdGNoaWxkID0gX3RoaXMuZ2V0Q2hpbGQoZWxlbWVudCk7XG5cdFx0XHRpc1Zpc2libGUgPSAhIShjaGlsZCAmJiBjaGlsZC5zdHlsZS5kaXNwbGF5ID09PSAnYmxvY2snKTtcblx0XHRcdHJldHVybiBpc1Zpc2libGU7XG5cdFx0fTtcblxuXHRcdENvbnRleHRNZW51LnByb3RvdHlwZS5zaG93ID0gZnVuY3Rpb24oeCwgeSl7XG5cdFx0XHR2YXIgX3RoaXMgPSB0aGlzLCBkb2M7XG5cblx0XHRcdGlmKF90aGlzLmVsZW1lbnQuY2hpbGRyZW4ubGVuZ3RoID49IDEpe1xuXHRcdFx0XHQvL190aGlzLmVsZW1lbnQuc3R5bGUub3BhY2l0eSA9IDA7XG5cdFx0XHRcdF90aGlzLmVsZW1lbnQuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XG5cblxuXHRcdFx0XHRkb2MgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7XG5cdFx0XHRcdGlmKGRvYy5jbGllbnRIZWlnaHQgPCB5ICsgX3RoaXMuZWxlbWVudC5jbGllbnRIZWlnaHQpe1xuXHRcdFx0XHRcdHkgLT0gX3RoaXMuZWxlbWVudC5jbGllbnRIZWlnaHQgKyAxO1xuXHRcdFx0XHR9ZWxzZXtcblx0XHRcdFx0XHR5LS07XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRpZihkb2MuY2xpZW50V2lkdGggPCB4ICsgX3RoaXMuZWxlbWVudC5jbGllbnRXaWR0aCl7XG5cdFx0XHRcdFx0eCAtPSBfdGhpcy5lbGVtZW50LmNsaWVudFdpZHRoICsgMTtcblx0XHRcdFx0fWVsc2V7XG5cdFx0XHRcdFx0eC0tO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0X3RoaXMuZWxlbWVudC5zdHlsZS5sZWZ0ID0geCArICdweCc7XG5cdFx0XHRcdF90aGlzLmVsZW1lbnQuc3R5bGUudG9wID0geSArICdweCc7XG5cdFx0XHRcdC8vX3RoaXMuZWxlbWVudC5zdHlsZS5vcGFjaXR5ID0gMTtcblx0XHRcdH1cblx0XHR9O1xuXG5cdFx0Q29udGV4dE1lbnUucHJvdG90eXBlLmhpZGUgPSBmdW5jdGlvbigpe1xuXHRcdFx0dmFyIF90aGlzID0gdGhpcztcblx0XHRcdF90aGlzLmVsZW1lbnQuc3R5bGUuZGlzcGxheSA9ICdub25lJztcblx0XHR9O1xuXG5cdFx0cmV0dXJuIENvbnRleHRNZW51O1xuXHR9O1xuXG5cdGdyYXBoLmFwcC5mYWN0b3J5KCdDb250ZXh0TWVudScsIFsnbWQ1JywgZmFjdG9yeV0pO1xuXG5cbn0pKG5hbWVTcGFjZS5yZWcoJ2dyYXBoJykpO1xuXG4vKiBnbG9iYWwgbXhVdGlscyAqL1xuLyogZ2xvYmFsIG14RHJhZ1NvdXJjZSAqL1xuLyogZ2xvYmFsIG14UmVjdGFuZ2xlICovXG4vKiBnbG9iYWwgbXhDb25zdGFudHMgKi9cbi8qIGdsb2JhbCBteEhpZXJhcmNoaWNhbExheW91dCAqL1xuLyogZ2xvYmFsIG14SGllcmFyY2hpY2FsTGF5b3V0ICovXG5cbihmdW5jdGlvbihncmFwaCl7XG5cblx0J3VzZSBzdHJpY3QnO1xuXG5cblx0dmFyIGZhY3RvcnkgPSBmdW5jdGlvbihDaVJlbGF0aW9uU2VydmljZSwgVW5pdCwgQ29uc3QsICRyb290U2NvcGUpe1xuXG5cdFx0dmFyIEYgPSBmdW5jdGlvbihvcHRpb25zKXtcblx0XHRcdHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG5cdFx0XHR0aGlzLmVkaXRvciA9IG9wdGlvbnMuZWRpdG9yO1xuXHRcdFx0dGhpcy4kdGFibGUgPSBvcHRpb25zLiR0YWJsZTtcblx0XHRcdHRoaXMuaXNTZWxlY3RNb3JlID0gZmFsc2U7XG5cdFx0XHR0aGlzLmhlaWdodExpZ2h0Q2VsbCA9IG51bGw7XG5cdFx0XHR0aGlzLnV0aWxzID0gZ3JhcGgudXRpbHM7XG5cblx0XHRcdHRoaXMuYmluZGluZygpO1xuXHRcdH07XG5cblxuXHRcdEYucHJvdG90eXBlLmJpbmRpbmcgPSBmdW5jdGlvbigpe1xuXHRcdFx0dmFyIF90aGlzID0gdGhpcztcblx0XHRcdF90aGlzLiR0YWJsZS5maW5kKCd0Ym9keSB0cicpLmVhY2goZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGlmKCQodGhpcykuYXR0cignZGF0YS1pZCcpKXtcblxuXHRcdFx0XHRcdF90aGlzLmNyZWF0ZURyYWdTb3VyY2UoXG5cdFx0XHRcdFx0XHR0aGlzLFxuXHRcdFx0XHRcdFx0X3RoaXMuY3JlYXRlRHJvcEhhbmRsZXIodGhpcywgdHJ1ZSksXG5cdFx0XHRcdFx0XHRfdGhpcy5jcmVhdGVEcmFnUHJldmlldyhcblx0XHRcdFx0XHRcdFx0Z3JhcGguREVGSU5FX0NBVEUuRFJBR19XSURUSCxcblx0XHRcdFx0XHRcdFx0Z3JhcGguREVGSU5FX0NBVEUuRFJBR19IRUlHSFRcblx0XHRcdFx0XHRcdClcblx0XHRcdFx0XHQpO1xuXHRcdFx0XHR9XG5cdFx0XHR9KTtcblx0XHR9O1xuXG5cblx0XHRGLnByb3RvdHlwZS5jcmVhdGVDZWxsID0gZnVuY3Rpb24oZywgcGFyZW50LCBjYXRlaWQsIGlkLCB2YWx1ZSwgeCwgeSl7XG5cdFx0XHR2YXIgX3RoaXMgPSB0aGlzLCBpbWFnZSA9ICcnO1xuXG5cdFx0XHQkLmVhY2goX3RoaXMub3B0aW9ucy5jaURhdGEsIGZ1bmN0aW9uKCl7XG5cdFx0XHRcdHZhciBpdGVtID0gdGhpcztcblx0XHRcdFx0aWYoaXRlbS5jYXRlZ29yeUlkID09PSBjYXRlaWQpe1xuXHRcdFx0XHRcdGltYWdlID0gVW5pdC5zdGF0aWMoaXRlbS5pY29uKTtcblx0XHRcdFx0fVxuXHRcdFx0fSk7XG5cblx0XHRcdHJldHVybiBnLmluc2VydFZlcnRleChcblx0XHRcdFx0cGFyZW50LFxuXHRcdFx0XHRncmFwaC5ERUZJTkVfQ0kuR1JBUEhfUFJFRklYICsgaWQsXG5cdFx0XHRcdHZhbHVlLFxuXHRcdFx0XHR4LFxuXHRcdFx0XHR5LFxuXHRcdFx0XHRDb25zdC5HUkFQSF9EUkFHX1dJRFRILFxuXHRcdFx0XHRDb25zdC5HUkFQSF9EUkFHX0hFSUdIVCxcblx0XHRcdFx0J2ltYWdlO2ltYWdlPScgKyBpbWFnZVxuXHRcdFx0KTtcblx0XHR9O1xuXG5cdFx0Ri5wcm90b3R5cGUuY3JlYXRlRHJhZ1NvdXJjZSA9IGZ1bmN0aW9uKGVsdCwgZHJvcEhhbmRsZXIsIHByZXZpZXcpIHtcblx0XHRcdHZhciBfdGhpcyA9IHRoaXMsXG5cdFx0XHRcdGRyYWdTb3VyY2UsXG5cdFx0XHRcdGVkZ2VTdHlsZSA9ICdzdHJva2VDb2xvcj0jMDA2NkZGO3N0cm9rZVdpZHRoPTQ7ZmlsbENvbG9yPW5vbmU7JztcblxuXHRcdFx0ZHJhZ1NvdXJjZSA9IG14VXRpbHMubWFrZURyYWdnYWJsZShlbHQsIF90aGlzLmVkaXRvci5ncmFwaCwgZHJvcEhhbmRsZXIsIHByZXZpZXcsIDAsIDAsIF90aGlzLmVkaXRvci5ncmFwaC5hdXRvc2Nyb2xsLCB0cnVlLCB0cnVlKTtcblxuXHRcdFx0ZHJhZ1NvdXJjZS5nZXREcm9wVGFyZ2V0ID0gZnVuY3Rpb24oZywgeCwgeSkge1xuXHRcdFx0XHR2YXIgdGFyZ2V0LCB1cFRhcmdldCwgbG9vcCwgc3R5bGUgPSAnJztcblxuXHRcdFx0XHR1cFRhcmdldCA9IG14RHJhZ1NvdXJjZS5wcm90b3R5cGUuZ2V0RHJvcFRhcmdldC5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuXG5cdFx0XHRcdGxvb3AgPSBmdW5jdGlvbihwYXJlbnQpe1xuXHRcdFx0XHRcdHZhciB2ZXJ0ZXg7XG5cblx0XHRcdFx0XHR2ZXJ0ZXggPSBnLmdldENlbGxBdCh4LCB5LCBwYXJlbnQsIHRydWUsIHRydWUpO1xuXG5cdFx0XHRcdFx0aWYodmVydGV4ICYmIHZlcnRleC5jaGlsZHJlbiAmJiB2ZXJ0ZXguY2hpbGRyZW4ubGVuZ3RoPj0xICl7XG5cdFx0XHRcdFx0XHR2ZXJ0ZXggPSBsb29wKHZlcnRleCk7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0cmV0dXJuIHZlcnRleDtcblx0XHRcdFx0fTtcblxuXHRcdFx0XHR0YXJnZXQgPSBsb29wKGcuZ2V0RGVmYXVsdFBhcmVudCgpKTtcblx0XHRcdFx0dGFyZ2V0ID0gdGFyZ2V0ID8gdGFyZ2V0IDogdXBUYXJnZXQ7XG5cblx0XHRcdFx0aWYoKHRhcmdldCAmJiB0YXJnZXQudmVydGV4ICYmICFfdGhpcy5oZWlnaHRMaWdodENlbGwpIHx8XG5cdFx0XHRcdFx0KHRhcmdldCAmJiB0YXJnZXQudmVydGV4ICYmIF90aGlzLmhlaWdodExpZ2h0Q2VsbC5nZW9tZXRyeS54ICE9PSB0YXJnZXQuZ2VvbWV0cnkueCkgfHxcblx0XHRcdFx0XHQodGFyZ2V0ICYmIHRhcmdldC52ZXJ0ZXggJiYgX3RoaXMuaGVpZ2h0TGlnaHRDZWxsLmdlb21ldHJ5LnkgIT09IHRhcmdldC5nZW9tZXRyeS55KSl7XG5cdFx0XHRcdFx0Zy5yZW1vdmVDZWxscyhbX3RoaXMuaGVpZ2h0TGlnaHRDZWxsXSk7XG5cdFx0XHRcdFx0X3RoaXMubGFzdFRhcmdldENlbGwgPSB0YXJnZXQ7XG5cdFx0XHRcdFx0X3RoaXMuaGVpZ2h0TGlnaHRDZWxsID0gZy5hZGRMaWdodCh0YXJnZXQpO1xuXG5cdFx0XHRcdH1lbHNlIGlmKCF0YXJnZXQgJiYgX3RoaXMuaGVpZ2h0TGlnaHRDZWxsKXtcblx0XHRcdFx0XHRnLnJlbW92ZUNlbGxzKFtfdGhpcy5oZWlnaHRMaWdodENlbGxdKTtcblx0XHRcdFx0XHRfdGhpcy5oZWlnaHRMaWdodENlbGwgPSBudWxsO1xuXHRcdFx0XHRcdF90aGlzLmxhc3RUYXJnZXRDZWxsID0gbnVsbDtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGlmKHRhcmdldCAmJiB0YXJnZXQuZWRnZSAmJiAhX3RoaXMubGFzdFRhcmdldEVkZ2Upe1xuXHRcdFx0XHRcdF90aGlzLmxhc3RUYXJnZXRFZGdlID0gdGFyZ2V0O1xuXHRcdFx0XHRcdGcuc2V0T3JpU3R5bGUodGFyZ2V0LCB0YXJnZXQuZ2V0U3R5bGUoKSk7XG5cdFx0XHRcdFx0dGFyZ2V0LnNldFN0eWxlKGVkZ2VTdHlsZSk7XG5cdFx0XHRcdFx0Zy5yZWZyZXNoKHRhcmdldCk7XG5cdFx0XHRcdH1lbHNlIGlmKCF0YXJnZXQgJiYgX3RoaXMubGFzdFRhcmdldEVkZ2Upe1xuXHRcdFx0XHRcdHN0eWxlID0gZy5nZXRPcmlTdHlsZShfdGhpcy5sYXN0VGFyZ2V0RWRnZSk7XG5cdFx0XHRcdFx0Zy5zZXRPcmlTdHlsZShfdGhpcy5sYXN0VGFyZ2V0RWRnZSwgJycpO1xuXHRcdFx0XHRcdF90aGlzLmxhc3RUYXJnZXRFZGdlLnNldFN0eWxlKHN0eWxlKTtcblx0XHRcdFx0XHRnLnJlZnJlc2goX3RoaXMubGFzdFRhcmdldEVkZ2UpO1xuXHRcdFx0XHRcdF90aGlzLmxhc3RUYXJnZXRFZGdlID0gbnVsbDtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGlmICghZy5pc1ZhbGlkUm9vdCh0YXJnZXQpKSB7XG5cdFx0XHRcdFx0dGFyZ2V0ID0gbnVsbDtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldHVybiB0YXJnZXQ7XG5cdFx0XHR9O1xuXG5cdFx0XHRyZXR1cm4gZHJhZ1NvdXJjZTtcblx0XHR9O1xuXG5cdFx0Ri5wcm90b3R5cGUuaGFuZGxlID0gZnVuY3Rpb24obGlzdCwgeCwgeSl7XG5cdFx0XHR2YXIgX3RoaXMgPSB0aGlzLCBpLCBvYmosIGlkLCBuYW1lID0gJycsIGNhdGUgPSAnJywgcGFyZW50LCBzdHlsZSwgY2VsbCwgbW9kZWwsIGcsIGlkcz1bXTtcblxuXHRcdFx0ZyA9IF90aGlzLmVkaXRvci5ncmFwaDtcblxuXHRcdFx0cGFyZW50ID0gZy5nZXREZWZhdWx0UGFyZW50KCk7XG5cdFx0XHRtb2RlbCA9IGcuZ2V0TW9kZWwoKTtcblx0XHRcdG1vZGVsLmJlZ2luVXBkYXRlKCk7XG5cblx0XHRcdHRyeSB7XG5cdFx0XHRcdGZvcihpPTA7IGk8bGlzdC5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRcdG9iaiA9IGxpc3RbaV07XG5cdFx0XHRcdFx0aWQgPSBvYmouYXR0cignZGF0YS1pZCcpO1xuXG5cdFx0XHRcdFx0JC5lYWNoKF90aGlzLm9wdGlvbnMuY2lEYXRhLCBmdW5jdGlvbigpe1xuXHRcdFx0XHRcdFx0aWYodGhpcy5pZCA9PT0gaWQpe1xuXHRcdFx0XHRcdFx0XHRuYW1lID0gdGhpcy5uYW1lO1xuXHRcdFx0XHRcdFx0XHRjYXRlID0gdGhpcy5jYXRlZ29yeUlkO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH0pO1xuXG5cdFx0XHRcdFx0aWYoIWcuZ2V0Q2VsbEJ5SWQoW2dyYXBoLkRFRklORV9DSS5HUkFQSF9QUkVGSVgsIGlkXS5qb2luKCcnKSkpe1xuXHRcdFx0XHRcdFx0aWYoIV90aGlzLmlzU2VsZWN0TW9yZSAmJiBfdGhpcy5sYXN0VGFyZ2V0Q2VsbCAmJiAhX3RoaXMubGFzdFRhcmdldENlbGwuY29sbGFwc2VkICYmXG5cdFx0XHRcdFx0XHRcdCghX3RoaXMubGFzdFRhcmdldENlbGwuc3R5bGUgfHwgX3RoaXMubGFzdFRhcmdldENlbGwuc3R5bGUuaW5kZXhPZignc3dpbWxhbmUnKSA9PT0gLTEpKXtcblxuXHRcdFx0XHRcdFx0XHQvLyBObyBjaGFuZ2UgaWNvXG5cdFx0XHRcdFx0XHRcdC8vZy5zZXRDZWxsU3R5bGVzKG14Q29uc3RhbnRzLlNUWUxFX0lNQUdFLCBfdGhpcy5vcHRpb25zLmxpYltjYXRlXSwgW190aGlzLmxhc3RUYXJnZXRDZWxsXSk7XG5cdFx0XHRcdFx0XHRcdF90aGlzLmxhc3RUYXJnZXRDZWxsLnNldElkKFtfdGhpcy5vcHRpb25zLnByZWZpeCwgaWRdLmpvaW4oJycpKTtcblx0XHRcdFx0XHRcdFx0X3RoaXMubGFzdFRhcmdldENlbGwuc2V0VmFsdWUobmFtZSk7XG5cdFx0XHRcdFx0XHRcdGcucmVmcmVzaChfdGhpcy5sYXN0VGFyZ2V0Q2VsbCk7XG5cdFx0XHRcdFx0XHRcdF90aGlzLmxhc3RUYXJnZXRDZWxsID0gbnVsbDtcblxuXHRcdFx0XHRcdFx0fWVsc2UgaWYoIV90aGlzLmlzU2VsZWN0TW9yZSAmJiBfdGhpcy5sYXN0VGFyZ2V0Q2VsbCAmJiBfdGhpcy5sYXN0VGFyZ2V0Q2VsbC5jb2xsYXBzZWQpe1xuXG5cdFx0XHRcdFx0XHRcdC8vZy5zZXRDZWxsU3R5bGVzKG14Q29uc3RhbnRzLlNUWUxFX0lNQUdFLCBfdGhpcy5vcHRpb25zLmxpYltjYXRlXSwgW190aGlzLmxhc3RUYXJnZXRDZWxsXSk7XG5cdFx0XHRcdFx0XHRcdGcuc2V0Q2VsbEF0dHIoX3RoaXMubGFzdFRhcmdldENlbGwsICdjb2xsYXBzZWQnLCBfdGhpcy5vcHRpb25zLmxpYltjYXRlXSk7XG5cdFx0XHRcdFx0XHRcdGcuc2V0Q2VsbEF0dHIoX3RoaXMubGFzdFRhcmdldENlbGwsICdsYWJlbCcsIG5hbWUpO1xuXHRcdFx0XHRcdFx0XHRfdGhpcy5sYXN0VGFyZ2V0Q2VsbC5zZXRJZChbX3RoaXMub3B0aW9ucy5wcmVmaXgsIGlkXS5qb2luKCcnKSk7XG5cdFx0XHRcdFx0XHRcdGcucmVmcmVzaCgpO1xuXHRcdFx0XHRcdFx0XHRfdGhpcy5sYXN0VGFyZ2V0Q2VsbCA9IG51bGw7XG5cblx0XHRcdFx0XHRcdH1lbHNlIGlmKCFfdGhpcy5pc1NlbGVjdE1vcmUgJiYgX3RoaXMubGFzdFRhcmdldENlbGwgJiZcblx0XHRcdFx0XHRcdFx0KCFfdGhpcy5sYXN0VGFyZ2V0Q2VsbC5zdHlsZSB8fCBfdGhpcy5sYXN0VGFyZ2V0Q2VsbC5zdHlsZS5pbmRleE9mKCdzd2ltbGFuZScpID09PSAtMSkpe1xuXHRcdFx0XHRcdFx0XHRfdGhpcy5sYXN0VGFyZ2V0Q2VsbC5zZXRJZChbX3RoaXMub3B0aW9ucy5wcmVmaXgsIGlkXS5qb2luKCcnKSk7XG5cdFx0XHRcdFx0XHRcdHN0eWxlID0gZy5nZXRPcmlTdHlsZShfdGhpcy5sYXN0VGFyZ2V0Q2VsbCk7XG5cdFx0XHRcdFx0XHRcdGcuc2V0T3JpU3R5bGUoX3RoaXMubGFzdFRhcmdldENlbGwsICcnKTtcblx0XHRcdFx0XHRcdFx0X3RoaXMubGFzdFRhcmdldENlbGwuc2V0U3R5bGUoc3R5bGUpO1xuXHRcdFx0XHRcdFx0XHRnLnJlZnJlc2goX3RoaXMubGFzdFRhcmdldENlbGwpO1xuXHRcdFx0XHRcdFx0XHRfdGhpcy5sYXN0VGFyZ2V0Q2VsbCA9IG51bGw7XG5cdFx0XHRcdFx0XHR9ZWxzZXtcblxuXHRcdFx0XHRcdFx0XHRpZihfdGhpcy5sYXN0VGFyZ2V0Q2VsbCAmJiBfdGhpcy5sYXN0VGFyZ2V0Q2VsbC5zdHlsZS5pbmRleE9mKCdzd2ltbGFuZScpID49IDApe1xuXHRcdFx0XHRcdFx0XHRcdHggLT0gX3RoaXMubGFzdFRhcmdldENlbGwuZ2VvbWV0cnkueDtcblx0XHRcdFx0XHRcdFx0XHR5IC09IF90aGlzLmxhc3RUYXJnZXRDZWxsLmdlb21ldHJ5Lnk7XG5cdFx0XHRcdFx0XHRcdFx0cGFyZW50ID0gX3RoaXMubGFzdFRhcmdldENlbGw7XG5cdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0XHRjZWxsID0gX3RoaXMuY3JlYXRlQ2VsbChnLCBwYXJlbnQsIGNhdGUsIGlkLCBuYW1lLCB4LCB5KTtcblx0XHRcdFx0XHRcdFx0aWRzLnB1c2goaWQpO1xuXHRcdFx0XHRcdFx0XHRnLnJlZnJlc2goY2VsbCk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fWVsc2UgaWYoX3RoaXMubGFzdFRhcmdldENlbGwpe1xuXHRcdFx0XHRcdFx0X3RoaXMubGFzdFRhcmdldENlbGwuc2V0VmFsdWUobmFtZSk7XG5cdFx0XHRcdFx0XHRnLnJlZnJlc2goX3RoaXMubGFzdFRhcmdldENlbGwpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fSBmaW5hbGx5IHtcblx0XHRcdFx0bW9kZWwuZW5kVXBkYXRlKCk7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBpZHM7XG5cdFx0fTtcblxuXHRcdEYucHJvdG90eXBlLmNyZWF0ZURyb3BIYW5kbGVyID0gZnVuY3Rpb24oc0NlbGwpIHtcblx0XHRcdHZhciBfdGhpcyA9IHRoaXM7XG5cdFx0XHRyZXR1cm4gZnVuY3Rpb24oZywgZXZ0LCB0YXJnZXQsIHgsIHkpIHtcblx0XHRcdFx0dmFyIHNlbGVjdHM7XG5cblx0XHRcdFx0aWYoX3RoaXMuaGVpZ2h0TGlnaHRDZWxsKXtcblx0XHRcdFx0XHRnLnJlbW92ZUNlbGxzKFtfdGhpcy5oZWlnaHRMaWdodENlbGxdKTtcblx0XHRcdFx0XHRfdGhpcy5oZWlnaHRMaWdodENlbGwgPSBudWxsO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0c2VsZWN0cyA9IF90aGlzLmdldFNlbGVjdFRyKCk7XG5cdFx0XHRcdF90aGlzLmlzU2VsZWN0TW9yZSA9IHNlbGVjdHMubGVuZ3RoID49IDI7XG5cdFx0XHRcdHNlbGVjdHMgPSBzZWxlY3RzLmxlbmd0aCA+PSAxID8gc2VsZWN0cyA6IFskKHNDZWxsKV07XG5cdFx0XHRcdF90aGlzLmhhbmRsZShzZWxlY3RzLCB4LCB5KTtcblxuXG5cdFx0XHRcdC8vIOWIm+W7uuWFs+ezu1xuXHRcdFx0XHQvLyBpc0NyZWF0ZVJlbGF0aW9uIOaYr+WQpuWIm+W7uuWFs+ezu1xuXHRcdFx0XHRfdGhpcy5hdXRvQ3JlYXRlUmVsYXRpb24oZnVuY3Rpb24oaXNDcmVhdGVSZWxhdGlvbil7XG5cdFx0XHRcdFx0aWYoaXNDcmVhdGVSZWxhdGlvbiB8fCBfdGhpcy5pc1NlbGVjdE1vcmUpe1xuXHRcdFx0XHRcdFx0X3RoaXMuZWRpdG9yLmFjdGlvbi5sYXlvdXRWZXJ0aWNhbCgpO1xuXHRcdFx0XHRcdFx0Zy5yZWZyZXNoKCk7XG5cdFx0XHRcdFx0XHRnLnpvb21Ub0NlbnRlcigpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSk7XG5cblx0XHRcdFx0Ly8g5Y+W5raI5aSa6YCJXG5cdFx0XHRcdF90aGlzLiR0YWJsZS5maW5kKCd0ciBpbnB1dCcpLmVhY2goZnVuY3Rpb24oKXtcblx0XHRcdFx0XHQkKHRoaXMpLmF0dHIoJ2NoZWNrZWQnLCBmYWxzZSk7XG5cdFx0XHRcdH0pO1xuXHRcdFx0fTtcblx0XHR9O1xuXG5cdFx0Ri5wcm90b3R5cGUuY3JlYXRlRHJhZ1ByZXZpZXcgPSBmdW5jdGlvbih3aWR0aCwgaGVpZ2h0LCBodG1sKSB7XG5cdFx0XHR2YXIgZWx0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5cdFx0XHRlbHQuc3R5bGUuYm9yZGVyID0gJzFweCBkYXNoZWQgYmxhY2snO1xuXHRcdFx0ZWx0LnN0eWxlLndpZHRoID0gd2lkdGggKyAncHgnO1xuXHRcdFx0ZWx0LnN0eWxlLmhlaWdodCA9IGhlaWdodCArICdweCc7XG5cdFx0XHRlbHQuaW5uZXJIVE1MID0gaHRtbCA/IGh0bWwgOiAnJztcblx0XHRcdHJldHVybiBlbHQ7XG5cdFx0fTtcblxuXHRcdEYucHJvdG90eXBlLmdldFNlbGVjdFRyID0gZnVuY3Rpb24oKXtcblx0XHRcdHZhciBhcnIgPSBbXSwgX3RoaXMgPSB0aGlzO1xuXHRcdFx0X3RoaXMuJHRhYmxlLmZpbmQoJ3Rib2R5IHRyJykuZWFjaChmdW5jdGlvbigpe1xuXHRcdFx0XHRpZigkKHRoaXMpLmZpbmQoJ2lucHV0JykuaXMoJzpjaGVja2VkJykpe1xuXHRcdFx0XHRcdGFyci5wdXNoKCQodGhpcykpO1xuXHRcdFx0XHR9XG5cdFx0XHR9KTtcblxuXHRcdFx0cmV0dXJuIGFycjtcblx0XHR9O1xuXG5cdFx0Ri5wcm90b3R5cGUuYXV0b0NyZWF0ZVJlbGF0aW9uID0gZnVuY3Rpb24oZm4pe1xuXHRcdFx0dmFyIF90aGlzID0gdGhpcztcblxuXHRcdFx0Q2lSZWxhdGlvblNlcnZpY2UuZ2V0KHtjaXM6IF90aGlzLmVkaXRvci5hY3Rpb24uZ2V0Q2lzSWQoKX0pXG5cdFx0XHRcdC5zdWNjZXNzKGZ1bmN0aW9uKHJlc3VsdCl7XG5cblx0XHRcdFx0XHRpZighcmVzdWx0LmRhdGEpe1xuXHRcdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdHZhciBtb2RlbCwgcGFyZW50LCBpc0xheW91dCA9IGZhbHNlO1xuXG5cdFx0XHRcdFx0cGFyZW50ID0gX3RoaXMuZWRpdG9yLmdyYXBoLmdldERlZmF1bHRQYXJlbnQoKTtcblx0XHRcdFx0XHRtb2RlbCA9IF90aGlzLmVkaXRvci5ncmFwaC5nZXRNb2RlbCgpO1xuXHRcdFx0XHRcdG1vZGVsLmJlZ2luVXBkYXRlKCk7XG5cblxuXHRcdFx0XHRcdCQuZWFjaChyZXN1bHQuZGF0YSwgZnVuY3Rpb24oKXtcblx0XHRcdFx0XHRcdHZhciB2MSA9IF90aGlzLmVkaXRvci5ncmFwaC5nZXRDZWxsQnlJZChbZ3JhcGguREVGSU5FX0NJLkdSQVBIX1BSRUZJWCwgdGhpcy5zdGFydENpXS5qb2luKCcnKSk7XG5cdFx0XHRcdFx0XHR2YXIgdjIgPSBfdGhpcy5lZGl0b3IuZ3JhcGguZ2V0Q2VsbEJ5SWQoW2dyYXBoLkRFRklORV9DSS5HUkFQSF9QUkVGSVgsIHRoaXMuZW5kQ2ldLmpvaW4oJycpKTtcblx0XHRcdFx0XHRcdF90aGlzLmNsZWFyRWRnZXModjEsIHYyKTtcblx0XHRcdFx0XHR9KTtcblxuXHRcdFx0XHRcdHRyeXtcblx0XHRcdFx0XHRcdCQuZWFjaChyZXN1bHQuZGF0YSwgZnVuY3Rpb24oKXtcblx0XHRcdFx0XHRcdFx0dmFyIHYxID0gX3RoaXMuZWRpdG9yLmdyYXBoLmdldENlbGxCeUlkKFtncmFwaC5ERUZJTkVfQ0kuR1JBUEhfUFJFRklYLCB0aGlzLnN0YXJ0Q2ldLmpvaW4oJycpKTtcblx0XHRcdFx0XHRcdFx0dmFyIHYyID0gX3RoaXMuZWRpdG9yLmdyYXBoLmdldENlbGxCeUlkKFtncmFwaC5ERUZJTkVfQ0kuR1JBUEhfUFJFRklYLCB0aGlzLmVuZENpXS5qb2luKCcnKSk7XG5cblx0XHRcdFx0XHRcdFx0aWYodjEgJiYgdjIpe1xuXHRcdFx0XHRcdFx0XHRcdHZhciBlZGdlSWQgPSBbZ3JhcGguREVGSU5FX0NJLkdSQVBIX1BSRUZJWF9SRUxBVElPTiwgdGhpcy5yZWxDYXRlTmFtZV0uam9pbignJyk7XG5cdFx0XHRcdFx0XHRcdFx0X3RoaXMuZWRpdG9yLmdyYXBoLmluc2VydEVkZ2UocGFyZW50LCBlZGdlSWQsIHRoaXMucmVsQ2F0ZU5hbWUsIHYxLCB2Mik7XG5cdFx0XHRcdFx0XHRcdFx0aXNMYXlvdXQgPSB0cnVlO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHR9ZmluYWxseXtcblx0XHRcdFx0XHRcdG1vZGVsLmVuZFVwZGF0ZSgpO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdGlmKGFuZ3VsYXIuaXNGdW5jdGlvbihmbikpe1xuXHRcdFx0XHRcdFx0Zm4oaXNMYXlvdXQpO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHR9KTtcblx0XHR9O1xuXG5cblx0XHRGLnByb3RvdHlwZS5jbGVhckVkZ2VzID0gZnVuY3Rpb24odjEsIHYyKXtcblx0XHRcdHZhciBfdGhpcyA9IHRoaXMsIGksIHJlbW92ZUNlbGxzID0gW107XG5cblx0XHRcdGlmKHYxICYmIHYyICYmIEFycmF5LmlzQXJyYXkodjEuZWRnZXMpKXtcblx0XHRcdFx0Zm9yKGk9MDsgaTx2MS5lZGdlcy5sZW5ndGg7IGkrKyl7XG5cdFx0XHRcdFx0aWYodjEuZWRnZXNbaV0uc291cmNlLmlkID09PSB2Mi5pZCB8fCB2MS5lZGdlc1tpXS50YXJnZXQuaWQgPT09IHYyLmlkKXtcblx0XHRcdFx0XHRcdHJlbW92ZUNlbGxzLnB1c2godjEuZWRnZXNbaV0pO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHRfdGhpcy5lZGl0b3IuZ3JhcGgucmVtb3ZlQ2VsbHMocmVtb3ZlQ2VsbHMpO1xuXHRcdFx0X3RoaXMuZWRpdG9yLmdyYXBoLnJlZnJlc2goKTtcblx0XHR9O1xuXG5cdFx0cmV0dXJuIEY7XG5cblx0fTtcblxuXHRncmFwaC5hcHAuZmFjdG9yeSgnRGF0YURyYXcnLCBmYWN0b3J5KTtcblxufSkobmFtZVNwYWNlLnJlZygnZ3JhcGgnKSk7XG5cbihmdW5jdGlvbihncmFwaCl7XG5cblx0J3VzZSBzdHJpY3QnO1xuXG5cdGdyYXBoLmFwcC5mYWN0b3J5KCdFZGl0b3InLCBmdW5jdGlvbiAoR3JhcGhBY3Rpb24sIEdyYXBoU3RhdGUsIE14RWRpdG9yLCBHcmFwaEhpc290cnkpIHtcblxuXHRcdHJldHVybiBmdW5jdGlvbihkaWFncmFtQ29udGFpbmVyLCBvdXRsaW5lQ29udGFpbmVyKXtcblxuXHRcdFx0dmFyIGVkaXRvcjtcblxuXHRcdFx0ZWRpdG9yID0gbmV3IEVkaXRvcigpO1xuXHRcdFx0ZWRpdG9yLmdyYXBoLmluaXQoZGlhZ3JhbUNvbnRhaW5lcik7XG5cblx0XHRcdGVkaXRvci5ncmFwaC5zZXRUb29sdGlwcyhmYWxzZSk7XG5cdFx0XHRlZGl0b3IuZ3JhcGgucmVmcmVzaCgpO1xuXHRcdFx0ZWRpdG9yLmdyYXBoLmNvbnRhaW5lci5zdHlsZS5iYWNrZ3JvdW5kSW1hZ2UgPSAndXJsKCcgKyBJTUFHRV9QQVRIICsgJy9ncmlkX2JnLnBuZyknO1xuXHRcdFx0ZWRpdG9yLmdyYXBoLmNvbnRhaW5lci5mb2N1cygpO1xuXG5cdFx0XHRpZiAob3V0bGluZUNvbnRhaW5lcikge1xuXHRcdFx0XHRlZGl0b3Iub3V0bGluZS5pbml0KG91dGxpbmVDb250YWluZXIpO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyDmu5rova7nvKnmlL5cblx0XHRcdCQoZGlhZ3JhbUNvbnRhaW5lcikubW91c2V3aGVlbChmdW5jdGlvbiAoZXZlbnQsIGRlbHRhKSB7XG5cblx0XHRcdFx0aWYgKCFlZGl0b3Iuc3RhdGUuem9vbUxvY2spIHtcblx0XHRcdFx0XHRpZiAoZGVsdGEgPiAwKSB7XG5cdFx0XHRcdFx0XHRlZGl0b3IuYWN0aW9uLnpvb21JbigpO1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRlZGl0b3IuYWN0aW9uLnpvb21PdXQoKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0fSk7XG5cblx0XHRcdG5ldyBNeEVkaXRvcihlZGl0b3IpO1xuXHRcdFx0ZWRpdG9yLmFjdGlvbiA9IG5ldyBHcmFwaEFjdGlvbihlZGl0b3IpO1xuXHRcdFx0ZWRpdG9yLnN0YXRlID0gbmV3IEdyYXBoU3RhdGUoZWRpdG9yKTtcblx0XHRcdGVkaXRvci5oaXN0b3J5ID0gbmV3IEdyYXBoSGlzb3RyeShlZGl0b3IpO1xuXG5cdFx0XHRyZXR1cm4gZWRpdG9yO1xuXHRcdH07XG5cdH0pO1xuXG59KShuYW1lU3BhY2UucmVnKCdncmFwaCcpKTtcblxuXG5cbihmdW5jdGlvbihncmFwaCl7XG5cblx0J3VzZSBzdHJpY3QnO1xuXG5cdGdyYXBoLmFwcC5mYWN0b3J5KCdFdmVudCcsIFtmdW5jdGlvbigpe1xuXHRcdHJldHVybiB7XG5cblx0XHRcdEdSQVBIX0NFTExfQ0xJQ0s6ICdncmFwaENlbGxDbGljaycsXG5cdFx0XHRHUkFQSF9DSV9DRUxMX0NMSUNLOiAnZ3JhcGhDaUNlbGxDbGljaycsXG5cdFx0XHRHUkFQSF9DQU5WQVNfQ0xJQ0s6ICdncmFwaENhbnZhc0NsaWNrJyxcblxuXHRcdFx0R1JBUEhfU0NBTEU6ICdncmFwaFNjYWxlJyxcblxuXG5cdFx0XHRWSUVXX0RFTEVURV9CRUZPUkU6ICd2aWV3RGVsZXRlQmVmb3JlJyxcblx0XHRcdFZJRVdfREVMRVRFX0FGVEVSOiAndmlld0RlbGV0ZUFmdGVyJyxcblx0XHRcdFZJRVdfVVBEQVRFX0JFRk9SRTogJ3ZpZXdVcGRhdGVCZWZvcmUnLFxuXG5cdFx0XHRHUkFQSF9JTkZPX1RPR0dMRTogJ2dyYXBoSW5mb1RvZ2dsZScsXG5cblx0XHRcdEdSQVBIX1RBQkxFX1NIT1c6ICdncmFwaFRhYmxlU2hvdycsXG5cdFx0XHRHUkFQSF9UQUJMRV9ISURFOiAnZ3JhcGhUYWJsZUhpZGUnLFxuXG5cdFx0XHRHUkFQSF9DSEFOR0U6ICdncmFwaENoYW5nZScsXG5cblx0XHRcdEdST1VQX1ZJRVdfSURfQ0hBTkdFOiAnZ3JvdXBWaWV3SWRDaGFuZ2UnXG5cdFx0fTtcblx0fV0pO1xuXG59KShuYW1lU3BhY2UucmVnKCdncmFwaCcpKTtcblxuLyogZ2xvYmFsIG14UG9wdXBNZW51ICovXG4vKiBnbG9iYWwgbXhFdmVudCAqL1xuLyogZ2xvYmFsIG14RXZlbnRPYmplY3QgKi9cblxuXG4oZnVuY3Rpb24oZ3JhcGgpe1xuXG5cdCd1c2Ugc3RyaWN0JztcblxuXG5cdGdyYXBoLmFwcC5mYWN0b3J5KCdHcmFwaENvbnRleHRNZW51JywgZnVuY3Rpb24obWQ1LCBDb250ZXh0TWVudSwgVW5pdCwgQ29uc3Qpe1xuXG5cdFx0dmFyIGFkZFNlcGFyYXRvciA9ICctJztcblxuXHRcdHZhciBhZGRJdGVtcyA9IGZ1bmN0aW9uKG1lbnUsIGl0ZW1zLCBwYXJlbnRNZW51KXtcblx0XHRcdHZhciBpLCBpdGVtTWVudSA9IG51bGw7XG5cblx0XHRcdGZvcihpPTA7IGk8aXRlbXMubGVuZ3RoOyBpKyspe1xuXG5cdFx0XHRcdGlmKGl0ZW1zW2ldKXtcblx0XHRcdFx0XHRpZihhbmd1bGFyLmlzQXJyYXkoaXRlbXNbaV0pKXtcblx0XHRcdFx0XHRcdGFkZEl0ZW1zKG1lbnUsIGl0ZW1zW2ldLCBpdGVtTWVudSk7XG5cdFx0XHRcdFx0fWVsc2UgaWYoYW5ndWxhci5pc09iamVjdChpdGVtc1tpXSkpe1xuXHRcdFx0XHRcdFx0aWYodHlwZW9mIHBhcmVudE1lbnUgPT09ICdvYmplY3QnKXtcblx0XHRcdFx0XHRcdFx0bWVudS5hZGRJdGVtKGl0ZW1zW2ldLm5hbWUsIG51bGwsIGl0ZW1zW2ldLmZ1biwgcGFyZW50TWVudSwgaXRlbXNbaV0pO1xuXHRcdFx0XHRcdFx0fWVsc2V7XG5cdFx0XHRcdFx0XHRcdGl0ZW1NZW51ID0gbWVudS5hZGRJdGVtKGl0ZW1zW2ldLm5hbWUsIG51bGwsIGl0ZW1zW2ldLmZ1biwgbnVsbCwgaXRlbXNbaV0pO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1lbHNlIGlmKGFuZ3VsYXIuaXNTdHJpbmcoaXRlbXNbaV0pKXtcblx0XHRcdFx0XHRcdGlmKGl0ZW1zW2ldID09PSBhZGRTZXBhcmF0b3Ipe1xuXHRcdFx0XHRcdFx0XHRtZW51LmFkZFNlcGFyYXRvcihwYXJlbnRNZW51KTtcblx0XHRcdFx0XHRcdH1lbHNle1xuXHRcdFx0XHRcdFx0XHRpZih0eXBlb2YgcGFyZW50TWVudSA9PT0gJ29iamVjdCcpe1xuXHRcdFx0XHRcdFx0XHRcdG1lbnUuYWRkSXRlbShpdGVtc1tpXSwgbnVsbCwgbnVsbCwgcGFyZW50TWVudSk7XG5cdFx0XHRcdFx0XHRcdH1lbHNle1xuXHRcdFx0XHRcdFx0XHRcdGl0ZW1NZW51ID0gbWVudS5hZGRJdGVtKGl0ZW1zW2ldLCBudWxsLCBudWxsKTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fWVsc2V7XG5cdFx0XHRcdFx0dGhyb3cgbmV3IEVycm9yKGkpO1xuXHRcdFx0XHR9XG5cblx0XHRcdH1cblx0XHR9O1xuXG5cblx0XHR2YXIgYXBwZW5kID0gZnVuY3Rpb24oYXJyLCBpdGVtcywgbGlicywgX3RoaXMpe1xuXHRcdFx0dmFyIGksIHRlbXAsIHB1c2g7XG5cblx0XHRcdHB1c2ggPSBmdW5jdGlvbihuYW1lLCBmdW4sIGFsaWFzZXMpe1xuXHRcdFx0XHR2YXIgdGV4dCwgZnVudDtcblxuXHRcdFx0XHR0ZXh0ID0gYWxpYXNlcyA/IGFsaWFzZXMgOiBuYW1lO1xuXHRcdFx0XHRmdW50ID0gZnVuID8gZnVuIDogbGlic1tuYW1lXTtcblxuXHRcdFx0XHRpZih0eXBlb2YgZnVudCA9PT0gJ2Z1bmN0aW9uJyl7XG5cdFx0XHRcdFx0aXRlbXMucHVzaCh7XG5cdFx0XHRcdFx0XHRuYW1lOiB0ZXh0LFxuXHRcdFx0XHRcdFx0ZnVuOiBmdW5jdGlvbihlKXtcblx0XHRcdFx0XHRcdFx0dmFyIGV2dCA9IGUgPyBlIDogX3RoaXMuZXZ0O1xuXHRcdFx0XHRcdFx0XHRpZihfdGhpcy50aGF0KXtcblx0XHRcdFx0XHRcdFx0XHRmdW50LmFwcGx5KF90aGlzLnRoYXQsIFtldnQsIF90aGlzLnNlbGVjdGlvbkNlbGxdKTtcblx0XHRcdFx0XHRcdFx0fWVsc2V7XG5cdFx0XHRcdFx0XHRcdFx0ZnVudC5hcHBseShfdGhpcy5lZGl0b3IsIFtldnQsIF90aGlzLnNlbGVjdGlvbkNlbGxdKTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH0pO1xuXHRcdFx0XHR9ZWxzZXtcblx0XHRcdFx0XHRpdGVtcy5wdXNoKHRleHQpO1xuXHRcdFx0XHR9XG5cdFx0XHR9O1xuXG5cdFx0XHRmb3IoaT0wOyBpPGFyci5sZW5ndGg7IGkrKyl7XG5cdFx0XHRcdGlmKGFycltpXSl7XG5cdFx0XHRcdFx0aWYoYXJyW2ldLmNvbnN0cnVjdG9yID09PSBPYmplY3QgJiYgYXJyW2ldLm5hbWUpe1xuXHRcdFx0XHRcdFx0cHVzaChhcnJbaV0ubmFtZSwgYXJyW2ldLmZ1biwgYXJyW2ldLmFsaWFzZXMpO1xuXHRcdFx0XHRcdH1lbHNlIGlmKGFycltpXS5jb25zdHJ1Y3RvciA9PT0gQXJyYXkpe1xuXHRcdFx0XHRcdFx0dGVtcCA9IFtdO1xuXHRcdFx0XHRcdFx0aXRlbXMucHVzaCh0ZW1wKTtcblx0XHRcdFx0XHRcdGFwcGVuZChhcnJbaV0sIHRlbXAsIGxpYnMsIF90aGlzKTtcblx0XHRcdFx0XHR9ZWxzZXtcblx0XHRcdFx0XHRcdHB1c2goYXJyW2ldLCBsaWJzW2FycltpXV0pO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fWVsc2V7XG5cdFx0XHRcdFx0dGhyb3cgbmV3IEVycm9yKGFycltpXSk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9O1xuXG5cdFx0dmFyIGxpYnMgPSAge307XG5cblx0XHR2YXIgR3JhcGhDb250ZXh0TWVudSA9IGZ1bmN0aW9uIChvLCBvcHRpb24pIHtcblx0XHRcdHRoaXMuZWRpdG9yID0gby5ncmFwaCA/IG8gOiB7Z3JhcGg6IG99O1xuXHRcdFx0dGhpcy5vcHRpb24gPSBvcHRpb247XG5cdFx0XHR0aGlzLm1lbnUgPSBuZXcgQ29udGV4dE1lbnUoKTtcblx0XHRcdHRoaXMuaXRlbXMgPSB7XG5cdFx0XHRcdGNlbGw6IFtdLFxuXHRcdFx0XHR2ZXJ0ZXg6IFtdLFxuXHRcdFx0XHRlZGdlOiBbXSxcblx0XHRcdFx0Y2FudmFzOiBbXSxcblx0XHRcdFx0YWxsOiBbXVxuXHRcdFx0fTtcblxuXHRcdFx0dGhpcy50aGF0ID0gbnVsbDtcblx0XHRcdGlmICh0eXBlb2Ygb3B0aW9uID09PSAnb2JqZWN0JyAmJiBvcHRpb24udGhhdCkge1xuXHRcdFx0XHR0aGlzLnRoYXQgPSBvcHRpb24udGhhdDtcblx0XHRcdH1cblx0XHRcdHRoaXMuYWRkTGlicyhvcHRpb24ubGlicyk7XG5cdFx0XHQvL3RoaXMuYWRkQ29uZmlnRGVmaW5lZE1lbnUoKTtcblx0XHRcdHRoaXMuaXRlbXNJbml0KCk7XG5cdFx0XHR0aGlzLmJpbmQoKTtcblx0XHR9O1xuXG5cblx0XHRHcmFwaENvbnRleHRNZW51LnByb3RvdHlwZS5pdGVtc0luaXQgPSBmdW5jdGlvbigpe1xuXHRcdFx0dmFyIF90aGlzID0gdGhpcywgYXJyLCBsaWJzO1xuXG5cdFx0XHRsaWJzID0gX3RoaXMuZ2V0TGlicygpO1xuXG5cdFx0XHQkLmVhY2goX3RoaXMuaXRlbXMsIGZ1bmN0aW9uKGkpe1xuXHRcdFx0XHRhcnIgPSBfdGhpcy5vcHRpb25baV0gPyBfdGhpcy5vcHRpb25baV0gOiBbXTtcblx0XHRcdFx0YXBwZW5kKGFyciwgX3RoaXMuaXRlbXNbaV0sIGxpYnMsIF90aGlzKTtcblx0XHRcdH0pO1xuXHRcdH07XG5cblxuXHRcdEdyYXBoQ29udGV4dE1lbnUucHJvdG90eXBlLmZpbHRlciA9IGZ1bmN0aW9uKGNlbGwpe1xuXHRcdFx0dmFyIF90aGlzID0gdGhpcywgaGFuZGxlLCBpdGVtcztcblxuXHRcdFx0dmFyIGxvb3AgPSBmdW5jdGlvbihsaXN0KXtcblx0XHRcdFx0dmFyIGk7XG5cdFx0XHRcdGZvcihpPTA7IGk8bGlzdC5sZW5ndGg7IGkrKyl7XG5cdFx0XHRcdFx0aWYoYW5ndWxhci5pc0FycmF5KGxpc3RbaV0pKXtcblx0XHRcdFx0XHRcdGxvb3AobGlzdFtpXSk7XG5cdFx0XHRcdFx0fWVsc2V7XG5cdFx0XHRcdFx0XHRpZihoYW5kbGUuYXBwbHkoX3RoaXMsIFtsaXN0W2ldLCBjZWxsXSkpe1xuXHRcdFx0XHRcdFx0XHRsaXN0W2ldID0gX3RoaXMuY3JlYXRlRGlzYWJsZWRJdGVtKGxpc3RbaV0pO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fTtcblxuXHRcdFx0aWYoY2VsbCAmJiBjZWxsLnZlcnRleCl7XG5cdFx0XHRcdGhhbmRsZSA9IF90aGlzLmZpbHRlclZlcnRleDtcblx0XHRcdFx0aXRlbXMgPSBhbmd1bGFyLmNvcHkoX3RoaXMuaXRlbXMudmVydGV4KTtcblx0XHRcdFx0bG9vcChpdGVtcyk7XG5cdFx0XHR9XG5cblx0XHRcdGlmKGNlbGwgJiYgY2VsbC5lZGdlKXtcblx0XHRcdFx0aGFuZGxlID0gX3RoaXMuZmlsdGVyRWRnZTtcblx0XHRcdFx0aXRlbXMgPSBhbmd1bGFyLmNvcHkoX3RoaXMuaXRlbXMuZWRnZSk7XG5cdFx0XHRcdGxvb3AoaXRlbXMpO1xuXHRcdFx0fVxuXG5cdFx0XHRpZighY2VsbCl7XG5cdFx0XHRcdGhhbmRsZSA9IF90aGlzLmZpbHRlckNhbnZhcztcblx0XHRcdFx0aXRlbXMgPSBhbmd1bGFyLmNvcHkoX3RoaXMuaXRlbXMuY2FudmFzKTtcblx0XHRcdFx0bG9vcChpdGVtcyk7XG5cdFx0XHR9XG5cblx0XHRcdC8vaWYoX3RoaXMub3B0aW9uICYmIF90aGlzLm9wdGlvbi5maWx0ZXIpe1xuXHRcdFx0Ly9cdC8vaXRlbXMgPSBfdGhpcy5vcHRpb24uZmlsdGVyKGl0ZW1zKTtcblx0XHRcdC8vfVxuXG5cdFx0XHRyZXR1cm4gaXRlbXM7XG5cdFx0fTtcblxuXHRcdEdyYXBoQ29udGV4dE1lbnUucHJvdG90eXBlLmZpbHRlclZlcnRleCA9IGZ1bmN0aW9uKGl0ZW0sIGNlbGwpe1xuXHRcdFx0dmFyIG5hbWUsIF90aGlzID0gdGhpcztcblxuXHRcdFx0aWYoYW5ndWxhci5pc09iamVjdChpdGVtKSl7XG5cdFx0XHRcdG5hbWUgPSBpdGVtLm5hbWU7XG5cdFx0XHR9XG5cblx0XHRcdGlmKCFfdGhpcy5lZGl0b3IuZ3JhcGguZ2V0Q2VsbEF0dHIoY2VsbCwgJ2xpbmsnKSAmJiBuYW1lID09PSBDb25zdC5NRU5VX09QRU5fVVJMKXtyZXR1cm4gdHJ1ZTt9XG5cdFx0XHRpZighX3RoaXMuZWRpdG9yLmdyYXBoLmdldENlbGxBdHRyKGNlbGwsICd2aWV3JykgJiYgbmFtZSA9PT0gQ29uc3QuTUVOVV9WSUVXX1JFTEFUSU9OX09QRU4pe3JldHVybiB0cnVlO31cblx0XHRcdGlmKCFVbml0LmlzQ2lDZWxsKGNlbGwpICYmIG5hbWUgPT09IENvbnN0Lk1FTlVfRVhQQU5EX05PREUpe3JldHVybiB0cnVlO31cblx0XHR9O1xuXG5cdFx0R3JhcGhDb250ZXh0TWVudS5wcm90b3R5cGUuZmlsdGVyRWRnZSA9IGZ1bmN0aW9uKGl0ZW0sIGNlbGwpe1xuXG5cdFx0fTtcblxuXHRcdEdyYXBoQ29udGV4dE1lbnUucHJvdG90eXBlLmZpbHRlckNhbnZhcyA9IGZ1bmN0aW9uKGl0ZW0pe1xuXHRcdFx0dmFyIG5hbWUsIF90aGlzID0gdGhpcztcblxuXHRcdFx0aWYoYW5ndWxhci5pc09iamVjdChpdGVtKSl7XG5cdFx0XHRcdG5hbWUgPSBpdGVtLm5hbWU7XG5cdFx0XHR9XG5cblx0XHRcdGlmKGFuZ3VsYXIuaXNTdHJpbmcoaXRlbSkpe1xuXHRcdFx0XHRuYW1lID0gaXRlbTtcblx0XHRcdH1cblxuXHRcdFx0aWYoX3RoaXMuZWRpdG9yLnN0YXRlLnZpZXcgJiYgbmFtZSA9PT0gQ29uc3QuTUVOVV9WSUVXX1NBVkUpe1xuXHRcdFx0XHRpdGVtLm5hbWUgPSAn5Y+m5a2Y6KeG5Zu+J1xuXHRcdFx0fVxuXG5cdFx0XHRpZighX3RoaXMuZWRpdG9yLnN0YXRlLnZpZXcgJiYgKFxuXHRcdFx0XHRcdG5hbWUgPT09IENvbnN0Lk1FTlVfVklFV19VUERBVEUgfHxcblx0XHRcdFx0XHRuYW1lID09PSBDb25zdC5NRU5VX1ZJRVdfTkVXXG5cdFx0XHRcdCkpe3JldHVybiB0cnVlO31cblxuXHRcdFx0aWYoX3RoaXMuZWRpdG9yLmdyYXBoLmdldERlcENlbGxzKCkubGVuZ3RoID09PSAwICYmIChcblx0XHRcdFx0XHRuYW1lID09PSBDb25zdC5NRU5VX0VYUE9SVCB8fFxuXHRcdFx0XHRcdG5hbWUgPT09IENvbnN0Lk1FTlVfTEFZT1VUIHx8XG5cdFx0XHRcdFx0bmFtZSA9PT0gQ29uc3QuTUVOVV9aT09NX0NFTlRFUlxuXHRcdFx0XHQpKXtyZXR1cm4gdHJ1ZTt9XG5cblx0XHRcdGlmKF90aGlzLmVkaXRvci5oaXN0b3J5LmNvdW50KCkgPT09IDAgJiYgbmFtZSA9PT0gQ29uc3QuTUVOVV9WSUVXX1JFTEFUSU9OX0JBQ0spe3JldHVybiB0cnVlO31cblx0XHRcdGlmKCFteENsaXBib2FyZC5jZWxscyAmJiBuYW1lID09PSBDb25zdC5NRU5VX0NFTExfUEFTVEUpe3JldHVybiB0cnVlO31cblxuXHRcdH07XG5cblx0XHRHcmFwaENvbnRleHRNZW51LnByb3RvdHlwZS5jcmVhdGVEaXNhYmxlZEl0ZW0gPSBmdW5jdGlvbihpdGVtKXtcblx0XHRcdHZhciBuYW1lO1xuXG5cdFx0XHRpZihhbmd1bGFyLmlzT2JqZWN0KGl0ZW0pKXtcblx0XHRcdFx0bmFtZSA9IGl0ZW0ubmFtZTtcblx0XHRcdH1cblxuXHRcdFx0aWYoYW5ndWxhci5pc1N0cmluZyhpdGVtKSl7XG5cdFx0XHRcdG5hbWUgPSBpdGVtO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4ge2Rpc2FibGVkOiB0cnVlLCBuYW1lOiBuYW1lfTtcblx0XHR9O1xuXG5cdFx0R3JhcGhDb250ZXh0TWVudS5wcm90b3R5cGUuYmluZCA9IGZ1bmN0aW9uKCl7XG5cdFx0XHR2YXIgX3RoaXMgPSB0aGlzO1xuXG5cdFx0XHRteFBvcHVwTWVudS5wcm90b3R5cGUucG9wdXAgPSBmdW5jdGlvbih4LCB5LCBjZWxsLCBldnQpe1xuXHRcdFx0XHRpZiAodGhpcy5kaXYgIT09IG51bGwgJiYgdGhpcy50Ym9keSAhPT0gbnVsbCAmJiB0aGlzLmZhY3RvcnlNZXRob2QgIT09IG51bGwpXG5cdFx0XHRcdHtcblx0XHRcdFx0XHR0aGlzLmRpdi5zdHlsZS5sZWZ0ID0geCArICdweCc7XG5cdFx0XHRcdFx0dGhpcy5kaXYuc3R5bGUudG9wID0geSArICdweCc7XG5cblx0XHRcdFx0XHQvLyBSZW1vdmVzIGFsbCBjaGlsZCBub2RlcyBmcm9tIHRoZSBleGlzdGluZyBtZW51XG5cdFx0XHRcdFx0d2hpbGUgKHRoaXMudGJvZHkuZmlyc3RDaGlsZCAhPT0gbnVsbClcblx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRteEV2ZW50LnJlbGVhc2UodGhpcy50Ym9keS5maXJzdENoaWxkKTtcblx0XHRcdFx0XHRcdHRoaXMudGJvZHkucmVtb3ZlQ2hpbGQodGhpcy50Ym9keS5maXJzdENoaWxkKTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHR0aGlzLml0ZW1Db3VudCA9IDA7XG5cblx0XHRcdFx0XHR0aGlzLmZhY3RvcnlNZXRob2QodGhpcywgY2VsbCwgZXZ0KTtcblxuXHRcdFx0XHRcdGlmICh0aGlzLml0ZW1Db3VudCA+IDApXG5cdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0dGhpcy5zaG93TWVudSgpO1xuXHRcdFx0XHRcdFx0dGhpcy5maXJlRXZlbnQobmV3IG14RXZlbnRPYmplY3QobXhFdmVudC5TSE9XKSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9O1xuXG5cdFx0XHQvLyBQcmV2ZW50IHJpZ2h0LWNsaWNrIG1lbnVcblx0XHRcdG14RXZlbnQuZGlzYWJsZUNvbnRleHRNZW51KGRvY3VtZW50LmJvZHkpO1xuXG5cdFx0XHQvLyBDb25maWd1cmVzIGF1dG9tYXRpYyBleHBhbmQgb24gbW91c2VvdmVyXG5cdFx0XHRfdGhpcy5lZGl0b3IuZ3JhcGgucGFubmluZ0hhbmRsZXIuYXV0b0V4cGFuZCA9IHRydWU7XG5cblx0XHRcdF90aGlzLmVkaXRvci5ncmFwaC5wb3B1cE1lbnVIYW5kbGVyLmF1dG9FeHBhbmQgPSB0cnVlO1xuXG5cdFx0XHQvLyBJbnN0YWxscyBjb250ZXh0IG1lbnVcblx0XHRcdF90aGlzLmVkaXRvci5ncmFwaC5wb3B1cE1lbnVIYW5kbGVyLmZhY3RvcnlNZXRob2QgPSBmdW5jdGlvbihtZW51LCBjZWxsLCBldnQpe1xuXG5cdFx0XHRcdF90aGlzLnNlbGVjdGlvbkNlbGwgPSBjZWxsO1xuXG5cdFx0XHRcdC8vYWRkSXRlbXMobWVudSwgaXRlbXMpO1xuXHRcdFx0XHRfdGhpcy5ldnQgPSBldnQ7XG5cdFx0XHRcdF90aGlzLm1lbnUuY2xlYXJBbGxJdGVtcygpO1xuXHRcdFx0XHRhZGRJdGVtcyhfdGhpcy5tZW51LCBfdGhpcy5maWx0ZXIoY2VsbCkpO1xuXHRcdFx0XHRfdGhpcy5tZW51LnNob3coZXZ0LmNsaWVudFgsIGV2dC5jbGllbnRZKTtcblx0XHRcdH07XG5cdFx0fTtcblxuXG5cdFx0R3JhcGhDb250ZXh0TWVudS5wcm90b3R5cGUuYWRkTGlicyA9IGZ1bmN0aW9uKG9iail7XG5cdFx0XHRpZihvYmogJiYgb2JqLmNvbnN0cnVjdG9yID09PSBPYmplY3Qpe1xuXHRcdFx0XHQkLmVhY2gob2JqLCBmdW5jdGlvbihpKXtcblx0XHRcdFx0XHRpZih0aGlzLmNvbnN0cnVjdG9yID09PSBGdW5jdGlvbil7XG5cdFx0XHRcdFx0XHRsaWJzW2ldID0gb2JqW2ldO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSk7XG5cdFx0XHR9XG5cdFx0fTtcblxuXHRcdEdyYXBoQ29udGV4dE1lbnUucHJvdG90eXBlLmdldExpYnMgPSBmdW5jdGlvbigpe1xuXHRcdFx0cmV0dXJuIGxpYnM7XG5cdFx0fTtcblxuXHRcdHJldHVybiBHcmFwaENvbnRleHRNZW51O1xuXG5cdH0pO1xuXG59KShuYW1lU3BhY2UucmVnKCdncmFwaCcpKTtcblxuXG4oZnVuY3Rpb24oZ3JhcGgpe1xuXG5cdCd1c2Ugc3RyaWN0JztcblxuXHRncmFwaC5hcHAuZmFjdG9yeSgnR3JhcGhNb25pdG9yJywgZnVuY3Rpb24oQ2lNb25pdG9yU2VydmljZSwgVW5pdCwgQ29uc3QsICR0aW1lb3V0KXtcblxuXHRcdHJldHVybiBmdW5jdGlvbihvcHRpb25zKXtcblxuXHRcdFx0dGhpcy5lZGl0b3IgPSBvcHRpb25zLmVkaXRvcjtcblx0XHRcdHRoaXMuaW5NYXBwaW5nID0ge307XG5cdFx0XHR0aGlzLndpZHRoID0gMjQ7XG5cdFx0XHR0aGlzLmhlaWdodCA9IDI0O1xuXHRcdFx0dGhpcy5zdHlsZSA9ICdlbGxpcHNlO3N0cm9rZVdpZHRoPW5vbmU7c3Ryb2tlQ29sb3I9bm9uZTttb3ZhYmxlPTA7JztcblxuXHRcdFx0dGhpcy5nZXREYXRhID0gZnVuY3Rpb24oKXtcblx0XHRcdFx0dmFyIF90aGlzID0gdGhpcztcblxuXHRcdFx0XHRDaU1vbml0b3JTZXJ2aWNlLmdldFZpZXcodGhpcy5lZGl0b3Iuc3RhdGUudmlldy5pZClcblx0XHRcdFx0XHQuc3VjY2VzcyhmdW5jdGlvbihyZXN1bHQpe1xuXG5cdFx0XHRcdFx0XHRfdGhpcy5kYXRhID0gcmVzdWx0LmRhdGE7XG5cblx0XHRcdFx0XHRcdCQuZWFjaChfdGhpcy5kYXRhLCBmdW5jdGlvbigpe1xuXHRcdFx0XHRcdFx0XHRfdGhpcy5jcmVhdGUodGhpcy5pZCwgTnVtYmVyKHRoaXMuYWxhcm0pLCB0aGlzLmNvdW50KTtcblx0XHRcdFx0XHRcdH0pO1xuXG5cdFx0XHRcdFx0XHRfdGhpcy5lZGl0b3IuZ3JhcGgucmVmcmVzaCgpO1xuXHRcdFx0XHRcdH0pO1xuXG5cblx0XHRcdFx0JHRpbWVvdXQoZnVuY3Rpb24oKXtcblx0XHRcdFx0XHRfdGhpcy5nZXREYXRhKCk7XG5cdFx0XHRcdH0sIDEwMDAgKiA2MCk7XG5cdFx0XHR9O1xuXG5cdFx0XHR0aGlzLmNyZWF0ZSA9IGZ1bmN0aW9uKGNpLCBsZXZlbCwgZGVmdWFsdFZhbHVlKXtcblx0XHRcdFx0dmFyIGNlbGwgPSB0aGlzLmdldENpKGNpKTtcblxuXHRcdFx0XHRpZihjZWxsKXtcblxuXHRcdFx0XHRcdHZhciBnZW9tZXRyeSA9IGNlbGwuZ2V0R2VvbWV0cnkoKTtcblxuXHRcdFx0XHRcdHRoaXMuaW5NYXBwaW5nW2NlbGwuaWRdID0gdGhpcy5lZGl0b3IuZ3JhcGguaW5zZXJ0VmVydGV4KFxuXHRcdFx0XHRcdFx0Y2VsbC5nZXRQYXJlbnQoKSxcblx0XHRcdFx0XHRcdENvbnN0LklOX1BSRUZJWCArIGNlbGwuaWQsXG5cdFx0XHRcdFx0XHRkZWZ1YWx0VmFsdWUgPyBkZWZ1YWx0VmFsdWUgOiAwLFxuXHRcdFx0XHRcdFx0Z2VvbWV0cnkueCAtIHRoaXMud2lkdGggLyAyLFxuXHRcdFx0XHRcdFx0Z2VvbWV0cnkueSAtIHRoaXMuaGVpZ2h0IC8gMixcblx0XHRcdFx0XHRcdHRoaXMud2lkdGgsXG5cdFx0XHRcdFx0XHR0aGlzLmhlaWdodCxcblx0XHRcdFx0XHRcdHRoaXMuc3R5bGVcblx0XHRcdFx0XHQpO1xuXG5cdFx0XHRcdFx0dGhpcy5zZXRWYWx1ZShjZWxsLmlkLCBsZXZlbCwgZGVmdWFsdFZhbHVlKTtcblx0XHRcdFx0fVxuXG5cdFx0XHR9O1xuXG5cdFx0XHR0aGlzLnJlZnJlc2ggPSBmdW5jdGlvbihjaSwgbGV2ZWwsIHZhbHVlKXtcblxuXHRcdFx0XHR2YXIgY2VsbCA9IHRoaXMuZ2V0Q2koY2kpO1xuXG5cdFx0XHRcdGlmKGNlbGwpe1xuXHRcdFx0XHRcdGlmKCF0aGlzLmluTWFwcGluZ1tjZWxsLmlkXSl7XG5cdFx0XHRcdFx0XHR0aGlzLmNyZWF0ZShjaSwgbGV2ZWwsIHZhbHVlKTtcblx0XHRcdFx0XHR9ZWxzZXtcblx0XHRcdFx0XHRcdHRoaXMuc2V0VmFsdWUoY2VsbC5pZCwgbGV2ZWwsIHZhbHVlKTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0fWVsc2V7XG5cdFx0XHRcdFx0dGhpcy5jcmVhdGUoKTtcblx0XHRcdFx0fVxuXHRcdFx0fTtcblxuXHRcdFx0dGhpcy5zZXRWYWx1ZSA9IGZ1bmN0aW9uKGlkLCBsZXZlbCwgdmFsdWUpe1xuXHRcdFx0XHRpZih0aGlzLmluTWFwcGluZ1tpZF0pe1xuXHRcdFx0XHRcdHZhciBpbkNlbGwgPSB0aGlzLmluTWFwcGluZ1tpZF07XG5cdFx0XHRcdFx0dmFyIGNvbG9yID0gVW5pdC5nZXRMZXZlbENvbG9yKGxldmVsKTtcblx0XHRcdFx0XHR2YXIgc3R5bGUgPSB0aGlzLnN0eWxlICsgJ2ZpbGxDb2xvcj0nICsgY29sb3IuYmcgKyAnO2ZvbnRDb2xvcj0nICsgY29sb3IuZmM7XG5cblx0XHRcdFx0XHRpbkNlbGwuc2V0VmFsdWUodmFsdWUpO1xuXHRcdFx0XHRcdGluQ2VsbC5zZXRTdHlsZShzdHlsZSk7XG5cdFx0XHRcdH1cblx0XHRcdH07XG5cblx0XHRcdHRoaXMucmVtb3ZlID0gZnVuY3Rpb24oaWQpe1xuXHRcdFx0XHRpZih0aGlzLmluTWFwcGluZ1tpZF0pe1xuXHRcdFx0XHRcdHRoaXMuZWRpdG9yLmdyYXBoLnJlbW92ZUNlbGxzKHRoaXMuaW5NYXBwaW5nW2lkXSk7XG5cdFx0XHRcdFx0dGhpcy5pbk1hcHBpbmdbaWRdID0gbnVsbDtcblx0XHRcdFx0fVxuXHRcdFx0fTtcblxuXHRcdFx0dGhpcy5nZXRDaSA9IGZ1bmN0aW9uKHNvbWV0aGluZyl7XG5cdFx0XHRcdHZhciBfdGhpcyA9IHRoaXM7XG5cblx0XHRcdFx0aWYoYW5ndWxhci5pc1N0cmluZyhzb21ldGhpbmcpKXtcblx0XHRcdFx0XHRpZihzb21ldGhpbmcuaW5kZXhPZihDb25zdC5DSV9QUkVGSVgpID09PSAtMSl7XG5cdFx0XHRcdFx0XHRzb21ldGhpbmcgPSBDb25zdC5DSV9QUkVGSVggKyBzb21ldGhpbmc7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0c29tZXRoaW5nID0gX3RoaXMuZWRpdG9yLmdyYXBoLmdldENlbGxCeUlkKHNvbWV0aGluZyk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXR1cm4gc29tZXRoaW5nO1xuXHRcdFx0fTtcblxuXHRcdFx0dGhpcy5nZXREYXRhKCk7XG5cdFx0fTtcblxuXHR9KTtcblxufSkobmFtZVNwYWNlLnJlZygnZ3JhcGgnKSk7XG5cbihmdW5jdGlvbihncmFwaCl7XG5cblx0J3VzZSBzdHJpY3QnO1xuXG5cdGdyYXBoLmFwcC5mYWN0b3J5KCdHcmFwaEhpc290cnknLCBmdW5jdGlvbigpe1xuXG5cdFx0cmV0dXJuIGZ1bmN0aW9uKGVkaXRvcil7XG5cblx0XHRcdHRoaXMuaGlzdG9yeSA9IFtdO1xuXG5cdFx0XHR0aGlzLnB1c2ggPSBmdW5jdGlvbih2aWV3KXtcblx0XHRcdFx0dGhpcy5oaXN0b3J5LnB1c2godmlldyk7XG5cdFx0XHR9O1xuXG5cdFx0XHR0aGlzLmJhY2sgPSBmdW5jdGlvbigpe1xuXHRcdFx0XHRpZih0aGlzLmhpc3RvcnkubGVuZ3RoKXtcblx0XHRcdFx0XHR2YXIgdmlldyA9IHRoaXMuaGlzdG9yeS5wb3AoKTtcblx0XHRcdFx0XHRlZGl0b3IuYWN0aW9uLm9wZW5WaWV3KHZpZXcpO1xuXHRcdFx0XHRcdHRoaXMucmVmcmVzaE5hdmlnYXRpb24oKTtcblx0XHRcdFx0fVxuXHRcdFx0fTtcblxuXHRcdFx0Ly9UT0RPIOaYvuekuuWvvOiIquadoVxuXHRcdFx0dGhpcy5zaG93TmF2aWdhdGlvbiA9IGZ1bmN0aW9uKCl7XG5cblx0XHRcdH07XG5cblx0XHRcdC8vVE9ETyDpmpDol4/lr7zoiKrmnaFcblx0XHRcdHRoaXMuaGlkZU5hdmlnYXRpb24gPSBmdW5jdGlvbigpe1xuXG5cdFx0XHR9O1xuXG5cdFx0XHQvL1RPRE8g5Yi35paw5a+86Iiq5p2hXG5cdFx0XHR0aGlzLnJlZnJlc2hOYXZpZ2F0aW9uID0gZnVuY3Rpb24oKXtcblxuXHRcdFx0fTtcblxuXHRcdFx0dGhpcy5jb3VudCA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRcdHJldHVybiB0aGlzLmhpc3RvcnkubGVuZ3RoO1xuXHRcdFx0fTtcblxuXHRcdH07XG5cblx0fSk7XG5cbn0pKG5hbWVTcGFjZS5yZWcoJ2dyYXBoJykpO1xuXG4vKipcbiAqIENyZWF0ZWQgYnkgTGVlIG9uIDcvMjEvMTUuXG4gKi9cblxuKGZ1bmN0aW9uKGdyYXBoKXtcblxuXHQndXNlIHN0cmljdCc7XG5cblx0Z3JhcGguYXBwLmZhY3RvcnkoJ0h0dHBJbnRlcmNlcHRvcicsIGZ1bmN0aW9uKCRxLCBVbml0LCAkY29va2llcyl7XG5cdFx0dmFyIHBlcmNlbnQgPSAwO1xuXHRcdHJldHVybiB7XG5cdFx0XHRyZXF1ZXN0OiBmdW5jdGlvbihjb25maWcpe1xuXG5cdFx0XHRcdGNvbmZpZy5oZWFkZXJzLnRva2VuID0gJGNvb2tpZXMuZ2V0KCd0b2tlbicpO1xuXG5cdFx0XHRcdGlmKCFjb25maWcuY2FjaGUpe1xuXHRcdFx0XHRcdC8vVW5pdC5sb2FkaW5nLnNob3coKTtcblx0XHRcdFx0XHRVbml0LmxvYWRpbmdiYXIuc2hvdygpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiBjb25maWc7XG5cdFx0XHR9LFxuXHRcdFx0cmVzcG9uc2U6IGZ1bmN0aW9uKHJlc3VsdCl7XG5cdFx0XHRcdC8vVW5pdC5sb2FkaW5nLmhpZGUoKTtcblx0XHRcdFx0aWYoYW5ndWxhci5pc09iamVjdChyZXN1bHQuZGF0YSkgJiYgcmVzdWx0LmRhdGEubWVzc2FnZSAmJiByZXN1bHQuY29uZmlnLm1ldGhvZCAhPSAnR0VUJyl7XG5cdFx0XHRcdFx0VW5pdC5zdWNjZXNzKHJlc3VsdC5kYXRhLm1lc3NhZ2UpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlmIChhbmd1bGFyLmlzT2JqZWN0KHJlc3VsdC5kYXRhKSAmJiByZXN1bHQuZGF0YS5tZXNzYWdlKSB7XG5cdFx0XHRcdFx0VW5pdC5sb2FkaW5nYmFyLmhpZGUoKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gcmVzdWx0O1xuXHRcdFx0fSxcblx0XHRcdHJlc3BvbnNlRXJyb3I6IGZ1bmN0aW9uKHJlc3VsdCl7XG5cdFx0XHRcdC8vVW5pdC5sb2FkaW5nLmhpZGUoKTtcblx0XHRcdFx0VW5pdC5sb2FkaW5nYmFyLmVycm9yKCk7XG5cdFx0XHRcdGlmKGFuZ3VsYXIuaXNPYmplY3QocmVzdWx0LmRhdGEpICYmIHJlc3VsdC5kYXRhLm1lc3NhZ2Upe1xuXHRcdFx0XHRcdFVuaXQuZXJyb3IocmVzdWx0LmRhdGEubWVzc2FnZSk7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKHJlc3VsdC5zdGF0dXMgPT09IDQwMSkge1xuXHRcdFx0XHRcdCRjb29raWVzLnJlbW92ZSgndG9rZW4nKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gJHEucmVqZWN0KHJlc3VsdCk7XG5cdFx0XHR9XG5cdFx0fTtcblx0fSk7XG5cbn0pKG5hbWVTcGFjZS5yZWcoJ2dyYXBoJykpO1xuXG4vKiBnbG9iYWwgbWQ1ICovXG4vKiBnbG9iYWwgVEhSRUUgKi9cblxuKGZ1bmN0aW9uKGdyYXBoKXtcblxuXHQndXNlIHN0cmljdCc7XG5cblx0Ly9ncmFwaC5DQUNIRV9PQkpfVVJMID0ge307XG5cblx0Z3JhcGguYXBwLmZhY3RvcnkoJ0xvYWRNZXNoJywgZnVuY3Rpb24obWQ1KXtcblxuXHRcdHJldHVybiBmdW5jdGlvbigpe1xuXHRcdFx0dGhpcy5jYWNoZU9iaiA9IHt9O1xuXG5cdFx0XHR0aGlzLmxvYWQgPSBmdW5jdGlvbihvYmosIGZuKXtcblx0XHRcdFx0dmFyIF90aGlzID0gdGhpcywgaGFzaDtcblxuXHRcdFx0XHRoYXNoID0gbWQ1LmNyZWF0ZUhhc2gob2JqLmltZyk7XG5cblx0XHRcdFx0aWYoX3RoaXMuY2FjaGVPYmpbaGFzaF0pe1xuXHRcdFx0XHRcdGZuKF90aGlzLmNhY2hlT2JqW2hhc2hdLmNsb25lKCkpO1xuXHRcdFx0XHR9ZWxzZXtcblx0XHRcdFx0XHR2YXIgbG9hZGVyO1xuXG5cdFx0XHRcdFx0bG9hZGVyID0gbmV3IFRIUkVFLk9CSk1UTExvYWRlcigpO1xuXHRcdFx0XHRcdGxvYWRlci5sb2FkKG9iai5tZXNoLm9iaiwgb2JqLm1lc2gubXRsLCBmdW5jdGlvbihvYmplY3Qpe1xuXHRcdFx0XHRcdFx0X3RoaXMuY2FjaGVPYmpbaGFzaF0gPSBvYmplY3Q7XG5cdFx0XHRcdFx0XHRmbihvYmplY3QuY2xvbmUoKSk7XG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdH1cblx0XHRcdH07XG5cblx0XHRcdHRoaXMuZGVzdHJveSA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRcdHRoaXMuY2FjaGVPYmogPSB7fTtcblx0XHRcdH07XG5cdFx0fTtcblxuXHR9KTtcblxufSkobmFtZVNwYWNlLnJlZygnZ3JhcGgnKSk7XG5cblxuKGZ1bmN0aW9uKGdyYXBoKXtcblxuXHQndXNlIHN0cmljdCc7XG5cblx0Z3JhcGguYXBwLmZhY3RvcnkoJ014RWRpdG9yJywgWyckcm9vdFNjb3BlJywgJ1VuaXQnLCAnRXZlbnQnLCAnJHRpbWVvdXQnLCBmdW5jdGlvbigkcm9vdFNjb3BlLCBVbml0LCBFdmVudCwgJHRpbWVvdXQpe1xuXG5cdFx0cmV0dXJuIGZ1bmN0aW9uKHBhcmFtRWRpdG9yKXtcblxuXHRcdFx0dmFyIG1vZGVsR2V0U3R5bGUgPSBwYXJhbUVkaXRvci5ncmFwaC5tb2RlbC5nZXRTdHlsZTtcblx0XHRcdHZhciBlZGl0b3IgPSBuZXcgbXhFZGl0b3IobXhVdGlscy5sb2FkKFNURU5DSUxfUEFUSCArICcva2V5aGFuZGxlci1jb21tb25zLnhtbCcpLmdldERvY3VtZW50RWxlbWVudCgpKTtcblxuXHRcdFx0ZWRpdG9yLmdyYXBoID0gcGFyYW1FZGl0b3IuZ3JhcGg7XG5cdFx0XHRlZGl0b3IuaW5zdGFsbERibENsaWNrSGFuZGxlcihlZGl0b3IuZ3JhcGgpO1xuXHRcdFx0ZWRpdG9yLmluc3RhbGxVbmRvSGFuZGxlcihlZGl0b3IuZ3JhcGgpO1xuXHRcdFx0ZWRpdG9yLmluc3RhbGxEcmlsbEhhbmRsZXIoZWRpdG9yLmdyYXBoKTtcblx0XHRcdGVkaXRvci5pbnN0YWxsQ2hhbmdlSGFuZGxlcihlZGl0b3IuZ3JhcGgpO1xuXHRcdFx0ZWRpdG9yLmluc3RhbGxJbnNlcnRIYW5kbGVyKGVkaXRvci5ncmFwaCk7XG5cblx0XHRcdGVkaXRvci5ncmFwaC5wYW5uaW5nSGFuZGxlci5mYWN0b3J5TWV0aG9kID0gbXhVdGlscy5iaW5kKGVkaXRvciwgZnVuY3Rpb24gKG1lbnUsIGNlbGwsIGV2dCkge1xuXHRcdFx0XHRyZXR1cm4gdGhpcy5jcmVhdGVQb3B1cE1lbnUobWVudSwgY2VsbCwgZXZ0KTtcblx0XHRcdH0pO1xuXG5cdFx0XHRlZGl0b3IuZ3JhcGguY29ubmVjdGlvbkhhbmRsZXIuZmFjdG9yeU1ldGhvZCA9IG14VXRpbHMuYmluZChlZGl0b3IsIGZ1bmN0aW9uIChzb3VyY2UsIHRhcmdldCkge1xuXHRcdFx0XHRyZXR1cm4gdGhpcy5jcmVhdGVFZGdlKHNvdXJjZSwgdGFyZ2V0KTtcblx0XHRcdH0pO1xuXG5cdFx0XHRlZGl0b3IuY3JlYXRlTGF5b3V0TWFuYWdlcihlZGl0b3IuZ3JhcGgpO1xuXG5cblx0XHRcdC8vIGNsb25lXG5cdFx0XHRlZGl0b3IuZ3JhcGguY29ubmVjdGlvbkhhbmRsZXIuY3JlYXRlVGFyZ2V0VmVydGV4ID0gZnVuY3Rpb24gKGV2dCwgc291cmNlKSB7XG5cdFx0XHRcdHZhciBjbG9uZSA9IG14Q29ubmVjdGlvbkhhbmRsZXIucHJvdG90eXBlLmNyZWF0ZVRhcmdldFZlcnRleC5hcHBseShlZGl0b3IuZ3JhcGguY29ubmVjdGlvbkhhbmRsZXIsIGFyZ3VtZW50cyk7XG5cblx0XHRcdFx0Z3JhcGguZXZlbnQudHJpZ2dlcihncmFwaC5ERUZJTkVfRVZFTlQuR1JBUEhfVkVSVEVYX0NMT05FLCB7XG5cdFx0XHRcdFx0c291cmNlOiBzb3VyY2UsXG5cdFx0XHRcdFx0Y2xvbmU6IGNsb25lLFxuXHRcdFx0XHRcdGdyYXBoOiBlZGl0b3IuZ3JhcGhcblx0XHRcdFx0fSk7XG5cblx0XHRcdFx0cmV0dXJuIGNsb25lO1xuXHRcdFx0fTtcblxuXG5cdFx0XHQvLyBjbGlja1xuXHRcdFx0ZWRpdG9yLmdyYXBoLmFkZExpc3RlbmVyKG14RXZlbnQuQ0xJQ0ssIGZ1bmN0aW9uIChzZW5kZXIsIGV2dCkge1xuXHRcdFx0XHR2YXIgZSwgY2VsbDtcblxuXHRcdFx0XHRlID0gZXZ0LmdldFByb3BlcnR5KCdldmVudCcpO1xuXHRcdFx0XHRjZWxsID0gZXZ0LmdldFByb3BlcnR5KCdjZWxsJyk7XG5cblx0XHRcdFx0Ly8gY2xpY2sgY2VsbFxuXHRcdFx0XHRpZiAoY2VsbCAmJiBlLndoaWNoID09PSAxKSB7XG5cblx0XHRcdFx0XHQkcm9vdFNjb3BlLiRicm9hZGNhc3QoRXZlbnQuR1JBUEhfQ0VMTF9DTElDSywgVW5pdC5ldmVudERhdGEoe1xuXHRcdFx0XHRcdFx0ZWRpdG9yOiBwYXJhbUVkaXRvcixcblx0XHRcdFx0XHRcdGNlbGw6IGNlbGxcblx0XHRcdFx0XHR9KSk7XG5cblx0XHRcdFx0XHRpZihVbml0LmlzQ2lDZWxsKGNlbGwpKXtcblx0XHRcdFx0XHRcdCRyb290U2NvcGUuJGJyb2FkY2FzdChFdmVudC5HUkFQSF9DSV9DRUxMX0NMSUNLLCBVbml0LmV2ZW50RGF0YSh7XG5cdFx0XHRcdFx0XHRcdGVkaXRvcjogcGFyYW1FZGl0b3IsXG5cdFx0XHRcdFx0XHRcdGNlbGw6IGNlbGxcblx0XHRcdFx0XHRcdH0pKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBjbGljayBjYW52YXNcblx0XHRcdFx0aWYoIWNlbGwpe1xuXHRcdFx0XHRcdCRyb290U2NvcGUuJGJyb2FkY2FzdChFdmVudC5HUkFQSF9DQU5WQVNfQ0xJQ0ssIFVuaXQuZXZlbnREYXRhKHtcblx0XHRcdFx0XHRcdGVkaXRvcjogcGFyYW1FZGl0b3Jcblx0XHRcdFx0XHR9KSk7XG5cdFx0XHRcdFx0JHJvb3RTY29wZS4kZW1pdChFdmVudC5HUkFQSF9DQU5WQVNfQ0xJQ0ssIFVuaXQuZXZlbnREYXRhKHtcblx0XHRcdFx0XHRcdGVkaXRvcjogcGFyYW1FZGl0b3Jcblx0XHRcdFx0XHR9KSk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyDpmLvmraLkuovku7blhpLms6Fcblx0XHRcdFx0Ly8gZXZ0LmNvbnN1bWUoKTtcblx0XHRcdH0pO1xuXG5cblx0XHRcdC8vIHN0eWxlXG5cdFx0XHRlZGl0b3IuZ3JhcGgubW9kZWwuZ2V0U3R5bGUgPSBmdW5jdGlvbihjZWxsKSB7XG5cdFx0XHRcdGlmIChjZWxsICE9PSBudWxsKSB7XG5cdFx0XHRcdFx0dmFyIGV2dCA9IHtcblx0XHRcdFx0XHRcdHN0eWxlOiBtb2RlbEdldFN0eWxlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyksXG5cdFx0XHRcdFx0XHRjZWxsOiBjZWxsLFxuXHRcdFx0XHRcdFx0Z3JhcGg6IGVkaXRvci5ncmFwaCxcblx0XHRcdFx0XHRcdGVkaXRvcjogZWRpdG9yXG5cdFx0XHRcdFx0fTtcblxuXHRcdFx0XHRcdC8vZ3JhcGguZXZlbnQudHJpZ2dlcihncmFwaC5ERUZJTkVfRVZFTlQuR1JBUEhfR0VUX0NFTExfU1RZTEUsIGV2dCwgdGhpcyk7XG5cblx0XHRcdFx0XHRyZXR1cm4gZXZ0LnN0eWxlO1xuXG5cdFx0XHRcdH1cblx0XHRcdFx0cmV0dXJuIG51bGw7XG5cdFx0XHR9O1xuXG5cblx0XHRcdC8vIEFkZCBwdXNoXG5cdFx0XHRlZGl0b3Iua2V5SGFuZGxlci5oYW5kbGVyLmVuYWJsZWQgPSBmYWxzZTtcblx0XHRcdGVkaXRvci5ncmFwaC5rZXlIYW5kbGVyID0gZWRpdG9yLmtleUhhbmRsZXI7XG5cblx0XHRcdGVkaXRvci5ncmFwaC5nZXRDdXJzb3JGb3JDZWxsID0gZnVuY3Rpb24gKGNlbGwpIHtcblx0XHRcdFx0dmFyIHJlc3VsdDtcblxuXHRcdFx0XHRyZXN1bHQgPSBteEdyYXBoLnByb3RvdHlwZS5nZXRDdXJzb3JGb3JDZWxsLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG5cdFx0XHRcdGlmICgoY2VsbCAmJiBncmFwaC51dGlscy5pc0NpSW4oY2VsbCkpIHx8XG5cdFx0XHRcdFx0KGNlbGwgJiYgZ3JhcGgudXRpbHMuaXNDaUhlYWRlcihjZWxsKSkpIHtcblx0XHRcdFx0XHRyZXN1bHQgPSAncG9pbnRlcic7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXR1cm4gcmVzdWx0O1xuXHRcdFx0fTtcblxuXHRcdFx0JHJvb3RTY29wZS4kb24oRXZlbnQuR1JBUEhfSU5GT19UT0dHTEUsIGZ1bmN0aW9uKCl7XG5cdFx0XHRcdCR0aW1lb3V0KGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFx0cGFyYW1FZGl0b3IuYWN0aW9uLnpvb21DZW50ZXIoKVxuXHRcdFx0XHR9KTtcblx0XHRcdH0pO1xuXHRcdH07XG5cdH1dKTtcblxufSkobmFtZVNwYWNlLnJlZygnZ3JhcGgnKSk7XG5cbihmdW5jdGlvbihncmFwaCl7XG5cblx0J3VzZSBzdHJpY3QnO1xuXG5cblx0Z3JhcGguYXBwLmZhY3RvcnkoJ091dGxpbmUnLCBmdW5jdGlvbihFZGl0b3IsIFVuaXQsIEF1dG9MYXlvdXQpe1xuXG5cblx0XHR2YXIgQXBwID0gZnVuY3Rpb24oanNvbiwgY29udGFpbmVyLCBvcHRpb24pe1xuXHRcdFx0dmFyIF90aGlzID0gdGhpcztcblxuXHRcdFx0b3B0aW9uID0gb3B0aW9uIHx8IHt9O1xuXHRcdFx0X3RoaXMuaXNJRSA9IG5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignTVNJRScpID49IDAgfHwgbmF2aWdhdG9yLnVzZXJBZ2VudC5zZWFyY2goL1RyaWRlbnQvaSkgPj0gMDtcblx0XHRcdF90aGlzLmxheW91dCA9IG9wdGlvbi5sYXlvdXQgfHwgJ3RvcCc7XG5cdFx0XHRfdGhpcy5qc29uID0ganNvbjtcblx0XHRcdF90aGlzLmNvbnRhaW5lciA9IGNvbnRhaW5lcjtcblx0XHRcdF90aGlzLnNwZWVkID0gNDAwO1xuXHRcdFx0X3RoaXMuZ3JhcGhNYXJnaW4gPSAxMDtcblx0XHRcdF90aGlzLmNsZWFyQ2xhc3NOYW1lID0gJ2NsZWFyJztcblx0XHRcdF90aGlzLm1hc2tDbGFzc05hbWUgPSAnbWFzayc7XG5cdFx0XHRfdGhpcy5tYXNrSG92ZXJDbGFzc05hbWUgPSAnbWFza0hvdmVyJztcblx0XHRcdF90aGlzLm1hc2tFbGVtZW50cyA9IFtdO1xuXHRcdFx0X3RoaXMuZ3JhcGhFbGVtZW50cyA9IFtdO1xuXHRcdFx0X3RoaXMuc2Nyb2xsRGl2U2l6ZSA9IG9wdGlvbi50b29sYmFyU2l6ZSB8fCAxMzA7XG5cdFx0XHRfdGhpcy5vdXRMaW5lRGl2ID0ge1xuXHRcdFx0XHRNYWduaWZpY2F0aW9uIDogMS41LFxuXHRcdFx0XHRib3JkZXJXaWR0aDogMSxcblx0XHRcdFx0c2l6ZSA6IG9wdGlvbi5vdXRMaW5lU2l6ZSB8fCAwLjksXG5cdFx0XHRcdG1hcmdpbkxSIDogMTAsXG5cdFx0XHRcdGJveEJnQ29sb3IgOiAnIzAwMCcsXG5cdFx0XHRcdGJveEJvcmRlcldpZHRoOiAwLFxuXHRcdFx0XHRib3hCb3JkZXJDb2xvcjogJyNGRkYnLFxuXHRcdFx0XHRtYXhEaXNwbGF5Q291bnQgOiBvcHRpb24ubWF4Q291bnQgfHwgNFxuXHRcdFx0fTtcblx0XHRcdF90aGlzLmxvYWRpbmcgPSB7XG5cdFx0XHRcdHdpZHRoOiAzMDAsXG5cdFx0XHRcdGhlaWdodDogMzAsXG5cdFx0XHRcdGJvcmRlcldpZHRoOiAxLFxuXHRcdFx0XHRib3JkZXJDb2xvcjogJ2dyZWVuJyxcblx0XHRcdFx0cGFkZGluZzogNSxcblx0XHRcdFx0Zm9udFNpemU6IDMwLFxuXHRcdFx0XHRjb2xvcjogJ2dyZWVuJyxcblx0XHRcdFx0YmdDb2xvcjogJyNGNUY1RjUnLFxuXHRcdFx0XHR0ZXh0OiAnV2FpdGluZyBQbGVhc2UgLi4uJ1xuXHRcdFx0fTtcblx0XHRcdF90aGlzLnRpcCA9IHtcblx0XHRcdFx0aGVpZ2h0OiAyNCxcblx0XHRcdFx0Zm9udFNpemU6IDE0LFxuXHRcdFx0XHRwYWRkaW5nOiA1LFxuXHRcdFx0XHRiZ0NvbG9yOiAncmdiKDExMiwgMTc2LCAyMjIpJyxcblx0XHRcdFx0Y29sb3I6ICcjRkZGJ1xuXHRcdFx0fTtcblx0XHRcdF90aGlzLnBhZ2UgPSB7XG5cdFx0XHRcdHNpemU6IDIwLFxuXHRcdFx0XHRwYWRkaW5nOiAzLFxuXHRcdFx0XHRmb250U2l6ZTogMTAsXG5cdFx0XHRcdGNvbG9yOiAnI0ZGRicsXG5cdFx0XHRcdGJnQ29sb3I6ICdyZ2IoMTEyLCAxNzYsIDIyMiknLFxuXHRcdFx0XHRvcGFjaXR5OiAwLjhcblx0XHRcdH07XG5cdFx0XHRfdGhpcy5wYWdlQnRuU3R5bGUgPSB7XG5cdFx0XHRcdHNpemUgOiAyMCxcblx0XHRcdFx0bWFyZ2luTFIgOiAyMCxcblx0XHRcdFx0b2Zmc2V0OiA1LFxuXHRcdFx0XHRjb2xvciA6IG9wdGlvbi5idG5Db2xvciB8fCAnd2hpdGUnXG5cdFx0XHR9O1xuXHRcdFx0X3RoaXMudXBCZ0NvbG9yID0gb3B0aW9uLnRvb2xiYXJCZ0NvbG9yIHx8ICdibGFjayc7XG5cblx0XHRcdF90aGlzLmluaXQoKTtcblx0XHRcdF90aGlzLmxvYWREYXRhKCk7XG5cdFx0XHRfdGhpcy5jcmVhdGVEaXYoKTtcblx0XHRcdF90aGlzLmNyZWF0ZUdyYXBoKCk7XG5cdFx0XHRfdGhpcy5vdXRsaW5lRXZlbnRzKCk7XG5cblx0XHRcdGlmKF90aGlzLmpzb24ubGVuZ3RoID4gX3RoaXMub3V0TGluZURpdi5tYXhEaXNwbGF5Q291bnQpe1xuXHRcdFx0XHRfdGhpcy5jcmVhdGVQYWdlQnRuKCk7XG5cdFx0XHRcdF90aGlzLnBhZ2VCdG5FdmVudHMoKTtcblx0XHRcdH1cblxuXHRcdFx0X3RoaXMuY29udGV4dE1lbnUoKTtcblxuXHRcdH07XG5cblxuXHRcdEFwcC5wcm90b3R5cGUuaW5pdCA9IGZ1bmN0aW9uKCl7XG5cdFx0XHR2YXIgX3RoaXMgPSB0aGlzLCBvO1xuXG5cdFx0XHRvID0gX3RoaXMub3V0TGluZURpdjtcblxuXHRcdFx0aWYoby5zaXplPjAuOSl7XG5cdFx0XHRcdG8uc2l6ZSA9IDAuOTtcblx0XHRcdH1lbHNlIGlmKG8uc2l6ZSA8IDAuMSl7XG5cdFx0XHRcdG8uc2l6ZSA9IDAuMTtcblx0XHRcdH1cblxuXHRcdFx0aWYoX3RoaXMuaXNIb3Jpem9udGFsTGF5b3V0KCkpe1xuXHRcdFx0XHRvLmhlaWdodCA9IHBhcnNlSW50KF90aGlzLnNjcm9sbERpdlNpemUgKiBvLnNpemUsIDEwKTtcblx0XHRcdFx0by53aWR0aCA9IHBhcnNlSW50KG8uaGVpZ2h0ICogby5NYWduaWZpY2F0aW9uLCAxMCk7XG5cdFx0XHR9ZWxzZXtcblx0XHRcdFx0by53aWR0aCA9IHBhcnNlSW50KF90aGlzLnNjcm9sbERpdlNpemUgKiBvLnNpemUsIDEwKTtcblx0XHRcdFx0by5oZWlnaHQgPSBwYXJzZUludChvLndpZHRoIC8gby5NYWduaWZpY2F0aW9uLCAxMCk7XG5cdFx0XHR9XG5cdFx0fTtcblxuXG5cblx0XHR2YXIgY3JlYXRlRGl2ID0gZnVuY3Rpb24oaWQpe1xuXHRcdFx0dmFyIGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG5cdFx0XHRkaXYuaWQgPSBpZDtcblx0XHRcdHJldHVybiBkaXY7XG5cdFx0fTtcblxuXHRcdHZhciBjcmVhdGVWZXJ0aWNhbExheW91dCA9IGZ1bmN0aW9uKCl7XG5cdFx0XHR2YXIgX3RoaXMgPSB0aGlzLCBvID0gX3RoaXMub3V0TGluZURpdiwgdCA9IF90aGlzLmxvYWRpbmc7XG5cblx0XHRcdC8vIOa7muWKqOWMuuWfn1xuXHRcdFx0X3RoaXMuc2Nyb2xsQ29udGFpbmVyID0gY3JlYXRlRGl2KCdzY3JvbGwnKTtcblx0XHRcdF90aGlzLnNjcm9sbENvbnRhaW5lci5zdHlsZS5jc3NUZXh0ID0gW1xuXHRcdFx0XHQnd2lkdGg6ICcgKyBfdGhpcy5zY3JvbGxEaXZTaXplICsgJ3B4Jyxcblx0XHRcdFx0J2hlaWdodDogMTAwJScsXG5cdFx0XHRcdCdvdmVyZmxvdzogaGlkZGVuJyxcblx0XHRcdFx0J2JhY2tncm91bmQ6ICcgKyBfdGhpcy51cEJnQ29sb3IsXG5cdFx0XHRcdCdwb3NpdGlvbjogYWJzb2x1dGUnLFxuXHRcdFx0XHQndG9wOiAwJyxcblx0XHRcdFx0X3RoaXMubGF5b3V0ICsgJyA6IDAnLFxuXHRcdFx0XHQnei1pbmRleDogOSdcblx0XHRcdF0uam9pbignOycpO1xuXG5cblx0XHRcdF90aGlzLmNlbnRlckVsZW1lbnQgPSBjcmVhdGVEaXYoJ2NlbnRlcicpO1xuXHRcdFx0X3RoaXMuY2VudGVyRWxlbWVudC5zdHlsZS5jc3NUZXh0ID0gW1xuXHRcdFx0XHQnYm9yZGVyOiAnICsgby5ib3hCb3JkZXJXaWR0aCArJ3B4IHNvbGlkICcgKyBvLmJveEJvcmRlckNvbG9yLFxuXHRcdFx0XHQncG9zaXRpb246IGFic29sdXRlJyxcblx0XHRcdFx0J2xlZnQ6IDAnLFxuXHRcdFx0XHQncmlnaHQ6IDAnLFxuXHRcdFx0XHQnYm90dG9tOiAwJyxcblx0XHRcdFx0J3RvcCA6MCcsXG5cdFx0XHRcdCdoZWlnaHQ6ICcgKyAoKG8uaGVpZ2h0ICsgby5tYXJnaW5MUiAqIDIpICogby5tYXhEaXNwbGF5Q291bnQpICsgJ3B4Jyxcblx0XHRcdFx0J3dpZHRoOiAnICsgKG8ud2lkdGggKyBvLmJvcmRlcldpZHRoICogMikgKyAncHgnLFxuXHRcdFx0XHQnbWFyZ2luOiBhdXRvJ1xuXHRcdFx0XS5qb2luKCc7Jyk7XG5cblxuXHRcdFx0X3RoaXMuYWN0aW9uRWxlbWVudCA9IGNyZWF0ZURpdignYWN0aW9uJyk7XG5cdFx0XHRfdGhpcy5hY3Rpb25FbGVtZW50LnN0eWxlLmNzc1RleHQgPSBbXG5cdFx0XHRcdCd3aWR0aDogMTAwJScsXG5cdFx0XHRcdCdoZWlnaHQ6IDEwMCUnLFxuXHRcdFx0XHQnb3ZlcmZsb3c6IGhpZGRlbidcblx0XHRcdF0uam9pbignOycpO1xuXG5cdFx0XHRfdGhpcy5zY3JvbGxJdGVtc0NvbnRhaW5lciA9IGNyZWF0ZURpdignaXRlbXMnKTtcblx0XHRcdF90aGlzLnNjcm9sbEl0ZW1zQ29udGFpbmVyLnN0eWxlLmNzc1RleHQgPSBbXG5cdFx0XHRcdCdoZWlnaHQ6ICcgKyAoKG8ud2lkdGggKyBvLmJvcmRlcldpZHRoICogMiArIG8ubWFyZ2luTFIgKiAyKSAqIF90aGlzLmpzb24ubGVuZ3RoKSArICdweCcsXG5cdFx0XHRcdCd3aWR0aDogMTAwJScsXG5cdFx0XHRcdCdvdmVyZmxvdzogaGlkZGVuJ1xuXHRcdFx0XS5qb2luKCc7Jyk7XG5cdFx0XHRfdGhpcy5zY3JvbGxJdGVtc0NvbnRhaW5lci5jbGFzc05hbWUgPSBfdGhpcy5jbGVhckNsYXNzTmFtZTtcblxuXHRcdFx0X3RoaXMuYWN0aW9uRWxlbWVudC5hcHBlbmRDaGlsZChfdGhpcy5zY3JvbGxJdGVtc0NvbnRhaW5lcik7XG5cdFx0XHRfdGhpcy5jZW50ZXJFbGVtZW50LmFwcGVuZENoaWxkKF90aGlzLmFjdGlvbkVsZW1lbnQpO1xuXHRcdFx0X3RoaXMuc2Nyb2xsQ29udGFpbmVyLmFwcGVuZENoaWxkKF90aGlzLmNlbnRlckVsZW1lbnQpO1xuXG5cdFx0XHRfdGhpcy5tYWluQ29udGFpbmVyID0gY3JlYXRlRGl2KCdtYWluJyk7XG5cdFx0XHRfdGhpcy5tYWluQ29udGFpbmVyLnN0eWxlLmNzc1RleHQgPSBbXG5cdFx0XHRcdCdwb3NpdGlvbjogYWJzb2x1dGUnLFxuXHRcdFx0XHQnd2lkdGg6ICcgKyAoJChfdGhpcy5jb250YWluZXIpLndpZHRoKCkgLSBfdGhpcy5zY3JvbGxEaXZTaXplKSArICdweCcsXG5cdFx0XHRcdCdoZWlnaHQ6IDEwMCUnLFxuXHRcdFx0XHQndG9wOiAwJyxcblx0XHRcdFx0X3RoaXMubGF5b3V0ID09PSAnbGVmdCcgPyAncmlnaHQ6IDAnIDogJ2xlZnQ6IDAnXG5cdFx0XHRdLmpvaW4oJzsnKTtcblxuXHRcdFx0X3RoaXMubG9hZGluZ0NvbnRhaW5lciA9IGNyZWF0ZURpdignbG9hZGluZycpO1xuXHRcdFx0X3RoaXMubG9hZGluZ0NvbnRhaW5lci5zdHlsZS5jc3NUZXh0ID0gW1xuXHRcdFx0XHQnd2lkdGg6ICcgKyB0LndpZHRoICsgJ3B4Jyxcblx0XHRcdFx0J2hlaWdodDogJyArIHQuaGVpZ2h0ICsgJ3B4Jyxcblx0XHRcdFx0J3BhZGRpbmc6ICcgKyB0LnBhZGRpbmcgKyAncHgnLFxuXHRcdFx0XHQnY29sb3I6ICcgKyB0LmNvbG9yLFxuXHRcdFx0XHQnYmFja2dyb3VuZDogJyArIHQuYmdDb2xvcixcblx0XHRcdFx0J3Bvc2l0aW9uOiBhYnNvbHV0ZScsXG5cdFx0XHRcdCdmb250LXNpemU6ICcgKyB0LmZvbnRTaXplICsgJ3B4Jyxcblx0XHRcdFx0J2JvcmRlcjogJyArIHQuYm9yZGVyV2lkdGggKyAncHggc29saWQgJyArIHQuYm9yZGVyQ29sb3IsXG5cdFx0XHRcdCdsZWZ0OiAwJyxcblx0XHRcdFx0J3RvcDogMCcsXG5cdFx0XHRcdCdyaWdodDogMCcsXG5cdFx0XHRcdCdib3R0b206IDAnLFxuXHRcdFx0XHQnZm9udC13aWR0aDogYm9sZCcsXG5cdFx0XHRcdCdsaW5lLWhlaWdodDogJyArIHQuaGVpZ2h0ICsgJ3B4Jyxcblx0XHRcdFx0J3RleHQtYWxpZ246IGNlbnRlcicsXG5cdFx0XHRcdCdmb250LWZhbWlseTogQXJpYWwnLFxuXHRcdFx0XHQnbWFyZ2luOiBhdXRvJ1xuXHRcdFx0XS5qb2luKCc7Jyk7XG5cblx0XHRcdF90aGlzLmxvYWRpbmdDb250YWluZXIuaW5uZXJIVE1MID0gdC50ZXh0O1xuXHRcdFx0X3RoaXMubWFpbkNvbnRhaW5lci5hcHBlbmRDaGlsZChfdGhpcy5sb2FkaW5nQ29udGFpbmVyKTtcblxuXHRcdFx0Ly8gSW5zZXJ0IERPTVxuXHRcdFx0X3RoaXMuY29udGFpbmVyLmFwcGVuZENoaWxkKF90aGlzLnNjcm9sbENvbnRhaW5lcik7XG5cdFx0XHRfdGhpcy5jb250YWluZXIuYXBwZW5kQ2hpbGQoX3RoaXMubWFpbkNvbnRhaW5lcik7XG5cdFx0fTtcblxuXHRcdHZhciBjcmVhdGVIb3Jpem9udGFsTGF5b3V0ID0gZnVuY3Rpb24oKXtcblx0XHRcdHZhciBfdGhpcyA9IHRoaXMsIG8gPSBfdGhpcy5vdXRMaW5lRGl2LCB0ID0gX3RoaXMubG9hZGluZztcblxuXHRcdFx0Ly8g5rua5Yqo5Yy65Z+fXG5cdFx0XHRfdGhpcy5zY3JvbGxDb250YWluZXIgPSBjcmVhdGVEaXYoJ3Njcm9sbCcpO1xuXHRcdFx0X3RoaXMuc2Nyb2xsQ29udGFpbmVyLnN0eWxlLmNzc1RleHQgPSBbXG5cdFx0XHRcdCd3aWR0aDogMTAwJScsXG5cdFx0XHRcdCdvdmVyZmxvdzogaGlkZGVuJyxcblx0XHRcdFx0J3Bvc2l0aW9uOiBhYnNvbHV0ZScsXG5cdFx0XHRcdCdiYWNrZ3JvdW5kOiAnICsgX3RoaXMudXBCZ0NvbG9yLFxuXHRcdFx0XHQnaGVpZ2h0OiAnICsgX3RoaXMuc2Nyb2xsRGl2U2l6ZSArICdweCcsXG5cdFx0XHRcdCdsZWZ0OiAwJyxcblx0XHRcdFx0J3otaW5kZXg6IDknLFxuXHRcdFx0XHRfdGhpcy5sYXlvdXQgKyAnOiAwJ1xuXHRcdFx0XS5qb2luKCc7Jyk7XG5cblx0XHRcdF90aGlzLmNlbnRlckVsZW1lbnQgPSBjcmVhdGVEaXYoJ2NlbnRlcicpO1xuXHRcdFx0X3RoaXMuY2VudGVyRWxlbWVudC5zdHlsZS5jc3NUZXh0ID0gW1xuXHRcdFx0XHQnYm9yZGVyOiAnICsgby5ib3hCb3JkZXJXaWR0aCArJ3B4IHNvbGlkICcgKyBvLmJveEJvcmRlckNvbG9yLFxuXHRcdFx0XHQncG9zaXRpb246IGFic29sdXRlJyxcblx0XHRcdFx0J2xlZnQ6IDAnLFxuXHRcdFx0XHQncmlnaHQ6IDAnLFxuXHRcdFx0XHQnYm90dG9tOiAwJyxcblx0XHRcdFx0J3RvcCA6MCcsXG5cdFx0XHRcdC8vICdiYWNrZ3JvdW5kOiAnICsgby5ib3hCZ0NvbG9yLFxuXHRcdFx0XHQnd2lkdGg6ICcgKyAoKG8ud2lkdGggKyBvLm1hcmdpbkxSICogMikgKiBvLm1heERpc3BsYXlDb3VudCkgKyAncHgnLFxuXHRcdFx0XHQnaGVpZ2h0OiAnICsgKG8uaGVpZ2h0ICsgby5ib3JkZXJXaWR0aCAqIDIpICsgJ3B4Jyxcblx0XHRcdFx0J21hcmdpbjogYXV0bydcblx0XHRcdF0uam9pbignOycpO1xuXG5cdFx0XHRfdGhpcy5hY3Rpb25FbGVtZW50ID0gY3JlYXRlRGl2KCdhY3Rpb24nKTtcblx0XHRcdF90aGlzLmFjdGlvbkVsZW1lbnQuc3R5bGUuY3NzVGV4dCA9IFtcblx0XHRcdFx0J3dpZHRoOiAxMDAlJyxcblx0XHRcdFx0J2hlaWdodDogMTAwJScsXG5cdFx0XHRcdCdvdmVyZmxvdzogaGlkZGVuJ1xuXHRcdFx0XS5qb2luKCc7Jyk7XG5cblx0XHRcdF90aGlzLnNjcm9sbEl0ZW1zQ29udGFpbmVyID0gY3JlYXRlRGl2KCdpdGVtcycpO1xuXHRcdFx0X3RoaXMuc2Nyb2xsSXRlbXNDb250YWluZXIuc3R5bGUuY3NzVGV4dCA9IFtcblx0XHRcdFx0J3dpZHRoOiAnICsgKChvLndpZHRoICsgby5ib3JkZXJXaWR0aCAqIDIgKyBvLm1hcmdpbkxSICogMikgKiBfdGhpcy5qc29uLmxlbmd0aCkgKyAncHgnLFxuXHRcdFx0XHQnaGVpZ2h0OiAxMDAlJyxcblx0XHRcdFx0J292ZXJmbG93OiBoaWRkZW4nXG5cdFx0XHRdLmpvaW4oJzsnKTtcblx0XHRcdF90aGlzLnNjcm9sbEl0ZW1zQ29udGFpbmVyLmNsYXNzTmFtZSA9IF90aGlzLmNsZWFyQ2xhc3NOYW1lO1xuXG5cdFx0XHRfdGhpcy5hY3Rpb25FbGVtZW50LmFwcGVuZENoaWxkKF90aGlzLnNjcm9sbEl0ZW1zQ29udGFpbmVyKTtcblx0XHRcdF90aGlzLmNlbnRlckVsZW1lbnQuYXBwZW5kQ2hpbGQoX3RoaXMuYWN0aW9uRWxlbWVudCk7XG5cdFx0XHRfdGhpcy5zY3JvbGxDb250YWluZXIuYXBwZW5kQ2hpbGQoX3RoaXMuY2VudGVyRWxlbWVudCk7XG5cblx0XHRcdF90aGlzLm1haW5Db250YWluZXIgPSBjcmVhdGVEaXYoJ21haW4nKTtcblx0XHRcdF90aGlzLm1haW5Db250YWluZXIuc3R5bGUuY3NzVGV4dCA9IFtcblx0XHRcdFx0J3Bvc2l0aW9uOiBhYnNvbHV0ZScsXG5cdFx0XHRcdCd3aWR0aDogMTAwJScsXG5cdFx0XHRcdCdoZWlnaHQ6ICcgKyAoJChfdGhpcy5jb250YWluZXIpLmhlaWdodCgpIC0gX3RoaXMuc2Nyb2xsRGl2U2l6ZSkgKyAncHgnLFxuXHRcdFx0XHQnbGVmdDogMCcsXG5cdFx0XHRcdF90aGlzLmxheW91dCA9PT0gJ3RvcCcgPyAnYm90dG9tOiAwJyA6ICd0b3A6IDAnXG5cdFx0XHRdLmpvaW4oJzsnKTtcblxuXHRcdFx0X3RoaXMubG9hZGluZ0NvbnRhaW5lciA9IGNyZWF0ZURpdignbG9hZGluZycpO1xuXHRcdFx0X3RoaXMubG9hZGluZ0NvbnRhaW5lci5zdHlsZS5jc3NUZXh0ID0gW1xuXHRcdFx0XHQnd2lkdGg6ICcgKyB0LndpZHRoICsgJ3B4Jyxcblx0XHRcdFx0J2hlaWdodDogJyArIHQuaGVpZ2h0ICsgJ3B4Jyxcblx0XHRcdFx0J3BhZGRpbmc6ICcgKyB0LnBhZGRpbmcgKyAncHgnLFxuXHRcdFx0XHQnY29sb3I6ICcgKyB0LmNvbG9yLFxuXHRcdFx0XHQnYmFja2dyb3VuZDogJyArIHQuYmdDb2xvcixcblx0XHRcdFx0J3Bvc2l0aW9uOiBhYnNvbHV0ZScsXG5cdFx0XHRcdCdmb250LXNpemU6ICcgKyB0LmZvbnRTaXplICsgJ3B4Jyxcblx0XHRcdFx0J2JvcmRlcjogJyArIHQuYm9yZGVyV2lkdGggKyAncHggc29saWQgJyArIHQuYm9yZGVyQ29sb3IsXG5cdFx0XHRcdCdsZWZ0OiAwJyxcblx0XHRcdFx0J3RvcDogMCcsXG5cdFx0XHRcdCdyaWdodDogMCcsXG5cdFx0XHRcdCdib3R0b206IDAnLFxuXHRcdFx0XHQnZm9udC13aWR0aDogYm9sZCcsXG5cdFx0XHRcdCdsaW5lLWhlaWdodDogJyArIHQuaGVpZ2h0ICsgJ3B4Jyxcblx0XHRcdFx0J3RleHQtYWxpZ246IGNlbnRlcicsXG5cdFx0XHRcdCdmb250LWZhbWlseTogQXJpYWwnLFxuXHRcdFx0XHQnbWFyZ2luOiBhdXRvJ1xuXHRcdFx0XS5qb2luKCc7Jyk7XG5cdFx0XHRfdGhpcy5sb2FkaW5nQ29udGFpbmVyLmlubmVySFRNTCA9IHQudGV4dDtcblx0XHRcdF90aGlzLm1haW5Db250YWluZXIuYXBwZW5kQ2hpbGQoX3RoaXMubG9hZGluZ0NvbnRhaW5lcik7XG5cblx0XHRcdC8vIEluc2VydCBET01cblx0XHRcdF90aGlzLmNvbnRhaW5lci5hcHBlbmRDaGlsZChfdGhpcy5zY3JvbGxDb250YWluZXIpO1xuXHRcdFx0X3RoaXMuY29udGFpbmVyLmFwcGVuZENoaWxkKF90aGlzLm1haW5Db250YWluZXIpO1xuXHRcdH07XG5cblx0XHQvKlxuXHRcdOmHjeaWsOiuvue9riNtYWluIGRpdueahOmrmOW6plxuXHRcdCAqL1xuXHRcdEFwcC5wcm90b3R5cGUucmVzaXplID0gZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgX3RoaXMgPSB0aGlzO1xuXHRcdFx0X3RoaXMubWFpbkNvbnRhaW5lci5zdHlsZS5oZWlnaHQgPSAoJChfdGhpcy5jb250YWluZXIpLmhlaWdodCgpIC0gX3RoaXMuc2Nyb2xsRGl2U2l6ZSkgKyAncHgnO1xuXHRcdH07XG5cblx0XHRBcHAucHJvdG90eXBlLmNyZWF0ZURpdiA9IGZ1bmN0aW9uKCl7XG5cdFx0XHR2YXIgX3RoaXMgPSB0aGlzO1xuXG5cdFx0XHRpZihfdGhpcy5pc0hvcml6b250YWxMYXlvdXQoKSl7XG5cdFx0XHRcdGNyZWF0ZUhvcml6b250YWxMYXlvdXQuYXBwbHkoX3RoaXMpO1xuXHRcdFx0fWVsc2V7XG5cdFx0XHRcdGNyZWF0ZVZlcnRpY2FsTGF5b3V0LmFwcGx5KF90aGlzKTtcblx0XHRcdH1cblx0XHR9O1xuXG5cblxuXG5cdFx0QXBwLnByb3RvdHlwZS5pc0hvcml6b250YWxMYXlvdXQgPSBmdW5jdGlvbigpe1xuXHRcdFx0dmFyIF90aGlzID0gdGhpcywgcmVzdWx0O1xuXHRcdFx0cmVzdWx0ID0gISEoJ3RvcCcgPT09IF90aGlzLmxheW91dCB8fCBfdGhpcy5sYXlvdXQgPT09ICdib3R0b20nKTtcblx0XHRcdHJldHVybiByZXN1bHQ7XG5cdFx0fTtcblxuXG5cblxuXG5cdFx0QXBwLnByb3RvdHlwZS5vcGVuWG1sID0gZnVuY3Rpb24oZGF0YSl7XG5cdFx0XHR2YXIgX3RoaXMgPSB0aGlzO1xuXG5cdFx0XHRpZih0eXBlb2YgZGF0YS54bWwgPT09ICdzdHJpbmcnKXtcblx0XHRcdFx0X3RoaXMuZWRpdG9yLmFjdGlvbi5vcGVuWG1sKGRhdGEueG1sKTtcblx0XHRcdFx0X3RoaXMuZWRpdG9yLmdyYXBoLnNldENvbm5lY3RhYmxlKGZhbHNlKTtcblx0XHRcdFx0X3RoaXMuZWRpdG9yLmdyYXBoLmpzb24gPSBkYXRhO1xuXHRcdFx0XHRfdGhpcy5lZGl0b3Iudmlld2lkID0gZGF0YS5pZDtcblx0XHRcdH1lbHNlIGlmKHR5cGVvZiBkYXRhLnhtbCA9PT0gJ2Z1bmN0aW9uJyl7XG5cdFx0XHRcdGRhdGEueG1sKF90aGlzLmVkaXRvciwgZGF0YSk7XG5cdFx0XHR9XG5cdFx0fTtcblxuXHRcdEFwcC5wcm90b3R5cGUuY3JlYXRlR3JhcGggPSBmdW5jdGlvbigpe1xuXHRcdFx0dmFyIF90aGlzID0gdGhpcyxcblx0XHRcdFx0byA9IF90aGlzLm91dExpbmVEaXYsXG5cdFx0XHRcdGksXG5cdFx0XHRcdGssXG5cdFx0XHRcdGNvbnRhaW5lcixcblx0XHRcdFx0b3V0bGluZUJveCA9IG51bGwsXG5cdFx0XHRcdHBhZ2VDb250YWluZXIgPSBudWxsLFxuXHRcdFx0XHR0aXBDb250YWluZXIgPSBudWxsLFxuXHRcdFx0XHR0aXBDb250YWluZXJDaGlsZCA9IG51bGwsXG5cdFx0XHRcdG91dGxpbmVDb250YWluZXIgPSBudWxsLFxuXHRcdFx0XHRvdXRsaW5lTWFzayA9IG51bGwsXG5cdFx0XHRcdGVkaXRvcjtcblxuXHRcdFx0Y29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5cdFx0XHRjb250YWluZXIuc3R5bGUuY3NzVGV4dCA9IFtcblx0XHRcdFx0J3dpZHRoOiAxMDAlJyxcblx0XHRcdFx0J2hlaWdodDogMTAwJScsXG5cdFx0XHRcdCdwb3NpdGlvbjogYWJzb2x1dGUnLFxuXHRcdFx0XHQnYmFja2dyb3VuZDogI0ZGRicsXG5cdFx0XHRcdCdsZWZ0OiAwJyxcblx0XHRcdFx0J3RvcDogMCdcblx0XHRcdF0uam9pbignOycpO1xuXHRcdFx0X3RoaXMubWFpbkNvbnRhaW5lci5hcHBlbmRDaGlsZChjb250YWluZXIpO1xuXG5cdFx0XHRlZGl0b3IgPSBuZXcgRWRpdG9yKGNvbnRhaW5lcik7XG5cblx0XHRcdGVkaXRvci56b29tTG9jayA9IHRydWU7XG5cdFx0XHRlZGl0b3IuZ3JhcGguc2V0Q2VsbHNTZWxlY3RhYmxlKGZhbHNlKTtcblx0XHRcdGVkaXRvci5ncmFwaC5zZXRDZWxsc01vdmFibGUoZmFsc2UpO1xuXHRcdFx0ZWRpdG9yLmdyYXBoLnNldENlbGxzRWRpdGFibGUoZmFsc2UpO1xuXHRcdFx0ZWRpdG9yLmdyYXBoLnNldEV4dGVuZFBhcmVudHMoZmFsc2UpO1xuXHRcdFx0ZWRpdG9yLmdyYXBoLnNldENvbm5lY3RhYmxlKGZhbHNlKTtcblxuXHRcdFx0Y29udGFpbmVyLnN0eWxlLmJhY2tncm91bmQgPSAnI0ZGRic7XG5cdFx0XHRuZXcgQXV0b0xheW91dChlZGl0b3IuZ3JhcGgpO1xuXHRcdFx0ZWRpdG9yLmdyYXBoLnJlZnJlc2goKTtcblxuXHRcdFx0X3RoaXMuZWRpdG9yID0gZWRpdG9yO1xuXG5cdFx0XHRmb3IoaT0wLCBrPV90aGlzLmpzb24ubGVuZ3RoOyBpPGs7IGkrKyl7XG5cblx0XHRcdFx0b3V0bGluZUJveCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuXHRcdFx0XHRvdXRsaW5lQm94LnN0eWxlLmNzc1RleHQgPSBbXG5cdFx0XHRcdFx0J3dpZHRoOiAnICsgby53aWR0aCArICdweCcsXG5cdFx0XHRcdFx0J2hlaWdodDogJyArIG8uaGVpZ2h0ICsgJ3B4Jyxcblx0XHRcdFx0XHRfdGhpcy5pc0hvcml6b250YWxMYXlvdXQoKSA/ICdtYXJnaW46MCAnICsgby5tYXJnaW5MUiArICdweCcgOiAnbWFyZ2luOicgKyBvLm1hcmdpbkxSICsgJ3B4IDAnLFxuXHRcdFx0XHRcdCdib3JkZXI6ICcgKyBvLmJvcmRlcldpZHRoICsgJ3B4IHNvbGlkICNDQ0MnLFxuXHRcdFx0XHRcdCdvdmVyZmxvdzogaGlkZGVuJyxcblx0XHRcdFx0XHQncG9zaXRpb246IHJlbGF0aXZlJyxcblx0XHRcdFx0XHQnZmxvYXQ6IGxlZnQnLFxuXHRcdFx0XHRcdCdiYWNrZ3JvdW5kOiAjRkZGJ1xuXHRcdFx0XHRdLmpvaW4oJzsnKTtcblxuXHRcdFx0XHRvdXRsaW5lQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW1nJyk7XG5cdFx0XHRcdG91dGxpbmVDb250YWluZXIuc3R5bGUuY3NzVGV4dCA9IFtcblx0XHRcdFx0XHQnd2lkdGg6IDEwMCUnLFxuXHRcdFx0XHRcdCdoZWlnaHQ6IDEwMCUnLFxuXHRcdFx0XHRcdCdwb3NpdGlvbjogYWJzb2x1dGUnLFxuXHRcdFx0XHRcdCdsZWZ0OiAwJyxcblx0XHRcdFx0XHQndG9wOiAwJ1xuXHRcdFx0XHRdLmpvaW4oJzsnKTtcblx0XHRcdFx0b3V0bGluZUNvbnRhaW5lci5zcmMgPSBVbml0LnN0YXRpYyhfdGhpcy5qc29uW2ldLmltYWdlVXJsKTtcblxuXHRcdFx0XHRvdXRsaW5lTWFzayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuXHRcdFx0XHRvdXRsaW5lTWFzay5zdHlsZS5jc3NUZXh0ID0gW1xuXHRcdFx0XHRcdCd3aWR0aDogMTAwJScsXG5cdFx0XHRcdFx0J2hlaWdodDogMTAwJScsXG5cdFx0XHRcdFx0J3Bvc2l0aW9uOiBhYnNvbHV0ZScsXG5cdFx0XHRcdFx0J2JhY2tncm91bmQ6ICMwMDAnLFxuXHRcdFx0XHRcdCdjdXJzb3I6IHBvaW50ZXInLFxuXHRcdFx0XHRcdCdsZWZ0OiAwJyxcblx0XHRcdFx0XHQnb3BhY2l0eTogLjInLFxuXHRcdFx0XHRcdCd0b3A6IDAnLFxuXHRcdFx0XHRcdCd6LWluZGV4OiA5OTk5J1xuXHRcdFx0XHRdLmpvaW4oJzsnKTtcblx0XHRcdFx0b3V0bGluZU1hc2sudGl0bGUgPSBfdGhpcy5qc29uW2ldLm5hbWU7XG5cdFx0XHRcdG91dGxpbmVNYXNrLnNldEF0dHJpYnV0ZSgnZGF0YS1pZCcsIF90aGlzLmpzb25baV0uaWQpO1xuXHRcdFx0XHRfdGhpcy5tYXNrRWxlbWVudHMucHVzaChvdXRsaW5lTWFzayk7XG5cblx0XHRcdFx0dGlwQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5cdFx0XHRcdHRpcENvbnRhaW5lci5zdHlsZS5jc3NUZXh0ID0gW1xuXHRcdFx0XHRcdCd3aWR0aDogMTAwJScsXG5cdFx0XHRcdFx0J2hlaWdodDogJyArIF90aGlzLnRpcC5oZWlnaHQgKyAncHgnLFxuXHRcdFx0XHRcdCdwb3NpdGlvbjogYWJzb2x1dGUnLFxuXHRcdFx0XHRcdCdiYWNrZ3JvdW5kOiAnICsgX3RoaXMudGlwLmJnQ29sb3IsXG5cdFx0XHRcdFx0J3otaW5kZXg6IDIyJyxcblx0XHRcdFx0XHQnbGVmdDogMCcsXG5cdFx0XHRcdFx0J2JvdHRvbTogMCdcblx0XHRcdFx0XS5qb2luKCc7Jyk7XG5cblx0XHRcdFx0dGlwQ29udGFpbmVyQ2hpbGQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcblx0XHRcdFx0dGlwQ29udGFpbmVyQ2hpbGQuc3R5bGUuY3NzVGV4dCA9IFtcblx0XHRcdFx0XHQncG9zaXRpb246IGFic29sdXRlJyxcblx0XHRcdFx0XHQncGFkZGluZzogJyArIF90aGlzLnRpcC5wYWRkaW5nICsgJ3B4Jyxcblx0XHRcdFx0XHQnY29sb3I6ICcgKyBfdGhpcy50aXAuY29sb3IsXG5cdFx0XHRcdFx0J2ZvbnQtc2l6ZTogJyArIF90aGlzLnRpcC5mb250U2l6ZSArICdweCcsXG5cdFx0XHRcdFx0J3otaW5kZXg6IDIyJyxcblx0XHRcdFx0XHQnbGluZS1oZWlnaHQ6IDFlbScsXG5cdFx0XHRcdFx0J2xlZnQ6IDAnLFxuXHRcdFx0XHRcdCdib3R0b206IDAnLFxuXHRcdFx0XHRcdCd0b3A6IDAnLFxuXHRcdFx0XHRcdCdyaWdodDogMCcsXG5cdFx0XHRcdFx0J21hcmdpbjogYXV0bydcblx0XHRcdFx0XS5qb2luKCc7Jyk7XG5cdFx0XHRcdHRpcENvbnRhaW5lckNoaWxkLmlubmVySFRNTCA9IF90aGlzLmpzb25baV0ubmFtZTtcblx0XHRcdFx0dGlwQ29udGFpbmVyLmFwcGVuZENoaWxkKHRpcENvbnRhaW5lckNoaWxkKTtcblxuXHRcdFx0XHRwYWdlQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5cdFx0XHRcdHBhZ2VDb250YWluZXIuc3R5bGUuY3NzVGV4dCA9IFtcblx0XHRcdFx0XHQnd2lkdGg6ICcgKyAoX3RoaXMucGFnZS5zaXplICogMikgKyAncHgnLFxuXHRcdFx0XHRcdCdoZWlnaHQ6ICcgKyBfdGhpcy5wYWdlLnNpemUgKyAncHgnLFxuXHRcdFx0XHRcdCdib3JkZXItcmFkaXVzOiAnICsgKChfdGhpcy5wYWdlLnNpemUrX3RoaXMucGFnZS5wYWRkaW5nKjIpLzIpICsgJ3B4Jyxcblx0XHRcdFx0XHQncGFkZGluZzogJyArIF90aGlzLnBhZ2UucGFkZGluZyArICdweCcsXG5cdFx0XHRcdFx0J3Bvc2l0aW9uOiBhYnNvbHV0ZScsXG5cdFx0XHRcdFx0J3RleHQtYWxpZ246IGNlbnRlcicsXG5cdFx0XHRcdFx0J2xpbmUtaGVpZ2h0OiAxNXB4Jyxcblx0XHRcdFx0XHQnY29sb3I6ICcgKyBfdGhpcy5wYWdlLmNvbG9yLFxuXHRcdFx0XHRcdCdmb250LXNpemU6ICcgKyBfdGhpcy5wYWdlLmZvbnRTaXplICsgJ3B4Jyxcblx0XHRcdFx0XHQnb3BhY2l0eTogJyArIF90aGlzLnBhZ2Uub3BhY2l0eSxcblx0XHRcdFx0XHQnYmFja2dyb3VuZDogJyArIF90aGlzLnBhZ2UuYmdDb2xvcixcblx0XHRcdFx0XHQnei1pbmRleDogMjInLFxuXHRcdFx0XHRcdCdyaWdodDogMCcsXG5cdFx0XHRcdFx0J3RvcDogMCcsXG5cdFx0XHRcdFx0J21hcmdpbjogNXB4IDVweCAwIDAnXG5cdFx0XHRcdF0uam9pbignOycpO1xuXHRcdFx0XHRwYWdlQ29udGFpbmVyLmlubmVySFRNTCA9IFtpKzEsIGtdLmpvaW4oJy8nKTtcblxuXHRcdFx0XHQvLyBJbnNlcnQgRE9NXG5cdFx0XHRcdG91dGxpbmVCb3guYXBwZW5kQ2hpbGQob3V0bGluZUNvbnRhaW5lcik7XG5cdFx0XHRcdG91dGxpbmVCb3guYXBwZW5kQ2hpbGQob3V0bGluZU1hc2spO1xuXHRcdFx0XHRvdXRsaW5lQm94LmFwcGVuZENoaWxkKHBhZ2VDb250YWluZXIpO1xuXHRcdFx0XHRvdXRsaW5lQm94LmFwcGVuZENoaWxkKHRpcENvbnRhaW5lcik7XG5cdFx0XHRcdF90aGlzLnNjcm9sbEl0ZW1zQ29udGFpbmVyLmFwcGVuZENoaWxkKG91dGxpbmVCb3gpO1xuXHRcdFx0fVxuXG5cdFx0fTtcblxuXG5cblxuXHRcdEFwcC5wcm90b3R5cGUubG9hZERhdGEgPSBmdW5jdGlvbigpe1xuXHRcdFx0dmFyIGkgPSAwLCBfdGhpcyA9IHRoaXM7XG5cblx0XHRcdF90aGlzLm1hcCA9IHt9O1xuXHRcdFx0aWYoX3RoaXMuanNvbil7XG5cdFx0XHRcdGZvcihpPTA7IGk8X3RoaXMuanNvbi5sZW5ndGg7IGkrKyl7XG5cdFx0XHRcdFx0X3RoaXMubWFwW190aGlzLmpzb25baV0uaWRdID0gX3RoaXMuanNvbltpXTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH07XG5cblxuXG5cdFx0dmFyIGNyZWF0ZUhvcml6b250YWxCdG4gPSBmdW5jdGlvbigpe1xuXHRcdFx0dmFyIF90aGlzID0gdGhpcyxcblx0XHRcdFx0aXRlbXNXaWR0aCA9ICQoX3RoaXMuY2VudGVyRWxlbWVudCkud2lkdGgoKSxcblx0XHRcdFx0aXRlbXNIZWlnaHQgPSAkKF90aGlzLmNlbnRlckVsZW1lbnQpLmhlaWdodCgpLFxuXHRcdFx0XHRvID0gX3RoaXMucGFnZUJ0blN0eWxlO1xuXG5cdFx0XHRfdGhpcy5uZXh0QnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5cdFx0XHRfdGhpcy5uZXh0QnRuLnN0eWxlLmNzc1RleHQgPSBbXG5cdFx0XHRcdCd3aWR0aDogMHB4Jyxcblx0XHRcdFx0J2hlaWdodDogMHB4Jyxcblx0XHRcdFx0J2ZvbnQtc2l6ZTogMHB4Jyxcblx0XHRcdFx0J2xpbmUtaGVpZ2h0OiAwcHgnLFxuXHRcdFx0XHQncG9zaXRpb246IGFic29sdXRlJyxcblx0XHRcdFx0J2N1cnNvcjogcG9pbnRlcicsXG5cdFx0XHRcdCdib3JkZXItYm90dG9tOiAnKyBvLnNpemUgKydweCBzb2xpZCB0cmFuc3BhcmVudCcsXG5cdFx0XHRcdCdib3JkZXItdG9wOiAnKyBvLnNpemUgKydweCBzb2xpZCB0cmFuc3BhcmVudCcsXG5cdFx0XHRcdCdib3JkZXItbGVmdDogJysgby5zaXplICsncHggc29saWQgJyArIG8uY29sb3IsXG5cdFx0XHRcdCd0b3A6ICcgKyAoKGl0ZW1zSGVpZ2h0IC0gby5zaXplICogMikgLyAyKSArICdweCcsXG5cdFx0XHRcdCd6LWluZGV4OiA5OTk5OScsXG5cdFx0XHRcdCdsZWZ0OiAnICsgKCBpdGVtc1dpZHRoICsgby5vZmZzZXQgKSArICdweCdcblx0XHRcdF0uam9pbignOycpO1xuXG5cdFx0XHRfdGhpcy5wcmV2QnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5cdFx0XHRfdGhpcy5wcmV2QnRuLnN0eWxlLmNzc1RleHQgPSBbXG5cdFx0XHRcdCd3aWR0aDogMHB4Jyxcblx0XHRcdFx0J2hlaWdodDogMHB4Jyxcblx0XHRcdFx0J2ZvbnQtc2l6ZTogMHB4Jyxcblx0XHRcdFx0J2xpbmUtaGVpZ2h0OiAwcHgnLFxuXHRcdFx0XHQncG9zaXRpb246IGFic29sdXRlJyxcblx0XHRcdFx0J2N1cnNvcjogcG9pbnRlcicsXG5cdFx0XHRcdCdib3JkZXItYm90dG9tOiAnKyBvLnNpemUgKydweCBzb2xpZCB0cmFuc3BhcmVudCcsXG5cdFx0XHRcdCdib3JkZXItdG9wOiAnKyBvLnNpemUgKydweCBzb2xpZCB0cmFuc3BhcmVudCcsXG5cdFx0XHRcdCdib3JkZXItcmlnaHQ6ICcrIG8uc2l6ZSArJ3B4IHNvbGlkICcgKyBvLmNvbG9yLFxuXHRcdFx0XHQndG9wOiAnICsgKChpdGVtc0hlaWdodCAtIG8uc2l6ZSAqIDIpIC8gMikgKyAncHgnLFxuXHRcdFx0XHQnei1pbmRleDogOTk5OTknLFxuXHRcdFx0XHQnbGVmdDogJyArICAoLTEgKiAoby5vZmZzZXQgKyBvLnNpemUpKSAgKyAncHgnXG5cdFx0XHRdLmpvaW4oJzsnKTtcblxuXHRcdFx0Ly8gSW5zZXJ0IERPTVxuXHRcdFx0X3RoaXMuY2VudGVyRWxlbWVudC5hcHBlbmRDaGlsZChfdGhpcy5uZXh0QnRuKTtcblx0XHRcdF90aGlzLmNlbnRlckVsZW1lbnQuYXBwZW5kQ2hpbGQoX3RoaXMucHJldkJ0bik7XG5cdFx0fTtcblxuXHRcdHZhciBjcmVhdGVWZXJ0aWNhbEJ0biA9IGZ1bmN0aW9uKCl7XG5cdFx0XHR2YXIgX3RoaXMgPSB0aGlzLFxuXHRcdFx0XHRpdGVtc0hlaWdodCA9ICQoX3RoaXMuY2VudGVyRWxlbWVudCkuaGVpZ2h0KCksXG5cdFx0XHRcdG8gPSBfdGhpcy5wYWdlQnRuU3R5bGU7XG5cblx0XHRcdF90aGlzLm5leHRCdG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcblx0XHRcdF90aGlzLm5leHRCdG4uc3R5bGUuY3NzVGV4dCA9IFtcblx0XHRcdFx0J3dpZHRoOiAwcHgnLFxuXHRcdFx0XHQnaGVpZ2h0OiAwcHgnLFxuXHRcdFx0XHQnZm9udC1zaXplOiAwcHgnLFxuXHRcdFx0XHQnbGluZS1oZWlnaHQ6IDBweCcsXG5cdFx0XHRcdCdwb3NpdGlvbjogYWJzb2x1dGUnLFxuXHRcdFx0XHQnY3Vyc29yOiBwb2ludGVyJyxcblx0XHRcdFx0J2JvcmRlci1yaWdodDogJysgby5zaXplICsncHggc29saWQgdHJhbnNwYXJlbnQnLFxuXHRcdFx0XHQnYm9yZGVyLWxlZnQ6ICcrIG8uc2l6ZSArJ3B4IHNvbGlkIHRyYW5zcGFyZW50Jyxcblx0XHRcdFx0J2JvcmRlci10b3A6ICcrIG8uc2l6ZSArJ3B4IHNvbGlkICcgKyBvLmNvbG9yLFxuXHRcdFx0XHQnbGVmdDogMCcsXG5cdFx0XHRcdCdyaWdodDogMCcsXG5cdFx0XHRcdCd0b3A6ICcgKyAoIGl0ZW1zSGVpZ2h0ICsgby5vZmZzZXQgKSArICdweCcsXG5cdFx0XHRcdCd6LWluZGV4OiA5OTk5OScsXG5cdFx0XHRcdCdtYXJnaW46IGF1dG8nXG5cdFx0XHRdLmpvaW4oJzsnKTtcblxuXHRcdFx0X3RoaXMucHJldkJ0biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuXHRcdFx0X3RoaXMucHJldkJ0bi5zdHlsZS5jc3NUZXh0ID0gW1xuXHRcdFx0XHQnd2lkdGg6IDBweCcsXG5cdFx0XHRcdCdoZWlnaHQ6IDBweCcsXG5cdFx0XHRcdCdmb250LXNpemU6IDBweCcsXG5cdFx0XHRcdCdsaW5lLWhlaWdodDogMHB4Jyxcblx0XHRcdFx0J3Bvc2l0aW9uOiBhYnNvbHV0ZScsXG5cdFx0XHRcdCdjdXJzb3I6IHBvaW50ZXInLFxuXHRcdFx0XHQnYm9yZGVyLWxlZnQ6ICcrIG8uc2l6ZSArJ3B4IHNvbGlkIHRyYW5zcGFyZW50Jyxcblx0XHRcdFx0J2JvcmRlci1yaWdodDogJysgby5zaXplICsncHggc29saWQgdHJhbnNwYXJlbnQnLFxuXHRcdFx0XHQnYm9yZGVyLWJvdHRvbTogJysgby5zaXplICsncHggc29saWQgJyArIG8uY29sb3IsXG5cdFx0XHRcdCd6LWluZGV4OiA5OTk5OScsXG5cdFx0XHRcdCdsZWZ0OiAwJyxcblx0XHRcdFx0J3JpZ2h0OiAwJyxcblx0XHRcdFx0J3RvcDogJyArICAoLTEgKiAoby5vZmZzZXQgKyBvLnNpemUpKSAgKyAncHgnLFxuXHRcdFx0XHQnbWFyZ2luOiBhdXRvJ1xuXHRcdFx0XS5qb2luKCc7Jyk7XG5cblx0XHRcdC8vIEluc2VydCBET01cblx0XHRcdF90aGlzLmNlbnRlckVsZW1lbnQuYXBwZW5kQ2hpbGQoX3RoaXMubmV4dEJ0bik7XG5cdFx0XHRfdGhpcy5jZW50ZXJFbGVtZW50LmFwcGVuZENoaWxkKF90aGlzLnByZXZCdG4pO1xuXHRcdH07XG5cblx0XHRBcHAucHJvdG90eXBlLmNyZWF0ZVBhZ2VCdG4gPSBmdW5jdGlvbigpe1xuXHRcdFx0dmFyIF90aGlzID0gdGhpcztcblxuXHRcdFx0aWYoX3RoaXMuaXNIb3Jpem9udGFsTGF5b3V0KCkpe1xuXHRcdFx0XHRjcmVhdGVIb3Jpem9udGFsQnRuLmFwcGx5KF90aGlzKTtcblx0XHRcdH1lbHNle1xuXHRcdFx0XHRjcmVhdGVWZXJ0aWNhbEJ0bi5hcHBseShfdGhpcyk7XG5cdFx0XHR9XG5cdFx0fTtcblxuXG5cblx0XHR2YXIgZWFjaCA9IGZ1bmN0aW9uKGFyciwgZnVuKXtcblx0XHRcdHZhciBpLCBrO1xuXHRcdFx0Zm9yKGk9MCwgaz1hcnIubGVuZ3RoOyBpPGs7IGkrKyl7XG5cdFx0XHRcdGZ1bi5hcHBseShhcnJbaV0sIFtpXSk7XG5cdFx0XHR9XG5cdFx0fTtcblxuXHRcdEFwcC5wcm90b3R5cGUub3V0bGluZUV2ZW50cyA9IGZ1bmN0aW9uKCl7XG5cdFx0XHR2YXIgX3RoaXMgPSB0aGlzO1xuXG5cdFx0XHRfdGhpcy5vcGVuWG1sKF90aGlzLmpzb25bMF0pO1xuXG5cdFx0XHRlYWNoKF90aGlzLm1hc2tFbGVtZW50cywgZnVuY3Rpb24oaSl7XG5cdFx0XHRcdHZhciBpbmRleCwgdGFyZ2V0O1xuXG5cdFx0XHRcdGlmKGk9PT0wKXtcblx0XHRcdFx0XHQkKHRoaXMpLmFkZENsYXNzKF90aGlzLm1hc2tDbGFzc05hbWUpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHZhciBvcmlnaW5hbE9wYWNpdHkgPSAkKHRoaXMpLmNzcygnb3BhY2l0eScpO1xuXHRcdFx0XHR2YXIgY3Vyck9wYWNpdHkgPSAxO1xuXG5cdFx0XHRcdCQodGhpcykubW91c2VvdmVyKGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFx0Y3Vyck9wYWNpdHkgPSAkKHRoaXMpLmNzcygnb3BhY2l0eScpO1xuXHRcdFx0XHRcdCQodGhpcykuYWRkQ2xhc3MoX3RoaXMubWFza0hvdmVyQ2xhc3NOYW1lKTtcblx0XHRcdFx0XHQkKHRoaXMpLmNzcygnb3BhY2l0eScsIDApO1xuXHRcdFx0XHR9KS5tb3VzZW91dChmdW5jdGlvbigpe1xuXHRcdFx0XHRcdCQodGhpcykucmVtb3ZlQ2xhc3MoX3RoaXMubWFza0hvdmVyQ2xhc3NOYW1lKTtcblx0XHRcdFx0XHQkKHRoaXMpLmNzcygnb3BhY2l0eScsIGN1cnJPcGFjaXR5KTtcblx0XHRcdFx0fSkuY2xpY2soZnVuY3Rpb24oKXtcblx0XHRcdFx0XHRpZiAoJCh0aGlzKS5jc3MoJ29wYWNpdHknKSAhPSAwKSB7XG5cdFx0XHRcdFx0XHRvcmlnaW5hbE9wYWNpdHkgPSAkKHRoaXMpLmNzcygnb3BhY2l0eScpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHQkKCcjaXRlbXMgPiBkaXYnKS5lYWNoKGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFx0XHQkKHRoaXMpLmZpbmQoJ2RpdltkYXRhLWlkXScpLmNzcygnb3BhY2l0eScsIG9yaWdpbmFsT3BhY2l0eSk7XG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0Y3Vyck9wYWNpdHkgPSAwO1xuXHRcdFx0XHRcdCQodGhpcykuY3NzKCdvcGFjaXR5JywgMCk7XG5cdFx0XHRcdFx0Ly9mbGFnID0gZmFsc2U7XG5cdFx0XHRcdFx0dmFyIGl0ZW07XG5cblx0XHRcdFx0XHR0YXJnZXQgPSB0aGlzO1xuXHRcdFx0XHRcdGl0ZW0gPSBfdGhpcy5tYXBbJCh0YXJnZXQpLmF0dHIoJ2RhdGEtaWQnKV07XG5cblx0XHRcdFx0XHRfdGhpcy5vcGVuWG1sKGl0ZW0pO1xuXG5cdFx0XHRcdFx0aWYoX3RoaXMub3V0bGluZUNsaWNrKXtcblx0XHRcdFx0XHRcdF90aGlzLm91dGxpbmVDbGljaygpO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdGVhY2goX3RoaXMubWFza0VsZW1lbnRzLCBmdW5jdGlvbihpKXtcblx0XHRcdFx0XHRcdGlmKHRhcmdldCA9PT0gX3RoaXMubWFza0VsZW1lbnRzW2ldKXtcblx0XHRcdFx0XHRcdFx0aW5kZXggPSBpO1xuXHRcdFx0XHRcdFx0XHQkKHRoaXMpLmFkZENsYXNzKF90aGlzLm1hc2tDbGFzc05hbWUpO1xuXHRcdFx0XHRcdFx0fWVsc2V7XG5cdFx0XHRcdFx0XHRcdCQodGhpcykucmVtb3ZlQ2xhc3MoX3RoaXMubWFza0NsYXNzTmFtZSk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fSk7XG5cblx0XHRcdFx0fSk7XG5cdFx0XHR9KTtcblx0XHR9O1xuXG5cblxuXHRcdHZhciBob3Jpem9udGFsTW92ZSA9IGZ1bmN0aW9uKCl7XG5cdFx0XHR2YXIgX3RoaXMgPSB0aGlzLFxuXHRcdFx0XHRvID0gX3RoaXMub3V0TGluZURpdixcblx0XHRcdFx0b3V0bGluZU9mZnNldFdpZHRoID0gby53aWR0aCArIG8ubWFyZ2luTFIgKiAyLFxuXHRcdFx0XHRtYXhMZWZ0ID0gKF90aGlzLmpzb24ubGVuZ3RoIC0gX3RoaXMub3V0TGluZURpdi5tYXhEaXNwbGF5Q291bnQpICogIG91dGxpbmVPZmZzZXRXaWR0aDtcblxuXHRcdFx0X3RoaXMuc2Nyb2xsTG9jayA9IGZhbHNlO1xuXG5cdFx0XHQkKF90aGlzLm5leHRCdG4pLmNsaWNrKGZ1bmN0aW9uKCl7XG5cdFx0XHRcdGlmKCFfdGhpcy5zY3JvbGxMb2NrKXtcblx0XHRcdFx0XHR2YXIgb2Zmc2V0ID0gJChfdGhpcy5hY3Rpb25FbGVtZW50KS5zY3JvbGxMZWZ0KCkgKyBvdXRsaW5lT2Zmc2V0V2lkdGg7XG5cdFx0XHRcdFx0aWYob2Zmc2V0IDw9IG1heExlZnQpe1xuXHRcdFx0XHRcdFx0X3RoaXMuc2Nyb2xsTG9jayA9IHRydWU7XG5cdFx0XHRcdFx0XHQkKF90aGlzLmFjdGlvbkVsZW1lbnQpLmFuaW1hdGUoe3Njcm9sbExlZnQgOiBvZmZzZXR9LCBfdGhpcy5zcGVlZCwgZnVuY3Rpb24oKXtcblx0XHRcdFx0XHRcdFx0X3RoaXMuc2Nyb2xsTG9jayA9IGZhbHNlO1xuXHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9KTtcblxuXHRcdFx0JChfdGhpcy5wcmV2QnRuKS5jbGljayhmdW5jdGlvbigpe1xuXHRcdFx0XHRpZighX3RoaXMuc2Nyb2xsTG9jayl7XG5cdFx0XHRcdFx0dmFyIG9mZnNldCA9ICQoX3RoaXMuYWN0aW9uRWxlbWVudCkuc2Nyb2xsTGVmdCgpIC0gb3V0bGluZU9mZnNldFdpZHRoO1xuXHRcdFx0XHRcdGlmKCQoX3RoaXMuYWN0aW9uRWxlbWVudCkuc2Nyb2xsTGVmdCgpID4gMCl7XG5cdFx0XHRcdFx0XHRfdGhpcy5zY3JvbGxMb2NrID0gdHJ1ZTtcblx0XHRcdFx0XHRcdCQoX3RoaXMuYWN0aW9uRWxlbWVudCkuYW5pbWF0ZSh7c2Nyb2xsTGVmdCA6IG9mZnNldH0sIF90aGlzLnNwZWVkLCBmdW5jdGlvbigpe1xuXHRcdFx0XHRcdFx0XHRfdGhpcy5zY3JvbGxMb2NrID0gZmFsc2U7XG5cdFx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH0pO1xuXHRcdH07XG5cblx0XHR2YXIgdmVydGljYWxNb3ZlID0gZnVuY3Rpb24oKXtcblx0XHRcdHZhciBfdGhpcyA9IHRoaXMsXG5cdFx0XHRcdG8gPSBfdGhpcy5vdXRMaW5lRGl2LFxuXHRcdFx0XHRvdXRsaW5lT2Zmc2V0SGVpZ2h0ID0gby5oZWlnaHQgKyBvLm1hcmdpbkxSICogMiArIG8uYm9yZGVyV2lkdGggKiAyICxcblx0XHRcdFx0bWF4TGVmdCA9IChfdGhpcy5qc29uLmxlbmd0aCAtIF90aGlzLm91dExpbmVEaXYubWF4RGlzcGxheUNvdW50KSAqICBvdXRsaW5lT2Zmc2V0SGVpZ2h0O1xuXG5cdFx0XHQkKF90aGlzLm5leHRCdG4pLmNsaWNrKGZ1bmN0aW9uKCl7XG5cdFx0XHRcdCQoX3RoaXMuYWN0aW9uRWxlbWVudCkuc3RvcCgpO1xuXHRcdFx0XHR2YXIgb2Zmc2V0ID0gJChfdGhpcy5hY3Rpb25FbGVtZW50KS5zY3JvbGxUb3AoKSArIG91dGxpbmVPZmZzZXRIZWlnaHQ7XG5cdFx0XHRcdGlmKG9mZnNldCA8PSBtYXhMZWZ0KXtcblx0XHRcdFx0XHQkKF90aGlzLmFjdGlvbkVsZW1lbnQpLmFuaW1hdGUoe3Njcm9sbFRvcCA6IG9mZnNldH0sIF90aGlzLnNwZWVkKTtcblx0XHRcdFx0fVxuXHRcdFx0fSk7XG5cblx0XHRcdCQoX3RoaXMucHJldkJ0bikuY2xpY2soZnVuY3Rpb24oKXtcblx0XHRcdFx0JChfdGhpcy5hY3Rpb25FbGVtZW50KS5zdG9wKCk7XG5cdFx0XHRcdHZhciBvZmZzZXQgPSAkKF90aGlzLmFjdGlvbkVsZW1lbnQpLnNjcm9sbFRvcCgpIC0gb3V0bGluZU9mZnNldEhlaWdodDtcblx0XHRcdFx0aWYoJChfdGhpcy5hY3Rpb25FbGVtZW50KS5zY3JvbGxUb3AoKSA+IDApe1xuXHRcdFx0XHRcdCQoX3RoaXMuYWN0aW9uRWxlbWVudCkuYW5pbWF0ZSh7c2Nyb2xsVG9wIDogb2Zmc2V0fSwgX3RoaXMuc3BlZWQpO1xuXHRcdFx0XHR9XG5cdFx0XHR9KTtcblx0XHR9O1xuXG5cdFx0QXBwLnByb3RvdHlwZS5wYWdlQnRuRXZlbnRzID0gZnVuY3Rpb24oKXtcblx0XHRcdHZhciBfdGhpcyA9IHRoaXM7XG5cblx0XHRcdGlmKF90aGlzLmlzSG9yaXpvbnRhbExheW91dCgpKXtcblx0XHRcdFx0aG9yaXpvbnRhbE1vdmUuYXBwbHkoX3RoaXMpO1xuXHRcdFx0fWVsc2V7XG5cdFx0XHRcdHZlcnRpY2FsTW92ZS5hcHBseShfdGhpcyk7XG5cdFx0XHR9XG5cdFx0fTtcblxuXG5cdFx0QXBwLnByb3RvdHlwZS5jb250ZXh0TWVudSA9IGZ1bmN0aW9uKCl7XG5cdFx0XHQvL3ZhciBfdGhpcyA9IHRoaXM7XG5cdFx0XHQvL1xuXHRcdFx0Ly9uZXcgZ3JhcGguR3JhcGhDb250ZXh0TWVudShfdGhpcy5lZGl0b3IsIHtcblx0XHRcdC8vXHR2ZXJ0ZXg6W1xuXHRcdFx0Ly9cblx0XHRcdC8vXHRdLFxuXHRcdFx0Ly9cdGNhbnZhczogW1xuXHRcdFx0Ly9cblx0XHRcdC8vXHRdLFxuXHRcdFx0Ly9cdGxpYnM6IHt9XG5cdFx0XHQvL30pO1xuXHRcdH07XG5cblx0XHRyZXR1cm4gQXBwO1xuXHR9KTtcblxuXG5cbn0pKG5hbWVTcGFjZS5yZWcoJ2dyYXBoJykpO1xuXG5cbihmdW5jdGlvbihncmFwaCl7XG5cblx0J3VzZSBzdHJpY3QnO1xuXG5cdHZhciBmYWN0b3J5ID0gZnVuY3Rpb24oJG1vZGFsLCBVbml0KXtcblxuXHRcdHJldHVybiBmdW5jdGlvbihlZGl0b3Ipe1xuXG5cdFx0XHR0aGlzLnNldFZpZXcgPSBmdW5jdGlvbih2aWV3KXtcblx0XHRcdFx0dGhpcy52aWV3ID0gdmlldztcblx0XHRcdH07XG5cblx0XHRcdHRoaXMuZW1wdHkgPSBmdW5jdGlvbigpe1xuXHRcdFx0XHR0aGlzLnZpZXcgPSBudWxsO1xuXHRcdFx0fTtcblxuXHRcdFx0dGhpcy5pc1Nob3dHcmlkID0gdHJ1ZTtcblx0XHRcdHRoaXMuaXNBc3Npc3RMaW5lID0gdHJ1ZTtcblx0XHRcdHRoaXMuaXNBdXRvTGF5b3V0ID0gdHJ1ZTtcblx0XHRcdHRoaXMuaXNBdXRvTGluZSA9IHRydWU7XG5cblx0XHR9O1xuXHR9O1xuXG5cdGdyYXBoLmFwcC5mYWN0b3J5KCdHcmFwaFN0YXRlJywgWyckbW9kYWwnLCAnVW5pdCcsIGZhY3RvcnldKTtcblxufSkobmFtZVNwYWNlLnJlZygnZ3JhcGgnKSk7XG5cbi8qKlxuICogQ3JlYXRlZCBieSBMZWUgb24gNy8xOC8xNS5cbiAqL1xuXG4oZnVuY3Rpb24oZ3JhcGgpe1xuXG5cdCd1c2Ugc3RyaWN0JztcblxuXHRncmFwaC5hcHAuZmFjdG9yeSgnVW5pdCcsIGZ1bmN0aW9uKCR3aW5kb3csICRpbnRlcnZhbCl7XG5cblx0XHR2YXIgc2VsZiA9IHt9O1xuXG5cdFx0c2VsZi5vcHRpb25zID0ge307XG5cblx0XHRzZWxmLm9wdGlvbnMudG9hc3RyID0ge1xuXHRcdFx0Y2xvc2VCdXR0b246IHRydWUsXG5cdFx0XHRwcm9ncmVzc0JhcjogdHJ1ZSxcblx0XHRcdHRpbWVPdXQ6IDE1MDBcblx0XHR9O1xuXG5cdFx0c2VsZi5hcGkgPSBmdW5jdGlvbih1cmwpe1xuXHRcdFx0cmV0dXJuICcuLi9hcGkvcmVzdCcgKyB1cmw7XG5cdFx0fTtcblxuXHRcdHNlbGYuc3RhdGljID0gZnVuY3Rpb24odXJsKXtcblx0XHRcdGlmKGFuZ3VsYXIuaXNTdHJpbmcodXJsKSl7XG5cdFx0XHRcdGlmKHVybC5pbmRleE9mKCcuLi8nKSA9PT0gMCl7XG5cdFx0XHRcdFx0dXJsID0gdXJsLnN1YnN0cigzKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGlmKHVybC5pbmRleE9mKCcvJykgPT09IDApe1xuXHRcdFx0XHRcdHVybCA9IHVybC5zdWJzdHIoMSk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXR1cm4gJy4uL3N0YXRpYy8nICsgdXJsO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHVybDtcblx0XHR9O1xuXG5cdFx0c2VsZi5zdWNjZXNzID0gZnVuY3Rpb24obWVzc2FnZSl7XG5cdFx0XHR0b2FzdHIuc3VjY2VzcyhtZXNzYWdlLCBudWxsLCBzZWxmLm9wdGlvbnMudG9hc3RyKTtcblx0XHR9O1xuXG5cdFx0c2VsZi5lcnJvciA9IGZ1bmN0aW9uKG1lc3NhZ2Upe1xuXHRcdFx0dG9hc3RyLmVycm9yKG1lc3NhZ2UsIG51bGwsIHNlbGYub3B0aW9ucy50b2FzdHIpO1xuXHRcdH07XG5cblxuXHRcdHNlbGYuYmFzZW5hbWUgPSBmdW5jdGlvbihwYXRoKXtcblx0XHRcdHZhciBhcnIgPSBwYXRoLnNwbGl0KCcvJyk7XG5cdFx0XHRyZXR1cm4gYXJyLnBvcCgpO1xuXHRcdH07XG5cblx0XHRzZWxmLmZvcm1hdENhdGVnb3J5RGF0YSA9IGZ1bmN0aW9uKGRhdGEpe1xuXHRcdFx0YW5ndWxhci5mb3JFYWNoKGRhdGEsIGZ1bmN0aW9uKF90aGlzKXtcblx0XHRcdFx0X3RoaXMuaWNvbiA9IHNlbGYuc3RhdGljKF90aGlzLmljb24pO1xuXHRcdFx0fSk7XG5cdFx0fTtcblxuXHRcdHNlbGYuZ2V0U3R5bGVGb3JBdHRyID0gZnVuY3Rpb24gKGNlbGwsIGtleSkge1xuXHRcdFx0dmFyIGFyciA9ICcnLCByZXQgPSAnJztcblxuXHRcdFx0aWYgKGNlbGwuc3R5bGUgJiYgY2VsbC5zdHlsZSAhPT0gJycpIHtcblx0XHRcdFx0YXJyID0gY2VsbC5zdHlsZS5zcGxpdCgnOycpO1xuXHRcdFx0XHQkLmVhY2goYXJyLCBmdW5jdGlvbiAoKSB7XG5cdFx0XHRcdFx0aWYgKHRoaXMuaW5kZXhPZihrZXkpID49IDApIHtcblx0XHRcdFx0XHRcdHJldCA9IHRoaXMuc3BsaXQoJz0nKVsxXTtcblx0XHRcdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0pO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0cmV0ID0gJyc7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gcmV0O1xuXHRcdH07XG5cblx0XHRzZWxmLmlzQ2lDZWxsID0gZnVuY3Rpb24oY2VsbCl7XG5cdFx0XHRyZXR1cm4gdHlwZW9mIGNlbGwgPT09ICdvYmplY3QnICYmIHR5cGVvZiBjZWxsLmlkID09PSAnc3RyaW5nJyAmJiBjZWxsLmlkLmluZGV4T2YoZ3JhcGguREVGSU5FX0NJLkdSQVBIX1BSRUZJWCkgPT09IDA7XG5cdFx0fTtcblxuXHRcdHNlbGYuaXNDaUluID0gZnVuY3Rpb24oY2VsbCl7XG5cdFx0XHRyZXR1cm4gY2VsbC5pZC5pbmRleE9mKGdyYXBoLkRFRklORV9DSS5HUkFQSF9QUkVGSVhfSU4pID49IDA7XG5cdFx0fTtcblxuXHRcdHNlbGYuZ2V0Q2lJZEJ5Q2VsbCA9IGZ1bmN0aW9uKGNlbGwpe1xuXHRcdFx0cmV0dXJuIGNlbGwuaWQuc3BsaXQoJ18nKS5wb3AoKTtcblx0XHR9O1xuXG5cdFx0c2VsZi5hbGVydCA9IGZ1bmN0aW9uKG1zZyl7XG5cdFx0XHRib290Ym94LmFsZXJ0KFN0cmluZyhtc2cpKTtcblx0XHR9O1xuXG5cdFx0c2VsZi5jb25maXJtID0gZnVuY3Rpb24obXNnLCBmbil7XG5cdFx0XHRib290Ym94LmNvbmZpcm0oU3RyaW5nKG1zZyksIGZ1bmN0aW9uKHJlc3VsdCl7XG5cdFx0XHRcdGlmKHJlc3VsdCl7XG5cdFx0XHRcdFx0Zm4oKTtcblx0XHRcdFx0fVxuXHRcdFx0fSk7XG5cdFx0fTtcblxuXHRcdHNlbGYucHJvbXB0ID0gZnVuY3Rpb24obXNnLCBmbiwgZGVmYXVsdFZhbHVlKXtcblx0XHRcdGJvb3Rib3gucHJvbXB0KHtcblx0XHRcdFx0dGl0bGU6IFN0cmluZyhtc2cpLFxuXHRcdFx0XHR2YWx1ZTogU3RyaW5nKGRlZmF1bHRWYWx1ZSksXG5cdFx0XHRcdGNhbGxiYWNrOiBmdW5jdGlvbihyZXN1bHQpe1xuXHRcdFx0XHRcdGZuKHJlc3VsdCk7XG5cdFx0XHRcdH1cblx0XHRcdH0pO1xuXHRcdH07XG5cblx0XHRzZWxmLnVuaXhUb0RhdGV0aW1lID0gZnVuY3Rpb24odW5peCkge1xuXHRcdFx0dmFyIG5vdyA9IG5ldyBEYXRlKHVuaXgpO1xuXG5cdFx0XHRyZXR1cm4gW1xuXHRcdFx0XHRbXG5cdFx0XHRcdFx0bm93LmdldEZ1bGxZZWFyKCksXG5cdFx0XHRcdFx0KG5vdy5nZXRNb250aCgpICsgMSkgPCAxMCA/ICcwJyArIChub3cuZ2V0TW9udGgoKSArIDEpIDogIG5vdy5nZXRNb250aCgpICsgMSxcblx0XHRcdFx0XHRub3cuZ2V0RGF0ZSgpIDwgMTAgPyAnMCcgKyBub3cuZ2V0RGF0ZSgpIDogIG5vdy5nZXREYXRlKClcblx0XHRcdFx0XS5qb2luKCctJyksXG5cdFx0XHRcdFtcblx0XHRcdFx0XHRub3cuZ2V0SG91cnMoKSA8IDEwID8gJzAnICsgbm93LmdldEhvdXJzKCkgOiAgbm93LmdldEhvdXJzKCksXG5cdFx0XHRcdFx0bm93LmdldE1pbnV0ZXMoKSA8IDEwID8gJzAnICsgbm93LmdldE1pbnV0ZXMoKSA6ICBub3cuZ2V0TWludXRlcygpLFxuXHRcdFx0XHRcdG5vdy5nZXRTZWNvbmRzKCkgPCAxMCA/ICcwJyArIG5vdy5nZXRTZWNvbmRzKCkgOiAgbm93LmdldFNlY29uZHMoKVxuXHRcdFx0XHRdLmpvaW4oJzonKVxuXHRcdFx0XS5qb2luKCcgJyk7XG5cdFx0fTtcblxuXHRcdHNlbGYuZXZlbnREYXRhID0gZnVuY3Rpb24ob2JqKXtcblxuXHRcdFx0Ly8gY2kgY2VsbFxuXHRcdFx0aWYoc2VsZi5pc0NpQ2VsbChvYmouY2VsbCkpe1xuXHRcdFx0XHRvYmouY2VsbC5kYmlkID0gc2VsZi5nZXRDaUlkQnlDZWxsKG9iai5jZWxsKTtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIG9iajtcblx0XHR9O1xuXG5cdFx0c2VsZi5sb2FkaW5nYmFyID0gKGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyICRsb2FkaW5nYmFyID0gJCgnLmxvYWRpbmdiYXItcHJvY2VzcycpO1xuXHRcdFx0dmFyIHBlcmNlbnQgPSAtNTA7XG5cdFx0XHR2YXIgdGltbWVyMTtcblx0XHRcdHZhciB0aW1tZXIyO1xuXHRcdFx0cmV0dXJuIHtcblx0XHRcdFx0c2hvdzogZnVuY3Rpb24gKCkge1xuXHRcdFx0XHRcdHBlcmNlbnQgPSAtNTA7XG5cdFx0XHRcdFx0JGludGVydmFsLmNhbmNlbCh0aW1tZXIxKTtcblx0XHRcdFx0XHQkaW50ZXJ2YWwuY2FuY2VsKHRpbW1lcjIpO1xuXHRcdFx0XHRcdCQoJGxvYWRpbmdiYXIpLnN0b3AoKTtcblx0XHRcdFx0XHQkKCRsb2FkaW5nYmFyKS5mYWRlSW4oJ3Nsb3cnKTtcblx0XHRcdFx0XHR0aW1tZXIxID0gJGludGVydmFsKGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0XHRcdGlmIChwZXJjZW50IDwgMTAwKSB7XG5cdFx0XHRcdFx0XHRcdHBlcmNlbnQgKz0gMTA7XG5cdFx0XHRcdFx0XHR9IGVsc2UgaWYgKHBlcmNlbnQgPD0gOTAwKSB7XG5cdFx0XHRcdFx0XHRcdHBlcmNlbnQgKz0gKE1hdGguY2VpbChNYXRoLnJhbmRvbSgpICogNDAgLyAxMCkpO1xuXHRcdFx0XHRcdFx0fSBpZiAocGVyY2VudCA+PSA5MDApIHtcblx0XHRcdFx0XHRcdFx0JGludGVydmFsLmNhbmNlbCh0aW1tZXIxKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdCRsb2FkaW5nYmFyLmNzcygnd2lkdGgnLCAwLjEgKiBwZXJjZW50ICsgXCIlXCIpO1xuXHRcdFx0XHRcdH0sIDE3KTtcblx0XHRcdFx0fSxcblx0XHRcdFx0aGlkZTogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0JGludGVydmFsLmNhbmNlbCh0aW1tZXIxKTtcblx0XHRcdFx0XHQkaW50ZXJ2YWwuY2FuY2VsKHRpbW1lcjIpO1xuXHRcdFx0XHRcdHZhciBpbml0UGVyY2VudCA9IHBlcmNlbnQ7XG5cdFx0XHRcdFx0JCgkbG9hZGluZ2Jhcikuc3RvcCgpO1xuXHRcdFx0XHRcdCRsb2FkaW5nYmFyLmNzcygnb3BhY2l0eScsIDEpO1xuXHRcdFx0XHRcdHRpbW1lcjIgPSAkaW50ZXJ2YWwoZnVuY3Rpb24gKCkge1xuXHRcdFx0XHRcdFx0aWYgKHBlcmNlbnQgPiAxMDAwKSB7XG5cdFx0XHRcdFx0XHRcdCRpbnRlcnZhbC5jYW5jZWwodGltbWVyMik7XG5cdFx0XHRcdFx0XHRcdCQoJGxvYWRpbmdiYXIpLmZhZGVPdXQoJ3Nsb3cnLCBmdW5jdGlvbigpe1xuXHRcdFx0XHRcdFx0XHRcdCRsb2FkaW5nYmFyLmNzcygnd2lkdGgnLCBcIjBcIikuY3NzKCdvcGFjaXR5JywgMSk7XG5cdFx0XHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0JGxvYWRpbmdiYXIuY3NzKCd3aWR0aCcsIDAuMSAqIHBlcmNlbnQgKyBcIiVcIik7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRpZiAoaW5pdFBlcmNlbnQgPCAxMDApIHtcblx0XHRcdFx0XHRcdFx0cGVyY2VudCArPSAxMDtcblx0XHRcdFx0XHRcdH0gZWxzZSBpZiAoaW5pdFBlcmNlbnQgPCA1MDApIHtcblx0XHRcdFx0XHRcdFx0cGVyY2VudCArPSA1O1xuXHRcdFx0XHRcdFx0fSBlbHNlIGlmIChpbml0UGVyY2VudCA8IDgwMCkge1xuXHRcdFx0XHRcdFx0XHRwZXJjZW50ICs9IDM7XG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRwZXJjZW50ICs9IDI7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fSwgMTApO1xuXHRcdFx0XHR9LFxuXHRcdFx0XHRlcnJvcjogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0JCgkbG9hZGluZ2JhcikuZmFkZU91dCgpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSkoKTtcblxuXG5cdFx0c2VsZi5nZXRMZXZlbENvbG9yID0gZnVuY3Rpb24obil7XG5cdFx0XHR2YXIgcmV0O1xuXG5cdFx0XHRzd2l0Y2gobil7XG5cdFx0XHRcdGNhc2UgNTpcblx0XHRcdFx0XHRyZXQgPSB7Ymc6ICcjRkQwMDA0JywgZmM6ICcjRkZGRkZGJ307XG5cdFx0XHRcdFx0YnJlYWs7XG5cblx0XHRcdFx0Y2FzZSA0OlxuXHRcdFx0XHRcdHJldCA9IHtiZzogJyNGRkMxMDAnLCBmYzogJyNGRkZGRkYnfTtcblx0XHRcdFx0XHRicmVhaztcblxuXHRcdFx0XHRjYXNlIDM6XG5cdFx0XHRcdFx0cmV0ID0ge2JnOiAnI0ZGODIwMScsIGZjOiAnIzAwMDAwMCd9O1xuXHRcdFx0XHRcdGJyZWFrO1xuXG5cdFx0XHRcdGNhc2UgMjpcblx0XHRcdFx0XHRyZXQgPSB7Ymc6ICcjMDNCMEVEJywgZmM6ICcjRkZGRkZGJ307XG5cdFx0XHRcdFx0YnJlYWs7XG5cblx0XHRcdFx0ZGVmYXVsdDpcblx0XHRcdFx0XHRyZXQgPSB7Ymc6ICcjOTREMDRBJywgZmM6ICcjRkZGRkZGJ307XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiByZXQ7XG5cdFx0fTtcblxuXHRcdHNlbGYuZG93bmxvYWQgPSBmdW5jdGlvbihmaWxlbmFtZSl7XG5cdFx0XHR2YXIgbGluaztcblx0XHRcdGxpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7XG5cdFx0XHRsaW5rLmRvd25sb2FkID0gZmlsZW5hbWU7XG5cdFx0XHRsaW5rLnRhcmdldCA9ICdfYmxhbmsnO1xuXHRcdFx0bGluay5ocmVmID0gIHNlbGYuYXBpKCcvZG93bmxvYWQvJykgKyBmaWxlbmFtZTtcblx0XHRcdGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQobGluayk7XG5cdFx0XHRsaW5rLmNsaWNrKCk7XG5cdFx0XHRkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKGxpbmspO1xuXHRcdH07XG5cblx0XHRzZWxmLmxheW91dCA9IGZ1bmN0aW9uIChncmFwaCwgbGF5b3V0LCBhbmltYXRlKSB7XG5cdFx0XHR2YXIgY2VsbHM7XG5cblx0XHRcdGNlbGxzID0gZ3JhcGguZ2V0Q2hpbGRWZXJ0aWNlcygpO1xuXG5cdFx0XHRncmFwaC5nZXRNb2RlbCgpLmJlZ2luVXBkYXRlKCk7XG5cdFx0XHR0cnkge1xuXHRcdFx0XHRsYXlvdXQuZXhlY3V0ZShncmFwaC5nZXREZWZhdWx0UGFyZW50KCksIGNlbGxzKTtcblx0XHRcdH0gY2F0Y2ggKGUpIHtcblx0XHRcdFx0dGhyb3cgZTtcblx0XHRcdH0gZmluYWxseSB7XG5cdFx0XHRcdC8vIEFuaW1hdGVzIHRoZSBjaGFuZ2VzIGluIHRoZSBncmFwaCBtb2RlbCBleGNlcHRcblx0XHRcdFx0Ly8gZm9yIENhbWlubywgd2hlcmUgYW5pbWF0aW9uIGlzIHRvbyBzbG93XG5cdFx0XHRcdGlmIChhbmltYXRlICYmIG5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignQ2FtaW5vJykgPCAwKSB7XG5cdFx0XHRcdFx0Ly8gTmV3IEFQSSBmb3IgYW5pbWF0aW5nIGdyYXBoIGxheW91dCByZXN1bHRzIGFzeW5jaHJvbm91c2x5XG5cdFx0XHRcdFx0dmFyIG1vcnBoID0gbmV3IG14TW9ycGhpbmcoZ3JhcGgpO1xuXHRcdFx0XHRcdG1vcnBoLmFkZExpc3RlbmVyKG14RXZlbnQuRE9ORSwgbXhVdGlscy5iaW5kKHRoaXMsIGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0XHRcdGdyYXBoLmdldE1vZGVsKCkuZW5kVXBkYXRlKCk7XG5cdFx0XHRcdFx0fSkpO1xuXG5cdFx0XHRcdFx0bW9ycGguc3RhcnRBbmltYXRpb24oKTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRncmFwaC5nZXRNb2RlbCgpLmVuZFVwZGF0ZSgpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fTtcblxuXHRcdHNlbGYuaGFuZGxlR3JhcGhKc29uID0gZnVuY3Rpb24oYXJyKXtcblxuXHRcdH07XG5cblx0XHRyZXR1cm4gc2VsZjtcblx0fSk7XG5cbn0pKG5hbWVTcGFjZS5yZWcoJ2dyYXBoJykpO1xuXG4vKiBnbG9iYWwgVEhSRUUgKi9cbi8qIGdsb2JhbCBUSFJFRXggKi9cblxuKGZ1bmN0aW9uIChncmFwaCkge1xuXG4gICAgJ3VzZSBzdHJpY3QnO1xuXG5cdGdyYXBoLmFwcC5mYWN0b3J5KCdVbml2ZXJzZScsIGZ1bmN0aW9uKENvbnN0LCBMb2FkTWVzaCwgRm9udFNlcnZpY2Upe1xuXG5cdFx0ZnVuY3Rpb24gVW5pdmVyc2Uob3B0aW9ucykge1xuXG5cdFx0XHR0aGlzLm9wdGlvbnMgPSBvcHRpb25zO1xuXHRcdFx0dGhpcy5sb2FkT2JqID0gbmV3IExvYWRNZXNoKCk7XG5cdFx0XHR0aGlzLm1lc2hCaXpJbmZvID0ge307XG5cdFx0XHR0aGlzLiRjb250YWluZXIgPSBvcHRpb25zLiRjb250YWluZXI7XG5cdFx0XHR0aGlzLmRlZmF1bHROb2RlRGVwdGggPSBDb25zdC5XRUJHTF9OT0RFX0RFUFRIO1xuXHRcdFx0dGhpcy5kZWZhdWx0TGF5ZXJXaWR0aCA9IENvbnN0LldFQkdMX0xBWUVSX1dJRFRIO1xuXHRcdFx0dGhpcy5kZWZhdWx0TGF5ZXJIZWlnaHQgPSBDb25zdC5XRUJHTF9MQVlFUl9IRUlHSFQ7XG5cdFx0XHR0aGlzLm1hcmdpbiA9IENvbnN0LldFQkdMX0xBWUVSX01BUkdJTjtcblx0XHRcdHRoaXMuc2NlbmVXaWR0aCA9IHRoaXMuJGNvbnRhaW5lci53aWR0aCgpO1xuXHRcdFx0dGhpcy5zY2VuZUhlaWdodCA9IHRoaXMuJGNvbnRhaW5lci5oZWlnaHQoKTtcblxuXHRcdFx0dGhpcy5mb3YgPSAzMDtcblxuXHRcdFx0dGhpcy5zZWxlY3RlZCA9IFtdO1xuXHRcdFx0dGhpcy5sYXllcnMgPSBbXTtcblx0XHRcdHRoaXMuYmFsbEFuaW1hdGlvblF1ZXVlID0gW107XG5cdFx0XHR0aGlzLmFsbE5vZGVzID0gW107XG5cdFx0XHR0aGlzLmFsbFRleHRzID0gW107XG5cdFx0XHR0aGlzLnRleHRzTWFwID0ge307XG5cdFx0XHR0aGlzLmFsbENpSWRzID0gW107XG5cdFx0XHR0aGlzLmFsbENpT2JqID0ge307XG5cdFx0XHR0aGlzLmFsbExpbmVNZXNoID0gW107XG5cblx0XHRcdHRoaXMuaW5pdFRocmVlKCk7XG5cdFx0XHR0aGlzLmluaXRTY2VuZSgpO1xuXHRcdFx0dGhpcy5pbml0Q2FtZXJhKCk7XG5cdFx0XHR0aGlzLmluaXRMaWdodCgpO1xuXHRcdFx0dGhpcy5lbmFibGVTY3JvbGxXaGVlbFpvb20oKTtcblx0XHRcdHRoaXMucmVzaXplKCk7XG5cdFx0XHR0aGlzLmFuaW1hdGUoKTtcblx0XHRcdHRoaXMuY2xpY2soKTtcblx0XHRcdHRoaXMuZXZlbnQoKTtcblx0XHRcdC8vdGhpcy5tb3VzZSgpO1xuXHRcdFx0dGhpcy5pbml0TGF5ZXIoKTtcblx0XHR9XG5cblx0XHQvL1VuaXZlcnNlLnByb3RvdHlwZS5tb3VzZSA9IGZ1bmN0aW9uKCl7XG5cdFx0Ly9cdHZhciBzZWxmID0gdGhpcywgZ2V0QWxsVGV4dE1lc2gsIG9Db250YWluZXIsIG9iaiA9IHt9LCBsYXN0SUQsIHNldFRpbWU7XG5cdFx0Ly9cblx0XHQvL1x0Z2V0QWxsVGV4dE1lc2ggPSBmdW5jdGlvbigpe1xuXHRcdC8vXHRcdHZhciBhcnIgPSBbXTtcblx0XHQvL1x0XHQkLmVhY2goc2VsZi5sYXllcnMsIGZ1bmN0aW9uKCl7XG5cdFx0Ly9cdFx0XHR2YXIgbGF5ZXIgPSB0aGlzO1xuXHRcdC8vXHRcdFx0JC5lYWNoKGxheWVyLCBmdW5jdGlvbigpe1xuXHRcdC8vXHRcdFx0XHR2YXIgaXRlbSA9IHRoaXM7XG5cdFx0Ly9cdFx0XHRcdGlmKGl0ZW0gJiYgaXRlbS50ZXh0Qm94TWVzaCl7XG5cdFx0Ly9cdFx0XHRcdFx0b2JqW2l0ZW0udGV4dEJveE1lc2guaWRdID0gaXRlbS5kYXRhO1xuXHRcdC8vXHRcdFx0XHRcdGFyci5wdXNoKGl0ZW0udGV4dEJveE1lc2gpO1xuXHRcdC8vXHRcdFx0XHR9XG5cdFx0Ly9cdFx0XHR9KTtcblx0XHQvL1x0XHR9KTtcblx0XHQvL1xuXHRcdC8vXHRcdHJldHVybiBhcnI7XG5cdFx0Ly9cdH07XG5cdFx0Ly9cblx0XHQvL1x0b0NvbnRhaW5lciA9IHNlbGYucmVuZGVyZXIuZG9tRWxlbWVudDtcblx0XHQvL1xuXHRcdC8vXHR2YXIgbW91c2UgPSBmdW5jdGlvbihldmVudCl7XG5cdFx0Ly9cdFx0dmFyIG9mZnNldFggPSBvQ29udGFpbmVyLm9mZnNldExlZnQsXG5cdFx0Ly9cdFx0XHRvZmZzZXRZID0gb0NvbnRhaW5lci5vZmZzZXRUb3AsXG5cdFx0Ly9cdFx0XHRvZmZzZXRXID0gb0NvbnRhaW5lci5vZmZzZXRXaWR0aCxcblx0XHQvL1x0XHRcdG9mZnNldEggPSBvQ29udGFpbmVyLm9mZnNldEhlaWdodDtcblx0XHQvL1xuXHRcdC8vXHRcdHZhciB2ZWN0b3IgPSBuZXcgVEhSRUUuVmVjdG9yMyggKCBldmVudC5jbGllbnRYIC0gb2Zmc2V0WCkvIG9mZnNldFcgICogMiAtIDEsIC0gKCBldmVudC5jbGllbnRZIC0gb2Zmc2V0WSkvIG9mZnNldEggICogMiArIDEsIDEgKTtcblx0XHQvL1x0XHR2ZWN0b3IudW5wcm9qZWN0KHNlbGYuY2FtZXJhKTtcblx0XHQvL1x0XHR2ZWN0b3Iuc3ViKCBzZWxmLmNhbWVyYS5wb3NpdGlvbik7XG5cdFx0Ly9cdFx0dmVjdG9yLm5vcm1hbGl6ZSgpO1xuXHRcdC8vXG5cdFx0Ly9cdFx0dmFyIHJheWNhc3RlciA9IG5ldyBUSFJFRS5SYXljYXN0ZXIoIHNlbGYuY2FtZXJhLnBvc2l0aW9uLCB2ZWN0b3IpO1xuXHRcdC8vXHRcdHZhciBpbnRlcnNlY3RzID0gcmF5Y2FzdGVyLmludGVyc2VjdE9iamVjdHMoIGdldEFsbFRleHRNZXNoKCkgLHRydWUpO1xuXHRcdC8vXG5cdFx0Ly9cdFx0aWYoaW50ZXJzZWN0cy5sZW5ndGggPj0gMSl7XG5cdFx0Ly9cdFx0XHRpZihsYXN0SUQgIT09IGludGVyc2VjdHNbMF0ub2JqZWN0LmlkKXtcblx0XHQvL1x0XHRcdFx0bGFzdElEID0gaW50ZXJzZWN0c1swXS5vYmplY3QuaWQ7XG5cdFx0Ly9cdFx0XHRcdGdyYXBoLmV2ZW50LnRyaWdnZXIoZ3JhcGguREVGSU5FX0VWRU5ULldFQkdMX0xBWUVSX1RFWFRfTU9VU0VfRU5URVIsIHtcblx0XHQvL1x0XHRcdFx0XHR4OiBldmVudC5jbGllbnRYLFxuXHRcdC8vXHRcdFx0XHRcdHk6IGV2ZW50LmNsaWVudFksXG5cdFx0Ly9cdFx0XHRcdFx0ZGF0YTogb2JqW2ludGVyc2VjdHNbMF0ub2JqZWN0LmlkXVxuXHRcdC8vXHRcdFx0XHR9KTtcblx0XHQvL1x0XHRcdH1cblx0XHQvL1x0XHR9ZWxzZXtcblx0XHQvL1x0XHRcdC8vdmFyIGlkID0gbGFzdE1lc2hPYmouaWQ7XG5cdFx0Ly9cdFx0XHRsYXN0SUQgPSAnJztcblx0XHQvL1x0XHRcdGdyYXBoLmV2ZW50LnRyaWdnZXIoZ3JhcGguREVGSU5FX0VWRU5ULldFQkdMX0xBWUVSX1RFWFRfTU9VU0VfTEVBVkUsIHtcblx0XHQvL1x0XHRcdFx0eDogZXZlbnQuY2xpZW50WCxcblx0XHQvL1x0XHRcdFx0eTogZXZlbnQuY2xpZW50WVxuXHRcdC8vXHRcdFx0fSk7XG5cdFx0Ly9cdFx0fVxuXHRcdC8vXHR9O1xuXHRcdC8vXG5cdFx0Ly9cdCQob0NvbnRhaW5lcikubW91c2Vtb3ZlKGZ1bmN0aW9uKGUpe1xuXHRcdC8vXHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHQvL1x0XHRpZihzZXRUaW1lKXtcblx0XHQvL1x0XHRcdHdpbmRvdy5jbGVhclRpbWVvdXQoc2V0VGltZSk7XG5cdFx0Ly9cdFx0fVxuXHRcdC8vXG5cdFx0Ly9cdFx0c2V0VGltZSA9IHdpbmRvdy5zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XG5cdFx0Ly9cdFx0XHRzZXRUaW1lID0gbnVsbDtcblx0XHQvL1x0XHRcdG1vdXNlLmFwcGx5KHRoaXMsIFtlXSk7XG5cdFx0Ly9cdFx0fSwgMTAwKTtcblx0XHQvL1x0fSk7XG5cdFx0Ly99O1xuXG5cdFx0VW5pdmVyc2UucHJvdG90eXBlLmJsaW5rID0gZnVuY3Rpb24ob2JqZWN0LCBrZXkpe1xuXHRcdFx0dmFyIGdlb21ldHJ5ID0ge307XG5cdFx0XHR2YXIgb2JqID0gb2JqZWN0O1xuXHRcdFx0Zm9yKHZhciBpID0gMCwgbD1vYmouY2hpbGRyZW4ubGVuZ3RoOyBpIDwgbCA7IGkrKyl7XG5cdFx0XHRcdGlmKGkgPT09MCApe1xuXHRcdFx0XHRcdGdlb21ldHJ5ID0gb2JqLmNoaWxkcmVuW2ldLmdlb21ldHJ5LmNsb25lKCk7XG5cdFx0XHRcdH1lbHNle1xuXHRcdFx0XHRcdFRIUkVFLkdlb21ldHJ5VXRpbHMubWVyZ2UoZ2VvbWV0cnksIG9iai5jaGlsZHJlbltpXSk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0dGhpcy5ibGlua0xpc3Rba2V5XSA9IHRoaXMuYmxpbmtMaXN0W2tleV0gfHwgbmV3IFRIUkVFLk1lc2goZ2VvbWV0cnksIG5ldyBUSFJFRS5NZXNoQmFzaWNNYXRlcmlhbCh7XG5cdFx0XHRcdFx0Y29sb3I6MHhGRjAwMDAsdHJhbnNwYXJlbnQ6dHJ1ZSxvcGFjaXR5OjAuNFxuXHRcdFx0XHR9KSk7XG5cblx0XHRcdHRoaXMuYmxpbmtMaXN0W2tleV0uZ2VvbWV0cnkgPSBnZW9tZXRyeTtcblx0XHRcdHZhciB2ID0gb2JqZWN0LnNjYWxlO1xuXHRcdFx0dGhpcy5ibGlua0xpc3Rba2V5XS5zY2FsZS5zZXQodi54LCB2LnksIHYueik7XG5cdFx0XHRvYmplY3QucGFyZW50LnVwZGF0ZU1hdHJpeFdvcmxkKCk7XG5cdFx0XHR2YXIgcCA9IG5ldyBUSFJFRS5WZWN0b3IzKCk7XG5cdFx0XHRwLnNldEZyb21NYXRyaXhQb3NpdGlvbiggb2JqZWN0Lm1hdHJpeFdvcmxkICk7XG5cdFx0XHR0aGlzLmJsaW5rTGlzdFtrZXldLnBvc2l0aW9uLnNldChwLngsIHAueSwgcC56KSA7XG5cblx0XHRcdGlmKG9iamVjdC5wYXJlbnQucm90YXRpb24ueCA9PT0gTWF0aC5QSSl7XG5cdFx0XHRcdHRoaXMuYmxpbmtMaXN0W2tleV0ucm90YXRpb24ueCA9IE1hdGguUEkgLyAyO1xuXHRcdFx0fVxuXG5cdFx0XHR0aGlzLnNjZW5lLmFkZCggdGhpcy5ibGlua0xpc3Rba2V5XSApO1xuXHRcdH07XG5cblx0XHRVbml2ZXJzZS5wcm90b3R5cGUuc2hvd1RpbWVsaW5lID0gZnVuY3Rpb24oKXtcblx0XHRcdHZhciBfdGhpcyA9IHRoaXMsIHVwZGF0ZUJsaW5rLCBjaGFuZ2VMaXN0ID0gW107XG5cblx0XHRcdF90aGlzLmJsaW5rT2JqID0ge307XG5cdFx0XHRfdGhpcy5ibGlua0xpc3QgPSB7fTtcblxuXG5cdFx0XHR1cGRhdGVCbGluayA9IGZ1bmN0aW9uKGRhdGEpe1xuXHRcdFx0XHQkLmVhY2goZGF0YSwgZnVuY3Rpb24oaWQpe1xuXHRcdFx0XHRcdHZhciBzZWxmID0gdGhpcywgY29sb3I7XG5cblx0XHRcdFx0XHQkLmVhY2goX3RoaXMubGF5ZXJzLCBmdW5jdGlvbihyb3cpe1xuXHRcdFx0XHRcdFx0dmFyIGxheWVyID0gdGhpcztcblx0XHRcdFx0XHRcdCQuZWFjaChsYXllciwgZnVuY3Rpb24oY29sKXtcblx0XHRcdFx0XHRcdFx0dmFyIGtleSA9IFtyb3csIGNvbCwgaWRdLmpvaW4oJ18nKTtcblxuXHRcdFx0XHRcdFx0XHRpZihzZWxmLmFsYXJtTGV2ZWwgPT09IDYpe1xuXHRcdFx0XHRcdFx0XHRcdGlmKF90aGlzLmJsaW5rT2JqW2tleV0pe1xuXHRcdFx0XHRcdFx0XHRcdFx0X3RoaXMuc2NlbmUucmVtb3ZlKF90aGlzLmJsaW5rTGlzdFtrZXldKTtcblx0XHRcdFx0XHRcdFx0XHRcdGRlbGV0ZSBfdGhpcy5ibGlua09ialtrZXldO1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0fWVsc2V7XG5cdFx0XHRcdFx0XHRcdFx0aWYoX3RoaXMuYWxsQ2lPYmpba2V5XSl7XG5cdFx0XHRcdFx0XHRcdFx0XHRfdGhpcy5ibGlua09ialtrZXldID0gX3RoaXMuYWxsQ2lPYmpba2V5XTtcblx0XHRcdFx0XHRcdFx0XHRcdF90aGlzLmJsaW5rKF90aGlzLmJsaW5rT2JqW2tleV0sIGtleSk7XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9KTtcblxuXHRcdFx0XHRcdH0pO1xuXG5cdFx0XHRcdFx0aWYoc2VsZi5hbGFybUxldmVsICE9PSA2KXtcblx0XHRcdFx0XHRcdGNvbG9yID0gZ3JhcGgudXRpbHMuZ2V0TGV2ZWxDb2xvcihzZWxmLmFsYXJtTGV2ZWwpO1xuXHRcdFx0XHRcdFx0Y2hhbmdlTGlzdC5wdXNoKHtcblx0XHRcdFx0XHRcdFx0aWQ6IGlkLFxuXHRcdFx0XHRcdFx0XHRiZzogY29sb3IuYmcsXG5cdFx0XHRcdFx0XHRcdGZjOiBjb2xvci5mY1xuXHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdH0pO1xuXHRcdFx0fTtcblxuXHRcdFx0X3RoaXMudGltZWxpbmUgPSBncmFwaC5UaW1lbGluZSh7XG5cdFx0XHRcdG9ubG9hZDogZnVuY3Rpb24gKCkge1xuXG5cdFx0XHRcdH0sXG5cdFx0XHRcdGNsaWNrZWRQb2ludDogZnVuY3Rpb24gKGRhdGEpIHtcblx0XHRcdFx0XHRpZihkYXRhKXtcblx0XHRcdFx0XHRcdHVwZGF0ZUJsaW5rKGRhdGEpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSxcblx0XHRcdFx0c2hvdzogZnVuY3Rpb24gKCkge1xuXG5cdFx0XHRcdH0sXG5cdFx0XHRcdGhpZGU6IGZ1bmN0aW9uICgpIHtcblxuXHRcdFx0XHR9LFxuXHRcdFx0XHRpZHM6IF90aGlzLmFsbENpSWRzLFxuXHRcdFx0XHRjb250YWluZXI6IHRoaXMuJGNvbnRhaW5lci5wYXJlbnQoKVswXVxuXHRcdFx0fSk7XG5cblx0XHRcdHVwZGF0ZUJsaW5rKF90aGlzLnRpbWVsaW5lLnRpbWVEYXRhWzFdLmRhdGEpO1xuXHRcdFx0X3RoaXMudGltZWxpbmUuc2hvdygpO1xuXG5cdFx0XHQvL2dyYXBoLmV2ZW50LnRyaWdnZXIoZ3JhcGguREVGSU5FX0VWRU5ULkNJU19BTEFSTV9DSEFOR0UsIHtcblx0XHRcdC8vXHRjaGFuZ2VMaXN0OiBjaGFuZ2VMaXN0LFxuXHRcdFx0Ly9cdGRhdGE6IF90aGlzLnRpbWVsaW5lLnRpbWVEYXRhWzFdLmRhdGFcblx0XHRcdC8vfSk7XG5cdFx0fTtcblxuXHRcdFVuaXZlcnNlLnByb3RvdHlwZS5jbG9zZVRpbWVsaW5lID0gZnVuY3Rpb24oKXtcblx0XHRcdHZhciBfdGhpcyA9IHRoaXM7XG5cblx0XHRcdCQuZWFjaChfdGhpcy5ibGlua0xpc3QsIGZ1bmN0aW9uKCl7XG5cdFx0XHRcdF90aGlzLnNjZW5lLnJlbW92ZSh0aGlzKTtcblx0XHRcdH0pO1xuXG5cdFx0XHRfdGhpcy5ibGlua09iaiA9IG51bGw7XG5cdFx0XHRfdGhpcy5ibGlua0xpc3QgPSBudWxsO1xuXG5cdFx0XHRfdGhpcy5yZW1vdmVIaWdobGlnaHRTZWxlY3RlZCgpO1xuXHRcdFx0X3RoaXMudGltZWxpbmUucmVtb3ZlKCk7XG5cdFx0fTtcblxuXHRcdFVuaXZlcnNlLnByb3RvdHlwZS5jbG9zZSA9IGZ1bmN0aW9uKCl7XG5cdFx0XHR2YXIgX3RoaXMgPSB0aGlzO1xuXG5cdFx0XHRpZihfdGhpcy50aW1lbGluZSl7XG5cdFx0XHRcdF90aGlzLnRpbWVsaW5lLnN0b3BVcGRhdGVJbnRlcnZhbCgpO1xuXHRcdFx0fVxuXG5cdFx0XHQkLmVhY2goX3RoaXMuc2NlbmUuY2hpbGRyZW4sIGZ1bmN0aW9uKCl7XG5cdFx0XHRcdF90aGlzLnNjZW5lLnJlbW92ZSh0aGlzKTtcblx0XHRcdH0pO1xuXHRcdH07XG5cblx0XHRVbml2ZXJzZS5wcm90b3R5cGUuZXZlbnQgPSBmdW5jdGlvbigpe1xuXHRcdFx0dmFyIF90aGlzID0gdGhpcztcblx0XHRcdC8vZ3JhcGguZXZlbnQucmVnKGdyYXBoLkRFRklORV9FVkVOVC5XRUJHTF9DTE9TRSwgZnVuY3Rpb24oKXtcblx0XHRcdC8vXHRpZihfdGhpcy50aW1lbGluZSl7XG5cdFx0XHQvL1x0XHRfdGhpcy50aW1lbGluZS5yZW1vdmUoKTtcblx0XHRcdC8vXHR9XG5cdFx0XHQvL1x0X3RoaXMubG9hZE9iai5kZXN0cm95KCk7XG5cdFx0XHQvL30pO1xuXHRcdH07XG5cblx0XHRVbml2ZXJzZS5wcm90b3R5cGUucmVtb3ZlSGlnaGxpZ2h0U2VsZWN0ZWQgPSBmdW5jdGlvbigpe1xuXHRcdFx0dmFyIHNlbGYgPSB0aGlzO1xuXG5cdFx0XHQkLmVhY2goc2VsZi5zZWxlY3RlZCwgZnVuY3Rpb24oKXtcblx0XHRcdFx0c2VsZi5zY2VuZS5yZW1vdmUodGhpcyk7XG5cdFx0XHR9KTtcblxuXHRcdFx0c2VsZi5zZWxlY3RlZCA9IFtdO1xuXHRcdH07XG5cblx0XHRVbml2ZXJzZS5wcm90b3R5cGUuZ2V0Q2lNZXNoID0gZnVuY3Rpb24oaWQpe1xuXHRcdFx0dmFyIGxpc3QgPSBbXSwgX3RoaXMgPSB0aGlzO1xuXG5cdFx0XHQkLmVhY2goX3RoaXMuYWxsQ2lPYmosIGZ1bmN0aW9uKGtleSl7XG5cdFx0XHRcdHZhciBpdGVtID0gdGhpcztcblx0XHRcdFx0aWYoa2V5LnNwbGl0KCdfJykucG9wKCkgPT09IGlkKXtcblx0XHRcdFx0XHRsaXN0LnB1c2goaXRlbSk7XG5cdFx0XHRcdH1cblx0XHRcdH0pO1xuXG5cdFx0XHRyZXR1cm4gbGlzdDtcblx0XHR9O1xuXG5cdFx0VW5pdmVyc2UucHJvdG90eXBlLmhpZ2hsaWdodE5vZGVJZCA9IGZ1bmN0aW9uKGlkKXtcblx0XHRcdHZhciBfdGhpcyA9IHRoaXMsIG5vZGVzID0gW107XG5cblx0XHRcdF90aGlzLmhpZGVMYXllckxpbmUoKTtcblx0XHRcdCQuZWFjaChfdGhpcy5hbGxOb2RlcywgZnVuY3Rpb24oKXtcblx0XHRcdFx0dmFyIGl0ZW0gPSB0aGlzO1xuXHRcdFx0XHRpZihpdGVtLmlkID09PSBpZCl7XG5cdFx0XHRcdFx0bm9kZXMucHVzaChpdGVtKTtcblx0XHRcdFx0XHQkLmVhY2goX3RoaXMuZ2V0UmVsYXRpb25MaW5lQnlOb2RlSWQoaXRlbS5pZCksIGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFx0XHR2YXIgX2l0ZW0gPSB0aGlzO1xuXHRcdFx0XHRcdFx0bm9kZXMucHVzaChfaXRlbS5ub2RlKTtcblx0XHRcdFx0XHRcdF9pdGVtLmxpbmUubWF0ZXJpYWwuY29sb3Iuc2V0SGV4KENvbnN0LldFQkdMX0xBWUVSX0xJTkVfQ09MT1JfU0VMRUNUSU9OKTtcblx0XHRcdFx0XHRcdF9pdGVtLmxpbmUudmlzaWJsZSA9IHRydWU7XG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdH1cblx0XHRcdH0pO1xuXG5cdFx0XHRfdGhpcy5oaWdobGlnaHRTZWxlY3RlZChub2Rlcyk7XG5cdFx0fTtcblxuXHRcdFVuaXZlcnNlLnByb3RvdHlwZS5oaWdobGlnaHRTZWxlY3RlZCA9IGZ1bmN0aW9uKGxpc3Qpe1xuXHRcdFx0dmFyIF90aGlzID0gdGhpcztcblxuXHRcdFx0JC5lYWNoKGxpc3QsIGZ1bmN0aW9uKCl7XG5cdFx0XHRcdHZhciBvYmplY3QgPSB0aGlzLCBtZXNoO1xuXHRcdFx0XHR2YXIgZ2VvbWV0cnkgPSB7fTtcblx0XHRcdFx0dmFyIG9iaiA9IG9iamVjdDtcblx0XHRcdFx0Zm9yKHZhciBpID0gMCwgbD1vYmouY2hpbGRyZW4ubGVuZ3RoOyBpIDwgbCA7IGkrKyl7XG5cdFx0XHRcdFx0aWYoaSA9PT0wICl7XG5cdFx0XHRcdFx0XHRnZW9tZXRyeSA9IG9iai5jaGlsZHJlbltpXS5nZW9tZXRyeS5jbG9uZSgpO1xuXHRcdFx0XHRcdH1lbHNle1xuXHRcdFx0XHRcdFx0VEhSRUUuR2VvbWV0cnlVdGlscy5tZXJnZShnZW9tZXRyeSwgb2JqLmNoaWxkcmVuW2ldKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRtZXNoID0gbmV3IFRIUkVFLk1lc2goZ2VvbWV0cnksIG5ldyBUSFJFRS5NZXNoQmFzaWNNYXRlcmlhbCh7XG5cdFx0XHRcdFx0Y29sb3I6MHhGRjk5MDAsdHJhbnNwYXJlbnQ6dHJ1ZSxvcGFjaXR5OjAuNFxuXHRcdFx0XHR9KSk7XG5cblx0XHRcdFx0X3RoaXMuc2VsZWN0ZWQucHVzaChtZXNoKTtcblx0XHRcdFx0bWVzaC5nZW9tZXRyeSA9IGdlb21ldHJ5O1xuXG5cdFx0XHRcdHZhciB2ID0gb2JqZWN0LnNjYWxlO1xuXHRcdFx0XHRtZXNoLnNjYWxlLnNldCh2LngsIHYueSwgdi56KTtcblx0XHRcdFx0b2JqZWN0LnBhcmVudC51cGRhdGVNYXRyaXhXb3JsZCgpO1xuXHRcdFx0XHR2YXIgcCA9IG5ldyBUSFJFRS5WZWN0b3IzKCk7XG5cdFx0XHRcdHAuc2V0RnJvbU1hdHJpeFBvc2l0aW9uKCBvYmplY3QubWF0cml4V29ybGQgKTtcblx0XHRcdFx0bWVzaC5wb3NpdGlvbi5zZXQocC54LCBwLnksIHAueik7XG5cblx0XHRcdFx0aWYob2JqZWN0LnBhcmVudC5yb3RhdGlvbi54ID09PSBNYXRoLlBJKXtcblx0XHRcdFx0XHRtZXNoLnJvdGF0aW9uLnggPSBNYXRoLlBJIC8gMjtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdF90aGlzLnNjZW5lLmFkZChtZXNoKTtcblx0XHRcdH0pO1xuXHRcdH07XG5cblx0XHRVbml2ZXJzZS5wcm90b3R5cGUuY2xpY2sgPSBmdW5jdGlvbigpe1xuXHRcdFx0dmFyIHNlbGYgPSB0aGlzLCBzZWxlY3RlZCxvQ29udGFpbmVyO1xuXG5cdFx0XHRvQ29udGFpbmVyID0gc2VsZi5yZW5kZXJlci5kb21FbGVtZW50O1xuXG5cdFx0XHQkKG9Db250YWluZXIpLmNsaWNrKGZ1bmN0aW9uKGV2ZW50KXtcblxuXHRcdFx0XHRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXG5cdFx0XHRcdHZhciBvZmZzZXRYID0gb0NvbnRhaW5lci5vZmZzZXRMZWZ0LFxuXHRcdFx0XHRcdG9mZnNldFkgPSBvQ29udGFpbmVyLm9mZnNldFRvcCxcblx0XHRcdFx0XHRvZmZzZXRXID0gb0NvbnRhaW5lci5vZmZzZXRXaWR0aCxcblx0XHRcdFx0XHRvZmZzZXRIID0gb0NvbnRhaW5lci5vZmZzZXRIZWlnaHQ7XG5cblx0XHRcdFx0dmFyIHZlY3RvciA9IG5ldyBUSFJFRS5WZWN0b3IzKCAoIGV2ZW50LmNsaWVudFggLSBvZmZzZXRYKS8gb2Zmc2V0VyAgKiAyIC0gMSwgLSAoIGV2ZW50LmNsaWVudFkgLSBvZmZzZXRZKS8gb2Zmc2V0SCAgKiAyICsgMSwgMSApO1xuXG5cdFx0XHRcdHZlY3Rvci51bnByb2plY3Qoc2VsZi5jYW1lcmEgKTtcblx0XHRcdFx0dmVjdG9yLnN1Yiggc2VsZi5jYW1lcmEucG9zaXRpb24pO1xuXHRcdFx0XHR2ZWN0b3Iubm9ybWFsaXplKCk7XG5cblx0XHRcdFx0dmFyIHJheWNhc3RlciA9IG5ldyBUSFJFRS5SYXljYXN0ZXIoIHNlbGYuY2FtZXJhLnBvc2l0aW9uLCB2ZWN0b3IpO1xuXG5cdFx0XHRcdHZhciBpbnRlcnNlY3RzID0gcmF5Y2FzdGVyLmludGVyc2VjdE9iamVjdHMoc2VsZi5hbGxOb2RlcyAsdHJ1ZSk7XG5cblx0XHRcdFx0c2VsZi5yZW1vdmVIaWdobGlnaHRTZWxlY3RlZCgpO1xuXG5cdFx0XHRcdGlmICggaW50ZXJzZWN0cy5sZW5ndGggPiAwICkge1xuXHRcdFx0XHRcdHNlbGYuaGlkZUxheWVyTGluZSgpO1xuXHRcdFx0XHRcdHNlbGVjdGVkID0gaW50ZXJzZWN0c1swXS5vYmplY3QucGFyZW50O1xuXHRcdFx0XHRcdHNlbGYuaGlnaGxpZ2h0Tm9kZUlkKHNlbGVjdGVkLmlkKTtcblxuXHRcdFx0XHRcdC8vZ3JhcGguZXZlbnQudHJpZ2dlcihncmFwaC5ERUZJTkVfRVZFTlQuV0VCR0xfTEFZRVJfTk9ERV9NT1VTRV9DTElDSywge1xuXHRcdFx0XHRcdC8vXHRtZXNoOiBzZWxlY3RlZCxcblx0XHRcdFx0XHQvL1x0Y2k6IHNlbGYubWVzaEJpekluZm9bc2VsZWN0ZWQuaWRdXG5cdFx0XHRcdFx0Ly99KTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHZhciBpbnRlclRleHRzID0gcmF5Y2FzdGVyLmludGVyc2VjdE9iamVjdHMoc2VsZi5hbGxUZXh0cyAsdHJ1ZSk7XG5cdFx0XHRcdGlmICggaW50ZXJUZXh0cy5sZW5ndGggPiAwICkge1xuXHRcdFx0XHRcdC8vZ3JhcGguZXZlbnQudHJpZ2dlcihncmFwaC5ERUZJTkVfRVZFTlQuV0VCR0xfTEFZRVJfVEVYVF9NT1VTRV9DTElDSywge1xuXHRcdFx0XHRcdC8vXHR2aWV3aWQ6IHNlbGYudGV4dHNNYXBbaW50ZXJUZXh0c1swXS5vYmplY3QuaWRdXG5cdFx0XHRcdFx0Ly99KTtcblx0XHRcdFx0fVxuXHRcdFx0fSk7XG5cdFx0fTtcblxuXHRcdFVuaXZlcnNlLnByb3RvdHlwZS5zaG93TWVzaCA9IGZ1bmN0aW9uKG1lc2hzKXtcblx0XHRcdCQuZWFjaChzaG93TWVzaCwgZnVuY3Rpb24oKXtcblx0XHRcdFx0dmFyIF90aGlzID0gdGhpcztcblx0XHRcdFx0X3RoaXMudmlzaWJsZSA9IHRydWU7XG5cdFx0XHR9KTtcblx0XHR9O1xuXG5cdFx0VW5pdmVyc2UucHJvdG90eXBlLmNvbnZlclBvc2l0aW9uID0gZnVuY3Rpb24gKGdyYXBoV2lkdGgsIGdyYXBoSGVpZ2h0LCBvKSB7XG5cdFx0XHR2YXIgZm4yLCBpdGVtLCBvZmZzZXRYLCBvZmZzZXRZLCByLCByMSwgcjIsIHNlbGYsIF9pLCBfbGVuLCBfcmVmLCBfcmVzdWx0cztcblx0XHRcdHNlbGYgPSB0aGlzO1xuXHRcdFx0b2Zmc2V0WCA9IDA7XG5cdFx0XHRvZmZzZXRZID0gMDtcblxuXHRcdFx0cjEgPSBzZWxmLmRlZmF1bHRMYXllckhlaWdodCAvIGdyYXBoSGVpZ2h0O1xuXHRcdFx0cjIgPSBzZWxmLmRlZmF1bHRMYXllcldpZHRoIC8gZ3JhcGhXaWR0aDtcblxuXHRcdFx0aWYocjIgKiBzZWxmLmRlZmF1bHRMYXllckhlaWdodCA8PSBncmFwaEhlaWdodCl7XG5cdFx0XHRcdHIgPSByMjtcblx0XHRcdFx0b2Zmc2V0WSA9IChzZWxmLmRlZmF1bHRMYXllckhlaWdodCAtIGdyYXBoSGVpZ2h0ICogcikgLyAyO1xuXHRcdFx0fWVsc2V7XG5cdFx0XHRcdHIgPSByMTtcblx0XHRcdFx0b2Zmc2V0WCA9IChzZWxmLmRlZmF1bHRMYXllcldpZHRoIC0gZ3JhcGhXaWR0aCAqIHIpIC8gMjtcblx0XHRcdH1cblxuXHRcdFx0aWYgKG8ubm9kZXMpIHtcblx0XHRcdFx0X3JlZiA9IG8ubm9kZXM7XG5cdFx0XHRcdGZvciAoX2kgPSAwLCBfbGVuID0gX3JlZi5sZW5ndGg7IF9pIDwgX2xlbjsgX2krKykge1xuXHRcdFx0XHRcdGl0ZW0gPSBfcmVmW19pXTtcblx0XHRcdFx0XHRpdGVtLndpZHRoID0gaXRlbS53aWR0aCAqIHI7XG5cdFx0XHRcdFx0aXRlbS5oZWlnaHQgPSBpdGVtLmhlaWdodCAqIHI7XG5cdFx0XHRcdFx0aXRlbS54ID0gaXRlbS54ICogciArIG9mZnNldFg7XG5cdFx0XHRcdFx0aXRlbS55ID0gaXRlbS55ICogciArIG9mZnNldFk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0aWYgKG8uY29udGFpbmVycykge1xuXHRcdFx0XHRfcmVmID0gby5jb250YWluZXJzO1xuXHRcdFx0XHRmb3IgKF9pID0gMCwgX2xlbiA9IF9yZWYubGVuZ3RoOyBfaSA8IF9sZW47IF9pKyspIHtcblx0XHRcdFx0XHRpdGVtID0gX3JlZltfaV07XG5cdFx0XHRcdFx0aXRlbS53aWR0aCA9IGl0ZW0ud2lkdGggKiByO1xuXHRcdFx0XHRcdGl0ZW0uaGVpZ2h0ID0gaXRlbS5oZWlnaHQgKiByO1xuXHRcdFx0XHRcdGl0ZW0ueCA9IGl0ZW0ueCAqIHIgKyBvZmZzZXRYO1xuXHRcdFx0XHRcdGl0ZW0ueSA9IGl0ZW0ueSAqIHIgKyBvZmZzZXRZO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdGlmIChvLmVkZ2VzKSB7XG5cdFx0XHRcdGZuMiA9IGZ1bmN0aW9uIChpbmZvKSB7XG5cdFx0XHRcdFx0aW5mby54ID0gaW5mby54ICogciArIG9mZnNldFg7XG5cdFx0XHRcdFx0aW5mby55ID0gaW5mby55ICogciArIG9mZnNldFk7XG5cdFx0XHRcdH07XG5cdFx0XHRcdF9yZXN1bHRzID0gW107XG5cblx0XHRcdFx0JC5lYWNoKG8uZWRnZXMsIGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFx0dmFyIF90aGlzID0gdGhpcztcblx0XHRcdFx0XHQkLmVhY2goX3RoaXMucG9pbnRzLCBmdW5jdGlvbigpe1xuXHRcdFx0XHRcdFx0X3Jlc3VsdHMucHVzaChmbjIodGhpcykpO1xuXHRcdFx0XHRcdH0pO1xuXHRcdFx0XHR9KTtcblx0XHRcdFx0cmV0dXJuIF9yZXN1bHRzO1xuXHRcdFx0fVxuXHRcdH07XG5cblx0XHRVbml2ZXJzZS5wcm90b3R5cGUuZHJhd05vZGUgPSBmdW5jdGlvbiAoZGF0YSwgY2FsbGJhY2spIHtcblx0XHRcdHZhciBzZWxmLCBkcmF3LCBjb3B5RGF0YSwgbG9vcDtcblx0XHRcdHNlbGYgPSB0aGlzO1xuXHRcdFx0ZGF0YS5ub2RlID0ge307XG5cdFx0XHRjb3B5RGF0YSA9IGdyYXBoLnV0aWxzLmNsb25lKGRhdGEubm9kZXMpO1xuXHRcdFx0ZHJhdyA9IGZ1bmN0aW9uKG9iamVjdCwgaW5mbyl7XG5cdFx0XHRcdHZhciBpZDtcblxuXHRcdFx0XHRvYmplY3QucG9zaXRpb24uc2V0KGluZm8ueCAtIHNlbGYuZGVmYXVsdExheWVyV2lkdGggLyAyICsgaW5mby53aWR0aCAvIDIsIGluZm8ueSAtIHNlbGYuZGVmYXVsdExheWVySGVpZ2h0IC8gMiArIGluZm8uaGVpZ2h0IC8gMiwgc2VsZi5kZWZhdWx0Tm9kZURlcHRoIC8gMiAqIC0xKTtcblx0XHRcdFx0b2JqZWN0LnJvdGF0aW9uLnggPSBNYXRoLlBJIC8gMiAqIC0xO1xuXHRcdFx0XHRvYmplY3Quc2NhbGUueCA9IGluZm8ud2lkdGg7XG5cdFx0XHRcdG9iamVjdC5zY2FsZS55ID0gaW5mby5oZWlnaHQ7XG5cdFx0XHRcdG9iamVjdC5zY2FsZS56ID0gaW5mby53aWR0aDtcblx0XHRcdFx0ZGF0YS5ub2RlW2luZm8uaWRdID0ge1xuXHRcdFx0XHRcdGluZm86IGluZm8sXG5cdFx0XHRcdFx0Y3ViZTogb2JqZWN0XG5cdFx0XHRcdH07XG5cdFx0XHRcdHNlbGYuZHJhd05vZGVUZXh0dXJlKGRhdGEsIGluZm8pO1xuXHRcdFx0XHRkYXRhLnBsYW5lLmFkZChvYmplY3QpO1xuXHRcdFx0XHRzZWxmLmFsbE5vZGVzLnB1c2gob2JqZWN0KTtcblxuXHRcdFx0XHRpZihpbmZvLmlkLmluZGV4T2YoQ29uc3QuQ0lfUFJFRklYKSA9PT0gMCl7XG5cdFx0XHRcdFx0aWQgPSBpbmZvLmlkLnN1YnN0cihDb25zdC5DSV9QUkVGSVgubGVuZ3RoKTtcblxuXHRcdFx0XHRcdHNlbGYuYWxsQ2lJZHMucHVzaChpZCk7XG5cdFx0XHRcdFx0c2VsZi5hbGxDaU9ialtbXG5cdFx0XHRcdFx0XHRkYXRhLnJvdyxcblx0XHRcdFx0XHRcdGRhdGEuY29sLFxuXHRcdFx0XHRcdFx0aWRcblx0XHRcdFx0XHRdLmpvaW4oJ18nKV0gPSBvYmplY3Q7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRzZWxmLm1lc2hCaXpJbmZvW29iamVjdC5pZF0gPSBkYXRhLm5vZGVbaW5mby5pZF0uaW5mbztcblx0XHRcdH07XG5cblx0XHRcdGxvb3AgPSBmdW5jdGlvbihhcnIpe1xuXHRcdFx0XHR2YXIgaXRlbSA9IGFyci5wb3AoKTtcblx0XHRcdFx0c2VsZi5sb2FkT2JqLmxvYWQoaXRlbSwgZnVuY3Rpb24ob2JqZWN0KXtcblx0XHRcdFx0XHRkcmF3KG9iamVjdCwgaXRlbSk7XG5cblx0XHRcdFx0XHRpZihhcnIubGVuZ3RoID49IDEpe1xuXHRcdFx0XHRcdFx0bG9vcChhcnIpO1xuXHRcdFx0XHRcdH1lbHNle1xuXHRcdFx0XHRcdFx0Y2FsbGJhY2soKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0pO1xuXHRcdFx0fTtcblxuXHRcdFx0bG9vcChjb3B5RGF0YSk7XG5cdFx0fTtcblxuXHRcdFVuaXZlcnNlLnByb3RvdHlwZS5nZXRSZXNvdXJjZSA9IGZ1bmN0aW9uICh1cmwpIHtcblx0XHRcdHZhciBhcnIsIG5hbWU7XG5cdFx0XHRpZiAodXJsKSB7XG5cdFx0XHRcdGFyciA9IHVybC5zcGxpdCgnLycpO1xuXHRcdFx0XHRuYW1lID0gYXJyLnBvcCgpO1xuXHRcdFx0XHRuYW1lID0gbmFtZS5zdWJzdHJpbmcoMCwgbmFtZS5sYXN0SW5kZXhPZignLicpKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdG5hbWUgPSBDb25zdC5XRUJHTF9ERUZBVUxUX01FU0hfTkFNRTtcblx0XHRcdH1cblx0XHRcdHJldHVybiB7XG5cdFx0XHRcdG9iajogZ3JhcGguREVGSU5FX1dFQkdMLlJFU09VUkNFX0RJUiArIGVuY29kZVVSSUNvbXBvbmVudChuYW1lKSArICcub2JqJyxcblx0XHRcdFx0bXRsOiBncmFwaC5ERUZJTkVfV0VCR0wuUkVTT1VSQ0VfRElSICsgZW5jb2RlVVJJQ29tcG9uZW50KG5hbWUpICsgJy5tdGwnXG5cdFx0XHR9O1xuXHRcdH07XG5cblx0XHRVbml2ZXJzZS5wcm90b3R5cGUuZHJhd0xpbmUgPSBmdW5jdGlvbiAoZGF0YSkge1xuXHRcdFx0dmFyIGZuLCBpdGVtLCBzZWxmLCBfaSwgX2xlbiwgX3Jlc3VsdHM7XG5cdFx0XHRzZWxmID0gdGhpcztcblx0XHRcdGlmIChkYXRhLmVkZ2VzKSB7XG5cdFx0XHRcdGZuID0gZnVuY3Rpb24gKGl0ZW0pIHtcblx0XHRcdFx0XHR2YXIgY2ZuLCBjaXRlbSwgZ2VvbWV0cnksIGxpbmUsIG1hdGVyaWFsLCBfaSwgX2xlbiwgX3JlZjtcblx0XHRcdFx0XHRtYXRlcmlhbCA9IG5ldyBUSFJFRS5MaW5lQmFzaWNNYXRlcmlhbCh7XG5cdFx0XHRcdFx0XHRjb2xvcjogQ29uc3QuV0VCR0xfTElORV9DT0xPUlxuXHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdGdlb21ldHJ5ID0gbmV3IFRIUkVFLkdlb21ldHJ5KCk7XG5cdFx0XHRcdFx0Y2ZuID0gZnVuY3Rpb24gKG8pIHtcblx0XHRcdFx0XHRcdHJldHVybiBnZW9tZXRyeS52ZXJ0aWNlcy5wdXNoKG5ldyBUSFJFRS5WZWN0b3IzKG8ueCAtIHNlbGYuZGVmYXVsdExheWVyV2lkdGggLyAyLCBvLnkgLSBzZWxmLmRlZmF1bHRMYXllckhlaWdodCAvIDIsIC00KSk7XG5cdFx0XHRcdFx0fTtcblx0XHRcdFx0XHRfcmVmID0gaXRlbS5wb2ludHM7XG5cdFx0XHRcdFx0Zm9yIChfaSA9IDAsIF9sZW4gPSBfcmVmLmxlbmd0aDsgX2kgPCBfbGVuOyBfaSsrKSB7XG5cdFx0XHRcdFx0XHRjaXRlbSA9IF9yZWZbX2ldO1xuXHRcdFx0XHRcdFx0Y2ZuKGNpdGVtKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0bGluZSA9IG5ldyBUSFJFRS5MaW5lKGdlb21ldHJ5LCBtYXRlcmlhbCk7XG5cdFx0XHRcdFx0ZGF0YS5wbGFuZS5hZGQobGluZSk7XG5cdFx0XHRcdH07XG5cdFx0XHRcdF9yZXN1bHRzID0gW107XG5cdFx0XHRcdGZvciAoX2kgPSAwLCBfbGVuID0gZGF0YS5lZGdlcy5sZW5ndGg7IF9pIDwgX2xlbjsgX2krKykge1xuXHRcdFx0XHRcdGl0ZW0gPSBkYXRhLmVkZ2VzW19pXTtcblx0XHRcdFx0XHRfcmVzdWx0cy5wdXNoKGZuKGl0ZW0pKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gX3Jlc3VsdHM7XG5cdFx0XHR9XG5cdFx0fTtcblxuXHRcdFVuaXZlcnNlLnByb3RvdHlwZS5kcmF3Tm9kZVRleHR1cmUgPSBmdW5jdGlvbiAobGF5ZXIsIGluZm8pIHtcblx0XHRcdHZhciBtYXRlcmlhbEFycmF5LCBtYXRlcmlhbEZyb250LCBtYXRlcmlhbFNpZGUsIG8sIHNlbGYsIHRleHRHZW9tLCB0ZXh0SGVpZ2h0LCB0ZXh0TWF0ZXJpYWwsIHRleHRNZXNoLCB0ZXh0V2lkdGg7XG5cdFx0XHRzZWxmID0gdGhpcztcblx0XHRcdG8gPSBsYXllci5ub2RlW2luZm8uaWRdLmN1YmUucG9zaXRpb247XG5cdFx0XHRtYXRlcmlhbEZyb250ID0gbmV3IFRIUkVFLk1lc2hCYXNpY01hdGVyaWFsKHtcblx0XHRcdFx0Y29sb3I6IENvbnN0LldFQkdMX05PREVfRk9OVF9DT0xPUlxuXHRcdFx0fSk7XG5cdFx0XHRtYXRlcmlhbFNpZGUgPSBuZXcgVEhSRUUuTWVzaEJhc2ljTWF0ZXJpYWwoe1xuXHRcdFx0XHRjb2xvcjogQ29uc3QuV0VCR0xfTk9ERV9GT05UX1NJREVfQ09MT1Jcblx0XHRcdH0pO1xuXHRcdFx0bWF0ZXJpYWxBcnJheSA9IFttYXRlcmlhbEZyb250LCBtYXRlcmlhbFNpZGVdO1xuXHRcdFx0dGV4dEdlb20gPSBuZXcgVEhSRUUuVGV4dEdlb21ldHJ5KGluZm8ubmFtZSwge1xuXHRcdFx0XHRzaXplOiBDb25zdC5XRUJHTF9OT0RFX0ZPTlRfU0laRSxcblx0XHRcdFx0aGVpZ2h0OiAxLFxuXHRcdFx0XHRjdXJ2ZVNlZ21lbnRzOiAxLFxuXHRcdFx0XHRmb250OiAnbGlzdScsXG5cdFx0XHRcdHdlaWdodDogJ25vcm1hbCcsXG5cdFx0XHRcdHN0eWxlOiAnbm9ybWFsJyxcblx0XHRcdFx0ZXh0cnVkZU1hdGVyaWFsOiAwXG5cdFx0XHR9KTtcblx0XHRcdHRleHRNYXRlcmlhbCA9IG5ldyBUSFJFRS5NZXNoRmFjZU1hdGVyaWFsKG1hdGVyaWFsQXJyYXkpO1xuXHRcdFx0dGV4dE1lc2ggPSBuZXcgVEhSRUUuTWVzaCh0ZXh0R2VvbSwgdGV4dE1hdGVyaWFsKTtcblx0XHRcdHRleHRHZW9tLmNvbXB1dGVCb3VuZGluZ0JveCgpO1xuXHRcdFx0dGV4dFdpZHRoID0gdGV4dEdlb20uYm91bmRpbmdCb3gubWF4LnggLSB0ZXh0R2VvbS5ib3VuZGluZ0JveC5taW4ueDtcblx0XHRcdHRleHRIZWlnaHQgPSB0ZXh0R2VvbS5ib3VuZGluZ0JveC5tYXgueSAtIHRleHRHZW9tLmJvdW5kaW5nQm94Lm1pbi55O1xuXHRcdFx0dGV4dE1lc2gucm90YXRpb24ueCA9IE1hdGguUEkgKiAtMTtcblx0XHRcdHRleHRNZXNoLnBvc2l0aW9uLnNldChvLnggLSB0ZXh0V2lkdGggLyAyLCBvLnkgKyBpbmZvLmhlaWdodCAvIDIgKyB0ZXh0SGVpZ2h0ICsgMiwgc2VsZi5kZWZhdWx0Tm9kZURlcHRoIC8gMiAqIC0xKTtcblx0XHRcdGxheWVyLnBsYW5lLmFkZCh0ZXh0TWVzaCk7XG5cdFx0XHRsYXllci5ub2RlW2luZm8uaWRdLnRleHRNZXNoID0gdGV4dE1lc2g7XG5cdFx0XHRyZXR1cm4gdGV4dE1lc2g7XG5cdFx0fTtcblxuXHRcdFVuaXZlcnNlLnByb3RvdHlwZS5yZXNpemUgPSBmdW5jdGlvbiAoKSB7XG5cdFx0XHRyZXR1cm4gVEhSRUV4LkNvbnRhaW5lclJlc2l6ZSh0aGlzLiRjb250YWluZXJbMF0sIHRoaXMucmVuZGVyZXIsIHRoaXMuY2FtZXJhKTtcblx0XHR9O1xuXG5cdFx0VW5pdmVyc2UucHJvdG90eXBlLmluaXRUaHJlZSA9IGZ1bmN0aW9uICgpIHtcblx0XHRcdHRoaXMucmVuZGVyZXIgPSBuZXcgVEhSRUUuV2ViR0xSZW5kZXJlcih7XG5cdFx0XHRcdGFudGlhbGlhczogdHJ1ZSxcblx0XHRcdFx0YWxwaGE6IHRydWVcblx0XHRcdH0pO1xuXHRcdFx0dGhpcy5yZW5kZXJlci5zZXRTaXplKHRoaXMuc2NlbmVXaWR0aCwgdGhpcy5zY2VuZUhlaWdodCk7XG5cblx0XHRcdHRoaXMuJGNvbnRhaW5lci5hcHBlbmQodGhpcy5yZW5kZXJlci5kb21FbGVtZW50KTtcblx0XHRcdHRoaXMucmVuZGVyZXIuc2V0Q2xlYXJDb2xvciggMHhGRkZGRkYsIDEpO1xuXHRcdFx0Ly90aGlzLnBpY2tpbmdUZXh0dXJlID0gbmV3IFRIUkVFLldlYkdMUmVuZGVyVGFyZ2V0KCB0aGlzLnNjZW5lV2lkdGgsIHRoaXMuc2NlbmVIZWlnaHQgKTtcblx0XHR9O1xuXG5cdFx0VW5pdmVyc2UucHJvdG90eXBlLmxvYWRUZXh0dXJlID0gZnVuY3Rpb24gKHBhdGgpIHtcblx0XHRcdHJldHVybiBUSFJFRS5JbWFnZVV0aWxzLmxvYWRUZXh0dXJlKHBhdGgpO1xuXHRcdH07XG5cblx0XHQvL1VuaXZlcnNlLnByb3RvdHlwZS5pbml0U2t5Ym94ID0gZnVuY3Rpb24gKCkge1xuXHRcdC8vXHR2YXIgZnJhZ21lbnRTaGFkZXIsIGdlb21ldHJ5LCBtYXRlcmlhbCwgc2t5Qm94LCB1bmlmb3JtcywgdmVydGV4U2hhZGVyO1xuXHRcdC8vXHRnZW9tZXRyeSA9IG5ldyBUSFJFRS5TcGhlcmVHZW9tZXRyeSgzMDAwLCA2MCwgNDApO1xuXHRcdC8vXHR1bmlmb3JtcyA9IHtcblx0XHQvL1x0XHR0ZXh0dXJlOiB7XG5cdFx0Ly9cdFx0XHR0eXBlOiAndCcsXG5cdFx0Ly9cdFx0XHR2YWx1ZTogdGhpcy5sb2FkVGV4dHVyZSgnaW1hZ2VzL3NreWJveC5qcGcnKVxuXHRcdC8vXHRcdH1cblx0XHQvL1x0fTtcblx0XHQvL1x0dmVydGV4U2hhZGVyID0gJ3ZhcnlpbmcgdmVjMiB2VVY7XFxudmFyeWluZyBmbG9hdCB2RGVuc2l0eTtcXG52YXJ5aW5nIGZsb2F0IHZEaWZmO1xcbnZvaWQgbWFpbigpIHtcXG5cdHZVViA9IHV2O1xcblx0dmVjNCBwb3MgPSB2ZWM0KHBvc2l0aW9uLCAxLjApO1xcblx0Z2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogbW9kZWxWaWV3TWF0cml4ICogcG9zO1xcbn0nO1xuXHRcdC8vXHRmcmFnbWVudFNoYWRlciA9ICd1bmlmb3JtIHNhbXBsZXIyRCB0ZXh0dXJlO1xcbnZhcnlpbmcgdmVjMiB2VVY7XFxudm9pZCBtYWluKCkge1xcbiAgICB2ZWM0IHNhbXBsZSA9IHRleHR1cmUyRCh0ZXh0dXJlLCB2VVYpO1xcbiAgICBnbF9GcmFnQ29sb3IgPSB2ZWM0KHNhbXBsZS54eXosIHNhbXBsZS53KTtcXG59Jztcblx0XHQvL1x0bWF0ZXJpYWwgPSBuZXcgVEhSRUUuU2hhZGVyTWF0ZXJpYWwoe1xuXHRcdC8vXHRcdHVuaWZvcm1zOiB1bmlmb3Jtcyxcblx0XHQvL1x0XHR2ZXJ0ZXhTaGFkZXI6IHZlcnRleFNoYWRlcixcblx0XHQvL1x0XHRmcmFnbWVudFNoYWRlcjogZnJhZ21lbnRTaGFkZXJcblx0XHQvL1x0fSk7XG5cdFx0Ly9cdHNreUJveCA9IG5ldyBUSFJFRS5NZXNoKGdlb21ldHJ5LCBtYXRlcmlhbCk7XG5cdFx0Ly9cdHNreUJveC5zY2FsZS5zZXQoLTEsIDEsIDEpO1xuXHRcdC8vXHRza3lCb3guZXVsZXJPcmRlciA9ICdYWlknO1xuXHRcdC8vXHRza3lCb3gucmVuZGVyRGVwdGggPSAxMDAwLjA7XG5cdFx0Ly9cdHJldHVybiB0aGlzLnNjZW5lLmFkZChza3lCb3gpO1xuXHRcdC8vfTtcblxuXHRcdFVuaXZlcnNlLnByb3RvdHlwZS5pbml0Q2FtZXJhID0gZnVuY3Rpb24gKCkge1xuXHRcdFx0dmFyIGRpcywgb2JqLCAgdztcblxuXHRcdFx0b2JqID0gdGhpcy5nZXRMYXllckJveCgpO1xuXHRcdFx0dyA9ICBvYmoudyA+IG9iai5oID8gb2JqLncgOiBvYmouaDtcblx0XHRcdGRpcyA9IHcgLyAoMiAqIE1hdGgudGFuKHRoaXMuZm92LzMgKiAwLjAxNzQ1MzI5MykpO1xuXG5cdFx0XHR0aGlzLmNhbWVyYURpcyA9IGRpcztcblxuXHRcdFx0dGhpcy5jYW1lcmEgPSBuZXcgVEhSRUUuUGVyc3BlY3RpdmVDYW1lcmEodGhpcy5mb3YsIHRoaXMuc2NlbmVXaWR0aCAvIHRoaXMuc2NlbmVIZWlnaHQsIENvbnN0LldFQkdMX0NBTUVSQV9ORUFSLCBDb25zdC5XRUJHTF9DQU1FUkFfRkFSKTtcblx0XHRcdHRoaXMuY2FtZXJhLnJvdGF0aW9uLnggPSBNYXRoLlBJIC8gMjtcblx0XHRcdHRoaXMuY2FtZXJhLnBvc2l0aW9uLnNldChDb25zdC5XRUJHTF9DQU1FUkFfUE9TSVRJT05fWCwgQ29uc3QuV0VCR0xfQ0FNRVJBX1BPU0lUSU9OX1ksIGRpcyAqIDAuNSk7XG5cdFx0XHR0aGlzLmNhbWVyYS5sb29rQXQodGhpcy5zY2VuZS5wb3NpdGlvbik7XG5cdFx0XHR0aGlzLnNjZW5lLmFkZCh0aGlzLmNhbWVyYSk7XG5cdFx0XHR0aGlzLnNjZW5lLnVwZGF0ZU1hdHJpeFdvcmxkKHRydWUpO1xuXHRcdH07XG5cblx0XHRVbml2ZXJzZS5wcm90b3R5cGUuaW5pdFNjZW5lID0gZnVuY3Rpb24gKCkge1xuXHRcdFx0dGhpcy5zY2VuZSA9IG5ldyBUSFJFRS5TY2VuZSgpO1xuXHRcdH07XG5cblx0XHRVbml2ZXJzZS5wcm90b3R5cGUuaW5pdExpZ2h0ID0gZnVuY3Rpb24gKCkge1xuXHRcdFx0dmFyIGxpZ2h0ID0gW107XG5cdFx0XHRmb3IgKHZhciBsaSA9IDA7IGxpIDwgNDsgbGkrKykge1xuXHRcdFx0XHRsaWdodFtsaV0gPSBuZXcgVEhSRUUuRGlyZWN0aW9uYWxMaWdodChDb25zdC5XRUJHTF9MSUdIVF9DT0xPUiwgMC40KTtcblx0XHRcdFx0dGhpcy5zY2VuZS5hZGQobGlnaHRbbGldKTtcblx0XHRcdH1cblx0XHRcdGxpZ2h0WzBdLnBvc2l0aW9uLnNldCgzNTAwMCwgMzUwMDAsIDM1MDAwKTtcblx0XHRcdGxpZ2h0WzFdLnBvc2l0aW9uLnNldCgtMzUwMDAsIDM1MDAwLCAtMzUwMDApO1xuXHRcdFx0bGlnaHRbMl0ucG9zaXRpb24uc2V0KC0zNTAwMCwgMzUwMDAsIC0zNTAwMCk7XG5cdFx0XHRsaWdodFszXS5wb3NpdGlvbi5zZXQoMzUwMDAsIDM1MDAwLCAzNTAwMCk7XG5cblx0XHR9O1xuXG5cdFx0VW5pdmVyc2UucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uICgpIHtcblx0XHRcdHRoaXMucmVuZGVyZXIucmVuZGVyKHRoaXMuc2NlbmUsIHRoaXMuY2FtZXJhKTtcblx0XHR9O1xuXG5cdFx0VW5pdmVyc2UucHJvdG90eXBlLmRyYXdUZXh0ID0gZnVuY3Rpb24gKGxheWVyLCB0ZXh0LCBpc1ZlcnRpY2FsKSB7XG5cdFx0XHR2YXIgbWF0ZXJpYWxBcnJheSwgbWF0ZXJpYWxGcm9udCwgbWF0ZXJpYWxTaWRlLCB0ZXh0R2VvbSwgdGV4dEhlaWdodCwgdGV4dE1hdGVyaWFsLCB0ZXh0TWVzaCwgdGV4dFdpZHRoLFxuXHRcdFx0XHRnZW9tZXRyeSwgY3ViZSwgbWF0ZXJpYWwsIHNjYWxlID0gMS4zIDtcblx0XHRcdG1hdGVyaWFsRnJvbnQgPSBuZXcgVEhSRUUuTWVzaEJhc2ljTWF0ZXJpYWwoe1xuXHRcdFx0XHRjb2xvcjogQ29uc3QuV0VCR0xfTEFZRVJfRk9OVF9DT0xPUlxuXHRcdFx0fSk7XG5cdFx0XHRtYXRlcmlhbFNpZGUgPSBuZXcgVEhSRUUuTWVzaEJhc2ljTWF0ZXJpYWwoe1xuXHRcdFx0XHRjb2xvcjogQ29uc3QuV0VCR0xfTEFZRVJfRk9OVF9TSURFX0NPTE9SXG5cdFx0XHR9KTtcblx0XHRcdG1hdGVyaWFsQXJyYXkgPSBbbWF0ZXJpYWxGcm9udCwgbWF0ZXJpYWxTaWRlXTtcblxuXHRcdFx0dGV4dEdlb20gPSBuZXcgVEhSRUUuVGV4dEdlb21ldHJ5KHRleHQsIHtcblx0XHRcdFx0c2l6ZTogQ29uc3QuV0VCR0xfTEFZRVJfRk9OVF9TSVpFLFxuXHRcdFx0XHRoZWlnaHQ6IENvbnN0LldFQkdMX0xBWUVSX0ZPTlRfSEVJR0hULFxuXHRcdFx0XHRjdXJ2ZVNlZ21lbnRzOiAzLFxuXHRcdFx0XHRmb250OiBDb25zdC5XRUJHTF9MQVlFUl9GT05UX0ZBTUlMWSxcblx0XHRcdFx0d2VpZ2h0OiAnbm9ybWFsJyxcblx0XHRcdFx0c3R5bGU6ICdub3JtYWwnLFxuXHRcdFx0XHRleHRydWRlTWF0ZXJpYWw6IDFcblx0XHRcdH0pO1xuXHRcdFx0dGV4dE1hdGVyaWFsID0gbmV3IFRIUkVFLk1lc2hGYWNlTWF0ZXJpYWwobWF0ZXJpYWxBcnJheSk7XG5cdFx0XHR0ZXh0TWVzaCA9IG5ldyBUSFJFRS5NZXNoKHRleHRHZW9tLCB0ZXh0TWF0ZXJpYWwpO1xuXHRcdFx0dGV4dEdlb20uY29tcHV0ZUJvdW5kaW5nQm94KCk7XG5cdFx0XHR0ZXh0V2lkdGggPSB0ZXh0R2VvbS5ib3VuZGluZ0JveC5tYXgueCAtIHRleHRHZW9tLmJvdW5kaW5nQm94Lm1pbi54O1xuXHRcdFx0dGV4dEhlaWdodCA9IHRleHRHZW9tLmJvdW5kaW5nQm94Lm1heC55IC0gdGV4dEdlb20uYm91bmRpbmdCb3gubWluLnk7XG5cblx0XHRcdHRleHRNZXNoLnJvdGF0aW9uLnggPSBpc1ZlcnRpY2FsID8gTWF0aC5QSSAvIDIgKiAtMSA6IE1hdGguUEk7XG5cblx0XHRcdHRleHRNZXNoLnBvc2l0aW9uLnNldCh0aGlzLmRlZmF1bHRMYXllcldpZHRoIC8gMiAtIHRleHRXaWR0aCwgdGhpcy5kZWZhdWx0TGF5ZXJIZWlnaHQgLyAyIC0gdGV4dEhlaWdodCwgMCk7XG5cdFx0XHRsYXllci5hZGQodGV4dE1lc2gpO1xuXG5cdFx0XHRnZW9tZXRyeSA9IG5ldyBUSFJFRS5Cb3hHZW9tZXRyeSh0ZXh0V2lkdGggKiBzY2FsZSwgdGV4dEhlaWdodCAqIHNjYWxlLCAyMCk7XG5cdFx0XHRtYXRlcmlhbCA9IG5ldyBUSFJFRS5NZXNoQmFzaWNNYXRlcmlhbCgpO1xuXHRcdFx0Y3ViZSA9IG5ldyBUSFJFRS5NZXNoKCBnZW9tZXRyeSwgbWF0ZXJpYWwgKTtcblx0XHRcdGN1YmUucG9zaXRpb24uc2V0KHRoaXMuZGVmYXVsdExheWVyV2lkdGggLyAyIC0gdGV4dFdpZHRoIC8gMiwgdGhpcy5kZWZhdWx0TGF5ZXJIZWlnaHQgLyAyIC0gdGV4dEhlaWdodCwgLTEgKiBDb25zdC5XRUJHTF9MQVlFUl9GT05UX0hFSUdIVCAqIDMpO1xuXHRcdFx0Y3ViZS5yb3RhdGlvbi54ID0gaXNWZXJ0aWNhbCA/IE1hdGguUEkgLyAyICogLTEgOiBNYXRoLlBJO1xuXG5cdFx0XHRpZighaXNWZXJ0aWNhbCl7XG5cdFx0XHRcdGN1YmUucG9zaXRpb24ueSAtPSBDb25zdC5XRUJHTF9MQVlFUl9GT05UX0hFSUdIVCAqIDQ7XG5cdFx0XHR9XG5cblx0XHRcdGN1YmUudmlzaWJsZSA9IGZhbHNlO1xuXHRcdFx0bGF5ZXIuYWRkKCBjdWJlICk7XG5cblx0XHRcdHJldHVybiB7XG5cdFx0XHRcdHRleHRNZXNoOiB0ZXh0TWVzaCxcblx0XHRcdFx0dGV4dEJveE1lc2ggOiBjdWJlXG5cdFx0XHR9O1xuXHRcdH07XG5cblxuXHRcdFVuaXZlcnNlLnByb3RvdHlwZS5kcmF3Q29udGFpbmVyID0gZnVuY3Rpb24gKGRhdGEpIHtcblx0XHRcdHZhciBfdGhpcyA9IHRoaXM7XG5cdFx0XHRkYXRhLmNvbnRhaW5lciA9IHt9O1xuXHRcdFx0JC5lYWNoKGdyYXBoLnV0aWxzLmNsb25lKGRhdGEuY29udGFpbmVycyksIGZ1bmN0aW9uKCl7XG5cdFx0XHRcdHZhciBpdGVtID0gdGhpcztcblx0XHRcdFx0aXRlbS5jb2xvciA9IGl0ZW0uY29sb3IgPyBpdGVtLmNvbG9yIDogQ29uc3QuV0VCR0xfQ09OVEFJTkVSX0NPTE9SW2l0ZW0ubGV2ZWxdO1xuXHRcdFx0XHR2YXIgZ2VvbWV0cnkgPSBuZXcgVEhSRUUuQm94R2VvbWV0cnkoIGl0ZW0ud2lkdGgsIGl0ZW0uaGVpZ2h0LCAxICk7XG5cdFx0XHRcdHZhciBtYXRlcmlhbCA9IG5ldyBUSFJFRS5NZXNoQmFzaWNNYXRlcmlhbCggeyBjb2xvcjogaXRlbS5jb2xvciwgdHJhbnNwYXJlbnQ6IHRydWV9ICk7XG5cdFx0XHRcdHZhciBtZXNoID0gbmV3IFRIUkVFLk1lc2goIGdlb21ldHJ5LCBtYXRlcmlhbCApO1xuXHRcdFx0XHRtZXNoLnBvc2l0aW9uLnNldChpdGVtLnggLSBfdGhpcy5kZWZhdWx0TGF5ZXJXaWR0aCAvIDIgKyBpdGVtLndpZHRoIC8gMiwgaXRlbS55IC0gX3RoaXMuZGVmYXVsdExheWVySGVpZ2h0IC8gMiArIGl0ZW0uaGVpZ2h0IC8gMiwgLWl0ZW0ubGV2ZWwpO1xuXHRcdFx0XHRkYXRhLmNvbnRhaW5lcltpdGVtLmlkXSA9IHtcblx0XHRcdFx0XHRpbmZvOiBpdGVtLFxuXHRcdFx0XHRcdGN1YmU6IG1lc2hcblx0XHRcdFx0fTtcblx0XHRcdFx0ZGF0YS5wbGFuZS5hZGQobWVzaCk7XG5cdFx0XHR9KTtcblx0XHR9O1xuXG5cblx0XHRVbml2ZXJzZS5wcm90b3R5cGUubG9hZEZvbnQgPSBmdW5jdGlvbihzdHIpe1xuXHRcdFx0dmFyIHJlc3VsdCwgbywgbGlzdCA9IFtdLCBhcnIgPSBbXSwgbWFwID0ge307XG5cblx0XHRcdCQuZWFjaChzdHIuc3BsaXQoJycpLCBmdW5jdGlvbigpe1xuXHRcdFx0XHR2YXIgX3RoaXMgPSB0aGlzO1xuXHRcdFx0XHRpZighbWFwW190aGlzXSl7XG5cdFx0XHRcdFx0bWFwW190aGlzXSA9IHRydWU7XG5cdFx0XHRcdFx0YXJyLnB1c2goX3RoaXMpO1xuXHRcdFx0XHR9XG5cdFx0XHR9KTtcblxuXHRcdFx0byA9IF90eXBlZmFjZV9qcy5mYWNlc1tDb25zdC5XRUJHTF9GT05UXS5ub3JtYWwubm9ybWFsLmdseXBocztcblx0XHRcdCQuZWFjaChhcnIsIGZ1bmN0aW9uKCl7XG5cdFx0XHRcdHZhciBmb250ID0gdGhpcztcblx0XHRcdFx0aWYoIW9bZm9udF0pe1xuXHRcdFx0XHRcdGxpc3QucHVzaChmb250KTtcblx0XHRcdFx0fVxuXHRcdFx0fSk7XG5cblx0XHRcdGlmKGxpc3QubGVuZ3RoID49IDEpe1xuXHRcdFx0XHRyZXN1bHQgPSBncmFwaC5hcGkuZ2V0Rm9udHMobGlzdCk7XG5cdFx0XHRcdGlmKGdyYXBoLnV0aWxzLmlzVHJ1ZVJldChyZXN1bHQpKXtcblx0XHRcdFx0XHQkLmVhY2gocmVzdWx0LmRhdGEsIGZ1bmN0aW9uKGtleSl7XG5cdFx0XHRcdFx0XHRvW2tleV0gPSB0aGlzO1xuXHRcdFx0XHRcdH0pO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fTtcblxuXHRcdFVuaXZlcnNlLnByb3RvdHlwZS5nZXRMYXllckZvbnRzID0gZnVuY3Rpb24ob3B0aW9uKXtcblx0XHRcdHZhciBzdHIgPSAnJztcblx0XHRcdGlmKG9wdGlvbi5uYW1lKXtcblx0XHRcdFx0c3RyICs9IG9wdGlvbi5uYW1lO1xuXHRcdFx0fVxuXG5cdFx0XHQkLmVhY2gob3B0aW9uLm5vZGVzLCBmdW5jdGlvbigpe1xuXHRcdFx0XHRzdHIgKz0gdGhpcy5uYW1lO1xuXHRcdFx0fSk7XG5cblx0XHRcdCQuZWFjaChvcHRpb24uY29udGFpbmVycywgZnVuY3Rpb24oKXtcblx0XHRcdFx0c3RyICs9IHRoaXMubmFtZTtcblx0XHRcdH0pO1xuXG5cdFx0XHQkLmVhY2gob3B0aW9uLmVkZ2VzLCBmdW5jdGlvbigpe1xuXHRcdFx0XHRzdHIgKz0gdGhpcy5zb3VyY2VOYW1lO1xuXHRcdFx0XHRzdHIgKz0gdGhpcy50YXJnZXROYW1lO1xuXHRcdFx0fSk7XG5cblx0XHRcdHJldHVybiBzdHI7XG5cdFx0fTtcblxuXHRcdFVuaXZlcnNlLnByb3RvdHlwZS5nZXRMYXllckJveCA9IGZ1bmN0aW9uKCl7XG5cdFx0XHR2YXIgX3RoaXMgPSB0aGlzLCBhbGxWQ291bnQgPSAwLCBvYmogPSB7fTtcblxuXHRcdFx0JC5lYWNoKF90aGlzLm9wdGlvbnMubGF5ZXJzLCBmdW5jdGlvbigpe1xuXHRcdFx0XHR2YXIgbGF5ZXIgPSB0aGlzLCBpO1xuXG5cdFx0XHRcdGZvcihpPTA7IGk8bGF5ZXIubGVuZ3RoOyBpKyspe1xuXHRcdFx0XHRcdHZhciBpdGVtID0gbGF5ZXJbaV07XG5cdFx0XHRcdFx0aWYoaXRlbSAmJiBpdGVtLmlzVmVydGljYWwpe1xuXHRcdFx0XHRcdFx0YWxsVkNvdW50ICsrO1xuXHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9KTtcblxuXHRcdFx0b2JqLmggPSBfdGhpcy5vcHRpb25zLmxheWVyTWFyZ2luICogKF90aGlzLm9wdGlvbnMubGF5ZXJDb3VudCAtIDEpICsgYWxsVkNvdW50ICogX3RoaXMuZGVmYXVsdExheWVySGVpZ2h0O1xuXHRcdFx0b2JqLncgPSAoX3RoaXMub3B0aW9ucy5sYXllckl0ZW1Db3VudCAtIDEpICogX3RoaXMuZGVmYXVsdExheWVyV2lkdGggKyAoX3RoaXMub3B0aW9ucy5sYXllckl0ZW1Db3VudCAtIDEpICogX3RoaXMub3B0aW9ucy5sYXllckl0ZW1NYXJnaW47XG5cblx0XHRcdG9iai53ID0gb2JqLncgPT09IDAgPyBfdGhpcy5kZWZhdWx0TGF5ZXJXaWR0aCAqIDAuNyA6IG9iai53O1xuXHRcdFx0cmV0dXJuIG9iajtcblx0XHR9O1xuXG5cdFx0VW5pdmVyc2UucHJvdG90eXBlLmdldExheWVyUG9zQnlJbmRleCA9IGZ1bmN0aW9uKHJvdywgY29sKXtcblx0XHRcdHZhciBfdGhpcyA9IHRoaXMsIHBvcyA9IHt9LCBvZmZzZXQgPSAwLCBhbGxWQ291bnQgPSAwO1xuXG5cdFx0XHQkLmVhY2goX3RoaXMub3B0aW9ucy5sYXllcnMsIGZ1bmN0aW9uKHIpe1xuXHRcdFx0XHR2YXIgbGF5ZXIgPSB0aGlzLCBpO1xuXG5cdFx0XHRcdGZvcihpPTA7IGk8bGF5ZXIubGVuZ3RoOyBpKyspe1xuXHRcdFx0XHRcdHZhciBpdGVtID0gbGF5ZXJbaV07XG5cdFx0XHRcdFx0aWYoaXRlbSAmJiBpdGVtLmlzVmVydGljYWwpe1xuXG5cdFx0XHRcdFx0XHRpZihyIDwgcm93KXtcblx0XHRcdFx0XHRcdFx0b2Zmc2V0ICs9IF90aGlzLmRlZmF1bHRMYXllckhlaWdodDtcblx0XHRcdFx0XHRcdH1lbHNlIGlmKHIgPT09IHJvdyl7XG5cdFx0XHRcdFx0XHRcdG9mZnNldCArPSBfdGhpcy5kZWZhdWx0TGF5ZXJIZWlnaHQgLyAyO1xuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRhbGxWQ291bnQgKys7XG5cdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0fVxuXHRcdFx0fSk7XG5cblx0XHRcdHBvcy55ID0gKF90aGlzLm9wdGlvbnMubGF5ZXJNYXJnaW4gKiAoX3RoaXMub3B0aW9ucy5sYXllckNvdW50IC0gMSkgKyBhbGxWQ291bnQgKiBfdGhpcy5kZWZhdWx0TGF5ZXJIZWlnaHQpIC8gMiAgLSAgKHJvdyAqIF90aGlzLm9wdGlvbnMubGF5ZXJNYXJnaW4gKyBvZmZzZXQpO1xuXHRcdFx0cG9zLnggPSBjb2wgKiAoX3RoaXMuZGVmYXVsdExheWVyV2lkdGggKyBfdGhpcy5vcHRpb25zLmxheWVySXRlbU1hcmdpbikgLSAoKF90aGlzLm9wdGlvbnMubGF5ZXJJdGVtQ291bnQgLSAxKSAqIF90aGlzLmRlZmF1bHRMYXllcldpZHRoICsgKF90aGlzLm9wdGlvbnMubGF5ZXJJdGVtQ291bnQgLSAxKSAqIF90aGlzLm9wdGlvbnMubGF5ZXJJdGVtTWFyZ2luKSAvIDI7XG5cdFx0XHRwb3MueiA9IDA7XG5cblx0XHRcdHJldHVybiBwb3M7XG5cdFx0fTtcblxuXHRcdFVuaXZlcnNlLnByb3RvdHlwZS5pbml0TGF5ZXIgPSBmdW5jdGlvbigpe1xuXHRcdFx0dmFyIF90aGlzID0gdGhpcywgY2hlY2ssIGxvYWRNYXAgPSB7fSwga2V5cyA9IFtdLCBnZXRLZXk7XG5cblx0XHRcdF90aGlzLmxheWVycyA9IFtdO1xuXG5cdFx0XHRnZXRLZXkgPSBmdW5jdGlvbihyb3csIGNvbCl7XG5cdFx0XHRcdHJldHVybiByb3cgKyAnJyArIGNvbDtcblx0XHRcdH07XG5cblx0XHRcdCQuZWFjaChfdGhpcy5vcHRpb25zLmxheWVycywgZnVuY3Rpb24ocm93KXtcblx0XHRcdFx0JC5lYWNoKHRoaXMsIGZ1bmN0aW9uKGNvbCl7XG5cdFx0XHRcdFx0aWYodGhpcyl7XG5cdFx0XHRcdFx0XHRrZXlzLnB1c2goZ2V0S2V5KHJvdywgY29sKSk7XG5cdFx0XHRcdFx0XHRsb2FkTWFwW2dldEtleShyb3csIGNvbCldID0gZmFsc2U7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9KTtcblx0XHRcdH0pO1xuXG5cdFx0XHRjaGVjayA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRcdHZhciBpO1xuXG5cdFx0XHRcdGZvcihpID0gMDsgaSA8IGtleXMubGVuZ3RoOyBpKyspe1xuXHRcdFx0XHRcdGlmKCFsb2FkTWFwW2tleXNbaV1dKXtcblx0XHRcdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdH07XG5cblx0XHRcdCQuZWFjaChfdGhpcy5vcHRpb25zLmxheWVycywgZnVuY3Rpb24ocm93KXtcblx0XHRcdFx0dmFyIGxheWVyID0gdGhpcywgYXJyID0gW107XG5cblx0XHRcdFx0JC5lYWNoKGxheWVyLCBmdW5jdGlvbihjb2wpe1xuXHRcdFx0XHRcdHZhciBpdGVtID0gdGhpcztcblx0XHRcdFx0XHRpZihpdGVtKXtcblx0XHRcdFx0XHRcdGl0ZW0ucG9zID0gX3RoaXMuZ2V0TGF5ZXJQb3NCeUluZGV4KHJvdywgY29sKTtcblx0XHRcdFx0XHRcdGl0ZW0ucm93ID0gcm93O1xuXHRcdFx0XHRcdFx0aXRlbS5jb2wgPSBjb2w7XG5cblx0XHRcdFx0XHRcdF90aGlzLmFkZExheWVyKGl0ZW0sIGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFx0XHRcdGxvYWRNYXBbZ2V0S2V5KHJvdywgY29sKV0gPSB0cnVlO1xuXHRcdFx0XHRcdFx0XHRpZihjaGVjaygpKXtcblx0XHRcdFx0XHRcdFx0XHRpZihfdGhpcy5vcHRpb25zLnJlbGF0aW9uKXtcblx0XHRcdFx0XHRcdFx0XHRcdF90aGlzLmRyYXdMYXllckxpbmUoX3RoaXMub3B0aW9ucy5yZWxhdGlvbik7XG5cdFx0XHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRcdFx0aWYoX3RoaXMub3B0aW9ucy5pc1Nob3dUaW1lbGluZSl7XG5cdFx0XHRcdFx0XHRcdFx0XHRfdGhpcy5zaG93VGltZWxpbmUoKTtcblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdGFyci5wdXNoKGl0ZW0pO1xuXHRcdFx0XHR9KTtcblxuXHRcdFx0XHRfdGhpcy5sYXllcnMucHVzaChhcnIpO1xuXHRcdFx0fSk7XG5cdFx0fTtcblxuXHRcdFVuaXZlcnNlLnByb3RvdHlwZS5hZGRMYXllciA9IGZ1bmN0aW9uIChvcHRpb24sIGNhbGxiYWNrKSB7XG5cdFx0XHR2YXIgbWF0ZU9wdGlvbiwgcGxhbmUsIF90aGlzID0gdGhpcywgdGV4dE9iajtcblxuXHRcdFx0b3B0aW9uLm5vZGUgPSBvcHRpb24ubm9kZSA/IG9wdGlvbi5ub2RlIDogW107XG5cdFx0XHRvcHRpb24ud2lkdGggPSBvcHRpb24ud2lkdGggPyBvcHRpb24ud2lkdGggOiBfdGhpcy5kZWZhdWx0TGF5ZXJXaWR0aDtcblx0XHRcdG9wdGlvbi5oZWlnaHQgPSBvcHRpb24uaGVpZ2h0ID8gb3B0aW9uLmhlaWdodCA6IF90aGlzLmRlZmF1bHRMYXllckhlaWdodDtcblx0XHRcdG9wdGlvbi5wbGFuZVF1YWxpdHkgPSBvcHRpb24ucGxhbmVRdWFsaXR5ID8gb3B0aW9uLnBsYW5lUXVhbGl0eSA6IDEwO1xuXHRcdFx0bWF0ZU9wdGlvbiA9IHtcblx0XHRcdFx0c2lkZTogVEhSRUUuRG91YmxlU2lkZSxcblx0XHRcdFx0dHJhbnNwYXJlbnQ6IHRydWUsXG5cdFx0XHRcdG9wYWNpdHk6IENvbnN0LldFQkdMX0xBWUVSX09QQUNJVFksXG5cdFx0XHRcdGNvbG9yOiBvcHRpb24uZmxvb3JCZ0NvbG9yID8gb3B0aW9uLmZsb29yQmdDb2xvciA6IENvbnN0LldFQkdMX0xBWUVSX0NPTE9SXG5cdFx0XHR9O1xuXHRcdFx0b3B0aW9uLm1hdGVyaWFsID0gb3B0aW9uLm1hdGVyaWFsID8gb3B0aW9uLm1hdGVyaWFsIDogbmV3IFRIUkVFLk1lc2hCYXNpY01hdGVyaWFsKG1hdGVPcHRpb24pO1xuXHRcdFx0Ly9wbGFuZSA9IG5ldyBUSFJFRS5NZXNoKG5ldyBUSFJFRS5QbGFuZUdlb21ldHJ5KG9wdGlvbi53aWR0aCwgb3B0aW9uLmhlaWdodCwgb3B0aW9uLnBsYW5lUXVhbGl0eSwgb3B0aW9uLnBsYW5lUXVhbGl0eSksIG9wdGlvbi5tYXRlcmlhbCk7XG5cdFx0XHRwbGFuZSA9IG5ldyBUSFJFRS5NZXNoKG5ldyBUSFJFRS5QbGFuZUJ1ZmZlckdlb21ldHJ5KG9wdGlvbi53aWR0aCwgb3B0aW9uLmhlaWdodCwgb3B0aW9uLnBsYW5lUXVhbGl0eSwgb3B0aW9uLnBsYW5lUXVhbGl0eSksIG9wdGlvbi5tYXRlcmlhbCk7XG5cdFx0XHRwbGFuZS5yZWNlaXZlU2hhZG93ID0gdHJ1ZTtcblx0XHRcdHBsYW5lLnJvdGF0aW9uLnggPSBvcHRpb24uaXNWZXJ0aWNhbCA/IE1hdGguUEkgOiBNYXRoLlBJIC8gMjtcblx0XHRcdHBsYW5lLnBvc2l0aW9uLnggPSBvcHRpb24ucG9zLng7XG5cdFx0XHRwbGFuZS5wb3NpdGlvbi56ID0gb3B0aW9uLnBvcy56O1xuXHRcdFx0cGxhbmUucG9zaXRpb24ueSA9IG9wdGlvbi5wb3MueTtcblx0XHRcdF90aGlzLnNjZW5lLmFkZChwbGFuZSk7XG5cblx0XHRcdG9wdGlvbi5uYW1lID0gb3B0aW9uLm5hbWUgPyBvcHRpb24ubmFtZSA6IENvbnN0LldFQkdMX0xBWUVSX05BTUVfUFJFRklYICsgKHRoaXMubGF5ZXJzLmxlbmd0aCArIDEpO1xuXHRcdFx0dGhpcy5sb2FkRm9udCh0aGlzLmdldExheWVyRm9udHMob3B0aW9uKSk7XG5cblx0XHRcdHRleHRPYmogPSB0aGlzLmRyYXdUZXh0KHBsYW5lLCBvcHRpb24ubmFtZSwgIW9wdGlvbi5pc1ZlcnRpY2FsKTtcblx0XHRcdG9wdGlvbi50ZXh0TWVzaCA9IHRleHRPYmoudGV4dE1lc2g7XG5cdFx0XHRvcHRpb24udGV4dEJveE1lc2ggPSB0ZXh0T2JqLnRleHRCb3hNZXNoO1xuXHRcdFx0b3B0aW9uLnBsYW5lID0gcGxhbmU7XG5cdFx0XHRfdGhpcy5hbGxUZXh0cy5wdXNoKHRleHRPYmoudGV4dEJveE1lc2gpO1xuXHRcdFx0X3RoaXMudGV4dHNNYXBbdGV4dE9iai50ZXh0Qm94TWVzaC5pZF0gPSBvcHRpb24udmlld2lkO1xuXG5cdFx0XHR0aGlzLmNvbnZlclBvc2l0aW9uKG9wdGlvbi5ncmFwaFdpZHRoLCBvcHRpb24uZ3JhcGhIZWlnaHQsIG9wdGlvbik7XG5cblx0XHRcdHRoaXMuZHJhd05vZGUob3B0aW9uLCBmdW5jdGlvbigpe1xuXHRcdFx0XHRpZihjYWxsYmFjayl7XG5cdFx0XHRcdFx0Y2FsbGJhY2sob3B0aW9uKTtcblx0XHRcdFx0fVxuXHRcdFx0fSk7XG5cblx0XHRcdHRoaXMuZHJhd0NvbnRhaW5lcihvcHRpb24pO1xuXHRcdFx0dGhpcy5kcmF3TGluZShvcHRpb24pO1xuXHRcdFx0Ly8gdGhpcy5hdXRvTGF5b3V0TGF5ZXIoKTtcblxuXHRcdFx0X3RoaXMucmVuZGVyKCk7XG5cdFx0fTtcblxuXHRcdFVuaXZlcnNlLnByb3RvdHlwZS5hdXRvTGF5b3V0TGF5ZXIgPSBmdW5jdGlvbiAoKSB7XG5cdFx0XHR2YXIgZm4sIGksIGl0ZW0sIHNlbGYsIHN0YXJ0TnVtLCBfaSwgX2xlbiwgX3JlZiwgX3Jlc3VsdHM7XG5cdFx0XHRzZWxmID0gdGhpcztcblx0XHRcdHN0YXJ0TnVtID0gKHNlbGYubGF5ZXJzLmxlbmd0aCAtIDEpICogc2VsZi5tYXJnaW4gLyAyICogLTE7XG5cdFx0XHRmbiA9IGZ1bmN0aW9uIChpdGVtLCBpKSB7XG5cdFx0XHRcdGl0ZW0ucGxhbmUucG9zaXRpb24ueSA9IHN0YXJ0TnVtICsgaSAqIHNlbGYubWFyZ2luO1xuXHRcdFx0fTtcblx0XHRcdF9yZWYgPSBzZWxmLmxheWVycztcblx0XHRcdF9yZXN1bHRzID0gW107XG5cdFx0XHRmb3IgKGkgPSBfaSA9IDAsIF9sZW4gPSBfcmVmLmxlbmd0aDsgX2kgPCBfbGVuOyBpID0gKytfaSkge1xuXHRcdFx0XHRpdGVtID0gX3JlZltpXTtcblx0XHRcdFx0X3Jlc3VsdHMucHVzaChmbihpdGVtLCBpKSk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gX3Jlc3VsdHM7XG5cdFx0fTtcblxuXG5cdFx0Lypcblx0XHQg5byA5ZCv6byg5qCH5o6n5Yi2XG5cdFx0IOWmguaenOS4jeW8gOWQr++8jOWImeaXoOazleeUqOm8oOagh+aXi+i9rOaRhOWDj+acuuinkuW6puS4jua7mui9rumAgOi/nOi/kVxuXHRcdCAqL1xuXG5cdFx0VW5pdmVyc2UucHJvdG90eXBlLmVuYWJsZVNjcm9sbFdoZWVsWm9vbSA9IGZ1bmN0aW9uICgpIHtcblx0XHRcdHZhciBzZWxmO1xuXHRcdFx0c2VsZiA9IHRoaXM7XG5cdFx0XHR0aGlzLm9yYml0Q29udHJvbHMgPSBuZXcgVEhSRUUuT3JiaXRDb250cm9scyh0aGlzLmNhbWVyYSwgdGhpcy5yZW5kZXJlci5kb21FbGVtZW50KTtcblx0XHRcdHRoaXMub3JiaXRDb250cm9scy5kYW1waW5nID0gMC4yO1xuXHRcdFx0dGhpcy5vcmJpdENvbnRyb2xzLmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0cmV0dXJuIHNlbGYucmVuZGVyKCk7XG5cdFx0XHR9KTtcblxuXHRcdH07XG5cblx0XHRVbml2ZXJzZS5wcm90b3R5cGUuYW5pbWF0ZSA9IGZ1bmN0aW9uICgpIHtcblx0XHRcdHZhciBmbiwgc2VsZjtcblx0XHRcdHNlbGYgPSB0aGlzO1xuXHRcdFx0Zm4gPSBmdW5jdGlvbiAoKSB7XG5cdFx0XHRcdHJlcXVlc3RBbmltYXRpb25GcmFtZShmbik7XG5cdFx0XHRcdHNlbGYub3JiaXRDb250cm9scy51cGRhdGUoKTtcblx0XHRcdFx0c2VsZi5yZW5kZXIoKTtcblxuXHRcdFx0XHQkLmVhY2goc2VsZi5zZWxlY3RlZCwgZnVuY3Rpb24oKXtcblx0XHRcdFx0XHR2YXIgbWVzaCA9IHRoaXM7XG5cdFx0XHRcdFx0dmFyIG9wYyA9IG1lc2gubWF0ZXJpYWwub3BhY2l0eTtcblxuXHRcdFx0XHRcdGlmKG9wYyA+PSAwLjEpe1xuXHRcdFx0XHRcdFx0bWVzaC5tYXRlcmlhbC5vcGFjaXR5ID0gb3BjIC0gMC4wMSA7XG5cdFx0XHRcdFx0fWVsc2V7XG5cdFx0XHRcdFx0XHRtZXNoLm1hdGVyaWFsLm9wYWNpdHkgPSAwLjg7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9KTtcblxuXHRcdFx0XHRpZihzZWxmLmJsaW5rTGlzdCl7XG5cdFx0XHRcdFx0JC5lYWNoKHNlbGYuYmxpbmtMaXN0LCBmdW5jdGlvbigpe1xuXHRcdFx0XHRcdFx0dmFyIG9wYyA9IHRoaXMubWF0ZXJpYWwub3BhY2l0eTtcblx0XHRcdFx0XHRcdGlmKG9wYyA+PSAwLjEpe1xuXHRcdFx0XHRcdFx0XHR0aGlzLm1hdGVyaWFsLm9wYWNpdHkgPSBvcGMgLSAwLjAyO1xuXHRcdFx0XHRcdFx0fWVsc2V7XG5cdFx0XHRcdFx0XHRcdHRoaXMubWF0ZXJpYWwub3BhY2l0eSA9IDAuODtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGlmKCFzZWxmLmlzQ2xvc2VDYW1lcmFBbmltYXRlICYmIHNlbGYuY2FtZXJhRGlzID4gc2VsZi5jYW1lcmEucG9zaXRpb24ueil7XG5cdFx0XHRcdFx0c2VsZi5jYW1lcmEucG9zaXRpb24ueiArPSA2MDtcblx0XHRcdFx0fWVsc2V7XG5cdFx0XHRcdFx0c2VsZi5pc0Nsb3NlQ2FtZXJhQW5pbWF0ZSA9IHRydWU7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvL3NlbGYudXBkYXRlQmFsbEFuaW1hdGlvbigpO1xuXHRcdFx0fTtcblx0XHRcdHJldHVybiBmbigpO1xuXHRcdH07XG5cblx0XHRVbml2ZXJzZS5wcm90b3R5cGUuZ2V0UG9pbnRzVHdlZW4gPSBmdW5jdGlvbiAocG9pbnRzKSB7XG5cdFx0XHR2YXIgaSwgaXRlbSwgcmV0LCBzdGVwLCB0d29Qb2ludHMsIF9pLCBfbGVuO1xuXHRcdFx0c3RlcCA9IDI7XG5cdFx0XHRyZXQgPSBbXTtcblx0XHRcdHR3b1BvaW50cyA9IGZ1bmN0aW9uIChzb3VyY2UsIHRhcmdldCkge1xuXHRcdFx0XHR2YXIgZm4sIGl0ZW0sIHN0ZXBzLCBfaSwgX3Jlc3VsdHM7XG5cdFx0XHRcdHN0ZXBzID0gTWF0aC5tYXgoTWF0aC5hYnMoc291cmNlLnggLSB0YXJnZXQueCksIE1hdGguYWJzKHNvdXJjZS55IC0gdGFyZ2V0LnkpLCBNYXRoLmFicyhzb3VyY2UueiAtIHRhcmdldC56KSkgLyBzdGVwO1xuXHRcdFx0XHRmbiA9IGZ1bmN0aW9uIChpdGVtKSB7XG5cdFx0XHRcdFx0dmFyIG87XG5cdFx0XHRcdFx0byA9IHt9O1xuXHRcdFx0XHRcdGlmIChzb3VyY2UueCA+IHRhcmdldC54KSB7XG5cdFx0XHRcdFx0XHRvLnggPSBzb3VyY2UueCAtIE1hdGguYWJzKHNvdXJjZS54IC0gdGFyZ2V0LngpIC8gc3RlcHMgKiBpdGVtO1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRvLnggPSBzb3VyY2UueCArIE1hdGguYWJzKHNvdXJjZS54IC0gdGFyZ2V0LngpIC8gc3RlcHMgKiBpdGVtO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRpZiAoc291cmNlLnkgPiB0YXJnZXQueSkge1xuXHRcdFx0XHRcdFx0by55ID0gc291cmNlLnkgLSBNYXRoLmFicyhzb3VyY2UueSAtIHRhcmdldC55KSAvIHN0ZXBzICogaXRlbTtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0by55ID0gc291cmNlLnkgKyBNYXRoLmFicyhzb3VyY2UueSAtIHRhcmdldC55KSAvIHN0ZXBzICogaXRlbTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aWYgKHNvdXJjZS56ID4gdGFyZ2V0LnopIHtcblx0XHRcdFx0XHRcdG8ueiA9IHNvdXJjZS56IC0gTWF0aC5hYnMoc291cmNlLnogLSB0YXJnZXQueikgLyBzdGVwcyAqIGl0ZW07XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdG8ueiA9IHNvdXJjZS56ICsgTWF0aC5hYnMoc291cmNlLnogLSB0YXJnZXQueikgLyBzdGVwcyAqIGl0ZW07XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHJldHVybiByZXQucHVzaChvKTtcblx0XHRcdFx0fTtcblx0XHRcdFx0X3Jlc3VsdHMgPSBbXTtcblx0XHRcdFx0Zm9yIChpdGVtID0gX2kgPSAxOyAxIDw9IHN0ZXBzID8gX2kgPD0gc3RlcHMgOiBfaSA+PSBzdGVwczsgaXRlbSA9IDEgPD0gc3RlcHMgPyArK19pIDogLS1faSkge1xuXHRcdFx0XHRcdF9yZXN1bHRzLnB1c2goZm4oaXRlbSkpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiBfcmVzdWx0cztcblx0XHRcdH07XG5cdFx0XHRmb3IgKGkgPSBfaSA9IDAsIF9sZW4gPSBwb2ludHMubGVuZ3RoOyBfaSA8IF9sZW47IGkgPSArK19pKSB7XG5cdFx0XHRcdGl0ZW0gPSBwb2ludHNbaV07XG5cdFx0XHRcdGlmICghIXBvaW50c1tpICsgMV0pIHtcblx0XHRcdFx0XHR0d29Qb2ludHMoaXRlbSwgcG9pbnRzW2kgKyAxXSk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdHJldHVybiByZXQ7XG5cdFx0fTtcblxuXHRcdFVuaXZlcnNlLnByb3RvdHlwZS5jcmF0ZUxpbmVCYWxsQW5pbWF0aW9uID0gZnVuY3Rpb24gKHBvaW50cykge1xuXHRcdFx0dmFyIGdlb21ldHJ5LCBwYXRoUG9pbnRzLCByZWN0TWVzaCwgc2VsZjtcblx0XHRcdHNlbGYgPSB0aGlzO1xuXHRcdFx0Z2VvbWV0cnkgPSBuZXcgVEhSRUUuU3BoZXJlR2VvbWV0cnkoMywgMTAwLCA1MCk7XG5cdFx0XHRnZW9tZXRyeS5jb21wdXRlVGFuZ2VudHMoKTtcblx0XHRcdHJlY3RNZXNoID0gbmV3IFRIUkVFLk1lc2goZ2VvbWV0cnksIG5ldyBUSFJFRS5NZXNoTGFtYmVydE1hdGVyaWFsKHtcblx0XHRcdFx0Y29sb3I6IDB4ZmZmZmZmXG5cdFx0XHR9KSk7XG5cdFx0XHRzZWxmLnNjZW5lLmFkZChyZWN0TWVzaCk7XG5cdFx0XHRwYXRoUG9pbnRzID0gc2VsZi5nZXRQb2ludHNUd2Vlbihwb2ludHMpO1xuXHRcdFx0cmVjdE1lc2gucG9zaXRpb24uc2V0KHBvaW50c1swXS54LCBwb2ludHNbMF0ueSwgcG9pbnRzWzBdLnopO1xuXHRcdFx0cmV0dXJuIHNlbGYuYmFsbEFuaW1hdGlvblF1ZXVlLnB1c2goe1xuXHRcdFx0XHRiYWxsOiByZWN0TWVzaCxcblx0XHRcdFx0cG9pbnRzOiBwb2ludHMsXG5cdFx0XHRcdGFuaW1hdGVQb2ludHM6IHBhdGhQb2ludHMsXG5cdFx0XHRcdGJhY2s6IFtdXG5cdFx0XHR9KTtcblx0XHR9O1xuXG5cdFx0VW5pdmVyc2UucHJvdG90eXBlLnVwZGF0ZUJhbGxBbmltYXRpb24gPSBmdW5jdGlvbiAoKSB7XG5cdFx0XHR2YXIgZm4sIGl0ZW0sIHNlbGYsIF9pLCBfbGVuLCBfcmVmLCBfcmVzdWx0cztcblx0XHRcdHNlbGYgPSB0aGlzO1xuXHRcdFx0Zm4gPSBmdW5jdGlvbiAoaXRlbSkge1xuXHRcdFx0XHR2YXIgcG9pbnQ7XG5cdFx0XHRcdGlmIChpdGVtLmFuaW1hdGVQb2ludHMubGVuZ3RoID09PSAwKSB7XG5cdFx0XHRcdFx0aXRlbS5hbmltYXRlUG9pbnRzID0gaXRlbS5iYWNrO1xuXHRcdFx0XHRcdGl0ZW0uYmFjayA9IFtdO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHBvaW50ID0gaXRlbS5hbmltYXRlUG9pbnRzLnNoaWZ0KCk7XG5cdFx0XHRcdGl0ZW0uYmFjay5wdXNoKHBvaW50KTtcblx0XHRcdFx0cmV0dXJuIGl0ZW0uYmFsbC5wb3NpdGlvbi5zZXQocG9pbnQueCwgcG9pbnQueSwgcG9pbnQueik7XG5cdFx0XHR9O1xuXHRcdFx0X3JlZiA9IHNlbGYuYmFsbEFuaW1hdGlvblF1ZXVlO1xuXHRcdFx0X3Jlc3VsdHMgPSBbXTtcblx0XHRcdGZvciAoX2kgPSAwLCBfbGVuID0gX3JlZi5sZW5ndGg7IF9pIDwgX2xlbjsgX2krKykge1xuXHRcdFx0XHRpdGVtID0gX3JlZltfaV07XG5cdFx0XHRcdF9yZXN1bHRzLnB1c2goZm4oaXRlbSkpO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIF9yZXN1bHRzO1xuXHRcdH07XG5cblx0XHQvL1VuaXZlcnNlLnByb3RvdHlwZS5nZXROb2RlQnlJZCA9IGZ1bmN0aW9uIChpZCkge1xuXHRcdC8vXHR2YXIgZm4sIGl0ZW0sIHJldCwgc2VsZiwgX2ksIF9sZW4sIF9yZWY7XG5cdFx0Ly9cdHNlbGYgPSB0aGlzO1xuXHRcdC8vXHRyZXQgPSBudWxsO1xuXHRcdC8vXHRmbiA9IGZ1bmN0aW9uIChub2Rlcykge1xuXHRcdC8vXHRcdHZhciBjZm4sIGluZGV4LCBfcmVzdWx0cztcblx0XHQvL1x0XHRjZm4gPSBmdW5jdGlvbiAobm9kZSkge1xuXHRcdC8vXHRcdFx0aWYgKG5vZGUuaW5mby5pZCA9PT0gaWQpIHtcblx0XHQvL1x0XHRcdFx0cmV0ID0gbm9kZTtcblx0XHQvL1x0XHRcdH1cblx0XHQvL1x0XHR9O1xuXHRcdC8vXHRcdF9yZXN1bHRzID0gW107XG5cdFx0Ly9cdFx0Zm9yIChpbmRleCBpbiBub2Rlcykge1xuXHRcdC8vXHRcdFx0X3Jlc3VsdHMucHVzaChjZm4obm9kZXNbaW5kZXhdKSk7XG5cdFx0Ly9cdFx0fVxuXHRcdC8vXHRcdHJldHVybiBfcmVzdWx0cztcblx0XHQvL1x0fTtcblx0XHQvL1x0X3JlZiA9IHNlbGYubGF5ZXJzO1xuXHRcdC8vXHRmb3IgKF9pID0gMCwgX2xlbiA9IF9yZWYubGVuZ3RoOyBfaSA8IF9sZW47IF9pKyspIHtcblx0XHQvL1x0XHRpdGVtID0gX3JlZltfaV07XG5cdFx0Ly9cdFx0Zm4oaXRlbS5ub2RlKTtcblx0XHQvL1x0fVxuXHRcdC8vXHRyZXR1cm4gcmV0O1xuXHRcdC8vfTtcblxuXHRcdFVuaXZlcnNlLnByb3RvdHlwZS5nZXRTbm9kZUFuZFRub2RlQnlJZCA9IGZ1bmN0aW9uIChzaWQsIHRpZCkge1xuXHRcdFx0dmFyIF90aGlzID0gdGhpcywgZ2V0Tm9kZSwgYXJyID0gW107XG5cblx0XHRcdGdldE5vZGUgPSBmdW5jdGlvbihpZCwgbGF5ZXJJbmRleHMpe1xuXHRcdFx0XHR2YXIgZ2V0TGF5ZXJOb2RlLCByZXRzID0gW107XG5cblx0XHRcdFx0Z2V0TGF5ZXJOb2RlID0gZnVuY3Rpb24obGF5ZXIpe1xuXHRcdFx0XHRcdHZhciBub2RlcyA9IFtdO1xuXG5cdFx0XHRcdFx0JC5lYWNoKGxheWVyLCBmdW5jdGlvbigpe1xuXHRcdFx0XHRcdFx0dmFyIHNlbGYgPSB0aGlzO1xuXG5cdFx0XHRcdFx0XHRpZihzZWxmICYmIHNlbGYubm9kZVtpZF0pe1xuXHRcdFx0XHRcdFx0XHRub2Rlcy5wdXNoKHNlbGYubm9kZVtpZF0pO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH0pO1xuXG5cdFx0XHRcdFx0cmV0dXJuIG5vZGVzO1xuXHRcdFx0XHR9O1xuXG5cdFx0XHRcdGlmKHR5cGVvZiBsYXllckluZGV4cyA9PT0gJ3VuZGVmaW5lZCcpe1xuXHRcdFx0XHRcdCQuZWFjaChfdGhpcy5sYXllcnMsIGZ1bmN0aW9uKGluZGV4KXtcblx0XHRcdFx0XHRcdHJldHMucHVzaCh7aW5kZXg6IGluZGV4LCBub2RlczogZ2V0TGF5ZXJOb2RlKF90aGlzLmxheWVyc1tpbmRleF0pfSk7XG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdH1lbHNle1xuXHRcdFx0XHRcdCQuZWFjaChsYXllckluZGV4cywgZnVuY3Rpb24oKXtcblx0XHRcdFx0XHRcdHZhciBpbmRleCA9IHRoaXM7XG5cdFx0XHRcdFx0XHRyZXRzLnB1c2goe2luZGV4OiBpbmRleCwgbm9kZXM6IGdldExheWVyTm9kZShfdGhpcy5sYXllcnNbaW5kZXhdKX0pO1xuXHRcdFx0XHRcdH0pO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmV0dXJuIHJldHM7XG5cdFx0XHR9O1xuXG5cdFx0XHQkLmVhY2goZ2V0Tm9kZShzaWQpLCBmdW5jdGlvbigpe1xuXHRcdFx0XHR2YXIgaXRlbSA9IHRoaXMsIHJhbmdlID0gW107XG5cblx0XHRcdFx0aWYoaXRlbS5pbmRleCA+IDApe1xuXHRcdFx0XHRcdHJhbmdlLnB1c2goaXRlbS5pbmRleCAtIDEpO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0aWYoaXRlbS5pbmRleCArIDEgPCAgX3RoaXMubGF5ZXJzLmxlbmd0aCl7XG5cdFx0XHRcdFx0cmFuZ2UucHVzaChpdGVtLmluZGV4ICsgMSk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQkLmVhY2goaXRlbS5ub2RlcywgZnVuY3Rpb24oKXtcblx0XHRcdFx0XHR2YXIgbm9kZSA9IHRoaXM7XG5cdFx0XHRcdFx0JC5lYWNoKGdldE5vZGUodGlkLCByYW5nZSksIGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFx0XHQkLmVhY2godGhpcy5ub2RlcywgZnVuY3Rpb24oKXtcblx0XHRcdFx0XHRcdFx0YXJyLnB1c2goe1xuXHRcdFx0XHRcdFx0XHRcdHNvdXJjZTogbm9kZSxcblx0XHRcdFx0XHRcdFx0XHR0YXJnZXQ6IHRoaXNcblx0XHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0fSk7XG5cdFx0XHR9KTtcblxuXHRcdFx0cmV0dXJuIGFycjtcblx0XHR9O1xuXG5cblx0XHRVbml2ZXJzZS5wcm90b3R5cGUuZ2V0Tm9kZUFic29sdXRlUG9zaXRpb24gPSBmdW5jdGlvbiAobm9kZSkge1xuXHRcdFx0dmFyIG87XG5cdFx0XHRvID0ge307XG5cdFx0XHRvLnggPSBub2RlLnBhcmVudC5wb3NpdGlvbi54ICsgbm9kZS5wb3NpdGlvbi54O1xuXHRcdFx0by55ID0gbm9kZS5wYXJlbnQucG9zaXRpb24ueSArIG5vZGUucG9zaXRpb24uejtcblx0XHRcdG8ueiA9IG5vZGUucGFyZW50LnBvc2l0aW9uLnogKyBub2RlLnBvc2l0aW9uLnk7XG5cdFx0XHRyZXR1cm4gbztcblx0XHR9O1xuXG5cdFx0VW5pdmVyc2UucHJvdG90eXBlLmdldE5vZGVCZXR3ZWVuUG9pbnRzID0gZnVuY3Rpb24gKHNvdXJjZSwgdGFyZ2V0KSB7XG5cdFx0XHR2YXIgbWlkZGxlUG9pbnQsIHBvaW50cztcblx0XHRcdG1pZGRsZVBvaW50ID0gdGFyZ2V0LnkgPiBzb3VyY2UueSA/IHNvdXJjZS55ICsgKHRhcmdldC55IC0gc291cmNlLnkpIC8gMiA6IHRhcmdldC55ICsgKHNvdXJjZS55IC0gdGFyZ2V0LnkpIC8gMjtcblx0XHRcdHBvaW50cyA9IFtdO1xuXHRcdFx0cG9pbnRzLnB1c2gobmV3IFRIUkVFLlZlY3RvcjMoc291cmNlLngsIHNvdXJjZS55LCBzb3VyY2UueikpO1xuXHRcdFx0cG9pbnRzLnB1c2gobmV3IFRIUkVFLlZlY3RvcjMoc291cmNlLngsIG1pZGRsZVBvaW50LCBzb3VyY2UueikpO1xuXHRcdFx0cG9pbnRzLnB1c2gobmV3IFRIUkVFLlZlY3RvcjModGFyZ2V0LngsIG1pZGRsZVBvaW50LCBzb3VyY2UueikpO1xuXHRcdFx0cG9pbnRzLnB1c2gobmV3IFRIUkVFLlZlY3RvcjModGFyZ2V0LngsIG1pZGRsZVBvaW50LCB0YXJnZXQueikpO1xuXHRcdFx0cG9pbnRzLnB1c2gobmV3IFRIUkVFLlZlY3RvcjModGFyZ2V0LngsIHRhcmdldC55LCB0YXJnZXQueikpO1xuXHRcdFx0cmV0dXJuIHBvaW50cztcblx0XHR9O1xuXG5cdFx0VW5pdmVyc2UucHJvdG90eXBlLmdldExpbmVCeU5vZGVJZCA9IGZ1bmN0aW9uKGlkKXtcblx0XHRcdHZhciBfdGhpcyA9IHRoaXMsIGxpc3QgPSBbXTtcblxuXHRcdFx0JC5lYWNoKF90aGlzLmFsbExpbmVNZXNoLCBmdW5jdGlvbigpe1xuXHRcdFx0XHR2YXIgaXRlbSA9IHRoaXM7XG5cdFx0XHRcdGlmKGl0ZW0uc291cmNlLmlkID09PSBpZCB8fCBpdGVtLnRhcmdldC5pZCA9PT0gaWQpe1xuXHRcdFx0XHRcdGxpc3QucHVzaChpdGVtLmxpbmUpO1xuXHRcdFx0XHR9XG5cdFx0XHR9KTtcblxuXHRcdFx0cmV0dXJuIGxpc3Q7XG5cdFx0fTtcblxuXHRcdFVuaXZlcnNlLnByb3RvdHlwZS5nZXREb253TGluZUJ5Tm9kZUlkID0gZnVuY3Rpb24oaWQpe1xuXHRcdFx0dmFyIF90aGlzID0gdGhpcywgbGlzdCA9IFtdLCBsb29wO1xuXG5cdFx0XHRsb29wID0gZnVuY3Rpb24oaWRzKXtcblx0XHRcdFx0dmFyIG5ld0lkcyA9IFtdO1xuXHRcdFx0XHQkLmVhY2goaWRzLCBmdW5jdGlvbigpe1xuXHRcdFx0XHRcdHZhciBpZCA9IHRoaXM7XG5cblx0XHRcdFx0XHQkLmVhY2goX3RoaXMuYWxsTGluZU1lc2gsIGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFx0XHR2YXIgaXRlbSA9IHRoaXM7XG5cblx0XHRcdFx0XHRcdGlmKGl0ZW0uc291cmNlLmlkID09PSBpZCAmJiBpdGVtLnNvdXJjZS5wYXJlbnQucG9zaXRpb24ueSA+IGl0ZW0udGFyZ2V0LnBhcmVudC5wb3NpdGlvbi55KXtcblx0XHRcdFx0XHRcdFx0bGlzdC5wdXNoKHtcblx0XHRcdFx0XHRcdFx0XHRsaW5lOiBpdGVtLmxpbmUsXG5cdFx0XHRcdFx0XHRcdFx0bm9kZTogaXRlbS50YXJnZXRcblx0XHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0XHRcdG5ld0lkcy5wdXNoKGl0ZW0udGFyZ2V0LmlkKTtcblx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0aWYoaXRlbS50YXJnZXQuaWQgPT09IGlkICYmIGl0ZW0udGFyZ2V0LnBhcmVudC5wb3NpdGlvbi55ID4gaXRlbS5zb3VyY2UucGFyZW50LnBvc2l0aW9uLnkpe1xuXHRcdFx0XHRcdFx0XHRsaXN0LnB1c2goe1xuXHRcdFx0XHRcdFx0XHRcdGxpbmU6IGl0ZW0ubGluZSxcblx0XHRcdFx0XHRcdFx0XHRub2RlOiBpdGVtLnNvdXJjZVxuXHRcdFx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRcdFx0bmV3SWRzLnB1c2goaXRlbS5zb3VyY2UuaWQpO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH0pO1xuXHRcdFx0XHR9KTtcblxuXHRcdFx0XHRpZihuZXdJZHMubGVuZ3RoID49IDEpe1xuXHRcdFx0XHRcdGxvb3AobmV3SWRzKTtcblx0XHRcdFx0fVxuXHRcdFx0fTtcblxuXHRcdFx0bG9vcChbaWRdKTtcblxuXHRcdFx0cmV0dXJuIGxpc3Q7XG5cdFx0fTtcblxuXHRcdFVuaXZlcnNlLnByb3RvdHlwZS5nZXRVcExpbmVCeU5vZGVJZCA9IGZ1bmN0aW9uKGlkKXtcblx0XHRcdHZhciBfdGhpcyA9IHRoaXMsIGxpc3QgPSBbXSwgbG9vcDtcblxuXHRcdFx0bG9vcCA9IGZ1bmN0aW9uKGlkcyl7XG5cdFx0XHRcdHZhciBuZXdJZHMgPSBbXTtcblx0XHRcdFx0JC5lYWNoKGlkcywgZnVuY3Rpb24oKXtcblx0XHRcdFx0XHR2YXIgaWQgPSB0aGlzO1xuXG5cdFx0XHRcdFx0JC5lYWNoKF90aGlzLmFsbExpbmVNZXNoLCBmdW5jdGlvbigpe1xuXHRcdFx0XHRcdFx0dmFyIGl0ZW0gPSB0aGlzO1xuXG5cdFx0XHRcdFx0XHRpZihpdGVtLnNvdXJjZS5pZCA9PT0gaWQgJiYgaXRlbS5zb3VyY2UucGFyZW50LnBvc2l0aW9uLnkgPCBpdGVtLnRhcmdldC5wYXJlbnQucG9zaXRpb24ueSl7XG5cdFx0XHRcdFx0XHRcdGxpc3QucHVzaCh7XG5cdFx0XHRcdFx0XHRcdFx0bGluZTogaXRlbS5saW5lLFxuXHRcdFx0XHRcdFx0XHRcdG5vZGU6IGl0ZW0udGFyZ2V0XG5cdFx0XHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdFx0XHRuZXdJZHMucHVzaChpdGVtLnRhcmdldC5pZCk7XG5cdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdGlmKGl0ZW0udGFyZ2V0LmlkID09PSBpZCAmJiBpdGVtLnRhcmdldC5wYXJlbnQucG9zaXRpb24ueSA8IGl0ZW0uc291cmNlLnBhcmVudC5wb3NpdGlvbi55KXtcblx0XHRcdFx0XHRcdFx0bGlzdC5wdXNoKHtcblx0XHRcdFx0XHRcdFx0XHRsaW5lOiBpdGVtLmxpbmUsXG5cdFx0XHRcdFx0XHRcdFx0bm9kZTogaXRlbS5zb3VyY2Vcblx0XHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0XHRcdG5ld0lkcy5wdXNoKGl0ZW0uc291cmNlLmlkKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0fSk7XG5cblx0XHRcdFx0aWYobmV3SWRzLmxlbmd0aCA+PSAxKXtcblx0XHRcdFx0XHRsb29wKG5ld0lkcyk7XG5cdFx0XHRcdH1cblx0XHRcdH07XG5cblx0XHRcdGxvb3AoW2lkXSk7XG5cblx0XHRcdHJldHVybiBsaXN0O1xuXHRcdH07XG5cblx0XHRVbml2ZXJzZS5wcm90b3R5cGUuZ2V0UmVsYXRpb25MaW5lQnlOb2RlSWQgPSBmdW5jdGlvbihpZCl7XG5cdFx0XHR2YXIgX3RoaXMgPSB0aGlzLCAgbGlzdCA9IFtdO1xuXG5cdFx0XHQkLmVhY2goX3RoaXMuZ2V0RG9ud0xpbmVCeU5vZGVJZChpZCksIGZ1bmN0aW9uKCl7XG5cdFx0XHRcdGxpc3QucHVzaCh0aGlzKTtcblx0XHRcdH0pO1xuXG5cdFx0XHQkLmVhY2goX3RoaXMuZ2V0VXBMaW5lQnlOb2RlSWQoaWQpLCBmdW5jdGlvbigpe1xuXHRcdFx0XHRsaXN0LnB1c2godGhpcyk7XG5cdFx0XHR9KTtcblxuXHRcdFx0cmV0dXJuIGxpc3Q7XG5cdFx0fTtcblxuXHRcdFVuaXZlcnNlLnByb3RvdHlwZS5nZXRSZWxhdGlvbkNpQnlOb2RlSWQgPSBmdW5jdGlvbihpZCl7XG5cdFx0XHR2YXIgX3RoaXMgPSB0aGlzLCBpZHMgPSBbXSwgY2lJZHMgPSBbXSwgY2hlY2sgPSB7fTtcblxuXHRcdFx0JC5lYWNoKF90aGlzLmFsbE5vZGVzLCBmdW5jdGlvbigpe1xuXHRcdFx0XHR2YXIgaXRlbSA9IHRoaXM7XG5cdFx0XHRcdGlmKGl0ZW0uaWQgPT09IGlkKXtcblx0XHRcdFx0XHRpZHMucHVzaChpdGVtLmlkKTtcblx0XHRcdFx0XHQkLmVhY2goX3RoaXMuZ2V0UmVsYXRpb25MaW5lQnlOb2RlSWQoaXRlbS5pZCksIGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFx0XHR2YXIgX2l0ZW0gPSB0aGlzO1xuXHRcdFx0XHRcdFx0aWRzLnB1c2goX2l0ZW0ubm9kZS5pZCk7XG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdH1cblx0XHRcdH0pO1xuXG5cdFx0XHQkLmVhY2goaWRzLCBmdW5jdGlvbigpe1xuXHRcdFx0XHR2YXIgaWQgPSB0aGlzO1xuXHRcdFx0XHQkLmVhY2goX3RoaXMuYWxsQ2lPYmosIGZ1bmN0aW9uKGtleSl7XG5cdFx0XHRcdFx0dmFyIGl0ZW0gPSB0aGlzLFxuXHRcdFx0XHRcdFx0Y2lJZCA9IGtleS5zcGxpdCgnXycpLnBvcCgpO1xuXHRcdFx0XHRcdGlmKGl0ZW0uaWQgPT09IGlkICYmICFjaGVja1tjaUlkXSl7XG5cdFx0XHRcdFx0XHRjaGVja1tjaUlkXSA9IHRydWU7XG5cdFx0XHRcdFx0XHRjaUlkcy5wdXNoKGNpSWQpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSk7XG5cdFx0XHR9KTtcblxuXHRcdFx0cmV0dXJuIGNpSWRzO1xuXHRcdH07XG5cblx0XHRVbml2ZXJzZS5wcm90b3R5cGUuaGlkZUxheWVyTGluZSA9IGZ1bmN0aW9uKCl7XG5cdFx0XHR2YXIgX3RoaXMgPSB0aGlzO1xuXG5cdFx0XHQkLmVhY2goX3RoaXMuYWxsTGluZU1lc2gsIGZ1bmN0aW9uKCl7XG5cdFx0XHRcdHZhciBfdGhpcyA9IHRoaXM7XG5cdFx0XHRcdF90aGlzLmxpbmUubWF0ZXJpYWwuY29sb3Iuc2V0SGV4KENvbnN0LldFQkdMX0xBWUVSX0xJTkVfQ09MT1IpO1xuXHRcdFx0XHRfdGhpcy5saW5lLnZpc2libGUgPSBmYWxzZTtcblx0XHRcdH0pO1xuXHRcdH07XG5cblx0XHRVbml2ZXJzZS5wcm90b3R5cGUuc2hvd0xheWVyTGluZSA9IGZ1bmN0aW9uKCl7XG5cdFx0XHR2YXIgX3RoaXMgPSB0aGlzO1xuXG5cdFx0XHRfdGhpcy5oaWRlTGF5ZXJMaW5lKCk7XG5cdFx0XHQkLmVhY2goX3RoaXMuYWxsTGluZU1lc2gsIGZ1bmN0aW9uKCl7XG5cdFx0XHRcdHZhciBfdGhpcyA9IHRoaXM7XG5cdFx0XHRcdF90aGlzLmxpbmUudmlzaWJsZSA9IHRydWU7XG5cdFx0XHR9KTtcblx0XHR9O1xuXG5cdFx0VW5pdmVyc2UucHJvdG90eXBlLmRyYXdMYXllckxpbmUgPSBmdW5jdGlvbiAoZGF0YSkge1xuXHRcdFx0dmFyIGZuMSwgaXRlbSwgc2VsZiwgX2ksIF9sZW4sIF9yZXN1bHRzO1xuXHRcdFx0c2VsZiA9IHRoaXM7XG5cdFx0XHRmbjEgPSBmdW5jdGlvbiAoaW5mbykge1xuXHRcdFx0XHR2YXIgbGluZSwgbGluZUdlb21ldHJ5LCBsaW5lTWF0ZXJpYWwsIHBvaW50cywgc291cmNlUG9zaXRpb24sIHRhcmdldFBvc2l0aW9uLCBhcnI7XG5cblx0XHRcdFx0YXJyID0gc2VsZi5nZXRTbm9kZUFuZFRub2RlQnlJZChpbmZvLnNvdXJjZSwgaW5mby50YXJnZXQpO1xuXG5cdFx0XHRcdCQuZWFjaChhcnIsIGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFx0dmFyIHNvdXJjZSwgdGFyZ2V0O1xuXG5cdFx0XHRcdFx0c291cmNlID0gdGhpcy5zb3VyY2U7XG5cdFx0XHRcdFx0dGFyZ2V0ID0gdGhpcy50YXJnZXQ7XG5cblx0XHRcdFx0XHRpZiAoc291cmNlICYmIHRhcmdldCkge1xuXHRcdFx0XHRcdFx0Ly9zb3VyY2VQb3NpdGlvbiA9IHNlbGYuZ2V0Tm9kZUFic29sdXRlUG9zaXRpb24oc291cmNlLmN1YmUpO1xuXHRcdFx0XHRcdFx0Ly90YXJnZXRQb3NpdGlvbiA9IHNlbGYuZ2V0Tm9kZUFic29sdXRlUG9zaXRpb24odGFyZ2V0LmN1YmUpO1xuXG5cdFx0XHRcdFx0XHRzb3VyY2UuY3ViZS5wYXJlbnQudXBkYXRlTWF0cml4V29ybGQoKTtcblx0XHRcdFx0XHRcdHNvdXJjZS5jdWJlLnVwZGF0ZU1hdHJpeFdvcmxkKCk7XG5cdFx0XHRcdFx0XHR0YXJnZXQuY3ViZS51cGRhdGVNYXRyaXhXb3JsZCgpO1xuXG5cdFx0XHRcdFx0XHRwb2ludHMgPSBbXG5cdFx0XHRcdFx0XHRcdChuZXcgVEhSRUUuVmVjdG9yMygpKS5zZXRGcm9tTWF0cml4UG9zaXRpb24oc291cmNlLmN1YmUubWF0cml4V29ybGQpLFxuXHRcdFx0XHRcdFx0XHQobmV3IFRIUkVFLlZlY3RvcjMoKSkuc2V0RnJvbU1hdHJpeFBvc2l0aW9uKHRhcmdldC5jdWJlLm1hdHJpeFdvcmxkKVxuXHRcdFx0XHRcdFx0XTtcblxuXHRcdFx0XHRcdFx0Ly9wb2ludHMgPSBzZWxmLmdldE5vZGVCZXR3ZWVuUG9pbnRzKHNvdXJjZVBvc2l0aW9uLCB0YXJnZXRQb3NpdGlvbik7XG5cblx0XHRcdFx0XHRcdGxpbmVHZW9tZXRyeSA9IG5ldyBUSFJFRS5HZW9tZXRyeSgpO1xuXHRcdFx0XHRcdFx0bGluZUdlb21ldHJ5LnZlcnRpY2VzID0gcG9pbnRzO1xuXHRcdFx0XHRcdFx0bGluZU1hdGVyaWFsID0gbmV3IFRIUkVFLkxpbmVCYXNpY01hdGVyaWFsKHtcblx0XHRcdFx0XHRcdFx0Y29sb3I6IENvbnN0LldFQkdMX0xBWUVSX0xJTkVfQ09MT1IsXG5cdFx0XHRcdFx0XHRcdGxpbmVjYXA6ICdyb3VuZCdcblx0XHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdFx0bGluZUdlb21ldHJ5LmNvbXB1dGVMaW5lRGlzdGFuY2VzKHBvaW50cyk7XG5cdFx0XHRcdFx0XHRsaW5lID0gbmV3IFRIUkVFLkxpbmUobGluZUdlb21ldHJ5LCBsaW5lTWF0ZXJpYWwpO1xuXHRcdFx0XHRcdFx0bGluZS52aXNpYmxlID0gZmFsc2U7XG5cdFx0XHRcdFx0XHQvL3NlbGYuY3JhdGVMaW5lQmFsbEFuaW1hdGlvbihwb2ludHMpO1xuXHRcdFx0XHRcdFx0c2VsZi5zY2VuZS5hZGQobGluZSk7XG5cdFx0XHRcdFx0XHRzZWxmLmFsbExpbmVNZXNoLnB1c2goe1xuXHRcdFx0XHRcdFx0XHRsaW5lOiBsaW5lLFxuXHRcdFx0XHRcdFx0XHRzb3VyY2U6IHNvdXJjZS5jdWJlLFxuXHRcdFx0XHRcdFx0XHR0YXJnZXQ6IHRhcmdldC5jdWJlXG5cdFx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0pO1xuXHRcdFx0fTtcblxuXHRcdFx0X3Jlc3VsdHMgPSBbXTtcblx0XHRcdGZvciAoX2kgPSAwLCBfbGVuID0gZGF0YS5sZW5ndGg7IF9pIDwgX2xlbjsgX2krKykge1xuXHRcdFx0XHRpdGVtID0gZGF0YVtfaV07XG5cdFx0XHRcdF9yZXN1bHRzLnB1c2goZm4xKGl0ZW0pKTtcblx0XHRcdH1cblx0XHRcdHJldHVybiBfcmVzdWx0cztcblx0XHR9O1xuXG5cdFx0Ly9Vbml2ZXJzZS5wcm90b3R5cGUuZ2V0Tm9kZVNpemUgPSBmdW5jdGlvbiAobWVzaCkge1xuXHRcdC8vXHR2YXIgYm94LCBzO1xuXHRcdC8vXHRib3ggPSBuZXcgVEhSRUUuQm94MygpLnNldEZyb21PYmplY3QobWVzaCk7XG5cdFx0Ly9cdHMgPSB7fTtcblx0XHQvL1x0cy54ID0gYm94Lm1heC54IC0gYm94Lm1pbi54O1xuXHRcdC8vXHRzLnkgPSBib3gubWF4LnkgLSBib3gubWluLnk7XG5cdFx0Ly9cdHMueiA9IGJveC5tYXgueiAtIGJveC5taW4uejtcblx0XHQvL1x0Ym94ID0gbnVsbDtcblx0XHQvL1x0cmV0dXJuIHM7XG5cdFx0Ly99O1xuXG5cdFx0cmV0dXJuIFVuaXZlcnNlO1xuXG5cdH0pO1xuXG5cbn0pKG5hbWVTcGFjZS5yZWcoJ2dyYXBoJykpO1xuXG4vKipcbiAqIENyZWF0ZWQgYnkgZ2Mgb24gMjAxNS84LzEyLlxuICovXG5cbihmdW5jdGlvbihncmFwaCl7XG5cbiAgICAndXNlIHN0cmljdCc7XG5cbiAgICBncmFwaC5hcHAuc2VydmljZSgnQXV0aFNlcnZpY2UnLCBbJyRodHRwJywgJ1VuaXQnLCBmdW5jdGlvbigkaHR0cCwgVW5pdCl7XG4gICAgICAgIHZhciBvID0ge307XG5cbiAgICAgICAgby5sb2dpbiA9IGZ1bmN0aW9uKHBhcmFtcykge1xuICAgICAgICAgICAgcmV0dXJuICRodHRwLnBvc3QoVW5pdC5hcGkoJy9sb2dpbicpLCBwYXJhbXMpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIG87XG4gICAgfV0pO1xuXG59KShuYW1lU3BhY2UucmVnKCdncmFwaCcpKTtcblxuXG4oZnVuY3Rpb24oZ3JhcGgpe1xuXG5cdCd1c2Ugc3RyaWN0JztcblxuXHRncmFwaC5hcHAuc2VydmljZSgnQ2lDYXRlU2VydmljZScsIFsnJGh0dHAnLCAnVW5pdCcsIGZ1bmN0aW9uKCRodHRwLCBVbml0KXtcblxuXHRcdHZhciBvID0ge307XG5cblx0XHQvLyDojrflj5bliIbnsbtcblx0XHRvLmdldCA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRyZXR1cm4gJGh0dHAuZ2V0KFVuaXQuYXBpKCcvY2ljYXRlJykpO1xuXHRcdH07XG5cblx0XHQvLyDliJvlu7rliIbnsbtcblx0XHRvLnNhdmUgPSBmdW5jdGlvbihkYXRhKXtcblx0XHRcdHJldHVybiAkaHR0cC5wb3N0KFVuaXQuYXBpKCcvY2ljYXRlJyksIGRhdGEpO1xuXHRcdH07XG5cblx0XHQvLyDkv67mlLnliIbnsbtcblx0XHRvLnVwZGF0ZSA9IGZ1bmN0aW9uKGlkLCBkYXRhKXtcblx0XHRcdHJldHVybiAkaHR0cC5wdXQoVW5pdC5hcGkoJy9jaWNhdGUvJyArIGlkKSwgZGF0YSk7XG5cdFx0fTtcblxuXHRcdC8vIOWIoOmZpOWIhuexu1xuXHRcdG8ucmVtb3ZlID0gZnVuY3Rpb24oaWQpe1xuXHRcdFx0cmV0dXJuICRodHRwLmRlbGV0ZShVbml0LmFwaSgnL2NpY2F0ZS8nICsgaWQpKTtcblx0XHR9O1xuXG5cdFx0cmV0dXJuIG87XG5cdH1dKTtcblxufSkobmFtZVNwYWNlLnJlZygnZ3JhcGgnKSk7XG5cblxuKGZ1bmN0aW9uKGdyYXBoKXtcblxuXHQndXNlIHN0cmljdCc7XG5cblx0Z3JhcGguYXBwLnNlcnZpY2UoJ0NpTW9uaXRvclNlcnZpY2UnLCBbJyRodHRwJywgJ1VuaXQnLCBmdW5jdGlvbigkaHR0cCwgVW5pdCl7XG5cblx0XHR2YXIgbyA9IHt9O1xuXG5cdFx0by5nZXRWaWV3ID0gZnVuY3Rpb24oaWQpe1xuXHRcdFx0cmV0dXJuICRodHRwLnBvc3QoVW5pdC5hcGkoJy92aWV3L2dldG1vbml0b3Jmb3J2aWV3JyksIHtcblx0XHRcdFx0aWQ6IGlkXG5cdFx0XHR9KTtcblx0XHR9O1xuXG5cdFx0by5nZXRDaSA9IGZ1bmN0aW9uKGlkLCB2aWV3aWQpe1xuXHRcdFx0cmV0dXJuICRodHRwLnBvc3QoVW5pdC5hcGkoJy92aWV3L2dldHdob2xlaW5mbycpLCB7XG5cdFx0XHRcdGlkOiBpZCxcblx0XHRcdFx0dmlld0lkOiB2aWV3aWRcblx0XHRcdH0pO1xuXHRcdH07XG5cblx0XHRyZXR1cm4gbztcblx0fV0pO1xuXG59KShuYW1lU3BhY2UucmVnKCdncmFwaCcpKTtcblxuXG4oZnVuY3Rpb24oZ3JhcGgpe1xuXG5cdCd1c2Ugc3RyaWN0JztcblxuXHRncmFwaC5hcHAuc2VydmljZSgnQ2lSZWxhdGlvblNlcnZpY2UnLCBbJyRodHRwJywgJ1VuaXQnLCBmdW5jdGlvbigkaHR0cCwgVW5pdCl7XG5cblx0XHR2YXIgbyA9IHt9O1xuXG5cdFx0by5nZXQgPSBmdW5jdGlvbihwYXJhbXMpe1xuXHRcdFx0cmV0dXJuICRodHRwLnBvc3QoVW5pdC5hcGkoJy9jaXJlbC9xdWVyeScpLCBwYXJhbXMpO1xuXHRcdH07XG5cblx0XHQvL28udXBsb2FkID0gZnVuY3Rpb24oZmlsZSl7XG5cdFx0Ly9cdHJldHVybiBVcGxvYWQudXBsb2FkKHtcblx0XHQvL1x0XHR1cmw6IHVybCgnL3ZpZXdpY29uL3NhdmUnKSxcblx0XHQvL1x0XHRmaWxlOiBmaWxlXG5cdFx0Ly9cdH0pO1xuXHRcdC8vfTtcblxuXHRcdG8uZ2V0Q2F0ZWdvcnkgPSBmdW5jdGlvbigpe1xuXHRcdFx0cmV0dXJuICRodHRwLmdldChVbml0LmFwaSgnL3JlbGNhdGUnKSk7XG5cdFx0fTtcblxuXHRcdHJldHVybiBvO1xuXHR9XSk7XG5cbn0pKG5hbWVTcGFjZS5yZWcoJ2dyYXBoJykpO1xuXG5cbihmdW5jdGlvbihncmFwaCl7XG5cblx0J3VzZSBzdHJpY3QnO1xuXG5cdGdyYXBoLmFwcC5zZXJ2aWNlKCdDaVNlcnZpY2UnLCBbJyRodHRwJywgJ1VuaXQnLCBmdW5jdGlvbigkaHR0cCwgVW5pdCl7XG5cblx0XHR2YXIgbyA9IHt9O1xuXG5cdFx0by5nZXQgPSBmdW5jdGlvbihwYXJhbXMpe1xuXHRcdFx0cGFyYW1zLmFsbCA9IHRydWU7XG5cdFx0XHRyZXR1cm4gJGh0dHAucG9zdChVbml0LmFwaSgnL2NpJyksIHBhcmFtcyk7XG5cdFx0fTtcblxuXHRcdG8uZ2V0Q2kgPSBmdW5jdGlvbihpZCl7XG5cdFx0XHRyZXR1cm4gJGh0dHAuZ2V0KFVuaXQuYXBpKCcvY2kvJyArIGlkKSk7XG5cdFx0fTtcblxuXHRcdG8uaWRzID0gZnVuY3Rpb24oaWRzKXtcblx0XHRcdHJldHVybiAkaHR0cC5wb3N0KFVuaXQuYXBpKCcvY2knKSwge2lkczogaWRzfSk7XG5cdFx0fTtcblxuXHRcdG8uZXhwYW5kID0gZnVuY3Rpb24ocGFyYW1zKXtcblx0XHRcdHJldHVybiAkaHR0cC5wb3N0KFVuaXQuYXBpKCcvY2lyZWwvcXVlcnknKSwgcGFyYW1zKTtcblx0XHR9O1xuXG5cdFx0cmV0dXJuIG87XG5cdH1dKTtcblxufSkobmFtZVNwYWNlLnJlZygnZ3JhcGgnKSk7XG5cblxuKGZ1bmN0aW9uKGdyYXBoKXtcblxuXHQndXNlIHN0cmljdCc7XG5cblx0Z3JhcGguYXBwLnNlcnZpY2UoJ0V4cG9ydFNlcnZpY2UnLCBmdW5jdGlvbigkaHR0cCwgVW5pdCl7XG5cblx0XHRyZXR1cm4ge1xuXG5cdFx0XHRleHBvcnRQZGY6IGZ1bmN0aW9uKHN2Zyl7XG5cdFx0XHRcdHJldHVybiAkaHR0cC5wb3N0KFVuaXQuYXBpKCcvdmlldy9leHBvcnRwZGYnKSwge3N2Zzogc3ZnfSk7XG5cdFx0XHR9LFxuXG5cdFx0XHRleHBvcnRQbmc6IGZ1bmN0aW9uKHN2Zyl7XG5cdFx0XHRcdHJldHVybiAkaHR0cC5wb3N0KFVuaXQuYXBpKCcvdmlldy9leHBvcnRwbmcnKSwge3N2Zzogc3ZnfSk7XG5cdFx0XHR9XG5cblx0XHR9O1xuXG5cdH0pO1xuXG59KShuYW1lU3BhY2UucmVnKCdncmFwaCcpKTtcblxuKGZ1bmN0aW9uKGdyYXBoKXtcblxuXHQndXNlIHN0cmljdCc7XG5cblx0Z3JhcGguYXBwLnNlcnZpY2UoJ0ZvbnRTZXJ2aWNlJywgZnVuY3Rpb24oJGh0dHAsIFVuaXQpe1xuXG5cblx0XHRyZXR1cm4ge1xuXG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKGxpc3Qpe1xuXHRcdFx0XHRyZXR1cm4gJGh0dHAucG9zdChVbml0LmFwaSgnL2ljb24vZm9udCcpLCB7Zm9udDogbGlzdH0pO1xuXHRcdFx0fVxuXG5cdFx0fTtcblxuXHR9KTtcblxufSkobmFtZVNwYWNlLnJlZygnZ3JhcGgnKSk7XG5cblxuKGZ1bmN0aW9uKGdyYXBoKXtcblxuXHQndXNlIHN0cmljdCc7XG5cblx0Z3JhcGguYXBwLnNlcnZpY2UoJ0dyb3VwU2VydmljZScsIFsnJGh0dHAnLCAnVW5pdCcsIGZ1bmN0aW9uKCRodHRwLCBVbml0KXtcblxuXHRcdHZhciBvID0ge307XG5cblx0XHRvLmdldCA9IGZ1bmN0aW9uKGlkKXtcblx0XHRcdGlmKGlkKXtcblx0XHRcdFx0cmV0dXJuICRodHRwLmdldChVbml0LmFwaSgnL3BvcnRmb2xpby8nICsgaWQpKTtcblx0XHRcdH1lbHNle1xuXHRcdFx0XHRyZXR1cm4gJGh0dHAuZ2V0KFVuaXQuYXBpKCcvcG9ydGZvbGlvJykpO1xuXHRcdFx0fVxuXHRcdH07XG5cblx0XHRvLnNhdmUgPWZ1bmN0aW9uKGRhdGEpe1xuXHRcdFx0cmV0dXJuICRodHRwLnBvc3QoVW5pdC5hcGkoJy9wb3J0Zm9saW8nKSxkYXRhKTtcblx0XHR9O1xuXHRcdG8udXBkYXRlID1mdW5jdGlvbihkYXRhKXtcblx0XHRcdHJldHVybiAkaHR0cC5wdXQoVW5pdC5hcGkoJy9wb3J0Zm9saW8nKSxkYXRhKTtcblx0XHR9O1xuXG5cdFx0by5kZWxldGUgPSBmdW5jdGlvbihpZCl7XG5cdFx0XHRpZihpZCl7XG5cdFx0XHRcdHJldHVybiAkaHR0cC5kZWxldGUoVW5pdC5hcGkoJy9wb3J0Zm9saW8vJyArIGlkKSk7XG5cdFx0XHR9XG5cdFx0fTtcblx0XHRvLnByaXZhdGUgPSBmdW5jdGlvbiAoKSB7XG5cdFx0XHRyZXR1cm4gJGh0dHAuZ2V0KFVuaXQuYXBpKCcvcG9ydGZvbGlvL3ByaXZhdGUnKSk7XG5cdFx0fTtcblxuXHRcdG8ucHVibGljID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRyZXR1cm4gJGh0dHAuZ2V0KFVuaXQuYXBpKCcvcG9ydGZvbGlvL3B1YmxpYycpKTtcblx0XHR9O1xuXG5cdFx0by5kZWxldGVCeUlkID0gZnVuY3Rpb24oaWQpIHtcblx0XHRcdHJldHVybiAkaHR0cC5kZWxldGUoVW5pdC5hcGkoJy9wb3J0Zm9saW8vJyArIGlkKSlcblx0XHR9O1xuXG5cdFx0by5jcmVhdGUgPSBmdW5jdGlvbihkYXRhKSB7XG5cdFx0XHRyZXR1cm4gJGh0dHAucG9zdChVbml0LmFwaSgnL3BvcnRmb2xpbycpLCBkYXRhKTtcblx0XHR9O1xuXG5cdFx0by5kZWxldGVQcml2YXRlT3JQdWJsaWMgPSBmdW5jdGlvbihpc1B1YmxpYykge1xuXHRcdFx0aWYgKGlzUHVibGljKSB7XG5cdFx0XHRcdHJldHVybiAkaHR0cC5kZWxldGUoVW5pdC5hcGkoJy9wb3J0Zm9saW8vcHVibGljJykpXG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRyZXR1cm4gJGh0dHAuZGVsZXRlKFVuaXQuYXBpKCcvcG9ydGZvbGlvL3ByaXZhdGUnKSk7XG5cdFx0XHR9XG5cdFx0fTtcblxuXHRcdHJldHVybiBvO1xuXHR9XSk7XG5cbn0pKG5hbWVTcGFjZS5yZWcoJ2dyYXBoJykpO1xuXG5cbihmdW5jdGlvbihncmFwaCl7XG5cblx0J3VzZSBzdHJpY3QnO1xuXG5cdGdyYXBoLmFwcC5zZXJ2aWNlKCdJY29uU2VydmljZScsIFsnJGh0dHAnLCAnVXBsb2FkJywgJ1VuaXQnLCBmdW5jdGlvbigkaHR0cCwgVXBsb2FkLCBVbml0KXtcblxuXHRcdHZhciBvID0ge307XG5cblx0XHRvLmdldCA9IGZ1bmN0aW9uKHBhcmFtcyl7XG5cdFx0XHRyZXR1cm4gJGh0dHAucG9zdChVbml0LmFwaSgnL3ZpZXdpY29uJyksIHBhcmFtcyk7XG5cdFx0fTtcblxuXHRcdG8udXBsb2FkID0gZnVuY3Rpb24oZmlsZSl7XG5cdFx0XHRyZXR1cm4gVXBsb2FkLnVwbG9hZCh7XG5cdFx0XHRcdHVybDogVW5pdC5hcGkoJy92aWV3aWNvbi9zYXZlJyksXG5cdFx0XHRcdGZpbGU6IGZpbGVcblx0XHRcdH0pO1xuXHRcdH07XG5cblx0XHRyZXR1cm4gbztcblx0fV0pO1xuXG59KShuYW1lU3BhY2UucmVnKCdncmFwaCcpKTtcblxuXG4oZnVuY3Rpb24oZ3JhcGgpe1xuXG5cdCd1c2Ugc3RyaWN0JztcblxuXHRncmFwaC5hcHAuc2VydmljZSgnSW1hZ2VTZXJ2aWNlJywgZnVuY3Rpb24oJGh0dHAsIFVuaXQsIFVwbG9hZCl7XG5cdFx0dmFyIG8gPSB7fTtcblxuXHRcdG8udXBsb2FkQmFja2dyb3VuZCA9IGZ1bmN0aW9uKGZpbGUpe1xuXHRcdFx0cmV0dXJuIFVwbG9hZC51cGxvYWQoe1xuXHRcdFx0XHR1cmw6IFVuaXQuYXBpKCcvdmlldy9iYWNrZ3JvdW5kJyksXG5cdFx0XHRcdGZpbGU6IGZpbGVcblx0XHRcdH0pO1xuXHRcdH07XG5cblx0XHRvLmdldEJhY2tnb3VuZCA9IGZ1bmN0aW9uKHBhcmFtcyl7XG5cdFx0XHRyZXR1cm4gJGh0dHAucG9zdChVbml0LmFwaSgnL3ZpZXcvZnV6enliYWNrZ3JvdW5kJyksIHBhcmFtcyk7XG5cdFx0fTtcblxuXG5cdFx0by5yZW1vdmVCYWNrZ3JvdW5kID0gZnVuY3Rpb24oaW1hZ2Upe1xuXHRcdFx0cmV0dXJuICRodHRwLmRlbGV0ZShVbml0LmFwaSgnL3ZpZXcvYmFja2dyb3VuZC8nICsgaW1hZ2UpKTtcblx0XHR9O1xuXG5cdFx0cmV0dXJuIG87XG5cdH0pO1xuXG59KShuYW1lU3BhY2UucmVnKCdncmFwaCcpKTtcblxuXG4oZnVuY3Rpb24oZ3JhcGgpe1xuXG5cdCd1c2Ugc3RyaWN0JztcblxuXHRncmFwaC5hcHAuc2VydmljZSgnTWVzaFNlcnZpY2UnLCBmdW5jdGlvbigkaHR0cCwgVW5pdCl7XG5cblx0XHRyZXR1cm4ge1xuXG5cdFx0XHRzdmdUb01lc2g6IGZ1bmN0aW9uKHBhdGhzKXtcblx0XHRcdFx0cmV0dXJuICRodHRwLnBvc3QoVW5pdC5hcGkoJy9pY29uLzNkcGF0aHNieXN2ZycpLCB7cGF0aHM6IHBhdGhzfSk7XG5cdFx0XHR9XG5cblx0XHR9O1xuXG5cdH0pO1xuXG59KShuYW1lU3BhY2UucmVnKCdncmFwaCcpKTtcblxuXG4oZnVuY3Rpb24oZ3JhcGgpe1xuXG5cdCd1c2Ugc3RyaWN0JztcblxuXHRncmFwaC5hcHAuc2VydmljZSgnT3RoZXJTZXJ2aWNlJywgZnVuY3Rpb24oJGh0dHAsIFVuaXQpe1xuXG5cdFx0cmV0dXJuIHtcblx0XHRcdGdldFN2Z1BhdGg6IGZ1bmN0aW9uKHRoZW1lKXtcblx0XHRcdFx0cmV0dXJuIHtcblx0XHRcdFx0XHRzdWNjZXNzOiBmdW5jdGlvbihmbil7XG5cdFx0XHRcdFx0XHRmbih7ZGF0YTogJ3Jlc291cmNlL3N2Zy9ibHVlJ30pO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fTtcblx0XHRcdH1cblx0XHR9O1xuXG5cdH0pO1xuXG59KShuYW1lU3BhY2UucmVnKCdncmFwaCcpKTtcblxuXG4oZnVuY3Rpb24oZ3JhcGgpe1xuXG5cdCd1c2Ugc3RyaWN0JztcblxuXHRncmFwaC5hcHAuc2VydmljZSgnU2VhcmNoU2VydmljZScsIFsnJGh0dHAnLCAnVW5pdCcsIGZ1bmN0aW9uKCRodHRwLCBVbml0KXtcblxuXHRcdHZhciBvID0ge307XG5cblx0XHRvLmZ1enp5ID0gZnVuY3Rpb24oa2V5V29yZCl7XG5cdFx0XHRyZXR1cm4gJGh0dHAucG9zdChVbml0LmFwaSgnL3ZpZXcvZnV6enlzZWFyY2gnKSwge1xuXHRcdFx0XHRrZXlXb3JkOiBrZXlXb3JkXG5cdFx0XHR9KTtcblx0XHR9O1xuXG5cdFx0cmV0dXJuIG87XG5cdH1dKTtcblxufSkobmFtZVNwYWNlLnJlZygnZ3JhcGgnKSk7XG5cblxuKGZ1bmN0aW9uKGdyYXBoKXtcblxuXHQndXNlIHN0cmljdCc7XG5cblx0Z3JhcGguYXBwLnNlcnZpY2UoJ1ZpZXdDYXRlU2VydmljZScsIFsnJGh0dHAnLCAnVW5pdCcsIGZ1bmN0aW9uKCRodHRwLCBVbml0KXtcblxuXHRcdHZhciBvID0ge307XG5cblx0XHRvLmdldCA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRyZXR1cm4gJGh0dHAuZ2V0KFVuaXQuYXBpKCcvdmlld2NhdGUnKSk7XG5cdFx0fTtcblxuXHRcdG8uZ2V0UHJpdmF0ZSA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRyZXR1cm4gJGh0dHAuZ2V0KFVuaXQuYXBpKCcvdmlld2NhdGUvcHJpdmF0ZScpKTtcblx0XHR9O1xuXG5cdFx0by5nZXRQdWJsaWMgPSBmdW5jdGlvbigpe1xuXHRcdFx0cmV0dXJuICRodHRwLmdldChVbml0LmFwaSgnL3ZpZXdjYXRlL3B1YmxpYycpKTtcblx0XHR9O1xuXG5cdFx0by5jcmVhdGUgPSBmdW5jdGlvbihkYXRhKXtcblx0XHRcdHJldHVybiAkaHR0cC5wb3N0KFVuaXQuYXBpKCcvdmlld2NhdGUnKSwgZGF0YSk7XG5cdFx0fTtcblxuXHRcdG8ucmVtb3ZlID0gZnVuY3Rpb24oaWQpe1xuXHRcdFx0cmV0dXJuICRodHRwLmRlbGV0ZShVbml0LmFwaSgnL3ZpZXdjYXRlLycgKyBpZCkpO1xuXHRcdH07XG5cblx0XHRvLnVwZGF0ZSA9IGZ1bmN0aW9uKGRhdGEpe1xuXHRcdFx0cmV0dXJuICRodHRwLnB1dChVbml0LmFwaSgnL3ZpZXdjYXRlJyksIGRhdGEpO1xuXHRcdH07XG5cblx0XHRyZXR1cm4gbztcblx0fV0pO1xuXG59KShuYW1lU3BhY2UucmVnKCdncmFwaCcpKTtcblxuXG4oZnVuY3Rpb24oZ3JhcGgpe1xuXG5cdCd1c2Ugc3RyaWN0JztcblxuXHRncmFwaC5hcHAuc2VydmljZSgnVmlld1NlcnZpY2UnLCBbJyRodHRwJywgJ1VuaXQnLCBmdW5jdGlvbigkaHR0cCwgVW5pdCl7XG5cblx0XHR2YXIgbyA9IHt9O1xuXG5cdFx0by5nZXQgPSBmdW5jdGlvbihwYXJhbXMpe1xuXHRcdFx0cmV0dXJuICRodHRwLnBvc3QoVW5pdC5hcGkoJy92aWV3JyksIHBhcmFtcyk7XG5cdFx0fTtcblxuXHRcdG8ucHJpdmF0ZSA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRyZXR1cm4gJGh0dHAuZ2V0KFVuaXQuYXBpKCcvdmlldy9wcml2YXRlJykpO1xuXHRcdH07XG5cblx0XHRvLnB1YmxpYyA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRyZXR1cm4gJGh0dHAuZ2V0KFVuaXQuYXBpKCcvdmlldy9wdWJsaWMnKSk7XG5cdFx0fTtcblxuXHRcdG8uZ2V0VmlldyA9IGZ1bmN0aW9uKGlkKXtcblx0XHRcdHJldHVybiAkaHR0cC5nZXQoVW5pdC5hcGkoJy92aWV3LycgKyBpZCkpO1xuXHRcdH07XG5cblx0XHRvLmNyZWF0ZSA9IGZ1bmN0aW9uKGRhdGEpe1xuXHRcdFx0cmV0dXJuICRodHRwLnBvc3QoVW5pdC5hcGkoJy92aWV3JyksIGRhdGEpO1xuXHRcdH07XG5cblx0XHRvLnVwZGF0ZSA9IGZ1bmN0aW9uKGRhdGEpe1xuXHRcdFx0cmV0dXJuICRodHRwLnB1dChVbml0LmFwaSgnL3ZpZXcnKSwgZGF0YSk7XG5cdFx0fTtcblxuXHRcdG8ucmVtb3ZlID0gZnVuY3Rpb24oaWQpe1xuXHRcdFx0cmV0dXJuICRodHRwLmRlbGV0ZShVbml0LmFwaSgnL3ZpZXcvJyArIGlkKSk7XG5cdFx0fTtcblxuXHRcdG8udXBsb2FkSW1hZ2UgPSBmdW5jdGlvbigpe1xuXG5cdFx0fTtcblxuXHRcdG8uZ2V0QnlJZHMgPSBmdW5jdGlvbihkYXRhKSB7XG5cdFx0XHRyZXR1cm4gJGh0dHAucG9zdChVbml0LmFwaSgnL3ZpZXcnKSwgZGF0YSk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIG87XG5cdH1dKTtcblxufSkobmFtZVNwYWNlLnJlZygnZ3JhcGgnKSk7XG5cblxuKGZ1bmN0aW9uKCl7XG5cblx0J3VzZSBzdHJpY3QnO1xuXG5cdHZhciBhcHAgPSBhbmd1bGFyLm1vZHVsZSgnZ3JhcGhUYWJsZScsIFtdKTtcblxuXHRhcHAuZmFjdG9yeSgnR3JhcGhUYWJsZScsIGZ1bmN0aW9uKFVuaXQsIENpU2VydmljZSwgJHJvb3RTY29wZSwgRXZlbnQpe1xuXHRcdHJldHVybiBmdW5jdGlvbihlZGl0b3Ipe1xuXG5cdFx0XHR0aGlzLnNob3dGbGFnID0gZmFsc2U7XG5cdFx0XHR0aGlzLmRhdGEgPSBbXTtcblxuXG5cdFx0XHR0aGlzLnNob3cgPSBmdW5jdGlvbigpe1xuXHRcdFx0XHR0aGlzLmdldERhdGEoKTtcblx0XHRcdFx0dGhpcy5zaG93RmxhZyA9IHRydWU7XG5cdFx0XHR9O1xuXG5cdFx0XHR0aGlzLmhpZGUgPSBmdW5jdGlvbigpe1xuXHRcdFx0XHR0aGlzLnNob3dGbGFnID0gZmFsc2U7XG5cdFx0XHR9O1xuXG5cdFx0XHR0aGlzLmZvcm1hdCA9IGZ1bmN0aW9uKGRhdGEpe1xuXHRcdFx0XHR2YXIgbWFwID0ge30sIF90aGlzID0gdGhpcztcblxuXHRcdFx0XHR2YXIgZ2V0SGVhZCA9IGZ1bmN0aW9uKG9iail7XG5cdFx0XHRcdFx0dmFyIGFyciA9IFtdO1xuXHRcdFx0XHRcdCQuZWFjaChvYmosIGZ1bmN0aW9uKGtleSl7XG5cdFx0XHRcdFx0XHRhcnIucHVzaCh7bGFiZWw6IGtleSwga2V5OiBrZXl9KTtcblx0XHRcdFx0XHR9KTtcblxuXHRcdFx0XHRcdGFyci5zb3J0KGZ1bmN0aW9uKGl0ZW0pe1xuXHRcdFx0XHRcdFx0cmV0dXJuIGl0ZW0ua2V5ID09PSAn5ZCN56ewJyA/IC0xIDogMTtcblx0XHRcdFx0XHR9KTtcblxuXHRcdFx0XHRcdHJldHVybiBhcnI7XG5cdFx0XHRcdH07XG5cblx0XHRcdFx0JC5lYWNoKGRhdGEsIGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFx0aWYoIW1hcFt0aGlzLmNhdGVnb3J5SWRdKXtcblx0XHRcdFx0XHRcdG1hcFt0aGlzLmNhdGVnb3J5SWRdID0ge1xuXHRcdFx0XHRcdFx0XHRuYW1lOiB0aGlzLmNhdGVnb3J5TmFtZSxcblx0XHRcdFx0XHRcdFx0aWQ6IHRoaXMuY2F0ZWdvcnlJZCxcblx0XHRcdFx0XHRcdFx0aGVhZDogZ2V0SGVhZCh0aGlzLmRhdGEpLFxuXHRcdFx0XHRcdFx0XHRyb3dzOiBbXVxuXHRcdFx0XHRcdFx0fTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvL3RoaXMuZGF0YS5fbmFtZSA9IHRoaXMubmFtZTtcblx0XHRcdFx0XHRtYXBbdGhpcy5jYXRlZ29yeUlkXS5yb3dzLnB1c2godGhpcy5kYXRhKTtcblx0XHRcdFx0fSk7XG5cblx0XHRcdFx0JC5lYWNoKG1hcCwgZnVuY3Rpb24oKXtcblx0XHRcdFx0XHRfdGhpcy5kYXRhLnB1c2godGhpcyk7XG5cdFx0XHRcdH0pO1xuXG5cdFx0XHRcdGNvbnNvbGUubG9nKF90aGlzLmRhdGEpO1xuXHRcdFx0fTtcblxuXHRcdFx0dGhpcy5nZXREYXRhID0gZnVuY3Rpb24oKXtcblx0XHRcdFx0dmFyIF90aGlzID0gdGhpcztcblxuXHRcdFx0XHRpZihlZGl0b3Ipe1xuXHRcdFx0XHRcdHRoaXMuaWRzID0gZWRpdG9yLmFjdGlvbi5nZXRDaXNJZCgpO1xuXHRcdFx0XHRcdGlmKHRoaXMuaWRzLmxlbmd0aCl7XG5cdFx0XHRcdFx0XHRDaVNlcnZpY2UuaWRzKHRoaXMuaWRzKVxuXHRcdFx0XHRcdFx0XHQuc3VjY2VzcyhmdW5jdGlvbihyZXN1bHQpe1xuXHRcdFx0XHRcdFx0XHRcdF90aGlzLmRhdGEuc3BsaWNlKDApO1xuXHRcdFx0XHRcdFx0XHRcdF90aGlzLmZvcm1hdChyZXN1bHQuZGF0YSk7XG5cdFx0XHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fTtcblxuXHRcdFx0aWYoZWRpdG9yKXtcblx0XHRcdFx0ZWRpdG9yLnRhYmxlID0gdGhpcztcblx0XHRcdH1cblxuXHRcdH07XG5cdH0pO1xuXG5cdGFwcC5jb250cm9sbGVyKCdEaXJlY3RpdmVHcmFwaFRhYmxlQ3RybCcsIGZ1bmN0aW9uKCRzY29wZSwgR3JhcGhUYWJsZSwgJHBhcnNlLCBFdmVudCwgQ2lTZXJ2aWNlLCBDaU1vbml0b3JTZXJ2aWNlLCBVbml0KXtcblxuXHRcdGlmKCEkc2NvcGUuaGFzT3duUHJvcGVydHkoJ3BhcmFtcycpKXtcblx0XHRcdCRzY29wZS5wYXJhbXMgPSBuZXcgR3JhcGhUYWJsZSgpO1xuXHRcdH1cblxuXHRcdHRoaXMuc2V0dXBCaW5kaW5nc1RvSW50ZXJuYWxTY29wZSA9IGZ1bmN0aW9uKGluZm9QYXJhbXNFeHByKXtcblx0XHRcdHZhciBpbmZvUGFyYW1zR2V0dGVyID0gJHBhcnNlKGluZm9QYXJhbXNFeHByKTtcblxuXHRcdFx0JHNjb3BlLiR3YXRjaChpbmZvUGFyYW1zR2V0dGVyLCAoZnVuY3Rpb24ocGFyYW1zKXtcblx0XHRcdFx0aWYoYW5ndWxhci5pc1VuZGVmaW5lZChwYXJhbXMpKXtcblx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQkc2NvcGUucGFyYW1zID0gcGFyYW1zO1xuXHRcdFx0fSksIGZhbHNlKTtcblx0XHR9O1xuXG5cblx0fSk7XG5cblx0YXBwLmRpcmVjdGl2ZSgnZ3JhcGhUYWJsZScsIFsnJHEnLCAnJHBhcnNlJywgZnVuY3Rpb24oKXtcblxuXHRcdHJldHVybiB7XG5cdFx0XHRyZXN0cmljdDogJ0EnLFxuXHRcdFx0cHJpb3JpdHk6IDEwMDEsXG5cdFx0XHR0cmFuc2NsdWRlOiB0cnVlLFxuXHRcdFx0c2NvcGU6IHRydWUsXG5cdFx0XHR0ZW1wbGF0ZVVybDogJ2FwcC9kaXJlY3RpdmUvZ3JhcGhUYWJsZS9ncmFwaFRhYmxlLmh0bWwnLFxuXHRcdFx0Y29udHJvbGxlcjogJ0RpcmVjdGl2ZUdyYXBoVGFibGVDdHJsJyxcblx0XHRcdGNvbXBpbGU6IGZ1bmN0aW9uKCl7XG5cdFx0XHRcdHJldHVybiBmdW5jdGlvbihzY29wZSwgZWxlbWVudCwgYXR0cnMsIGNvbnRyb2xsZXIpe1xuXHRcdFx0XHRcdGNvbnRyb2xsZXIuc2V0dXBCaW5kaW5nc1RvSW50ZXJuYWxTY29wZShhdHRycy5ncmFwaFRhYmxlKTtcblx0XHRcdFx0fTtcblx0XHRcdH1cblx0XHR9O1xuXG5cdH1dKTtcblxufSkobmFtZVNwYWNlLnJlZygnZ3JhcGgnKSwgbmFtZVNwYWNlLnJlZygnZ3JhcGgucGFnZScpKTtcblxuLyoqXG4gKiBDcmVhdGVkIGJ5IExlZSBvbiA3LzIxLzE1LlxuICovXG5cblxuKGZ1bmN0aW9uKGdyYXBoKXtcblxuXHQndXNlIHN0cmljdCc7XG5cblx0Z3JhcGguYXBwLmRpcmVjdGl2ZSgnbmdSZXBlYXREb25lJywgWyckdGltZW91dCcsIGZ1bmN0aW9uKCR0aW1lb3V0KSB7XG5cdFx0cmV0dXJuIGZ1bmN0aW9uKHNjb3BlLCBlbGVtZW50LCBhdHRycykge1xuXHRcdFx0aWYgKHNjb3BlLiRsYXN0KSB7XG5cdFx0XHRcdCR0aW1lb3V0KGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFx0c2NvcGUuJGV2YWwoYXR0cnMubmdSZXBlYXREb25lKTtcblx0XHRcdFx0fSk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XSk7XG5cblxufSkobmFtZVNwYWNlLnJlZygnZ3JhcGgnKSk7XG5cblxuKGZ1bmN0aW9uKGdyYXBoLCBzZWxmKXtcblxuXHQndXNlIHN0cmljdCc7XG5cblx0dmFyIGFwcCA9IGFuZ3VsYXIubW9kdWxlKCdncmFwaEluZm8nLCBbXSk7XG5cblx0YXBwLmZhY3RvcnkoJ0dyYXBoSW5mbycsIFsnVW5pdCcsICdDaVNlcnZpY2UnLCAnJHJvb3RTY29wZScsICdFdmVudCcsIGZ1bmN0aW9uKFVuaXQsIENpU2VydmljZSwgJHJvb3RTY29wZSwgRXZlbnQpe1xuXHRcdHJldHVybiBmdW5jdGlvbihlZGl0b3Ipe1xuXG5cdFx0XHR0aGlzLnNob3dGbGFnID0gZmFsc2U7XG5cblx0XHRcdHRoaXMudmlldyA9IGZ1bmN0aW9uKGRhdGEpe1xuXG5cdFx0XHRcdHRoaXMudHlwZSA9ICd2aWV3Jztcblx0XHRcdFx0dGhpcy5kYXRhID0gZGF0YTtcblxuXHRcdFx0XHR2YXIgZGVsZXRlSGFuZGxlID0gZnVuY3Rpb24oKXtcblx0XHRcdFx0XHQkcm9vdFNjb3BlLiRicm9hZGNhc3QoRXZlbnQuVklFV19ERUxFVEVfQkVGT1JFLCBVbml0LmV2ZW50RGF0YShkYXRhKSk7XG5cdFx0XHRcdH07XG5cblx0XHRcdFx0dmFyIGVkaXRIYW5kbGUgPSBmdW5jdGlvbigpe1xuXHRcdFx0XHRcdCRyb290U2NvcGUuJGJyb2FkY2FzdChFdmVudC5WSUVXX1VQREFURV9CRUZPUkUsIFVuaXQuZXZlbnREYXRhKGRhdGEpKTtcblx0XHRcdFx0fTtcblxuXHRcdFx0XHR0aGlzLm91dC50aXRsZSA9ICfop4blm77kv6Hmga8nO1xuXG5cdFx0XHRcdHRoaXMub3V0LmJ0bnMgPSBbXG5cdFx0XHRcdFx0eyBidG5DbGFzczogJ2J0bi1kYW5nZXInLCBsYWJlbDogJ+WIoOmZpCcsIGNsaWNrSGFuZGxlOiBkZWxldGVIYW5kbGUgfSxcblx0XHRcdFx0XHR7IGJ0bkNsYXNzOiAnYnRuLXByaW1hcnknLCBsYWJlbDogJ+abtOaWsCcsIGNsaWNrSGFuZGxlOiBlZGl0SGFuZGxlIH1cblx0XHRcdFx0XTtcblxuXHRcdFx0fTtcblxuXHRcdFx0dGhpcy5jaSA9IGZ1bmN0aW9uKGRhdGEpe1xuXHRcdFx0XHR2YXIgX3RoaXMgPSB0aGlzO1xuXG5cdFx0XHRcdF90aGlzLnR5cGUgPSAnY2knO1xuXHRcdFx0XHRfdGhpcy5kYXRhID0gZGF0YTtcblx0XHRcdFx0X3RoaXMub3V0LnRpdGxlID0gJ0NJ5L+h5oGvJztcblx0XHRcdFx0X3RoaXMub3V0LmJ0bnMgPSBbXG5cdFx0XHRcdFx0Ly97IGJ0bkNsYXNzOiAnYnRuLWRhbmdlcicsIGxhYmVsOiAn5Yig6ZmkJywgY2xpY2tIYW5kbGU6IGRlbGV0ZUhhbmRsZSB9LFxuXHRcdFx0XHRcdC8veyBidG5DbGFzczogJ2J0bi1wcmltYXJ5JywgbGFiZWw6ICfnvJbovpEnLCBjbGlja0hhbmRsZTogZnVuY3Rpb24oKXt9IH1cblx0XHRcdFx0XTtcblx0XHRcdH07XG5cblx0XHRcdHRoaXMudXBkYXRlID0gZnVuY3Rpb24odHlwZSwgZGF0YSl7XG5cdFx0XHRcdHRoaXMub3V0LnJvd3Muc3BsaWNlKDApO1xuXHRcdFx0XHR0aGlzLm91dC5idG5zID0gW107XG5cdFx0XHRcdHRoaXMub3V0LnRpdGxlID0gJyc7XG5cblx0XHRcdFx0aWYodGhpc1t0eXBlXSl7XG5cdFx0XHRcdFx0dGhpc1t0eXBlXShkYXRhKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHRoaXMuc2hvdygpO1xuXHRcdFx0XHQkcm9vdFNjb3BlLl9yZWZyZXNoKCk7XG5cdFx0XHR9O1xuXG5cdFx0XHR0aGlzLmN1c3RvbSA9IGZ1bmN0aW9uKG9iail7XG5cdFx0XHRcdHRoaXMub3V0ID0gb2JqO1xuXHRcdFx0fTtcblxuXHRcdFx0dGhpcy5oaWRlID0gZnVuY3Rpb24oKXtcblx0XHRcdFx0aWYodGhpcy5zaG93RmxhZyl7XG5cdFx0XHRcdFx0dGhpcy50b2dnbGUoKTtcblx0XHRcdFx0fVxuXHRcdFx0fTtcblxuXHRcdFx0dGhpcy5zaG93ID0gZnVuY3Rpb24oKXtcblx0XHRcdFx0aWYoIXRoaXMuc2hvd0ZsYWcpe1xuXHRcdFx0XHRcdHRoaXMudG9nZ2xlKCk7XG5cdFx0XHRcdH1cblx0XHRcdH07XG5cblx0XHRcdHRoaXMudG9nZ2xlID0gZnVuY3Rpb24oKXtcblx0XHRcdFx0dGhpcy5zaG93RmxhZyA9ICF0aGlzLnNob3dGbGFnO1xuXHRcdFx0XHQkcm9vdFNjb3BlLiRicm9hZGNhc3QoRXZlbnQuR1JBUEhfSU5GT19UT0dHTEUsIHRoaXMpO1xuXHRcdFx0fTtcblxuXHRcdFx0dGhpcy5vdXQgPSB7XG5cdFx0XHRcdHRpdGxlOiAnJyxcblx0XHRcdFx0cm93czogW10sXG5cdFx0XHRcdGJ0bnM6IFtdXG5cdFx0XHR9O1xuXG5cblx0XHRcdHRoaXMuZWRpdG9yID0gZWRpdG9yO1xuXHRcdH07XG5cdH1dKTtcblxuXHR2YXIgY29udHJvbGxlciA9IGZ1bmN0aW9uKCRzY29wZSwgR3JhcGhJbmZvLCAkcGFyc2UsIEV2ZW50LCBDaVNlcnZpY2UsIENpTW9uaXRvclNlcnZpY2UsIFVuaXQpe1xuXG5cdFx0aWYoISRzY29wZS5oYXNPd25Qcm9wZXJ0eSgncGFyYW1zJykpe1xuXHRcdFx0JHNjb3BlLnBhcmFtcyA9IG5ldyBHcmFwaEluZm8oKTtcblx0XHR9XG5cblx0XHR0aGlzLnNldHVwQmluZGluZ3NUb0ludGVybmFsU2NvcGUgPSBmdW5jdGlvbihpbmZvUGFyYW1zRXhwcil7XG5cdFx0XHR2YXIgaW5mb1BhcmFtc0dldHRlciA9ICRwYXJzZShpbmZvUGFyYW1zRXhwcik7XG5cblx0XHRcdCRzY29wZS4kd2F0Y2goaW5mb1BhcmFtc0dldHRlciwgKGZ1bmN0aW9uKHBhcmFtcyl7XG5cdFx0XHRcdGlmKGFuZ3VsYXIuaXNVbmRlZmluZWQocGFyYW1zKSl7XG5cdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0JHNjb3BlLnBhcmFtcyA9IHBhcmFtcztcblx0XHRcdH0pLCBmYWxzZSk7XG5cdFx0fTtcblxuXHRcdCRzY29wZS5jYWxsYXBzZSA9IHt9O1xuXG5cdFx0JHNjb3BlLmZvcm1hdEJvb2wgPSBmdW5jdGlvbihib29sKXtcblx0XHRcdHJldHVybiBib29sID8gJ+aYrycgOiAn5ZCmJztcblx0XHR9O1xuXG5cdFx0JHNjb3BlLmZvcm1hdERhdGUgPSBmdW5jdGlvbih1bml4KXtcblx0XHRcdHJldHVybiBVbml0LnVuaXhUb0RhdGV0aW1lKHVuaXgpLnN1YnN0cigwLCAxMCk7XG5cdFx0fTtcblxuXHRcdCRzY29wZS4kb24oRXZlbnQuR1JBUEhfQ0lfQ0VMTF9DTElDSywgZnVuY3Rpb24oZXZlbnQsIGRhdGEpe1xuXHRcdFx0aWYoJHNjb3BlLnBhcmFtcy5lZGl0b3Iuc3RhdGUudmlldyl7XG5cdFx0XHRcdENpTW9uaXRvclNlcnZpY2UuZ2V0Q2koZGF0YS5jZWxsLmRiaWQsICRzY29wZS5wYXJhbXMuZWRpdG9yLnN0YXRlLnZpZXcuaWQpXG5cdFx0XHRcdFx0LnN1Y2Nlc3MoZnVuY3Rpb24ocmVzdWx0KXtcblx0XHRcdFx0XHRcdCRzY29wZS5wYXJhbXMudXBkYXRlKCdjaScsIHJlc3VsdC5kYXRhKTtcblx0XHRcdFx0XHR9KTtcblx0XHRcdH1lbHNle1xuXHRcdFx0XHRDaVNlcnZpY2UuZ2V0Q2koZGF0YS5jZWxsLmRiaWQpXG5cdFx0XHRcdFx0LnN1Y2Nlc3MoZnVuY3Rpb24ocmVzdWx0KXtcblx0XHRcdFx0XHRcdCRzY29wZS5wYXJhbXMudXBkYXRlKCdjaScsIHtjb25maWc6IHJlc3VsdC5kYXRhfSk7XG5cdFx0XHRcdFx0fSk7XG5cdFx0XHR9XG5cblx0XHR9KTtcblx0fTtcblxuXHRhcHAuY29udHJvbGxlcignRGlyZWN0aXZlR3JhcGhJbmZvQ3RybCcsIFsnJHNjb3BlJywgJ0dyYXBoSW5mbycsICckcGFyc2UnLCAnRXZlbnQnLCAnQ2lTZXJ2aWNlJywgJ0NpTW9uaXRvclNlcnZpY2UnLCAnVW5pdCcsIGNvbnRyb2xsZXJdKTtcblxuXHRhcHAuZGlyZWN0aXZlKCdncmFwaEluZm8nLCBbJyRxJywgJyRwYXJzZScsIGZ1bmN0aW9uKCl7XG5cblx0XHRyZXR1cm4ge1xuXHRcdFx0cmVzdHJpY3Q6ICdBJyxcblx0XHRcdHByaW9yaXR5OiAxMDAxLFxuXHRcdFx0c2NvcGU6IHRydWUsXG5cdFx0XHR0ZW1wbGF0ZVVybDogJ2FwcC9kaXJlY3RpdmUvaW5mby9pbmZvLmh0bWwnLFxuXHRcdFx0Y29udHJvbGxlcjogJ0RpcmVjdGl2ZUdyYXBoSW5mb0N0cmwnLFxuXHRcdFx0Y29tcGlsZTogZnVuY3Rpb24oKXtcblx0XHRcdFx0cmV0dXJuIGZ1bmN0aW9uKHNjb3BlLCBlbGVtZW50LCBhdHRycywgY29udHJvbGxlcil7XG5cdFx0XHRcdFx0Y29udHJvbGxlci5zZXR1cEJpbmRpbmdzVG9JbnRlcm5hbFNjb3BlKGF0dHJzLmdyYXBoSW5mbyk7XG5cdFx0XHRcdH07XG5cdFx0XHR9XG5cdFx0fTtcblxuXHR9XSk7XG5cbn0pKG5hbWVTcGFjZS5yZWcoJ2dyYXBoJyksIG5hbWVTcGFjZS5yZWcoJ2dyYXBoLnBhZ2UnKSk7XG5cbi8qKlxuICogQ3JlYXRlZCBieSBMZWUgb24gNy8xOC8xNS5cbiAqL1xuKGZ1bmN0aW9uKGdyYXBoKXtcblxuXHQndXNlIHN0cmljdCc7XG5cblx0Z3JhcGguYXBwLmRpcmVjdGl2ZSgnbmdFbnRlcicsIGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBmdW5jdGlvbihzY29wZSwgZWxlbWVudCwgYXR0cnMpIHtcblx0XHRcdGVsZW1lbnQuYmluZCgna2V5ZG93biBrZXlwcmVzcycsIGZ1bmN0aW9uKGV2ZW50KSB7XG5cdFx0XHRcdGlmKGV2ZW50LndoaWNoID09PSAxMykge1xuXHRcdFx0XHRcdHNjb3BlLiRhcHBseShmdW5jdGlvbigpe1xuXHRcdFx0XHRcdFx0c2NvcGUuJGV2YWwoYXR0cnMubmdFbnRlciwgeydldmVudCc6IGV2ZW50fSk7XG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0ZXZlbnQucHJldmVudERlZmF1bHQoKTtcblx0XHRcdFx0fVxuXHRcdFx0fSk7XG5cdFx0fTtcblx0fSk7XG5cbn0pKG5hbWVTcGFjZS5yZWcoJ2dyYXBoJykpO1xuXG4vKipcbiAqIOa7muWKqOadoeaMh+S7pFxuICovXG4oZnVuY3Rpb24oZ3JhcGgpe1xuXG4gICAgJ3VzZSBzdHJpY3QnO1xuXG4gICAgZ3JhcGguYXBwLmRpcmVjdGl2ZSgnbmdTY3JvbGwnLCBmdW5jdGlvbigpIHtcblxuICAgICAgICB2YXIgb2JqID0ge307XG4gICAgICAgIHZhciBlbGVtZW50cyA9IFtdO1xuXG4gICAgICAgIHdpbmRvdy5zZXRJbnRlcnZhbChmdW5jdGlvbigpe1xuICAgICAgICAgICAgdmFyIGksIGVsZW1lbnQsIGl0ZW07XG4gICAgICAgICAgICBmb3IoaT0wOyBpPGVsZW1lbnRzLmxlbmd0aDsgaSsrKXtcbiAgICAgICAgICAgICAgICBlbGVtZW50ID0gZWxlbWVudHNbaV07XG4gICAgICAgICAgICAgICAgaXRlbSA9IG9ialtlbGVtZW50XTtcblxuICAgICAgICAgICAgICAgIGlmKGl0ZW0gJiYgKGVsZW1lbnQuc2Nyb2xsSGVpZ2h0ICE9PSBpdGVtLmxhc3RTY3JvbGxIZWlnaHQpKXtcbiAgICAgICAgICAgICAgICAgICAgaXRlbS5sYXN0U2Nyb2xsSGVpZ2h0ID0gZWxlbWVudC5zY3JvbGxIZWlnaHQ7XG4gICAgICAgICAgICAgICAgICAgIGl0ZW0ubGFzdENsaWVudEhlaWdodCA9IGVsZW1lbnQuY2xpZW50SGVpZ2h0O1xuICAgICAgICAgICAgICAgICAgICAvL2VsZW1lbnQuc2Nyb2xsVG9wID0gMTtcbiAgICAgICAgICAgICAgICAgICAgLy9lbGVtZW50LnNjcm9sbFRvcCA9IDA7XG4gICAgICAgICAgICAgICAgICAgIFBzLnVwZGF0ZShlbGVtZW50KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sIDIwMCk7XG5cbiAgICAgICAgLy9yZXR1cm4gZnVuY3Rpb24oc2NvcGUsIGVsZW1lbnQsIGF0dHJzKSB7XG4gICAgICAgIC8vICAgIGlmIChzY29wZS5zY3JvbGxBcnIgPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIC8vICAgICAgICBzY29wZS5zY3JvbGxBcnIgPSBbXTtcbiAgICAgICAgLy8gICAgICAgIHNjb3BlLnNjcm9sbEFyci5wdXNoKGVsZW1lbnRbMF0pO1xuICAgICAgICAvLyAgICB9IGVsc2UgaWYgKHNjb3BlLnNjcm9sbEFyci5pbmRleE9mKGVsZW1lbnRbMF0pIDw9IC0xKSB7XG4gICAgICAgIC8vICAgICAgICBzY29wZS5zY3JvbGxBcnIucHVzaChlbGVtZW50WzBdKTtcbiAgICAgICAgLy8gICAgfVxuICAgICAgICAvLyAgICBpZiAoYXR0cnMubmdTY3JvbGwgIT0gJycpIHtcbiAgICAgICAgLy8gICAgICAgIHZhciB4eSA9IGF0dHJzLm5nU2Nyb2xsLnNwbGl0KFwiLFwiKTtcbiAgICAgICAgLy8gICAgICAgIHZhciBzY3JvbGxYID0geHlbMF07XG4gICAgICAgIC8vICAgICAgICB2YXIgc2Nyb2xsWSA9IHh5WzFdO1xuICAgICAgICAvLyAgICAgICAgUHMuaW5pdGlhbGl6ZShlbGVtZW50WzBdLCB7XG4gICAgICAgIC8vICAgICAgICAgICAgc3VwcHJlc3NTY3JvbGxYOiBzY3JvbGxYID09PSAnZmFsc2UnID8gdHJ1ZTogZmFsc2UgLFxuICAgICAgICAvLyAgICAgICAgICAgIHN1cHByZXNzU2Nyb2xsWTogc2Nyb2xsWSA9PT0gJ2ZhbHNlJyA/IHRydWU6IGZhbHNlXG4gICAgICAgIC8vICAgICAgICB9KTtcbiAgICAgICAgLy8gICAgfSBlbHNlIHtcbiAgICAgICAgLy8gICAgICAgIFBzLmluaXRpYWxpemUoZWxlbWVudFswXSk7XG4gICAgICAgIC8vICAgIH1cbiAgICAgICAgLy8gICAgZWxlbWVudFswXS5zdHlsZS5vdmVyZmxvdyA9ICdoaWRkZW4nO1xuICAgICAgICAvL1xuICAgICAgICAvLyAgICBmb3IodmFyIGtleSBpbiBzY29wZS5zY3JvbGxBcnIpIHtcbiAgICAgICAgLy8gICAgICAgIHNjb3BlLmVsdCA9IHNjb3BlLnNjcm9sbEFycltrZXldO1xuICAgICAgICAvLyAgICAgICAgaWYoc2NvcGUuc2Nyb2xsQXJyLmhhc093blByb3BlcnR5KGtleSkpIHtcbiAgICAgICAgLy8gICAgICAgICAgICBzY29wZS4kd2F0Y2goZnVuY3Rpb24oKSB7XG4gICAgICAgIC8vICAgICAgICAgICAgICAgIHJldHVybiBzY29wZS5zY3JvbGxBcnJba2V5XS5zY3JvbGxIZWlnaHQ7XG4gICAgICAgIC8vICAgICAgICAgICAgfSwgZnVuY3Rpb24odmFsLCBvbGRWYWwpIHtcbiAgICAgICAgLy8gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJoZWlnaHQgaXMgY2hhbmdlXCIpO1xuICAgICAgICAvLyAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhzY29wZS5zY3JvbGxBcnJba2V5XSk7XG4gICAgICAgIC8vICAgICAgICAgICAgICAgICR0aW1lb3V0KGZ1bmN0aW9uKCl7XG4gICAgICAgIC8vICAgICAgICAgICAgICAgICAgICBzY29wZS5zY3JvbGxBcnJba2V5XS5zY3JvbGxUb3AgPSAxO1xuICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgc2NvcGUuc2Nyb2xsQXJyW2tleV0uc2Nyb2xsVG9wID0gMDtcbiAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgIFBzLnVwZGF0ZShzY29wZS5zY3JvbGxBcnJba2V5XSk7XG4gICAgICAgIC8vICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAvLyAgICAgICAgICAgIH0pO1xuICAgICAgICAvLyAgICAgICAgfVxuICAgICAgICAvLyAgICB9XG4gICAgICAgIC8vfTtcblxuXG4gICAgICAgIHJldHVybiBmdW5jdGlvbihzY29wZSwgZWxlbWVudCwgYXR0cnMpe1xuICAgICAgICAgICAgUHMuaW5pdGlhbGl6ZShlbGVtZW50WzBdKTtcbiAgICAgICAgICAgIGVsZW1lbnRzLnB1c2goZWxlbWVudFswXSk7XG4gICAgICAgICAgICBvYmpbZWxlbWVudFswXV0gPSB7XG4gICAgICAgICAgICAgICAgbGFzdFNjcm9sbEhlaWdodDogZWxlbWVudFswXS5zY3JvbGxIZWlnaHQsXG4gICAgICAgICAgICAgICAgbGFzdENsaWVudEhlaWdodDogZWxlbWVudFswXS5jbGllbnRIZWlnaHRcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIGlmIChhdHRycy5uZ1Njcm9sbCAhPSAnJykge1xuICAgICAgICAgICAgICAgIHZhciB4eSA9IGF0dHJzLm5nU2Nyb2xsLnNwbGl0KFwiLFwiKTtcbiAgICAgICAgICAgICAgICB2YXIgc2Nyb2xsWCA9IHh5WzBdO1xuICAgICAgICAgICAgICAgIHZhciBzY3JvbGxZID0geHlbMV07XG4gICAgICAgICAgICAgICAgUHMuaW5pdGlhbGl6ZShlbGVtZW50WzBdLCB7XG4gICAgICAgICAgICAgICAgICAgIHN1cHByZXNzU2Nyb2xsWDogc2Nyb2xsWCA9PT0gJ2ZhbHNlJyA/IHRydWU6IGZhbHNlICxcbiAgICAgICAgICAgICAgICAgICAgc3VwcHJlc3NTY3JvbGxZOiBzY3JvbGxZID09PSAnZmFsc2UnID8gdHJ1ZTogZmFsc2VcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgUHMuaW5pdGlhbGl6ZShlbGVtZW50WzBdKTtcbiAgICAgICAgICAgIH1cblxuXG4gICAgICAgICAgICAvL3ZhciBoYW5kbGUgPSBmdW5jdGlvbigpe1xuICAgICAgICAgICAgLy8gICAgY29uc29sZS5sb2coZWxlbWVudFswXS5zY3JvbGxIZWlnaHQpO1xuICAgICAgICAgICAgLy8gICAgJHRpbWVvdXQoZnVuY3Rpb24oKXtcbiAgICAgICAgICAgIC8vICAgICAgICBlbGVtZW50WzBdLnNjcm9sbFRvcCA9IDE7XG4gICAgICAgICAgICAvLyAgICAgICAgZWxlbWVudFswXS5zY3JvbGxUb3AgPSAwO1xuICAgICAgICAgICAgLy8gICAgICAgIFBzLnVwZGF0ZShlbGVtZW50WzBdKTtcbiAgICAgICAgICAgIC8vICAgIH0pO1xuICAgICAgICAgICAgLy99O1xuXG4gICAgICAgICAgICAvL3Njb3BlLiR3YXRjaChmdW5jdGlvbigpe1xuICAgICAgICAgICAgLy8gICAgcmV0dXJuIGVsZW1lbnRbMF0uc2Nyb2xsSGVpZ2h0O1xuICAgICAgICAgICAgLy99LCBoYW5kbGUpO1xuICAgICAgICAgICAgLy9cbiAgICAgICAgICAgIC8vc2NvcGUuJHdhdGNoKGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICAvLyAgICByZXR1cm4gZWxlbWVudFswXS5jbGllbnRIZWlnaHQ7XG4gICAgICAgICAgICAvL30sIGhhbmRsZSk7XG4gICAgICAgIH07XG4gICAgfSk7XG5cblxufSkobmFtZVNwYWNlLnJlZygnZ3JhcGgnKSk7XG5cbihmdW5jdGlvbihncmFwaCl7XG5cblx0J3VzZSBzdHJpY3QnO1xuXHRncmFwaC5hcHAuZmFjdG9yeSgndGltZUxpbmUnLGZ1bmN0aW9uKCl7XG5cdFx0dmFyIHRpbWVMaW5lID0gZnVuY3Rpb24gKGVsZW1lbnQsZGF0YSxvcHRpb25zKXtcblx0XHRcdHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG5cdFx0XHR0aGlzLmRhdGEgPSBkYXRhO1xuXHRcdFx0dGhpcy5lbGVtID0gJCgnLnRpbWVMaW5lLWxpbmUnKTtcblx0XHRcdHRoaXMuZ2V0RG90RGF0YSA9IGZ1bmN0aW9uKGNoYW5nZURhdGEpe1xuXHRcdFx0XHRpZihjaGFuZ2VEYXRhKXtcblx0XHRcdFx0XHR0aGlzLmRhdGEgPSBjaGFuZ2VEYXRhO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHZhciBkYXRhID0gW107XG5cdFx0XHRcdGlmKCF0aGlzLm9wdGlvbnMpe1xuXHRcdFx0XHRcdHRoaXMub3B0aW9ucz17fVxuXHRcdFx0XHR9ZWxzZXtcblx0XHRcdFx0XHRpZih0aGlzLm9wdGlvbnMuZW5kVGltZSAmJiB0aGlzLm9wdGlvbnMuc3RhcnRUaW1lKXtcblx0XHRcdFx0XHRcdHZhciBkPW5ldyBEYXRlKCk7XG5cdFx0XHRcdFx0XHR2YXIgc0U9bmV3IERhdGUoZC5nZXRNb250aCgpKzErXCIgXCIrIGQuZ2V0RGF5KCkrXCIsXCIrIGQuZ2V0RnVsbFllYXIoKSArJyAnK29wdGlvbnMuZW5kVGltZStcIjowXCIpLmdldFRpbWUoKTtcblx0XHRcdFx0XHRcdHZhciBzVD1uZXcgRGF0ZShkLmdldE1vbnRoKCkrMStcIiBcIisgZC5nZXREYXkoKStcIixcIisgZC5nZXRGdWxsWWVhcigpICsnICcrb3B0aW9ucy5zdGFydFRpbWUrXCI6MFwiKS5nZXRUaW1lKCk7XG5cdFx0XHRcdFx0XHR0aGlzLm9wdGlvbnMuZW5kVGltZSA9IHNFO1xuXHRcdFx0XHRcdFx0dGhpcy5vcHRpb25zLnN0YXJ0VGltZSA9IHNUO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0XHR2YXIgb3B0PXtcblx0XHRcdFx0XHR0aWNrIDogdGhpcy5vcHRpb25zLnRpY2sgfHwgMTAsXG5cdFx0XHRcdFx0c2hvd1BsYWNlIDogdGhpcy5vcHRpb25zLnNob3dQbGFjZSB8fCBcImJvdHRvbVwiLFxuXHRcdFx0XHRcdGRhdGFTaG93IDp0aGlzLm9wdGlvbnMuZGF0YVNob3cgfHwgZmFsc2UsXG5cdFx0XHRcdFx0ZW5kVGltZSA6dGhpcy5vcHRpb25zLmVuZFRpbWUgfHwgbmV3IERhdGUoKS5nZXRUaW1lKCksXG5cdFx0XHRcdFx0c3RhcnRUaW1lIDogdGhpcy5vcHRpb25zLnN0YXJ0VGltZSB8fCBuZXcgRGF0ZSgpLmdldFRpbWUoKS03MjAwMDAwXG5cdFx0XHRcdH07XG5cdFx0XHRcdHZhciB0aW1lVmFsdWUgPSBudWxsO1xuXHRcdFx0XHRpZiAob3B0LmVuZFRpbWUgPiBvcHQuc3RhcnRUaW1lKSB7XG5cdFx0XHRcdFx0dGltZVZhbHVlID0gb3B0LmVuZFRpbWUgLSBvcHQuc3RhcnRUaW1lO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGFsZXJ0KFwi57uT5p2f5pe26Ze05LiO5byA5aeL5pe26Ze05aGr5YWl6ZSZ6K+v77yM6K+36YeN5paw5aGr5YaZXCIpO1xuXHRcdFx0XHRcdHRpbWVWYWx1ZSA9IDcyMDAwMDA7XG5cdFx0XHRcdH1cblx0XHRcdFx0b3B0LnRpY2sgPSBNYXRoLnJvdW5kKHRoaXMuZWxlbS53aWR0aCgpLzEwMCk7XG5cdFx0XHRcdHZhciB0aW1lQXZlcmFnZSA9IHRpbWVWYWx1ZSAvIChvcHQudGljayAtIDEpO1xuXG5cdFx0XHRcdC8v5b6q546vb3B05pWw5o2u55Sf5oiQRE9N6IqC54K55pe26Ze06L20XG5cdFx0XHRcdGZvciAodmFyIGkgPSBvcHQudGljayAtIDE7IGkgPj0gMDsgaS0tKSB7XG5cdFx0XHRcdFx0dmFyIHRlbXBPYmogPSB7fTtcblx0XHRcdFx0XHQvL+iuoeeul2RvdOS9jee9rlxuXHRcdFx0XHRcdHRlbXBPYmouZG90TGVmdD0odGhpcy5lbGVtLndpZHRoKCkgLyAob3B0LnRpY2sgLSAxKSkgKiAob3B0LnRpY2sgLSAxIC0gaSkgKyAncHgnO1xuXHRcdFx0XHRcdC8v6K6h566X5pWw5a2X5pe26Ze05L2N572uXG5cdFx0XHRcdFx0dGVtcE9iai50aXRsZUxlZnQgPSh0aGlzLmVsZW0ud2lkdGgoKSAvIChvcHQudGljayAtIDEpKSAqIChvcHQudGljayAtIDEgLSBpKSAtIDEwICsgJ3B4JztcblxuXHRcdFx0XHRcdHZhciBkID0gb3B0LmVuZFRpbWU7XG5cdFx0XHRcdFx0dmFyIHMgPSBuZXcgRGF0ZShkIC0gdGltZUF2ZXJhZ2UgKiBpKTtcblx0XHRcdFx0XHR2YXIgbSA9IHMuZ2V0TWludXRlcygpO1xuXHRcdFx0XHRcdGlmIChtIDwgMTApIHtcblx0XHRcdFx0XHRcdG0gPSBcIjBcIiArIG07XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHRlbXBPYmoudGl0bGUgPSBzLmdldEhvdXJzKCkgKyAnOicgKyBtO1xuXHRcdFx0XHRcdGZvcih2YXIgaj0wO2o8dGhpcy5kYXRhLmxlbmd0aDtqKyspe1xuXHRcdFx0XHRcdFx0aWYodGVtcE9iai50aXRsZT09PXRoaXMuZGF0YVtqXS50aW1lKXtcblx0XHRcdFx0XHRcdFx0dGVtcE9iai5sZXZlbD10aGlzLmRhdGFbal0ubGV2ZWw7XG5cdFx0XHRcdFx0XHRcdHRlbXBPYmouZGF0YUlkPXRoaXMuZGF0YVtqXS5pZDtcblx0XHRcdFx0XHRcdFx0dGVtcE9iai5ldmVudD10aGlzLmRhdGFbal0uZXZlbnQ7XG5cdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRkYXRhLnB1c2godGVtcE9iaik7XG5cdFx0XHRcdH1cblx0XHRcdFx0cmV0dXJuIGRhdGE7XG5cdFx0XHR9O1xuXHRcdFx0dGhpcy5zZXRUaW1lID0gZnVuY3Rpb24oKXtcblx0XHRcdFx0dGhpcy5nZXREb3REYXRhKCk7XG5cdFx0XHR9O1xuXHRcdH07XG5cdFx0cmV0dXJuIHRpbWVMaW5lO1xuXHR9KTtcblx0Z3JhcGguYXBwLmRpcmVjdGl2ZSgnbXlMaW5lJyxbJyRpbnRlcnZhbCcsJ3RpbWVMaW5lJyxmdW5jdGlvbigkaW50ZXJ2YWwsdGltZUxpbmUpe1xuXHRcdHJldHVybiB7XG5cdFx0XHRyZXN0cmljdDonQScsXG5cdFx0XHRyZXBsYWNlIDogdHJ1ZSxcblx0XHRcdHNjb3BlIDp7XG5cdFx0XHRcdG15SWQgOiAnQCcsXG5cdFx0XHRcdG15RGF0YSA6Jz0nLFxuXHRcdFx0XHRteU9wdGlvbnM6Jz0nXG5cdFx0XHR9LFxuXHRcdFx0bGluazpmdW5jdGlvbihzY29wZSxlbGVtZW50KXtcblx0XHRcdFx0c2NvcGUucG9pbnQ9bmV3IHRpbWVMaW5lKGVsZW1lbnQsc2NvcGUubXlEYXRhKTtcblx0XHRcdFx0c2NvcGUuaW5pdERhdGEgPSBzY29wZS5wb2ludC5nZXREb3REYXRhKHNjb3BlLm15RGF0YSk7XG5cdFx0XHRcdHNjb3BlLnRpbWUgPSB7fTtcblx0XHRcdFx0JGludGVydmFsKGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFx0c2NvcGUudGltZS5ub3cgPSBuZXcgRGF0ZSgpO1xuXHRcdFx0XHR9LDYwMDAwKTtcblx0XHRcdFx0c2NvcGUuJHdhdGNoKCd0aW1lLm5vdycsZnVuY3Rpb24oKXtcblx0XHRcdFx0XHRzY29wZS5pbml0RGF0YSA9IHNjb3BlLnBvaW50LmdldERvdERhdGEoc2NvcGUubXlEYXRhKTtcblx0XHRcdFx0fSk7XG5cdFx0XHR9LFxuXHRcdFx0dGVtcGxhdGVVcmwgOiAndGVtcC5odG1sJ1xuXHRcdH07XG5cdH1dKTtcblxufSkobmFtZVNwYWNlLnJlZygnZ3JhcGgnKSk7XG5cblxuKGZ1bmN0aW9uKGdyYXBoKXtcblxuXHQndXNlIHN0cmljdCc7XG5cblx0dmFyIGxhYmVsTWFwID0ge1xuXHRcdHNhdmU6ICfkv53lrZgv5Y+m5a2Y5Li6Jyxcblx0XHRyZWZyZXNoOiAn5pu05pawJyxcblx0XHRzZWFyY2g6ICfpgILlupTnlLvluIMnLFxuXHRcdHpvb21PdXQ6ICfnvKnlsI8nLFxuXHRcdHpvb21JbjogJ+aUvuWkpycsXG5cdFx0b3JkZXJVcDogJ+e9ruWJjScsXG5cdFx0b3JkZXJEb3duOiAn572u5ZCOJyxcblx0XHRhbGlnbkV4cGFuZDogJ+Wvuem9kCcsXG5cdFx0dW5kbzogJ+aSpOmUgCcsXG5cdFx0cmVkbzogJ+mHjeWBmicsXG5cdFx0dHJhc2g6ICfnp7vpmaTpgInkuK3lr7nosaEnLFxuXHRcdGxpbms6ICforr7nva7pk77mjqUnLFxuXHRcdHBhaW50OiAn5aGr5YWF6aKc6ImyJyxcblx0XHRib3JkZXI6ICfovrnmoYbpopzoibInLFxuXHRcdHNoYWRvdzogJ+mYtOW9sScsXG5cdFx0Zm9udEV4cGFuZDogJ+aWh+acrOagt+W8jycsXG5cdFx0bGluZUV4cGFuZDogJ+WFs+ezu+e6v+agt+W8jycsXG5cdFx0Z3JpZDogJ+W8gOWQry/npoHmraIg55S75biD6KGo5qC8Jyxcblx0XHRhc3Npc3RMaW5lOiAn5byA5ZCvL+emgeatoiDovoXliqnnur8nLFxuXHRcdGltYWdlRXhwYW5kOiAn55S75biD6IOM5pmv5Zu+Jyxcblx0XHRwZW5FeHBhbmQ6ICfmoIfms6gnLFxuXHRcdGF1dG9MYXlvdXQ6ICflvIDlkK8v56aB5q2iIOiHquWKqOW4g+WxgCcsXG5cdFx0YXV0b0xpbmU6ICflvIDlkK8v56aB5q2iIOiHquWKqOi/nue6vycsXG5cdFx0c2VhcmNoRXhwYW5kOiAn5pCc57SiJyxcblx0XHR0YWJsZUV4cGFuZDogJ+aYvuekuuaooeW8jycsXG5cdFx0aW1hZ2U6ICfkuIrkvKDog4zmma/lm77niYcnLFxuXHRcdG5vaW1hZ2U6ICfmuIXpmaTog4zmma/lm77niYcnLFxuXHRcdHBlbjogJ+agh+azqENJJyxcblx0XHRub3BlbjogJ+a4hemZpENJ5qCH5rOoJyxcblx0XHRuZXdGaWxlOiAn5paw5bu655S75biDJyxcblx0XHRmb2xkZXI6ICfmiZPlvIDop4blm74nXG5cdH07XG5cblxuXHR2YXIgQWN0aW9uID0gZnVuY3Rpb24oZWRpdG9yKXtcblxuXHRcdHZhciBhYyA9IGVkaXRvci5hY3Rpb247XG5cblx0XHR0aGlzLmltYWdlID0gZnVuY3Rpb24oKXtcblx0XHRcdGFjLmJhY2tncm91bmRJbWFnZSgpO1xuXHRcdH07XG5cblx0XHR0aGlzLm5vaW1hZ2UgPSBmdW5jdGlvbigpe1xuXHRcdFx0YWMuY2xlYXJCYWNrZ3JvdW5kSW1hZ2UoKTtcblx0XHR9O1xuXG5cdFx0dGhpcy5ncmlkID0gZnVuY3Rpb24oKXtcblx0XHRcdGFjLmdyaWQoKTtcblx0XHR9O1xuXG5cdFx0dGhpcy5hc3Npc3RMaW5lID0gZnVuY3Rpb24oKXtcblx0XHRcdGFjLmFzc2lzdExpbmUoKTtcblx0XHR9O1xuXG5cdFx0dGhpcy5zYXZlID0gZnVuY3Rpb24oKXtcblx0XHRcdGFjLnNhdmUoKTtcblx0XHR9O1xuXG5cdFx0dGhpcy5yZWZyZXNoID0gZnVuY3Rpb24oKXtcblx0XHRcdGFjLnVwZGF0ZSgpO1xuXHRcdH07XG5cblx0XHR0aGlzLm5ld0ZpbGUgPSBmdW5jdGlvbigpe1xuXHRcdFx0YWMuY3JlYXRlKCk7XG5cdFx0fTtcblxuXHRcdHRoaXMuZm9sZGVyID0gZnVuY3Rpb24oKXtcblx0XHRcdGFjLm9wZW4oKTtcblx0XHR9O1xuXG5cdFx0dGhpcy5zaGFkb3cgPSBmdW5jdGlvbigpe1xuXHRcdFx0YWMuc2hvYWRvdygpO1xuXHRcdH07XG5cblx0XHR0aGlzLmxpbmsgPSBmdW5jdGlvbigpe1xuXHRcdFx0YWMubGlua0VkaXQoKTtcblx0XHR9O1xuXG5cdFx0dGhpcy56b29tT3V0ID0gZnVuY3Rpb24oKXtcblx0XHRcdGFjLnpvb21PdXQoKTtcblx0XHR9O1xuXG5cdFx0dGhpcy56b29tSW4gPSBmdW5jdGlvbigpe1xuXHRcdFx0YWMuem9vbUluKCk7XG5cdFx0fTtcblxuXHRcdHRoaXMuc2VhcmNoID0gZnVuY3Rpb24oKXtcblx0XHRcdGFjLnpvb21DZW50ZXIoKTtcblx0XHR9O1xuXG5cdFx0dGhpcy5vcmRlclVwID0gZnVuY3Rpb24oKXtcblx0XHRcdGFjLm9yZGVyVXAoKTtcblx0XHR9O1xuXG5cdFx0dGhpcy5vcmRlckRvd24gPSBmdW5jdGlvbigpe1xuXHRcdFx0YWMub3JkZXJEb3duKCk7XG5cdFx0fTtcblxuXHRcdHRoaXMucmVkbyA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRhYy5yZWRvKCk7XG5cdFx0fTtcblxuXHRcdHRoaXMudW5kbyA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRhYy51bmRvKCk7XG5cdFx0fTtcblxuXHRcdHRoaXMuYWxpZ25MZWZ0ID0gZnVuY3Rpb24oKXtcblx0XHRcdGFjLmFsaWduQ2VsbHMobXhDb25zdGFudHMuQUxJR05fTEVGVCk7XG5cdFx0fTtcblxuXHRcdHRoaXMuYWxpZ25DZW50ZXIgPSBmdW5jdGlvbigpe1xuXHRcdFx0YWMuYWxpZ25DZWxscyhteENvbnN0YW50cy5BTElHTl9DRU5URVIpO1xuXHRcdH07XG5cblx0XHR0aGlzLmFsaWduUmlnaHQgPSBmdW5jdGlvbigpe1xuXHRcdFx0YWMuYWxpZ25DZWxscyhteENvbnN0YW50cy5BTElHTl9SSUdIVCk7XG5cdFx0fTtcblxuXHRcdHRoaXMuYWxpZ25Ub3AgPSBmdW5jdGlvbigpe1xuXHRcdFx0YWMuYWxpZ25DZWxscyhteENvbnN0YW50cy5BTElHTl9UT1ApO1xuXHRcdH07XG5cblx0XHR0aGlzLmFsaWduTWlkZGxlID0gZnVuY3Rpb24oKXtcblx0XHRcdGFjLmFsaWduQ2VsbHMobXhDb25zdGFudHMuQUxJR05fTUlERExFKTtcblx0XHR9O1xuXG5cdFx0dGhpcy5hbGlnbkJvdHRvbSA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRhYy5hbGlnbkNlbGxzKG14Q29uc3RhbnRzLkFMSUdOX0JPVFRPTSk7XG5cdFx0fTtcblxuXHRcdHRoaXMuYWxpZ25EaXN0cmlidXRlSG9yaXpvbnRhbCA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRhYy5hbGlnbkRpc3RyaWJ1dGUodHJ1ZSk7XG5cdFx0fTtcblxuXHRcdHRoaXMuYWxpZ25EaXN0cmlidXRlVmVydGljYWwgPSBmdW5jdGlvbigpe1xuXHRcdFx0YWMuYWxpZ25EaXN0cmlidXRlKGZhbHNlKTtcblx0XHR9O1xuXG5cdFx0dGhpcy5saW5lU3RyYWlnaHQgPSBmdW5jdGlvbigpe1xuXHRcdFx0YWMuZWRnZUNsZWFyU3R5bGUoKTtcblx0XHR9O1xuXG5cdFx0dGhpcy5saW5lRW50aXR5UmVsYXRpb24gPSBmdW5jdGlvbigpe1xuXHRcdFx0YWMuZWRnZVN0eWxlKCdlbnRpdHlSZWxhdGlvbkVkZ2VTdHlsZScpO1xuXHRcdH07XG5cblx0XHR0aGlzLmxpbmVFbGJvd0hvcml6b250YWwgPSBmdW5jdGlvbigpe1xuXHRcdFx0YWMuZWRnZVN0eWxlKCdlbGJvd0hvcml6b250YWwnKTtcblx0XHR9O1xuXG5cdFx0dGhpcy5saW5lRWxib3dWZXJ0aWNhbCA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRhYy5lZGdlU3R5bGUoJ2VsYm93VmVydGljYWwnKTtcblx0XHR9O1xuXG5cdFx0dGhpcy5saW5lU2VnbWVudCA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRhYy5lZGdlU3R5bGUoJ3NlZ21lbnRFZGdlU3R5bGUnKTtcblx0XHR9O1xuXG5cdFx0dGhpcy5saW5lT3J0aG9nb25hbCA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRhYy5lZGdlU3R5bGUoJ29ydGhvZ29uYWxFZGdlU3R5bGUnKTtcblx0XHR9O1xuXG5cdFx0dGhpcy5zdGFydE5vYXJyb3cgPSBmdW5jdGlvbigpe1xuXHRcdFx0YWMuc3RhcnRBcnJvdyhteENvbnN0YW50cy5OT05FKTtcblx0XHR9O1xuXG5cdFx0dGhpcy5zdGFydENsYXNzaWMgPSBmdW5jdGlvbigpe1xuXHRcdFx0YWMuc3RhcnRBcnJvd0ZpbGwobXhDb25zdGFudHMuQVJST1dfQ0xBU1NJQyk7XG5cdFx0fTtcblxuXHRcdHRoaXMuc3RhcnRPcGVuID0gZnVuY3Rpb24oKXtcblx0XHRcdGFjLnN0YXJ0QXJyb3dGaWxsKG14Q29uc3RhbnRzLkFSUk9XX09QRU4pO1xuXHRcdH07XG5cblx0XHR0aGlzLnN0YXJ0QmxvY2sgPSBmdW5jdGlvbigpe1xuXHRcdFx0YWMuc3RhcnRBcnJvd0ZpbGwobXhDb25zdGFudHMuQVJST1dfQkxPQ0spO1xuXHRcdH07XG5cblx0XHR0aGlzLnN0YXJ0T3ZhbCA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRhYy5zdGFydEFycm93RmlsbChteENvbnN0YW50cy5BUlJPV19PVkFMKTtcblx0XHR9O1xuXG5cdFx0dGhpcy5zdGFydERpYW1vbmQgPSBmdW5jdGlvbigpe1xuXHRcdFx0YWMuc3RhcnRBcnJvd0ZpbGwobXhDb25zdGFudHMuQVJST1dfRElBTU9ORCk7XG5cdFx0fTtcblxuXHRcdHRoaXMuc3RhcnRUaGluRGlhbW9uZCA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRhYy5zdGFydEFycm93RmlsbChteENvbnN0YW50cy5BUlJPV19ESUFNT05EX1RISU4pO1xuXHRcdH07XG5cblx0XHR0aGlzLnN0YXJ0Q2xhc3NpY1RyYW5zID0gZnVuY3Rpb24oKXtcblx0XHRcdGFjLnN0YXJ0QXJyb3cobXhDb25zdGFudHMuQVJST1dfQ0xBU1NJQyk7XG5cdFx0fTtcblxuXHRcdHRoaXMuc3RhcnRCbG9ja1RyYW5zID0gZnVuY3Rpb24oKXtcblx0XHRcdGFjLnN0YXJ0QXJyb3cobXhDb25zdGFudHMuQVJST1dfQkxPQ0spO1xuXHRcdH07XG5cblx0XHR0aGlzLnN0YXJ0T3ZhbFRyYW5zID0gZnVuY3Rpb24oKXtcblx0XHRcdGFjLnN0YXJ0QXJyb3cobXhDb25zdGFudHMuQVJST1dfT1ZBTCk7XG5cdFx0fTtcblxuXHRcdHRoaXMuc3RhcnREaWFtb25kVHJhbnMgPSBmdW5jdGlvbigpe1xuXHRcdFx0YWMuc3RhcnRBcnJvdyhteENvbnN0YW50cy5BUlJPV19ESUFNT05EKTtcblx0XHR9O1xuXG5cdFx0dGhpcy5zdGFydFRoaW5EaWFtb25kVHJhbnMgPSBmdW5jdGlvbigpe1xuXHRcdFx0YWMuc3RhcnRBcnJvdyhteENvbnN0YW50cy5BUlJPV19ESUFNT05EX1RISU4pO1xuXHRcdH07XG5cblx0XHR0aGlzLmVuZE5vYXJyb3cgPSBmdW5jdGlvbigpe1xuXHRcdFx0YWMuZW5kQXJyb3cobXhDb25zdGFudHMuTk9ORSk7XG5cdFx0fTtcblxuXHRcdHRoaXMuZW5kQ2xhc3NpYyA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRhYy5lbmRBcnJvd0ZpbGwobXhDb25zdGFudHMuQVJST1dfQ0xBU1NJQyk7XG5cdFx0fTtcblxuXHRcdHRoaXMuZW5kT3BlbiA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRhYy5lbmRBcnJvd0ZpbGwobXhDb25zdGFudHMuQVJST1dfT1BFTik7XG5cdFx0fTtcblxuXHRcdHRoaXMuZW5kQmxvY2sgPSBmdW5jdGlvbigpe1xuXHRcdFx0YWMuZW5kQXJyb3dGaWxsKG14Q29uc3RhbnRzLkFSUk9XX0JMT0NLKTtcblx0XHR9O1xuXG5cdFx0dGhpcy5lbmRPdmFsID0gZnVuY3Rpb24oKXtcblx0XHRcdGFjLmVuZEFycm93RmlsbChteENvbnN0YW50cy5BUlJPV19PVkFMKTtcblx0XHR9O1xuXG5cdFx0dGhpcy5lbmREaWFtb25kID0gZnVuY3Rpb24oKXtcblx0XHRcdGFjLmVuZEFycm93RmlsbChteENvbnN0YW50cy5BUlJPV19ESUFNT05EKTtcblx0XHR9O1xuXG5cdFx0dGhpcy5lbmRUaGluRGlhbW9uZCA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRhYy5lbmRBcnJvd0ZpbGwobXhDb25zdGFudHMuQVJST1dfRElBTU9ORF9USElOKTtcblx0XHR9O1xuXG5cdFx0dGhpcy5lbmRDbGFzc2ljVHJhbnMgPSBmdW5jdGlvbigpe1xuXHRcdFx0YWMuZW5kQXJyb3cobXhDb25zdGFudHMuQVJST1dfQ0xBU1NJQyk7XG5cdFx0fTtcblxuXHRcdHRoaXMuZW5kQmxvY2tUcmFucyA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRhYy5lbmRBcnJvdyhteENvbnN0YW50cy5BUlJPV19CTE9DSyk7XG5cdFx0fTtcblxuXHRcdHRoaXMuZW5kT3ZhbFRyYW5zID0gZnVuY3Rpb24oKXtcblx0XHRcdGFjLmVuZEFycm93KG14Q29uc3RhbnRzLkFSUk9XX09WQUwpO1xuXHRcdH07XG5cblx0XHR0aGlzLmVuZERpYW1vbmRUcmFucyA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRhYy5lbmRBcnJvdyhteENvbnN0YW50cy5BUlJPV19ESUFNT05EKTtcblx0XHR9O1xuXG5cdFx0dGhpcy5lbmRUaGluRGlhbW9uZFRyYW5zID0gZnVuY3Rpb24oKXtcblx0XHRcdGFjLmVuZEFycm93KG14Q29uc3RhbnRzLkFSUk9XX0RJQU1PTkRfVEhJTik7XG5cdFx0fTtcblxuXHRcdHRoaXMudHJhc2ggPSBmdW5jdGlvbigpe1xuXHRcdFx0YWMucmVtb3ZlQ2VsbHMoKTtcblx0XHR9O1xuXG5cdFx0dGhpcy5wYWludCA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRhYy5jZWxsRmlsbENvbG9yKCk7XG5cdFx0fTtcblxuXHRcdHRoaXMuYm9yZGVyID0gZnVuY3Rpb24oKXtcblx0XHRcdGFjLmNlbGxTdHJva2VDb2xvcigpO1xuXHRcdH07XG5cblx0XHR0aGlzLmZvbnRFeHBhbmQgPSBmdW5jdGlvbigpe1xuXHRcdFx0YWMuZm9udCgpO1xuXHRcdH07XG5cblx0XHR0aGlzLnBlbiA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRhYy5oaWdodExpZ2h0Q2koKTtcblx0XHR9O1xuXG5cdFx0dGhpcy5ub3BlbiA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRhYy5jbGVhckhpZ2h0KCk7XG5cdFx0fTtcblxuXHRcdHRoaXMuYXV0b0xheW91dCA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRhYy50b2dnbGVBdXRvTGF5b3V0KCk7XG5cdFx0fTtcblxuXHRcdHRoaXMuYXV0b0xpbmUgPSBmdW5jdGlvbigpe1xuXHRcdFx0YWMudG9nZ2xlQXV0b0xpbmUoKTtcblx0XHR9O1xuXG5cdFx0dGhpcy50YWJsZSA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRhYy5zaG93Q2lUYWJsZSgpO1xuXHRcdH07XG5cblx0XHR0aGlzLnNpdGVtYXAgPSBmdW5jdGlvbigpe1xuXHRcdFx0YWMuaGlkZUNpVGFibGUoKTtcblx0XHR9O1xuXHR9O1xuXG5cdHZhciBhcHAgPSBhbmd1bGFyLm1vZHVsZSgnZ3JhcGhUb29sYmFyJywgW10pO1xuXG5cdHZhciBmYWN0b3J5ID0gZnVuY3Rpb24oKXtcblxuXHRcdHJldHVybiBmdW5jdGlvbihzZXR0aW5ncyl7XG5cblx0XHRcdC8vdmFyIHNlbGYgPSB0aGlzO1xuXG5cdFx0XHR0aGlzLnRvb2xiYXJHcm91cCA9IFtcblx0XHRcdFx0WyduZXdGaWxlJywgJ2ZvbGRlcicsICdzYXZlJywgJ3JlZnJlc2gnXSxcblx0XHRcdFx0WydzZWFyY2gnLCAnem9vbU91dCcsICd6b29tSW4nXSxcblx0XHRcdFx0WydvcmRlclVwJywgJ29yZGVyRG93bicsICdhbGlnbkV4cGFuZCddLFxuXHRcdFx0XHRbJ3VuZG8nLCAncmVkbycsICd0cmFzaCcsICdsaW5rJ10sXG5cdFx0XHRcdFsncGFpbnQnLCAnYm9yZGVyJywgJ3NoYWRvdyddLFxuXHRcdFx0XHRbJ2ZvbnRFeHBhbmQnXSxcblx0XHRcdFx0WydsaW5lRXhwYW5kJ10sXG5cdFx0XHRcdFsnZ3JpZCcsICdhc3Npc3RMaW5lJ10sXG5cdFx0XHRcdFsnaW1hZ2UnLCAnbm9pbWFnZSddLFxuXHRcdFx0XHRbJ3BlbicsICdub3BlbiddLFxuXHRcdFx0XHRbJ2F1dG9MYXlvdXQnLCAnYXV0b0xpbmUnXSxcblx0XHRcdFx0WydzZWFyY2hFeHBhbmQnXSxcblx0XHRcdFx0Wyd0YWJsZUV4cGFuZCddXG5cdFx0XHRdO1xuXG5cdFx0XHR0aGlzLmRyb3Bkb3duID0ge1xuXHRcdFx0XHRhbGlnbkV4cGFuZDogW1xuXHRcdFx0XHRcdCdhbGlnbkxlZnQnLCAnYWxpZ25DZW50ZXInLCAnYWxpZ25SaWdodCcsXG5cdFx0XHRcdFx0J2FsaWduVG9wJywgJ2FsaWduTWlkZGxlJywgJ2FsaWduQm90dG9tJyxcblx0XHRcdFx0XHQnYWxpZ25EaXN0cmlidXRlSG9yaXpvbnRhbCcsICdhbGlnbkRpc3RyaWJ1dGVWZXJ0aWNhbCdcblx0XHRcdFx0XSxcblx0XHRcdFx0bGluZUV4cGFuZDogW1xuXHRcdFx0XHRcdFtcblx0XHRcdFx0XHRcdCdsaW5lU3RyYWlnaHQnLCAnbGluZUVudGl0eVJlbGF0aW9uJywgJ2xpbmVFbGJvd0hvcml6b250YWwnLFxuXHRcdFx0XHRcdFx0J2xpbmVFbGJvd1ZlcnRpY2FsJywgJ2xpbmVTZWdtZW50JywgJ2xpbmVPcnRob2dvbmFsJ1xuXHRcdFx0XHRcdF0sXG5cblx0XHRcdFx0XHQnLScsXG5cblx0XHRcdFx0XHRbXG5cdFx0XHRcdFx0XHQnc3RhcnROb2Fycm93JywgJ3N0YXJ0Q2xhc3NpYycsICdzdGFydE9wZW4nLFxuXHRcdFx0XHRcdFx0J3N0YXJ0QmxvY2snLCAnc3RhcnRPdmFsJywgJ3N0YXJ0RGlhbW9uZCcsXG5cdFx0XHRcdFx0XHQnc3RhcnRUaGluRGlhbW9uZCcsICdzdGFydENsYXNzaWNUcmFucycsICdzdGFydEJsb2NrVHJhbnMnLFxuXHRcdFx0XHRcdFx0J3N0YXJ0T3ZhbFRyYW5zJywgJ3N0YXJ0RGlhbW9uZFRyYW5zJywgJ3N0YXJ0VGhpbkRpYW1vbmRUcmFucydcblx0XHRcdFx0XHRdLFxuXG5cdFx0XHRcdFx0Jy0nLFxuXG5cdFx0XHRcdFx0W1xuXHRcdFx0XHRcdFx0J2VuZE5vYXJyb3cnLCAnZW5kQ2xhc3NpYycsICdlbmRPcGVuJyxcblx0XHRcdFx0XHRcdCdlbmRCbG9jaycsICdlbmRPdmFsJywgJ2VuZERpYW1vbmQnLFxuXHRcdFx0XHRcdFx0J2VuZFRoaW5EaWFtb25kJywgJ2VuZENsYXNzaWNUcmFucycsICdlbmRCbG9ja1RyYW5zJyxcblx0XHRcdFx0XHRcdCdlbmRPdmFsVHJhbnMnLCAnZW5kRGlhbW9uZFRyYW5zJywgJ2VuZFRoaW5EaWFtb25kVHJhbnMnXG5cdFx0XHRcdFx0XVxuXHRcdFx0XHRdLFxuXHRcdFx0XHR0YWJsZUV4cGFuZDogW1xuXHRcdFx0XHRcdCd0YWJsZScsXG5cdFx0XHRcdFx0J3NpdGVtYXAnXG5cdFx0XHRcdF1cblx0XHRcdH07XG5cblx0XHRcdHRoaXMuc2V0dGluZ3MgPSBmdW5jdGlvbihzZXR0aW5ncyl7XG5cdFx0XHRcdGlmKHNldHRpbmdzKXtcblx0XHRcdFx0XHRpZihzZXR0aW5ncy50b29sYmFyR3JvdXApe1xuXHRcdFx0XHRcdFx0dGhpcy50b29sYmFyR3JvdXAgPSBzZXR0aW5ncy50b29sYmFyR3JvdXA7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0aWYoc2V0dGluZ3MuZWRpdG9yKXtcblx0XHRcdFx0XHRcdHRoaXMuZWRpdG9yID0gc2V0dGluZ3MuZWRpdG9yO1xuXHRcdFx0XHRcdFx0dGhpcy5hY3Rpb24gPSBuZXcgQWN0aW9uKHRoaXMuZWRpdG9yKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH07XG5cblx0XHRcdHRoaXMudHJpZ2dlckFjdGlvbiA9IGZ1bmN0aW9uKGFjdGlvbiwgJGV2ZW50KXtcblx0XHRcdFx0aWYodGhpcy5hY3Rpb25bYWN0aW9uXSl7XG5cdFx0XHRcdFx0dGhpcy5hY3Rpb25bYWN0aW9uXSgkZXZlbnQudGFyZ2V0KTtcblx0XHRcdFx0XHR0aGlzLmVkaXRvci5ncmFwaC5yZWZyZXNoKCk7XG5cblx0XHRcdFx0XHR0aGlzLnJlZnJlc2goKTtcblx0XHRcdFx0fVxuXHRcdFx0fTtcblxuXHRcdFx0dGhpcy5yZWZyZXNoID0gZnVuY3Rpb24oKXtcblx0XHRcdFx0aWYoIXRoaXMuZWRpdG9yIHx8ICF0aGlzLmVkaXRvci5zdGF0ZSl7XG5cdFx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0aWYodGhpcy5lZGl0b3Iuc3RhdGUuaXNBdXRvTGF5b3V0KXtcblx0XHRcdFx0XHR0aGlzLnN0YXR1c01hcFsnYXV0b0xheW91dCddID0gbnVsbDtcblx0XHRcdFx0fWVsc2V7XG5cdFx0XHRcdFx0dGhpcy5zdGF0dXNNYXBbJ2F1dG9MYXlvdXQnXSA9IHRydWU7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRpZih0aGlzLmVkaXRvci5zdGF0ZS5pc0F1dG9MaW5lKXtcblx0XHRcdFx0XHR0aGlzLnN0YXR1c01hcFsnYXV0b0xpbmUnXSA9IG51bGw7XG5cdFx0XHRcdH1lbHNle1xuXHRcdFx0XHRcdHRoaXMuc3RhdHVzTWFwWydhdXRvTGluZSddID0gdHJ1ZTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGlmKHRoaXMuZWRpdG9yLnN0YXRlLmlzU2hvd0dyaWQpe1xuXHRcdFx0XHRcdHRoaXMuc3RhdHVzTWFwWydncmlkJ10gPSBudWxsO1xuXHRcdFx0XHR9ZWxzZXtcblx0XHRcdFx0XHR0aGlzLnN0YXR1c01hcFsnZ3JpZCddID0gdHJ1ZTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGlmKHRoaXMuZWRpdG9yLnN0YXRlLmlzQXNzaXN0TGluZSl7XG5cdFx0XHRcdFx0dGhpcy5zdGF0dXNNYXBbJ2Fzc2lzdExpbmUnXSA9IG51bGw7XG5cdFx0XHRcdH1lbHNle1xuXHRcdFx0XHRcdHRoaXMuc3RhdHVzTWFwWydhc3Npc3RMaW5lJ10gPSB0cnVlO1xuXHRcdFx0XHR9XG5cdFx0XHR9O1xuXG5cdFx0XHR0aGlzLnN0YXR1c01hcCA9IHt9O1xuXG5cdFx0XHR0aGlzLnNldHRpbmdzKHNldHRpbmdzKTtcblx0XHRcdHRoaXMucmVmcmVzaCgpO1xuXG5cdFx0XHRyZXR1cm4gdGhpcztcblx0XHR9O1xuXHR9O1xuXG5cdGFwcC5mYWN0b3J5KCdHcmFwaFRvb2xiYXInLCBmYWN0b3J5KTtcblxuXG5cdGFwcC5jb250cm9sbGVyKCdEaXJlY3RpdmVHcmFwaFRvb2xiYXJDdHJsJywgZnVuY3Rpb24oJHNjb3BlLCAkZWxlbWVudCwgJGF0dHJzLCAkY29tcGlsZSwgJHBhcnNlLCBHcmFwaFRvb2xiYXIsIEV2ZW50LCAkaW50ZXJ2YWwpe1xuXG5cdFx0aWYoISRzY29wZS5oYXNPd25Qcm9wZXJ0eSgncGFyYW1zJykpe1xuXHRcdFx0JHNjb3BlLnBhcmFtcyA9IG5ldyBHcmFwaFRvb2xiYXIoKTtcblx0XHR9XG5cblx0XHR0aGlzLnNldHVwQmluZGluZ3NUb0ludGVybmFsU2NvcGUgPSBmdW5jdGlvbih0b29sYmFyUGFyYW1zRXhwcil7XG5cdFx0XHR2YXIgdG9vbGJhclBhcmFtc0dldHRlciA9ICRwYXJzZSh0b29sYmFyUGFyYW1zRXhwcik7XG5cblx0XHRcdCRzY29wZS4kd2F0Y2godG9vbGJhclBhcmFtc0dldHRlciwgKGZ1bmN0aW9uKHBhcmFtcyl7XG5cdFx0XHRcdGlmKGFuZ3VsYXIuaXNVbmRlZmluZWQocGFyYW1zKSl7XG5cdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0JHNjb3BlLnBhcmFtcyA9IHBhcmFtcztcblx0XHRcdH0pLCBmYWxzZSk7XG5cdFx0fTtcblxuXHRcdCRzY29wZS5hY3Rpb25UcmFuc2ZlckNsYXNzID0gZnVuY3Rpb24obmFtZSl7XG5cdFx0XHR2YXIgYXJyID0gbmFtZS5zcGxpdCgnJyksIGk7XG5cblx0XHRcdGZvcihpPTA7IGk8YXJyLmxlbmd0aDsgaSsrKXtcblx0XHRcdFx0aWYoaSAmJiBhcnJbaV0gPT09IGFycltpXS50b1VwcGVyQ2FzZSgpKXtcblx0XHRcdFx0XHRhcnJbaV0gPSAnLScgKyBhcnJbaV0udG9Mb3dlckNhc2UoKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gYXJyLmpvaW4oJycpO1xuXHRcdH07XG5cblx0XHQkc2NvcGUuYWN0aW9uVHJhbnNmZXJMYWJlbCA9IGZ1bmN0aW9uKG5hbWUpe1xuXHRcdFx0cmV0dXJuIGxhYmVsTWFwW25hbWVdO1xuXHRcdH07XG5cblx0XHQkc2NvcGUuaXNTdHJpbmcgPSBmdW5jdGlvbihzb21ldGhpbmcpe1xuXHRcdFx0cmV0dXJuIGFuZ3VsYXIuaXNTdHJpbmcoc29tZXRoaW5nKTtcblx0XHR9O1xuXG5cdFx0JHNjb3BlLmlzQXJyYXkgPSBmdW5jdGlvbihzb21ldGhpbmcpe1xuXHRcdFx0cmV0dXJuIGFuZ3VsYXIuaXNBcnJheShzb21ldGhpbmcpO1xuXHRcdH07XG5cblx0XHQkc2NvcGUuc2hvd1BvcG92ZXIgPSBmdW5jdGlvbigkZXZlbnQpe1xuXHRcdFx0JCgkZXZlbnQuY3VycmVudFRhcmdldCkucG9wb3Zlcignc2hvdycpO1xuXHRcdH07XG5cblx0XHQkc2NvcGUuaGlkZVBvcG92ZXIgPSBmdW5jdGlvbigkZXZlbnQpe1xuXHRcdFx0JCgkZXZlbnQuY3VycmVudFRhcmdldCkucG9wb3ZlcignaGlkZScpO1xuXHRcdH07XG5cblx0XHQkc2NvcGUuaXNEaXNhYmxlZCA9IGZ1bmN0aW9uKGFjdGlvbil7XG5cdFx0XHR2YXIgcmVsID0gZmFsc2U7XG5cblx0XHRcdGlmKCEkc2NvcGUucGFyYW1zLmVkaXRvcil7IHJldHVybiB0cnVlOyB9XG5cblx0XHRcdGlmKGFjdGlvbiA9PT0gJ3JlZnJlc2gnICYmICEkc2NvcGUucGFyYW1zLmVkaXRvci5zdGF0ZS52aWV3KXsgcmVsID0gdHJ1ZTsgfVxuXG5cdFx0XHRpZighJHNjb3BlLnBhcmFtcy5lZGl0b3IuZ3JhcGguZ2V0U2VsZWN0aW9uQ2VsbCgpICYmIChcblx0XHRcdFx0XHRhY3Rpb24gPT09ICdvcmRlclVwJ1xuXHRcdFx0XHRcdHx8IGFjdGlvbiA9PT0gJ29yZGVyRG93bidcblx0XHRcdFx0XHR8fCBhY3Rpb24gPT09ICdhbGlnbkV4cGFuZCdcblx0XHRcdFx0XHR8fCBhY3Rpb24gPT09ICdmb250RXhwYW5kJ1xuXHRcdFx0XHRcdHx8IGFjdGlvbiA9PT0gJ3RyYXNoJ1xuXHRcdFx0XHRcdHx8IGFjdGlvbiA9PT0gJ2xpbmsnXG5cdFx0XHRcdFx0fHwgYWN0aW9uID09PSAncGFpbnQnXG5cdFx0XHRcdFx0fHwgYWN0aW9uID09PSAnYm9yZGVyJ1xuXHRcdFx0XHRcdHx8IGFjdGlvbiA9PT0gJ3NoYWRvdydcblx0XHRcdFx0XHR8fCBhY3Rpb24gPT09ICdsaW5lRXhwYW5kJ1xuXHRcdFx0XHQpKXsgcmVsID0gdHJ1ZTsgfVxuXG5cdFx0XHRpZighJHNjb3BlLnBhcmFtcy5lZGl0b3IuZ3JhcGguZ2V0RGVwQ2VsbHMoKS5sZW5ndGggJiYgKFxuXHRcdFx0XHRcdGFjdGlvbiA9PT0gJ3NlYXJjaEV4cGFuZCdcblx0XHRcdFx0KSl7IHJlbCA9IHRydWU7IH1cblxuXHRcdFx0aWYoISRzY29wZS5wYXJhbXMuZWRpdG9yLmFjdGlvbi5nZXRDaXMoKS5sZW5ndGggJiYgKFxuXHRcdFx0XHRcdGFjdGlvbiA9PT0gJ3RhYmxlRXhwYW5kJ1xuXHRcdFx0XHRcdHx8IGFjdGlvbiA9PT0gJ3Blbidcblx0XHRcdFx0XHR8fCBhY3Rpb24gPT09ICdub3Blbidcblx0XHRcdFx0KSl7IHJlbCA9IHRydWU7IH1cblxuXHRcdFx0aWYoISRzY29wZS5wYXJhbXMuZWRpdG9yLnVuZG9NYW5hZ2VyLmhpc3RvcnkubGVuZ3RoICYmIChcblx0XHRcdFx0XHRhY3Rpb24gPT09ICdyZWRvJ1xuXHRcdFx0XHRcdHx8IGFjdGlvbiA9PT0gJ3VuZG8nXG5cdFx0XHRcdCkpeyByZWwgPSB0cnVlOyB9XG5cblx0XHRcdHJldHVybiByZWw7XG5cdFx0fTtcblxuXG5cdFx0JGludGVydmFsKGZ1bmN0aW9uKCl7XG5cdFx0XHQkc2NvcGUuX3JlZnJlc2goKTtcblx0XHR9LCAxMDAwKTtcblxuXHR9KTtcblxuXHRhcHAuZGlyZWN0aXZlKCdncmFwaFRvb2xiYXInLCBbJyRxJywgJyRwYXJzZScsIGZ1bmN0aW9uKCl7XG5cblx0XHRyZXR1cm4ge1xuXHRcdFx0cmVzdHJpY3Q6ICdBJyxcblx0XHRcdHByaW9yaXR5OiAxMDAxLFxuXHRcdFx0c2NvcGU6IHRydWUsXG5cdFx0XHR0ZW1wbGF0ZVVybDogJ2FwcC9kaXJlY3RpdmUvdG9vbGJhci90b29sYmFyLmh0bWwnLFxuXHRcdFx0Y29udHJvbGxlcjogJ0RpcmVjdGl2ZUdyYXBoVG9vbGJhckN0cmwnLFxuXHRcdFx0Y29tcGlsZTogZnVuY3Rpb24oKXtcblx0XHRcdFx0cmV0dXJuIGZ1bmN0aW9uKHNjb3BlLCBlbGVtZW50LCBhdHRycywgY29udHJvbGxlcil7XG5cdFx0XHRcdFx0Y29udHJvbGxlci5zZXR1cEJpbmRpbmdzVG9JbnRlcm5hbFNjb3BlKGF0dHJzLmdyYXBoVG9vbGJhcik7XG5cdFx0XHRcdH07XG5cdFx0XHR9XG5cdFx0fTtcblxuXHR9XSk7XG5cbn0pKG5hbWVTcGFjZS5yZWcoJ2dyYXBoJykpO1xuXG5cbihmdW5jdGlvbigpe1xuXG5cdCd1c2Ugc3RyaWN0JztcblxuXG5cdHZhciB0cmVlRGF0YVRyYW5zZmVyID0gZnVuY3Rpb24oZGF0YSl7XG5cdFx0dmFyIGxpc3QgPSBbXSwgaTtcblxuXHRcdCQuZWFjaChkYXRhLCBmdW5jdGlvbigpe1xuXHRcdFx0dGhpcy5jaGlsZHJlbiA9IFtdO1xuXHRcdH0pO1xuXG5cdFx0Zm9yKGk9MDsgaTxkYXRhLmxlbmd0aDsgaSsrKXtcblx0XHRcdHZhciBpdGVtID0gZGF0YVtpXTtcblxuXG5cdFx0XHRpZighaXRlbS5wYXJlbnQpe1xuXHRcdFx0XHQvLyDop6PlhrNjb250cm9sdHJlZee8k+WtmOeahGJ1Z1xuXHRcdFx0XHRpdGVtLnJhbmRvbSA9IE1hdGgucmFuZG9tKCk7XG5cblx0XHRcdFx0bGlzdC5wdXNoKGl0ZW0pO1xuXHRcdFx0fWVsc2UgaWYoIWl0ZW0uX2NvdW50IHx8IGl0ZW0uX2NvdW50IDwgMTApe1xuXG5cdFx0XHRcdHZhciBuLCBpc1B1c2g7XG5cblx0XHRcdFx0Zm9yKG49MDsgbjxsaXN0Lmxlbmd0aDsgbisrKXtcblx0XHRcdFx0XHR2YXIgbyA9IGxpc3Rbbl07XG5cdFx0XHRcdFx0aWYoby5pZCA9PT0gaXRlbS5wYXJlbnQpe1xuXHRcdFx0XHRcdFx0aWYoIWFuZ3VsYXIuaXNBcnJheShvLmNoaWxkcmVuKSl7XG5cdFx0XHRcdFx0XHRcdG8uY2hpbGRyZW4gPSBbXTtcblx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0aXNQdXNoID0gdHJ1ZTtcblx0XHRcdFx0XHRcdG4gPSBsaXN0Lmxlbmd0aDtcblx0XHRcdFx0XHRcdG8uY2hpbGRyZW4ucHVzaChpdGVtKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRpZighaXNQdXNoKXtcblx0XHRcdFx0XHRpZighaXRlbS5fY291bnQpe1xuXHRcdFx0XHRcdFx0aXRlbS5fY291bnQgPSAwO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdGl0ZW0uX2NvdW50Kys7XG5cdFx0XHRcdFx0ZGF0YS5wdXNoKGl0ZW0pO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGxpc3Q7XG5cdH07XG5cblx0dmFyIGFwcCA9IGFuZ3VsYXIubW9kdWxlKCdncmFwaFZpZXd0cmVlJywgW10pO1xuXG5cdGFwcC5mYWN0b3J5KCdHcmFwaFZpZXd0cmVlJywgWyckcm9vdFNjb3BlJywgZnVuY3Rpb24oJHJvb3RTY29wZSl7XG5cdFx0cmV0dXJuIGZ1bmN0aW9uKG9wdGlvbnMpe1xuXG5cdFx0XHR2YXIgc2VsZWN0Tm9kZSA9IG51bGw7XG5cblx0XHRcdHRoaXMub3B0aW9ucyA9IHt9O1xuXHRcdFx0dGhpcy5wdWJsaWMgPSBmYWxzZTtcblxuXHRcdFx0dGhpcy5zZXR0aW5ncyA9IGZ1bmN0aW9uKG9wdGlvbnMpe1xuXHRcdFx0XHR2YXIgX3RoaXMgPSB0aGlzO1xuXHRcdFx0XHQkLmVhY2gob3B0aW9ucywgZnVuY3Rpb24oa2V5KXtcblx0XHRcdFx0XHRfdGhpcy5vcHRpb25zW2tleV0gPSB0aGlzO1xuXHRcdFx0XHR9KTtcblx0XHRcdH07XG5cblx0XHRcdHRoaXMuZ2V0U2VsZWN0Tm9kZSA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRcdHJldHVybiBzZWxlY3ROb2RlO1xuXHRcdFx0fTtcblxuXHRcdFx0dGhpcy5zZXRTZWxlY3ROb2RlID0gZnVuY3Rpb24oZGF0YSl7XG5cdFx0XHRcdHNlbGVjdE5vZGUgPSBkYXRhO1xuXHRcdFx0fTtcblxuXHRcdFx0dGhpcy5zZWxlY3ROb2RlID0gZnVuY3Rpb24oZGF0YSl7XG5cdFx0XHRcdHRoaXMuc2V0U2VsZWN0Tm9kZShkYXRhKTtcblxuXHRcdFx0XHRpZih0aGlzLm9wdGlvbnMuc2VsZWN0Tm9kZSl7XG5cdFx0XHRcdFx0dGhpcy5vcHRpb25zLnNlbGVjdE5vZGUuYXBwbHkodGhpcywgW2RhdGFdKTtcblx0XHRcdFx0fVxuXHRcdFx0fTtcblxuXHRcdFx0dGhpcy50b2dnbGVQdWJsaWMgPSBmdW5jdGlvbihib29sKXtcblx0XHRcdFx0dGhpcy5wdWJsaWMgPSBib29sO1xuXHRcdFx0fTtcblxuXHRcdFx0dGhpcy5pc1B1YmxpYyA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRcdHJldHVybiB0aGlzLnB1YmxpYztcblx0XHRcdH07XG5cblx0XHRcdHRoaXMuZ2V0Tm9kZVBhdGggPSBmdW5jdGlvbihub2RlKXtcblx0XHRcdFx0cmV0dXJuIFtub2RlXTtcblx0XHRcdH07XG5cblx0XHRcdHRoaXMucmVsb2FkVHJlZSA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRcdCRyb290U2NvcGUucmVsb2FkVHJlZSgpO1xuXHRcdFx0fTtcblxuXHRcdFx0aWYob3B0aW9ucyl7XG5cdFx0XHRcdHRoaXMuc2V0dGluZ3Mob3B0aW9ucyk7XG5cdFx0XHR9XG5cblx0XHR9O1xuXHR9XSk7XG5cblx0dmFyIGNvbnRyb2xsZXIgPSBmdW5jdGlvbigkc2NvcGUsICRlbGVtZW50LCAkYXR0cnMsICRjb21waWxlLCAkcGFyc2UsIEdyYXBoVmlld3RyZWUsIENpQ2F0ZVNlcnZpY2UsIFZpZXdDYXRlU2VydmljZSwgVmlld1NlcnZpY2UsIEV2ZW50LCBVbml0KXtcblx0XHRpZighJHNjb3BlLmhhc093blByb3BlcnR5KCdwYXJhbXMnKSl7XG5cdFx0XHQkc2NvcGUucGFyYW1zID0gbmV3IEdyYXBoVmlld3RyZWUoKTtcblx0XHR9XG5cblx0XHR0aGlzLnNldHVwQmluZGluZ3NUb0ludGVybmFsU2NvcGUgPSBmdW5jdGlvbih0b29sYmFyUGFyYW1zRXhwcil7XG5cdFx0XHR2YXIgdmlld3RyZWVQYXJhbXNHZXR0ZXIgPSAkcGFyc2UodG9vbGJhclBhcmFtc0V4cHIpO1xuXG5cdFx0XHQkc2NvcGUuJHdhdGNoKHZpZXd0cmVlUGFyYW1zR2V0dGVyLCAoZnVuY3Rpb24ocGFyYW1zKXtcblx0XHRcdFx0aWYoYW5ndWxhci5pc1VuZGVmaW5lZChwYXJhbXMpKXtcblx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQkc2NvcGUucGFyYW1zID0gcGFyYW1zO1xuXHRcdFx0fSksIGZhbHNlKTtcblx0XHR9O1xuXG5cdFx0JHNjb3BlLmlzQ29sbGFwc2VkQ3JlYXRlRm9ybSA9ICRzY29wZS5wYXJhbXMub3B0aW9ucy5zaG93Rm9ybTtcblxuXHRcdCRzY29wZS50cmVlT3B0aW9ucyA9IHtcblx0XHRcdG5vZGVDaGlsZHJlbjogXCJjaGlsZHJlblwiLFxuXHRcdFx0ZGlyU2VsZWN0YWJsZTogdHJ1ZSxcblx0XHRcdGluamVjdENsYXNzZXM6IHtcblx0XHRcdFx0dWw6IFwiYTFcIixcblx0XHRcdFx0bGk6IFwiYTJcIixcblx0XHRcdFx0bGlTZWxlY3RlZDogXCJhN1wiLFxuXHRcdFx0XHRpRXhwYW5kZWQ6IFwiYTNcIixcblx0XHRcdFx0aUNvbGxhcHNlZDogXCJhNFwiLFxuXHRcdFx0XHRpTGVhZjogXCJhNVwiLFxuXHRcdFx0XHRsYWJlbDogXCJhNlwiLFxuXHRcdFx0XHRsYWJlbFNlbGVjdGVkOiBcImE4XCJcblx0XHRcdH1cblx0XHR9O1xuXG5cblx0XHQkc2NvcGUudHJlZURhdGEgPSBbXTtcblx0XHQkc2NvcGUub3JpZ2luYWxUcmVlRGF0YSA9IFtdO1xuXG5cdFx0JHNjb3BlLmZvcm0gPSB7XG5cdFx0XHRjYXRlOiB7IG5hbWU6ICdyb290JywgaWQ6ICcnIH1cblx0XHR9O1xuXG5cdFx0JHNjb3BlLmNhdGVQYXJhbXMgPSB7XG5cdFx0XHRvcGVuOiBmYWxzZVxuXHRcdH07XG5cblx0XHQkc2NvcGUuY3JlYXRlQ2F0ZSA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRpZigkc2NvcGUuZm9ybS5uYW1lKXtcblxuXHRcdFx0XHR2YXIgZGF0YSA9IHtcblx0XHRcdFx0XHRuYW1lOiAkc2NvcGUuZm9ybS5uYW1lLFxuXHRcdFx0XHRcdHBhcmVudDogJHNjb3BlLmZvcm0uY2F0ZS5pZCxcblx0XHRcdFx0XHRvcGVuOiAkc2NvcGUuY2F0ZVBhcmFtcy5vcGVuXG5cdFx0XHRcdH07XG5cblx0XHRcdFx0Vmlld0NhdGVTZXJ2aWNlLmNyZWF0ZShkYXRhKVxuXHRcdFx0XHRcdC5zdWNjZXNzKGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFx0XHQkc2NvcGUucmVsb2FkVHJlZSgpO1xuXHRcdFx0XHRcdFx0JHNjb3BlLmZvcm0ubmFtZSA9ICcnO1xuXHRcdFx0XHRcdH0pO1xuXHRcdFx0fVxuXHRcdH07XG5cblx0XHQkc2NvcGUudXBkYXRlQ2F0ZSA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRpZigkc2NvcGUuZWRpdENhdGUubmFtZSl7XG5cdFx0XHRcdHZhciBkYXRhID0ge1xuXHRcdFx0XHRcdHBhcmVudDogJHNjb3BlLmVkaXRDYXRlLnBhcmVudC5pZCxcblx0XHRcdFx0XHRpZDogJHNjb3BlLmVkaXRDYXRlLmlkLFxuXHRcdFx0XHRcdG5hbWU6ICRzY29wZS5lZGl0Q2F0ZS5uYW1lLFxuXHRcdFx0XHRcdG9wZW46ICRzY29wZS5lZGl0Q2F0ZS5vcGVuXG5cdFx0XHRcdH07XG5cblx0XHRcdFx0Vmlld0NhdGVTZXJ2aWNlLnVwZGF0ZShkYXRhKVxuXHRcdFx0XHRcdC5zdWNjZXNzKGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFx0XHQkc2NvcGUucmVsb2FkVHJlZSgpO1xuXHRcdFx0XHRcdH0pO1xuXHRcdFx0fVxuXHRcdH07XG5cblx0XHQkc2NvcGUucmVsb2FkVHJlZSA9IGZ1bmN0aW9uKCl7XG5cblx0XHRcdHZhciBoYW5kbGUgPSBmdW5jdGlvbihyZXN1bHQpe1xuXHRcdFx0XHQkc2NvcGUudHJlZURhdGEuc3BsaWNlKDApO1xuXG5cdFx0XHRcdHZhciBsaXN0ID0gdHJlZURhdGFUcmFuc2ZlcihyZXN1bHQuZGF0YSk7XG5cblx0XHRcdFx0JC5lYWNoKGxpc3QsIGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFx0JHNjb3BlLnRyZWVEYXRhLnB1c2godGhpcyk7XG5cdFx0XHRcdH0pO1xuXG5cdFx0XHRcdC8vJHNjb3BlLnRyZWVEYXRhID0gdHJlZURhdGFUcmFuc2ZlcihyZXN1bHQuZGF0YSk7XG5cblx0XHRcdFx0JHNjb3BlLm9yaWdpbmFsVHJlZURhdGEgPSByZXN1bHQuZGF0YTtcblxuXHRcdFx0XHRpZigkc2NvcGUuZWRpdENhdGUpe1xuXHRcdFx0XHRcdCQuZWFjaCgkc2NvcGUub3JpZ2luYWxUcmVlRGF0YSwgZnVuY3Rpb24oKXtcblx0XHRcdFx0XHRcdGlmKHRoaXMuaWQgPT09ICRzY29wZS5lZGl0Q2F0ZS5wYXJlbnQuaWQpe1xuXHRcdFx0XHRcdFx0XHQkc2NvcGUuZWRpdENhdGUucGFyZW50ID0gdGhpcztcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0fVxuXHRcdFx0fTtcblxuXHRcdFx0aWYoJHNjb3BlLmNhdGVQYXJhbXMub3Blbil7XG5cdFx0XHRcdFZpZXdDYXRlU2VydmljZS5nZXRQdWJsaWMoKVxuXHRcdFx0XHRcdC5zdWNjZXNzKGhhbmRsZSk7XG5cdFx0XHR9ZWxzZXtcblx0XHRcdFx0Vmlld0NhdGVTZXJ2aWNlLmdldFByaXZhdGUoKVxuXHRcdFx0XHRcdC5zdWNjZXNzKGhhbmRsZSk7XG5cdFx0XHR9XG5cblx0XHR9O1xuXG5cdFx0JHNjb3BlLmZvcm1hdFNlbGVjdCA9IGZ1bmN0aW9uKGxpc3Qpe1xuXHRcdFx0dmFyIGFyciA9IFtdO1xuXG5cdFx0XHRhcnIucHVzaCgkc2NvcGUuZm9ybS5jYXRlKTtcblx0XHRcdCQuZWFjaChsaXN0LCBmdW5jdGlvbigpe1xuXHRcdFx0XHRhcnIucHVzaCh0aGlzKTtcblx0XHRcdH0pO1xuXG5cdFx0XHRyZXR1cm4gYXJyO1xuXHRcdH07XG5cblx0XHQkc2NvcGUuc2hvd1NlbGVjdGVkID0gZnVuY3Rpb24oc2VsKXtcblx0XHRcdCRzY29wZS5wYXJhbXMuc2VsZWN0Tm9kZShhbmd1bGFyLmNvcHkoc2VsKSk7XG5cblx0XHRcdGlmKHNlbC54bWwpe1xuXHRcdFx0XHQkc2NvcGUuZWRpdENhdGUgPSBudWxsO1xuXHRcdFx0fWVsc2V7XG5cdFx0XHRcdCRzY29wZS5lZGl0Q2F0ZSA9IGFuZ3VsYXIuY29weShzZWwpO1xuXHRcdFx0XHQkc2NvcGUuZWRpdENhdGUuc2hvdyA9IHRydWU7XG5cblx0XHRcdFx0aWYoc2VsLnBhcmVudCl7XG5cdFx0XHRcdFx0JC5lYWNoKCRzY29wZS5vcmlnaW5hbFRyZWVEYXRhLCBmdW5jdGlvbigpe1xuXHRcdFx0XHRcdFx0aWYodGhpcy5pZCA9PT0gc2VsLnBhcmVudCl7XG5cdFx0XHRcdFx0XHRcdCRzY29wZS5lZGl0Q2F0ZS5wYXJlbnQgPSB0aGlzO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH0pO1xuXHRcdFx0XHR9ZWxzZXtcblx0XHRcdFx0XHQkc2NvcGUuZWRpdENhdGUucGFyZW50ID0gJHNjb3BlLmZvcm0uY2F0ZTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH07XG5cblx0XHQkc2NvcGUuc2hvd1RvZ2dsZSA9IGZ1bmN0aW9uKHNlbCwgaXNFeHBhbmQpe1xuXG5cdFx0XHRpZihpc0V4cGFuZCAmJiBzZWwuaWQgJiYgJHNjb3BlLnBhcmFtcy5vcHRpb25zLnF1ZXJ5Vmlldyl7XG5cdFx0XHRcdFZpZXdTZXJ2aWNlLmdldCh7XG5cdFx0XHRcdFx0Y2F0ZUlkOiBzZWwuaWQsXG5cdFx0XHRcdFx0YWxsOiBmYWxzZSxcblx0XHRcdFx0XHRwYWdlOiAxLFxuXHRcdFx0XHRcdHBhZ2VTaXplOiAxMDAwXG5cdFx0XHRcdH0pLnN1Y2Nlc3MoZnVuY3Rpb24ocmVzdWx0KXtcblx0XHRcdFx0XHQkc2NvcGUuYXBwZW5kTGlzdChzZWwsIHJlc3VsdC5kYXRhLmRhdGFzKTtcblx0XHRcdFx0fSk7XG5cdFx0XHR9XG5cdFx0fTtcblxuXHRcdCRzY29wZS5hcHBlbmRMaXN0ID0gZnVuY3Rpb24obm9kZSwgbGlzdCl7XG5cdFx0XHRpZihsaXN0ICAmJiAhbGlzdC5sZW5ndGgpe1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdHZhciBsb29wID0gZnVuY3Rpb24obGlzdCl7XG5cdFx0XHRcdHZhciBpLCByZXQ7XG5cblx0XHRcdFx0Zm9yKGk9MDsgaTxsaXN0Lmxlbmd0aDsgaSsrKXtcblx0XHRcdFx0XHRpZihsaXN0W2ldLmlkID09PSBub2RlLmlkKXtcblx0XHRcdFx0XHRcdHJldCA9IGxpc3RbaV07XG5cdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aWYoYW5ndWxhci5pc0FycmF5KGxpc3RbaV0uY2hpbGRyZW4pKXtcblx0XHRcdFx0XHRcdHJldCA9IGxvb3AobGlzdFtpXS5jaGlsZHJlbik7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmV0dXJuIHJldDtcblx0XHRcdH07XG5cblx0XHRcdHZhciBvID0gbG9vcCgkc2NvcGUudHJlZURhdGEpO1xuXG5cdFx0XHRpZihvKXtcblxuXHRcdFx0XHR2YXIgYXJyID0gW107XG5cblx0XHRcdFx0aWYoIWFuZ3VsYXIuaXNBcnJheShvLmNoaWxkcmVuKSl7XG5cdFx0XHRcdFx0by5jaGlsZHJlbiA9IFtdO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0JC5lYWNoKG8uY2hpbGRyZW4sIGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFx0aWYoIXRoaXMueG1sKXtcblx0XHRcdFx0XHRcdGFyci5wdXNoKHRoaXMpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSk7XG5cblx0XHRcdFx0by5jaGlsZHJlbi5zcGxpY2UoMCk7XG5cblx0XHRcdFx0JC5lYWNoKGFyciwgZnVuY3Rpb24oKXtcblx0XHRcdFx0XHR0aGlzLmxhYmVsID0gdGhpcy5uYW1lO1xuXHRcdFx0XHRcdG8uY2hpbGRyZW4ucHVzaCh0aGlzKTtcblx0XHRcdFx0fSk7XG5cblx0XHRcdFx0JC5lYWNoKGxpc3QsIGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFx0dGhpcy5sYWJlbCA9IHRoaXMubmFtZTtcblx0XHRcdFx0XHRvLmNoaWxkcmVuLnB1c2godGhpcyk7XG5cdFx0XHRcdH0pO1xuXHRcdFx0fVxuXHRcdH07XG5cblx0XHQkc2NvcGUuZGVsZXRlTm9kZUJ5SWQgPSBmdW5jdGlvbihpZCl7XG5cdFx0XHR2YXIgaSwgbG9vcCwgY2hlY2tDaGlsZHJlbkxlbmd0aDtcblxuXHRcdFx0Zm9yKGk9MDsgaTwkc2NvcGUub3JpZ2luYWxUcmVlRGF0YS5sZW5ndGg7IGkrKyl7XG5cdFx0XHRcdGlmKCRzY29wZS5vcmlnaW5hbFRyZWVEYXRhW2ldLmlkID09PSBpZCl7XG5cdFx0XHRcdFx0JHNjb3BlLm9yaWdpbmFsVHJlZURhdGEuc3BsaWNlKGksIDEpO1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdGxvb3AgPSBmdW5jdGlvbihhcnIpe1xuXHRcdFx0XHR2YXIgaTtcblx0XHRcdFx0Zm9yKGk9MDsgaTxhcnIubGVuZ3RoOyBpKyspe1xuXHRcdFx0XHRcdGlmKGFycltpXS5pZCA9PT0gaWQpe1xuXHRcdFx0XHRcdFx0YXJyLnNwbGljZShpLCAxKTtcblx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdH1lbHNlIGlmKGFuZ3VsYXIuaXNBcnJheShhcnJbaV0uY2hpbGRyZW4pKXtcblx0XHRcdFx0XHRcdGxvb3AoYXJyW2ldLmNoaWxkcmVuKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH07XG5cblx0XHRcdGNoZWNrQ2hpbGRyZW5MZW5ndGggPSBmdW5jdGlvbihhcnIpe1xuXHRcdFx0XHR2YXIgaTtcblx0XHRcdFx0Zm9yKGk9MDsgaTxhcnIubGVuZ3RoOyBpKyspe1xuXHRcdFx0XHRcdGlmKGFuZ3VsYXIuaXNBcnJheShhcnJbaV0uY2hpbGRyZW4pKXtcblx0XHRcdFx0XHRcdGlmKGFycltpXS5jaGlsZHJlbi5sZW5ndGgpe1xuXHRcdFx0XHRcdFx0XHRsb29wKGFycltpXS5jaGlsZHJlbik7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9O1xuXG5cdFx0XHRsb29wKCRzY29wZS50cmVlRGF0YSk7XG5cdFx0XHRjaGVja0NoaWxkcmVuTGVuZ3RoKCRzY29wZS50cmVlRGF0YSk7XG5cdFx0XHQkc2NvcGUuX3JlZnJlc2goKTtcblx0XHR9O1xuXG5cdFx0JHNjb3BlLmRlbGV0ZUNhdGUgPSBmdW5jdGlvbigpe1xuXHRcdFx0aWYoJHNjb3BlLmVkaXRDYXRlICYmICRzY29wZS5lZGl0Q2F0ZS5pZCl7XG5cdFx0XHRcdFVuaXQuY29uZmlybSgn5Yig6Zmk5YiG57G75bCG5Lya5riF6Zmk6K+l5YiG57G75LiL5omA5pyJ55qE5a2Q5YiG57G75Lul5Y+K6KeG5Zu+5pWw5o2u77yM6K+356Gu6K6k5piv5ZCm6KaB57un57ut5pys5qyh5pON5L2c77yfJywgZnVuY3Rpb24ocmVzdWx0KXtcblx0XHRcdFx0XHRpZihyZXN1bHQpe1xuXHRcdFx0XHRcdFx0Vmlld0NhdGVTZXJ2aWNlLnJlbW92ZSgkc2NvcGUuZWRpdENhdGUuaWQpXG5cdFx0XHRcdFx0XHRcdC5zdWNjZXNzKGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFx0XHRcdFx0JHNjb3BlLnJlbG9hZFRyZWUoKTtcblx0XHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9KTtcblx0XHRcdH1cblx0XHR9O1xuXG5cdFx0JHNjb3BlLiR3YXRjaCgnY2F0ZVBhcmFtcy5vcGVuJywgZnVuY3Rpb24oKXtcblx0XHRcdCRzY29wZS5wYXJhbXMudG9nZ2xlUHVibGljKCRzY29wZS5jYXRlUGFyYW1zLm9wZW4pO1xuXHRcdFx0JHNjb3BlLnJlbG9hZFRyZWUoKTtcblx0XHR9LCBmYWxzZSk7XG5cblxuXHRcdCRzY29wZS4kb24oRXZlbnQuVklFV19ERUxFVEVfQUZURVIsIGZ1bmN0aW9uKGV2ZW50LCBkYXRhKXtcblx0XHRcdCRzY29wZS5kZWxldGVOb2RlQnlJZChkYXRhLmlkKTtcblx0XHR9KTtcblx0fTtcblxuXHRhcHAuY29udHJvbGxlcignRGlyZWN0aXZlR3JhcGhWaWV3dHJlZUN0cmwnLCBbJyRzY29wZScsICckZWxlbWVudCcsICckYXR0cnMnLCAnJGNvbXBpbGUnLCAnJHBhcnNlJywgJ0dyYXBoVmlld3RyZWUnLFxuXHRcdCdDaUNhdGVTZXJ2aWNlJywgJ1ZpZXdDYXRlU2VydmljZScsICdWaWV3U2VydmljZScsICdFdmVudCcsICdVbml0JywgY29udHJvbGxlcl0pO1xuXG5cdGFwcC5kaXJlY3RpdmUoJ2dyYXBoVmlld3RyZWUnLCBbJyRxJywgJyRwYXJzZScsIGZ1bmN0aW9uKCl7XG5cblx0XHRyZXR1cm4ge1xuXHRcdFx0cmVzdHJpY3Q6ICdBJyxcblx0XHRcdHByaW9yaXR5OiAxMDAxLFxuXHRcdFx0c2NvcGU6IHRydWUsXG5cdFx0XHR0ZW1wbGF0ZVVybDogJ2FwcC9kaXJlY3RpdmUvdmlld3RyZWUvdmlld3RyZWUuaHRtbCcsXG5cdFx0XHRjb250cm9sbGVyOiAnRGlyZWN0aXZlR3JhcGhWaWV3dHJlZUN0cmwnLFxuXHRcdFx0Y29tcGlsZTogZnVuY3Rpb24oKXtcblx0XHRcdFx0cmV0dXJuIGZ1bmN0aW9uKHNjb3BlLCBlbGVtZW50LCBhdHRycywgY29udHJvbGxlcil7XG5cdFx0XHRcdFx0Y29udHJvbGxlci5zZXR1cEJpbmRpbmdzVG9JbnRlcm5hbFNjb3BlKGF0dHJzLmdyYXBoVmlld3RyZWUpO1xuXHRcdFx0XHR9O1xuXHRcdFx0fVxuXHRcdH07XG5cblx0fV0pO1xuXG59KShuYW1lU3BhY2UucmVnKCdncmFwaCcpKTtcblxuXG4oZnVuY3Rpb24oZ3JhcGgpe1xuXG5cdHZhciBjb250cm9sbGVyID0gZnVuY3Rpb24oJHNjb3BlLCAkbW9kYWxJbnN0YW5jZSwgdGl0bGUsIG9yaWdpbmFsQ29sb3IsIGZuKXtcblx0XHQkc2NvcGUub2sgPSBmdW5jdGlvbigpe1xuXHRcdFx0JG1vZGFsSW5zdGFuY2UuY2xvc2UoKTtcblx0XHRcdGlmKGZuKXtcblx0XHRcdFx0Zm4oJHNjb3BlLmNvbG9yKTtcblx0XHRcdH1cblx0XHR9O1xuXG5cdFx0JHNjb3BlLiRtb2RhbCA9ICRtb2RhbEluc3RhbmNlO1xuXHRcdCRzY29wZS50aXRsZSA9IHRpdGxlO1xuXHRcdCRzY29wZS5jb2xvciA9IG9yaWdpbmFsQ29sb3IgPyBvcmlnaW5hbENvbG9yIDogJyNGRkZGRkYnO1xuXHRcdCRzY29wZS5jaGFuZ2UgPSBmdW5jdGlvbihldil7XG5cdFx0XHRjb25zb2xlLmxvZyhldik7XG5cdFx0fTtcblxuXHR9O1xuXG5cdGdyYXBoLmFwcC5jb250cm9sbGVyKCdNb2RhbENvbG9yQ3RybCcsIFsnJHNjb3BlJywgJyRtb2RhbEluc3RhbmNlJywgJ3RpdGxlJywgJ29yaWdpbmFsQ29sb3InLCAnZm4nLCBjb250cm9sbGVyXSk7XG5cblxufSkobmFtZVNwYWNlLnJlZygnZ3JhcGgnKSk7XG5cblxuXG5cbihmdW5jdGlvbihncmFwaCl7XG5cblx0J3VzZSBzdHJpY3QnO1xuXG5cdGdyYXBoLmFwcC5jb250cm9sbGVyKCdNb2RhbEV4cGFuZEN0cmwnLCBmdW5jdGlvbigkc2NvcGUsICRtb2RhbEluc3RhbmNlLCBDaVJlbGF0aW9uU2VydmljZSwgQ2lDYXRlU2VydmljZSwgQ2lTZXJ2aWNlLCBlZGl0b3IsIFVuaXQpe1xuXG5cdFx0JHNjb3BlLm9rID0gZnVuY3Rpb24oKXtcblxuXHRcdFx0dmFyIG9iaiA9IHt9O1xuXG5cdFx0XHR2YXIgY2VsbCA9IGVkaXRvci5ncmFwaC5nZXRTZWxlY3Rpb25DZWxsKCk7XG5cblx0XHRcdG9iai5kaXJEZXB0aCA9ICRzY29wZS5kZXA7XG5cdFx0XHRvYmouY2lSZWxzID0gW107XG5cdFx0XHRvYmouY2kgPSBVbml0LmdldENpSWRCeUNlbGwoY2VsbCk7XG5cdFx0XHRvYmoubGlrZSA9IHt9O1xuXG5cdFx0XHQkLmVhY2goJHNjb3BlLnJlbGF0aW9ucywgZnVuY3Rpb24oKXtcblx0XHRcdFx0aWYodGhpcy5fY2hlY2tlZCl7XG5cdFx0XHRcdFx0b2JqLmNpUmVscy5wdXNoKHRoaXMuaWQpO1xuXHRcdFx0XHR9XG5cdFx0XHR9KTtcblxuXHRcdFx0JC5lYWNoKCRzY29wZS5jYXRlZ29yeXMsIGZ1bmN0aW9uKCl7XG5cblx0XHRcdFx0aWYoIW9iai5saWtlW3RoaXMuY2F0ZWdvcnkuaWRdKXtcblx0XHRcdFx0XHRvYmoubGlrZVt0aGlzLmNhdGVnb3J5LmlkXSA9IHt9O1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0dmFyIG8gPSBvYmoubGlrZVt0aGlzLmNhdGVnb3J5LmlkXTtcblxuXHRcdFx0XHRpZih0aGlzLmF0dHJpYnV0ZSl7XG5cdFx0XHRcdFx0b1t0aGlzLmF0dHJpYnV0ZV0gPSB0aGlzLmxpa2UgPyAnKicgKyB0aGlzLmxpa2UgKyAnKicgOiAnKic7XG5cdFx0XHRcdH1lbHNle1xuXHRcdFx0XHRcdG9bJyonXSA9IHRoaXMubGlrZSA/ICcqJyArIHRoaXMubGlrZSArICcqJyA6ICcqJztcblx0XHRcdFx0fVxuXG5cdFx0XHR9KTtcblxuXHRcdFx0Q2lTZXJ2aWNlLmV4cGFuZChvYmopXG5cdFx0XHRcdC5zdWNjZXNzKGZ1bmN0aW9uKHJlc3VsdCl7XG5cblx0XHRcdFx0XHRjb25zb2xlLmxvZyhyZXN1bHQpO1xuXG5cdFx0XHRcdFx0JG1vZGFsSW5zdGFuY2UuY2xvc2UoKTtcblxuXHRcdFx0XHRcdCQuZWFjaChyZXN1bHQuZGF0YSwgZnVuY3Rpb24oKXtcblx0XHRcdFx0XHRcdGlmKCFlZGl0b3IuZ3JhcGguZ2V0Q2VsbEJ5SWQoQ29uc3QuQ0lfUFJFRklYICsgdGhpcy5pZCkpe1xuXHRcdFx0XHRcdFx0XHRlZGl0b3IuZ3JhcGguaW5zZXJ0VmVydGV4KFxuXHRcdFx0XHRcdFx0XHRcdGVkaXRvci5ncmFwaC5nZXREZWZhdWx0UGFyZW50KCksXG5cdFx0XHRcdFx0XHRcdFx0Q29uc3QuQ0lfUFJFRklYICsgdGhpcy5pZCxcblx0XHRcdFx0XHRcdFx0XHR0aGlzLm5hbWUsXG5cdFx0XHRcdFx0XHRcdFx0MCxcblx0XHRcdFx0XHRcdFx0XHQwLFxuXHRcdFx0XHRcdFx0XHRcdENvbnN0LkdSQVBIX0RSQUdfV0lEVEgsXG5cdFx0XHRcdFx0XHRcdFx0Q29uc3QuR1JBUEhfRFJBR19IRUlHSFQsXG5cdFx0XHRcdFx0XHRcdFx0J2ltYWdlO2ltYWdlPScgKyBpbWFnZVxuXHRcdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH0pO1xuXHRcdFx0XHR9KTtcblx0XHR9O1xuXG5cdFx0JHNjb3BlLiRtb2RhbCA9ICRtb2RhbEluc3RhbmNlO1xuXG5cdFx0JHNjb3BlLnJlbGF0aW9ucyA9IFtdO1xuXHRcdCRzY29wZS5jYXRlZ29yeXMgPSBbXTtcblx0XHQkc2NvcGUuZGVwID0ge1xuXHRcdFx0dXA6ICcxJyxcblx0XHRcdGRvd246ICcxJ1xuXHRcdH07XG5cblx0XHQkc2NvcGUuYWRkID0gZnVuY3Rpb24oKXtcblx0XHRcdCRzY29wZS5jYXRlZ29yeXMucHVzaCh7fSk7XG5cdFx0fTtcblxuXHRcdCRzY29wZS5yZW1vdmUgPSBmdW5jdGlvbihpbmRleCl7XG5cdFx0XHQkc2NvcGUuY2F0ZWdvcnlzLnNwbGljZShpbmRleCwgMSk7XG5cdFx0fTtcblxuXHRcdENpQ2F0ZVNlcnZpY2UuZ2V0KClcblx0XHRcdC5zdWNjZXNzKGZ1bmN0aW9uKHJlc3VsdCl7XG5cdFx0XHRcdCRzY29wZS5jYXRlZ29yeXNMaWIgPSByZXN1bHQuZGF0YTtcblx0XHRcdH0pO1xuXG5cdFx0Q2lSZWxhdGlvblNlcnZpY2UuZ2V0Q2F0ZWdvcnkoKVxuXHRcdFx0LnN1Y2Nlc3MoZnVuY3Rpb24ocmVzdWx0KXtcblx0XHRcdFx0JHNjb3BlLnJlbGF0aW9ucyA9IHJlc3VsdC5kYXRhO1xuXHRcdFx0fSk7XG5cblx0fSk7XG5cblxufSkobmFtZVNwYWNlLnJlZygnZ3JhcGgnKSk7XG5cblxuKGZ1bmN0aW9uKGdyYXBoKXtcblxuXHR2YXIgY29udHJvbGxlciA9IGZ1bmN0aW9uKCRzY29wZSwgJG1vZGFsSW5zdGFuY2UsIGVkaXRvcil7XG5cblx0XHR2YXIgZSA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRyZXR1cm4gJCgnI2ZvbnQtZXhhbXBsZScpO1xuXHRcdH07XG5cblx0XHR2YXIgY2VsbHMgPSBlZGl0b3IuZ3JhcGguZ2V0U2VsZWN0aW9uQ2VsbHMoKTtcblxuXHRcdCRzY29wZS4kbW9kYWwgPSAkbW9kYWxJbnN0YW5jZTtcblxuXHRcdCRzY29wZS5mb250ID0ge307XG5cblx0XHRpZihjZWxscy5sZW5ndGggPT09IDEpe1xuXHRcdFx0dmFyIG8gPSBlZGl0b3IuZ3JhcGguZ2V0Q2VsbFN0eWxlKGNlbGxzWzBdKTtcblx0XHRcdGNvbnNvbGUubG9nKG8pO1xuXG5cdFx0XHRpZihvLmZvbnRTaXplKXtcblx0XHRcdFx0JHNjb3BlLmZvbnQuc2l6ZSA9IG8uZm9udFNpemU7XG5cdFx0XHR9XG5cblx0XHRcdGlmKG8uZm9udEZhbWlseSl7XG5cdFx0XHRcdCRzY29wZS5mb250LmZhbWlseSA9IG8uZm9udEZhbWlseTtcblx0XHRcdH1cblxuXHRcdFx0aWYoby5mb250Q29sb3Ipe1xuXHRcdFx0XHQkc2NvcGUuZm9udC5jb2xvciA9IG8uZm9udENvbG9yO1xuXHRcdFx0fVxuXG5cdFx0XHRpZihvLmFsaWduKXtcblx0XHRcdFx0JHNjb3BlLmZvbnQuYWxpZ25Ib3Jpem9uYWwgPSBvLmFsaWduO1xuXHRcdFx0fVxuXG5cdFx0XHRpZihvLnZlcnRpY2FsQWxpZ24pe1xuXHRcdFx0XHQkc2NvcGUuZm9udC5hbGlnblZlcnRpY2FsID0gby52ZXJ0aWNhbEFsaWduO1xuXHRcdFx0fVxuXG5cdFx0XHRpZihvLmZvbnRTdHlsZSA9PT0gNSl7XG5cdFx0XHRcdCRzY29wZS5mb250LmJvbGQgPSBvLnRydWU7XG5cdFx0XHRcdCRzY29wZS5mb250LnVuZGVybGluZSA9IG8udHJ1ZTtcblx0XHRcdH1cblxuXHRcdFx0aWYoby5mb250U3R5bGUgPT09IDQpe1xuXHRcdFx0XHQkc2NvcGUuZm9udC51bmRlcmxpbmUgPSBvLnRydWU7XG5cdFx0XHR9XG5cblx0XHRcdGlmKG8uZm9udFN0eWxlID09PSAxKXtcblx0XHRcdFx0JHNjb3BlLmZvbnQuYm9sZCA9IG8udHJ1ZTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQkc2NvcGUub2sgPSBmdW5jdGlvbigpe1xuXG5cblx0XHRcdGlmKCRzY29wZS5mb250LmZhbWlseSl7XG5cdFx0XHRcdGVkaXRvci5ncmFwaC5zZXRDZWxsU3R5bGVzKG14Q29uc3RhbnRzLlNUWUxFX0ZPTlRGQU1JTFksICRzY29wZS5mb250LmZhbWlseSwgY2VsbHMpO1xuXHRcdFx0fVxuXG5cdFx0XHRpZigkc2NvcGUuZm9udC5zaXplKXtcblx0XHRcdFx0ZWRpdG9yLmdyYXBoLnNldENlbGxTdHlsZXMobXhDb25zdGFudHMuU1RZTEVfRk9OVFNJWkUsICRzY29wZS5mb250LnNpemUsIGNlbGxzKTtcblx0XHRcdH1cblxuXHRcdFx0aWYoJHNjb3BlLmZvbnQuY29sb3Ipe1xuXHRcdFx0XHRlZGl0b3IuZ3JhcGguc2V0Q2VsbFN0eWxlcyhteENvbnN0YW50cy5TVFlMRV9GT05UQ09MT1IsICRzY29wZS5mb250LmNvbG9yLCBjZWxscyk7XG5cdFx0XHR9XG5cblx0XHRcdGlmKCRzY29wZS5mb250LmJvbGQpe1xuXHRcdFx0XHRlZGl0b3IuZ3JhcGgudG9nZ2xlQ2VsbFN0eWxlRmxhZ3MobXhDb25zdGFudHMuU1RZTEVfRk9OVFNUWUxFLCBteENvbnN0YW50cy5GT05UX0JPTEQpO1xuXHRcdFx0fVxuXG5cdFx0XHRpZigkc2NvcGUuZm9udC5pdGFsaWMpe1xuXHRcdFx0XHRlZGl0b3IuZ3JhcGgudG9nZ2xlQ2VsbFN0eWxlRmxhZ3MobXhDb25zdGFudHMuU1RZTEVfRk9OVFNUWUxFLCBteENvbnN0YW50cy5GT05UX0lUQUxJQyk7XG5cdFx0XHR9XG5cblx0XHRcdGlmKCRzY29wZS5mb250LnVuZGVybGluZSl7XG5cdFx0XHRcdGVkaXRvci5ncmFwaC50b2dnbGVDZWxsU3R5bGVGbGFncyhteENvbnN0YW50cy5TVFlMRV9GT05UU1RZTEUsIG14Q29uc3RhbnRzLkZPTlRfVU5ERVJMSU5FKTtcblx0XHRcdH1cblxuXHRcdFx0aWYoJHNjb3BlLmZvbnQuYWxpZ25Ib3Jpem9udGFsKXtcblx0XHRcdFx0ZWRpdG9yLmdyYXBoLnNldENlbGxTdHlsZXMobXhDb25zdGFudHMuU1RZTEVfQUxJR04sICRzY29wZS5mb250LmFsaWduSG9yaXpvbnRhbCwgY2VsbCk7XG5cdFx0XHR9XG5cblx0XHRcdGlmKCRzY29wZS5mb250LmFsaWduVmVydGljYWwpe1xuXHRcdFx0XHRlZGl0b3IuZ3JhcGguc2V0Q2VsbFN0eWxlcyhteENvbnN0YW50cy5TVFlMRV9WRVJUSUNBTF9BTElHTiwgJHNjb3BlLmZvbnQuYWxpZ25WZXJ0aWNhbCwgY2VsbCk7XG5cdFx0XHR9XG5cdFx0fTtcblxuXHRcdCRzY29wZS5zaXplID0gZnVuY3Rpb24oKXtcblx0XHRcdGUoKS5jc3MoJ2ZvbnQtc2l6ZScsICRzY29wZS5mb250LnNpemUgKyAncHgnKTtcblx0XHR9O1xuXG5cdFx0JHNjb3BlLmNoYW5nZUZhbWlseSA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRlKCkuY3NzKCdmb250LWZhbWlseScsICRzY29wZS5mb250LmZhbWlseSk7XG5cdFx0fTtcblxuXHRcdCRzY29wZS5jaGFuZ2VDb2xvciA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRlKCkuY3NzKCdjb2xvcicsICRzY29wZS5mb250LmNvbG9yKTtcblx0XHR9O1xuXG5cblx0XHQkc2NvcGUuJHdhdGNoKCdmb250LmJvbGQnLCBmdW5jdGlvbihuZXdWYWwpe1xuXHRcdFx0aWYobmV3VmFsKXtcblx0XHRcdFx0ZSgpLmNzcygnZm9udC13ZWlnaHQnLCAnYm9sZCcpO1xuXHRcdFx0fWVsc2V7XG5cdFx0XHRcdGUoKS5jc3MoJ2ZvbnQtd2VpZ2h0JywgJ25vcm1hbCcpO1xuXHRcdFx0fVxuXHRcdH0sIGZhbHNlKTtcblxuXHRcdCRzY29wZS4kd2F0Y2goJ2ZvbnQuaXRhbGljJywgZnVuY3Rpb24obmV3VmFsKXtcblx0XHRcdGlmKG5ld1ZhbCl7XG5cdFx0XHRcdGUoKS5jc3MoJ2ZvbnQtc3R5bGUnLCAnaXRhbGljJyk7XG5cdFx0XHR9ZWxzZXtcblx0XHRcdFx0ZSgpLmNzcygnZm9udC1zdHlsZScsICdub3JtYWwnKTtcblx0XHRcdH1cblx0XHR9LCBmYWxzZSk7XG5cblx0XHQkc2NvcGUuJHdhdGNoKCdmb250LnVuZGVybGluZScsIGZ1bmN0aW9uKG5ld1ZhbCl7XG5cdFx0XHRpZihuZXdWYWwpe1xuXHRcdFx0XHRlKCkuY3NzKCd0ZXh0LWRlY29yYXRpb24nLCAndW5kZXJsaW5lJyk7XG5cdFx0XHR9ZWxzZXtcblx0XHRcdFx0ZSgpLmNzcygndGV4dC1kZWNvcmF0aW9uJywgJ25vbmUnKTtcblx0XHRcdH1cblx0XHR9LCBmYWxzZSk7XG5cblx0fTtcblxuXHRncmFwaC5hcHAuY29udHJvbGxlcignTW9kYWxGb250Q3RybCcsIGNvbnRyb2xsZXIpO1xuXG5cbn0pKG5hbWVTcGFjZS5yZWcoJ2dyYXBoJykpO1xuXG5cblxuXG4oZnVuY3Rpb24oZ3JhcGgpe1xuXG5cdCd1c2Ugc3RyaWN0JztcblxuXHRncmFwaC5hcHAuY29udHJvbGxlcignTW9kYWxJbWFnZUN0cmwnLCBmdW5jdGlvbigkc2NvcGUsICRtb2RhbEluc3RhbmNlLCBJbWFnZVNlcnZpY2UsIFVuaXQsIGZuKXtcblx0XHQkc2NvcGUub2sgPSBmdW5jdGlvbigpe1xuXHRcdFx0JG1vZGFsSW5zdGFuY2UuY2xvc2UoKTtcblx0XHRcdGlmKGZuKXtcblx0XHRcdFx0Zm4oJHNjb3BlLnNlbGVjdEl0ZW0pO1xuXHRcdFx0fVxuXHRcdH07XG5cblx0XHQkc2NvcGUuc2VsZWN0SXRlbSA9IG51bGw7XG5cdFx0JHNjb3BlLiRtb2RhbCA9ICRtb2RhbEluc3RhbmNlO1xuXG5cdFx0JHNjb3BlLmltYWdlID0gJyc7XG5cdFx0JHNjb3BlLmZpbGUgPSBudWxsO1xuXG5cdFx0JHNjb3BlLnNlbGVjdEZpbGUgPSBmdW5jdGlvbigkZmlsZXMpe1xuXHRcdFx0aWYoJGZpbGVzLmxlbmd0aCA+PSAxKXtcblxuXHRcdFx0XHQkc2NvcGUuZmlsZSA9ICRmaWxlc1swXTtcblxuXHRcdFx0XHR2YXIgciA9IG5ldyBGaWxlUmVhZGVyKCk7XG5cdFx0XHRcdHIucmVhZEFzRGF0YVVSTCgkZmlsZXNbMF0pO1xuXG5cdFx0XHRcdHIub25sb2FkID0gZnVuY3Rpb24oKXtcblx0XHRcdFx0XHQkc2NvcGUuaW1hZ2UgPSB0aGlzLnJlc3VsdDtcblx0XHRcdFx0XHQkc2NvcGUuX3JlZnJlc2goKTtcblx0XHRcdFx0fTtcblxuXHRcdFx0fVxuXHRcdH07XG5cblx0XHQkc2NvcGUudXBsb2FkID0gZnVuY3Rpb24oKXtcblx0XHRcdGlmKCRzY29wZS5maWxlKXtcblx0XHRcdFx0SW1hZ2VTZXJ2aWNlLnVwbG9hZEJhY2tncm91bmQoJHNjb3BlLmZpbGUpXG5cdFx0XHRcdFx0LnN1Y2Nlc3MoZnVuY3Rpb24oKXtcblx0XHRcdFx0XHRcdCRzY29wZS5pbWFnZSA9IG51bGw7XG5cdFx0XHRcdFx0XHQkc2NvcGUuc3RhcnRVcGxvYWQgPSBmYWxzZTtcblx0XHRcdFx0XHRcdCRzY29wZS5yZWZyZXNoKCk7XG5cdFx0XHRcdFx0fSk7XG5cdFx0XHR9ZWxzZXtcblx0XHRcdFx0JHNjb3BlLnN0YXJ0VXBsb2FkID0gdHJ1ZTtcblx0XHRcdH1cblx0XHR9O1xuXG5cdFx0JHNjb3BlLnBhZ2UgPSAxO1xuXHRcdCRzY29wZS5wYWdlU2l6ZSA9IDEwO1xuXHRcdCRzY29wZS50b3RhbCA9IDA7XG5cdFx0JHNjb3BlLnN0YXRpY1VybCA9IFVuaXQuc3RhdGljO1xuXG5cdFx0JHNjb3BlLmNsaWNrID0gZnVuY3Rpb24oaXRlbSl7XG5cdFx0XHQkc2NvcGUuc2VsZWN0SXRlbSA9IGl0ZW07XG5cdFx0fTtcblxuXHRcdCRzY29wZS5yZW1vdmUgPSBmdW5jdGlvbihpdGVtKXtcblx0XHRcdEltYWdlU2VydmljZS5yZW1vdmVCYWNrZ3JvdW5kKFVuaXQuYmFzZW5hbWUoaXRlbS51cmwpKVxuXHRcdFx0XHQuc3VjY2VzcyhmdW5jdGlvbihyZXN1bHQpe1xuXHRcdFx0XHRcdGNvbnNvbGUubG9nKHJlc3VsdCk7XG5cdFx0XHRcdFx0JHNjb3BlLnJlZnJlc2goKTtcblxuXHRcdFx0XHRcdGlmKGl0ZW0udXJsID09PSAkc2NvcGUuc2VsZWN0SXRlbS51cmwpe1xuXHRcdFx0XHRcdFx0JHNjb3BlLnNlbGVjdEl0ZW0gPSBudWxsO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSk7XG5cdFx0fTtcblxuXHRcdCRzY29wZS5yZWZyZXNoID0gZnVuY3Rpb24oKXtcblx0XHRcdEltYWdlU2VydmljZS5nZXRCYWNrZ291bmQoe3BhZ2U6ICRzY29wZS5wYWdlLCBwYWdlU2l6ZTogJHNjb3BlLnBhZ2VTaXplfSlcblx0XHRcdFx0LnN1Y2Nlc3MoZnVuY3Rpb24ocmVzdWx0KXtcblx0XHRcdFx0XHQkc2NvcGUudG90YWwgPSByZXN1bHQuZGF0YS5jb3VudDtcblx0XHRcdFx0XHQkc2NvcGUuaW1hZ2VzID0gcmVzdWx0LmRhdGEuZGF0YXM7XG5cdFx0XHRcdH0pO1xuXHRcdH07XG5cblx0XHQkc2NvcGUucmVmcmVzaCgpO1xuXHR9KTtcblxuXG59KShuYW1lU3BhY2UucmVnKCdncmFwaCcpKTtcblxuXG5cblxuKGZ1bmN0aW9uKGdyYXBoKXtcblxuXHQndXNlIHN0cmljdCc7XG5cblx0Z3JhcGguYXBwLmNvbnRyb2xsZXIoJ01vZGFsTnVtYmVyQ3RybCcsIGZ1bmN0aW9uKCRzY29wZSwgJG1vZGFsSW5zdGFuY2UsIHRpdGxlLCBkZWZhdWx0VmFsdWUsIG1pblZhbHVlLCBtYXhWYWx1ZSwgZm4pe1xuXHRcdCRzY29wZS5vayA9IGZ1bmN0aW9uKCl7XG5cdFx0XHQkbW9kYWxJbnN0YW5jZS5jbG9zZSgpO1xuXHRcdFx0aWYoZm4pe1xuXHRcdFx0XHRmbigkc2NvcGUubnVtYmVyKTtcblx0XHRcdH1cblx0XHR9O1xuXG5cdFx0JHNjb3BlLiRtb2RhbCA9ICRtb2RhbEluc3RhbmNlO1xuXHRcdCRzY29wZS50aXRsZSA9IHRpdGxlO1xuXG5cdFx0JHNjb3BlLm51bWJlciA9IGRlZmF1bHRWYWx1ZSA/IGRlZmF1bHRWYWx1ZSA6IDA7XG5cdFx0JHNjb3BlLm1heFZhbHVlID0gbWF4VmFsdWUgPyBtYXhWYWx1ZSA6IDEwMDtcblx0XHQkc2NvcGUubWluVmFsdWUgPSBtaW5WYWx1ZSA/IG1pblZhbHVlIDogMDtcblxuXHRcdCRzY29wZS5fcmVmcmVzaCgpO1xuXG5cdH0pO1xuXG5cbn0pKG5hbWVTcGFjZS5yZWcoJ2dyYXBoJykpO1xuXG5cbihmdW5jdGlvbihncmFwaCl7XG5cblx0J3VzZSBzdHJpY3QnO1xuXG5cdGdyYXBoLmFwcC5jb250cm9sbGVyKCdNb2RhbFJlbGF0aW9uVmlld09wZW5DdHJsJywgZnVuY3Rpb24oJHNjb3BlLCAkbW9kYWxJbnN0YW5jZSwgVmlld1NlcnZpY2UsIFVuaXQsIGVkaXRvcil7XG5cblx0XHR2YXIgY2VsbCA9IGVkaXRvci5ncmFwaC5nZXRTZWxlY3Rpb25DZWxsKCk7XG5cblx0XHQkc2NvcGUub2sgPSBmdW5jdGlvbigpe1xuXHRcdFx0JG1vZGFsSW5zdGFuY2UuY2xvc2UoKTtcblxuXHRcdFx0aWYoJHNjb3BlLmRhdGEuc2VsZWN0ZWQpe1xuXHRcdFx0XHRlZGl0b3IuaGlzdG9yeS5wdXNoKGVkaXRvci5zdGF0ZS52aWV3KTtcblx0XHRcdFx0ZWRpdG9yLmFjdGlvbi5vcGVuVmlldygkc2NvcGUuZGF0YS5zZWxlY3RlZCk7XG5cdFx0XHR9XG5cdFx0fTtcblxuXHRcdCRzY29wZS4kbW9kYWwgPSAkbW9kYWxJbnN0YW5jZTtcblx0XHQkc2NvcGUuc3RhdGljVXJsID0gVW5pdC5zdGF0aWM7XG5cblx0XHQkc2NvcGUuZGF0YSA9IHt9O1xuXHRcdCRzY29wZS52aWV3cyA9IFtdO1xuXG5cdFx0Vmlld1NlcnZpY2UucHJpdmF0ZSgpXG5cdFx0XHQuc3VjY2VzcyhmdW5jdGlvbihyZXN1bHQpe1xuXHRcdFx0XHR2YXIgc3RyID0gZWRpdG9yLmdyYXBoLmdldENlbGxBdHRyKGNlbGwsICd2aWV3Jyk7XG5cdFx0XHRcdGlmKHN0cil7XG5cdFx0XHRcdFx0JC5lYWNoKHN0ci5zcGxpdCgnJCcpLCBmdW5jdGlvbigpe1xuXHRcdFx0XHRcdFx0dmFyIGk7XG5cblx0XHRcdFx0XHRcdGZvcihpPTA7IGk8cmVzdWx0LmRhdGEubGVuZ3RoOyBpKyspe1xuXHRcdFx0XHRcdFx0XHRpZihyZXN1bHQuZGF0YVtpXS5pZCA9PT0gdGhpcyl7XG5cdFx0XHRcdFx0XHRcdFx0JHNjb3BlLnZpZXdzLnB1c2gocmVzdWx0LmRhdGFbaV0pO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdH1cblx0XHRcdH0pO1xuXHR9KTtcblxuXG59KShuYW1lU3BhY2UucmVnKCdncmFwaCcpKTtcblxuXG4oZnVuY3Rpb24oZ3JhcGgpe1xuXG5cdCd1c2Ugc3RyaWN0JztcblxuXHRncmFwaC5hcHAuY29udHJvbGxlcignTW9kYWxSZWxhdGlvblZpZXdTZXRDdHJsJywgZnVuY3Rpb24oJHNjb3BlLCAkbW9kYWxJbnN0YW5jZSwgVmlld1NlcnZpY2UsIFVuaXQsIGVkaXRvcil7XG5cblx0XHR2YXIgY2VsbCA9IGVkaXRvci5ncmFwaC5nZXRTZWxlY3Rpb25DZWxsKCk7XG5cblx0XHQkc2NvcGUub2sgPSBmdW5jdGlvbigpe1xuXHRcdFx0JG1vZGFsSW5zdGFuY2UuY2xvc2UoKTtcblxuXHRcdFx0aWYoJHNjb3BlLmNoZWNrZWQubGVuZ3RoKXtcblx0XHRcdFx0dmFyIGFyciA9IFtdO1xuXHRcdFx0XHQkLmVhY2goJHNjb3BlLmNoZWNrZWQsIGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFx0YXJyLnB1c2godGhpcy5pZCk7XG5cdFx0XHRcdH0pO1xuXG5cblx0XHRcdFx0ZWRpdG9yLmdyYXBoLnNldENlbGxBdHRyKGNlbGwsICd2aWV3JywgYXJyLmpvaW4oJyQnKSk7XG5cdFx0XHR9XG5cdFx0fTtcblxuXHRcdCRzY29wZS4kbW9kYWwgPSAkbW9kYWxJbnN0YW5jZTtcblx0XHQkc2NvcGUuc3RhdGljVXJsID0gVW5pdC5zdGF0aWM7XG5cblx0XHQkc2NvcGUuY2hlY2tlZCA9IFtdO1xuXHRcdCRzY29wZS5yZWZyZXNoID0gZnVuY3Rpb24oKXtcblx0XHRcdCRzY29wZS5jaGVja2VkID0gW107XG5cdFx0XHQkLmVhY2goJHNjb3BlLnZpZXdzLCBmdW5jdGlvbigpe1xuXHRcdFx0XHRpZih0aGlzLl9jaGVja2VkKXtcblx0XHRcdFx0XHQkc2NvcGUuY2hlY2tlZC5wdXNoKHRoaXMpO1xuXHRcdFx0XHR9XG5cdFx0XHR9KTtcblx0XHR9O1xuXG5cdFx0Vmlld1NlcnZpY2UucHJpdmF0ZSgpXG5cdFx0XHQuc3VjY2VzcyhmdW5jdGlvbihyZXN1bHQpe1xuXHRcdFx0XHQkc2NvcGUudmlld3MgPSByZXN1bHQuZGF0YTtcblxuXHRcdFx0XHRpZihjZWxsKXtcblx0XHRcdFx0XHR2YXIgc3RyID0gZWRpdG9yLmdyYXBoLmdldENlbGxBdHRyKGNlbGwsICd2aWV3Jyk7XG5cdFx0XHRcdFx0aWYoc3RyKXtcblx0XHRcdFx0XHRcdCQuZWFjaChzdHIuc3BsaXQoJyQnKSwgZnVuY3Rpb24oKXtcblx0XHRcdFx0XHRcdFx0dmFyIGk7XG5cblx0XHRcdFx0XHRcdFx0Zm9yKGk9MDsgaTwkc2NvcGUudmlld3MubGVuZ3RoOyBpKyspe1xuXHRcdFx0XHRcdFx0XHRcdGlmKCRzY29wZS52aWV3c1tpXS5pZCA9PT0gdGhpcyl7XG5cdFx0XHRcdFx0XHRcdFx0XHQkc2NvcGUudmlld3NbaV0uX2NoZWNrZWQgPSB0cnVlO1xuXHRcdFx0XHRcdFx0XHRcdFx0JHNjb3BlLmNoZWNrZWQucHVzaCgkc2NvcGUudmlld3NbaV0pO1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblxuXHRcdFx0fSk7XG5cdH0pO1xuXG5cbn0pKG5hbWVTcGFjZS5yZWcoJ2dyYXBoJykpO1xuXG5cbihmdW5jdGlvbihncmFwaCl7XG5cblx0dmFyIGNvbnRyb2xsZXIgPSBmdW5jdGlvbigkc2NvcGUsICRtb2RhbEluc3RhbmNlLCBmbiwgR3JhcGhWaWV3dHJlZSl7XG5cblx0XHQkc2NvcGUuJG1vZGFsID0gJG1vZGFsSW5zdGFuY2U7XG5cblx0XHQkc2NvcGUuY2FuY2VsID0gZnVuY3Rpb24oKXtcblx0XHRcdCRtb2RhbEluc3RhbmNlLmNsb3NlKCk7XG5cdFx0fTtcblxuXHRcdCRzY29wZS5vayA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRpZigkc2NvcGUudmlldy54bWwpe1xuXHRcdFx0XHRmbigkc2NvcGUudmlldyk7XG5cdFx0XHRcdCRtb2RhbEluc3RhbmNlLmNsb3NlKCk7XG5cdFx0XHR9XG5cdFx0fTtcblxuXHRcdCRzY29wZS52aWV3dHJlZVBhcmFtcyA9IG5ldyBHcmFwaFZpZXd0cmVlKHtcblx0XHRcdGFsbG93RWRpdDogZmFsc2UsXG5cdFx0XHRxdWVyeVZpZXc6IHRydWUsXG5cdFx0XHRzaG93Rm9ybTogZmFsc2UsXG5cdFx0XHRzZWxlY3ROb2RlOiBmdW5jdGlvbihub2RlKXtcblx0XHRcdFx0JHNjb3BlLnZpZXcgPSBub2RlO1xuXHRcdFx0fVxuXHRcdH0pO1xuXG5cdH07XG5cblx0Z3JhcGguYXBwLmNvbnRyb2xsZXIoJ01vZGFsVmlld09wZW5DdHJsJywgY29udHJvbGxlcik7XG5cblxufSkobmFtZVNwYWNlLnJlZygnZ3JhcGgnKSk7XG5cblxuXG5cbihmdW5jdGlvbihncmFwaCl7XG5cblx0dmFyIGNvbnRyb2xsZXIgPSBmdW5jdGlvbigkc2NvcGUsICRtb2RhbEluc3RhbmNlLCBlZGl0b3IsIEdyYXBoVmlld3RyZWUsIFZpZXdTZXJ2aWNlLCBVbml0LCBNZXNoU2VydmljZSl7XG5cblx0XHQkc2NvcGUudmlldyA9IHtcblx0XHRcdG5hbWU6ICcnLFxuXHRcdFx0Y2F0ZWdvcnlJZDogJycsXG5cdFx0XHRkZXNjcmlwdGlvbjogJycsXG5cdFx0XHRwb3M6ICcnXG5cdFx0fTtcblxuXHRcdCRzY29wZS50aXRsZSA9ICfkv53lrZjop4blm74nO1xuXHRcdCRzY29wZS4kbW9kYWwgPSAkbW9kYWxJbnN0YW5jZTtcblxuXHRcdCRzY29wZS5jYW5jZWwgPSBmdW5jdGlvbigpe1xuXHRcdFx0JG1vZGFsSW5zdGFuY2UuY2xvc2UoKTtcblx0XHR9O1xuXG5cdFx0JHNjb3BlLm9rID0gZnVuY3Rpb24oKXtcblx0XHRcdHZhciBjYXRlID0gJHNjb3BlLnZpZXd0cmVlUGFyYW1zLmdldFNlbGVjdE5vZGUoKTtcblxuXHRcdFx0aWYoY2F0ZSAmJiAkc2NvcGUudmlldy5uYW1lKXtcblxuXHRcdFx0XHR2YXIganNvbiA9IGVkaXRvci5ncmFwaC5nZXRKc29uKCk7XG5cdFx0XHRcdHZhciBpbWFnZXMgPSBbXTtcblxuXHRcdFx0XHQkLmVhY2goanNvbi5ub2RlcywgZnVuY3Rpb24oKXtcblx0XHRcdFx0XHRpZih0aGlzLmltZyl7XG5cdFx0XHRcdFx0XHRpbWFnZXMucHVzaCh0aGlzLmltZyk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9KTtcblxuXHRcdFx0XHRNZXNoU2VydmljZS5zdmdUb01lc2goaW1hZ2VzKVxuXHRcdFx0XHRcdC5zdWNjZXNzKGZ1bmN0aW9uKHJlc3VsdCl7XG5cdFx0XHRcdFx0XHQkLmVhY2goanNvbi5ub2RlcywgZnVuY3Rpb24oKXtcblx0XHRcdFx0XHRcdFx0dGhpcy5tZXNoID0ge1xuXHRcdFx0XHRcdFx0XHRcdG10bDogVW5pdC5zdGF0aWMocmVzdWx0LmRhdGFbdGhpcy5pbWddLm10bCksXG5cdFx0XHRcdFx0XHRcdFx0b2JqOiBVbml0LnN0YXRpYyhyZXN1bHQuZGF0YVt0aGlzLmltZ10ub2JqKVxuXHRcdFx0XHRcdFx0XHR9O1xuXHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0XHR2YXIgc3ZnID0gZWRpdG9yLmdyYXBoLmdldFN2ZygpO1xuXG5cdFx0XHRcdFx0XHR2YXIgZGF0YSA9IHtcblx0XHRcdFx0XHRcdFx0Y2F0ZWdvcnlJZDogY2F0ZS5pZCxcblx0XHRcdFx0XHRcdFx0bmFtZTogJHNjb3BlLnZpZXcubmFtZSxcblx0XHRcdFx0XHRcdFx0ZGVzY3JpcHRpb246ICRzY29wZS52aWV3LmRlc2NyaXB0aW9uLFxuXHRcdFx0XHRcdFx0XHRjaXM6IGVkaXRvci5hY3Rpb24uZ2V0Q2lzSWQoKSxcblx0XHRcdFx0XHRcdFx0cG9pbnRzOiBKU09OLnN0cmluZ2lmeShqc29uKSxcblx0XHRcdFx0XHRcdFx0c3ZnOiBhbmd1bGFyLmlzT2JqZWN0KHN2ZykgPyBzdmcub3V0ZXJIVE1MIDogc3ZnLFxuXHRcdFx0XHRcdFx0XHR4bWw6IGVkaXRvci5hY3Rpb24uZ2V0WG1sKClcblx0XHRcdFx0XHRcdH07XG5cblx0XHRcdFx0XHRcdFZpZXdTZXJ2aWNlLmNyZWF0ZShkYXRhKVxuXHRcdFx0XHRcdFx0XHQuc3VjY2VzcyhmdW5jdGlvbihyZXN1bHQpe1xuXHRcdFx0XHRcdFx0XHRcdGVkaXRvci5zdGF0ZS5zZXRWaWV3KHJlc3VsdC5kYXRhKTtcblx0XHRcdFx0XHRcdFx0XHQkbW9kYWxJbnN0YW5jZS5jbG9zZSgpO1xuXHRcdFx0XHRcdFx0XHR9KTtcblxuXHRcdFx0XHRcdH0pO1xuXG5cdFx0XHR9ZWxzZXtcblx0XHRcdFx0VW5pdC5hbGVydCgn6ZSZ6K+v77ya5pyq5aGr5YaZ6KeG5Zu+5ZCN56ew5oiW6ICF5pyq6YCJ5oup5L+d5a2Y6KeG5Zu+55qE5L2N572uJyk7XG5cdFx0XHR9XG5cblx0XHR9O1xuXG5cdFx0JHNjb3BlLnZpZXd0cmVlUGFyYW1zID0gbmV3IEdyYXBoVmlld3RyZWUoe1xuXHRcdFx0YWxsb3dFZGl0OiB0cnVlLFxuXHRcdFx0c2VsZWN0Tm9kZTogZnVuY3Rpb24obm9kZSl7XG5cblx0XHRcdFx0dmFyIHBhdGggPSB0aGlzLmdldE5vZGVQYXRoKG5vZGUpO1xuXHRcdFx0XHR2YXIgbGlzdCA9IFtdO1xuXG5cdFx0XHRcdCQuZWFjaChwYXRoLCBmdW5jdGlvbigpe1xuXHRcdFx0XHRcdGxpc3QucHVzaCh0aGlzLm5hbWUpO1xuXHRcdFx0XHR9KTtcblxuXHRcdFx0XHRpZih0aGlzLmlzUHVibGljKCkpe1xuXHRcdFx0XHRcdCRzY29wZS52aWV3LnBvcyA9IGxpc3Quam9pbignIC0+ICcpO1xuXHRcdFx0XHR9ZWxzZXtcblx0XHRcdFx0XHQkc2NvcGUudmlldy5wb3MgPSBsaXN0LmpvaW4oJyAtPiAnKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdCRzY29wZS5fcmVmcmVzaCgpO1xuXHRcdFx0fVxuXHRcdH0pO1xuXG5cdH07XG5cblx0Z3JhcGguYXBwLmNvbnRyb2xsZXIoJ01vZGFsVmlld1NhdmVDdHJsJywgY29udHJvbGxlcik7XG5cblxufSkobmFtZVNwYWNlLnJlZygnZ3JhcGgnKSk7XG5cblxuXG5cbihmdW5jdGlvbihncmFwaCl7XG5cblx0dmFyIGNvbnRyb2xsZXIgPSBmdW5jdGlvbigkc2NvcGUsICRtb2RhbEluc3RhbmNlLCBlZGl0b3IsIEdyYXBoVmlld3RyZWUsIFZpZXdTZXJ2aWNlLCBVbml0LCBNZXNoU2VydmljZSl7XG5cblx0XHQkc2NvcGUudmlldyA9IHtcblx0XHRcdG5hbWU6IGVkaXRvci5zdGF0ZS52aWV3Lm5hbWUsXG5cdFx0XHRkZXNjcmlwdGlvbjogZWRpdG9yLnN0YXRlLnZpZXcuZGVzY3JpcHRpb24sXG5cdFx0XHRjYXRlZ29yeUlkOiBlZGl0b3Iuc3RhdGUudmlldy5jYXRlZ29yeUlkLFxuXHRcdFx0cG9zOiAnJ1xuXHRcdH07XG5cblx0XHQkc2NvcGUudGl0bGUgPSAn5pu05paw6KeG5Zu+Jztcblx0XHQkc2NvcGUuJG1vZGFsID0gJG1vZGFsSW5zdGFuY2U7XG5cblx0XHQkc2NvcGUuY2FuY2VsID0gZnVuY3Rpb24oKXtcblx0XHRcdCRtb2RhbEluc3RhbmNlLmNsb3NlKCk7XG5cdFx0fTtcblxuXHRcdCRzY29wZS5vayA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRpZigkc2NvcGUudmlldy5jYXRlZ29yeUlkICYmICRzY29wZS52aWV3Lm5hbWUpe1xuXG5cdFx0XHRcdHZhciBqc29uID0gZWRpdG9yLmdyYXBoLmdldEpzb24oKTtcblx0XHRcdFx0dmFyIGltYWdlcyA9IFtdO1xuXG5cdFx0XHRcdCQuZWFjaChqc29uLm5vZGVzLCBmdW5jdGlvbigpe1xuXHRcdFx0XHRcdGlmKHRoaXMuaW1nKXtcblx0XHRcdFx0XHRcdGltYWdlcy5wdXNoKHRoaXMuaW1nKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0pO1xuXG5cdFx0XHRcdE1lc2hTZXJ2aWNlLnN2Z1RvTWVzaChpbWFnZXMpXG5cdFx0XHRcdFx0LnN1Y2Nlc3MoZnVuY3Rpb24ocmVzdWx0KXtcblxuXHRcdFx0XHRcdFx0JC5lYWNoKGpzb24ubm9kZXMsIGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFx0XHRcdHRoaXMubWVzaCA9IHtcblx0XHRcdFx0XHRcdFx0XHRtdGw6IFVuaXQuc3RhdGljKHJlc3VsdC5kYXRhW3RoaXMuaW1nXS5tdGwpLFxuXHRcdFx0XHRcdFx0XHRcdG9iajogVW5pdC5zdGF0aWMocmVzdWx0LmRhdGFbdGhpcy5pbWddLm9iailcblx0XHRcdFx0XHRcdFx0fTtcblx0XHRcdFx0XHRcdH0pO1xuXG5cdFx0XHRcdFx0XHR2YXIgc3ZnID0gZWRpdG9yLmdyYXBoLmdldFN2ZygpO1xuXHRcdFx0XHRcdFx0dmFyIGRhdGEgPSB7XG5cdFx0XHRcdFx0XHRcdGNhdGVnb3J5SWQ6ICRzY29wZS52aWV3LmNhdGVnb3J5SWQsXG5cdFx0XHRcdFx0XHRcdG5hbWU6ICRzY29wZS52aWV3Lm5hbWUsXG5cdFx0XHRcdFx0XHRcdGRlc2NyaXB0aW9uOiAkc2NvcGUudmlldy5kZXNjcmlwdGlvbixcblx0XHRcdFx0XHRcdFx0Y2lzOiBlZGl0b3IuYWN0aW9uLmdldENpc0lkKCksXG5cdFx0XHRcdFx0XHRcdHBvaW50czogSlNPTi5zdHJpbmdpZnkoanNvbiksXG5cdFx0XHRcdFx0XHRcdHN2ZzogYW5ndWxhci5pc09iamVjdChzdmcpID8gc3ZnLm91dGVySFRNTCA6IHN2Zyxcblx0XHRcdFx0XHRcdFx0eG1sOiBlZGl0b3IuYWN0aW9uLmdldFhtbCgpLFxuXHRcdFx0XHRcdFx0XHRpZDogZWRpdG9yLnN0YXRlLnZpZXcuaWRcblx0XHRcdFx0XHRcdH07XG5cblx0XHRcdFx0XHRcdFZpZXdTZXJ2aWNlLnVwZGF0ZShkYXRhKVxuXHRcdFx0XHRcdFx0XHQuc3VjY2VzcyhmdW5jdGlvbigpe1xuXHRcdFx0XHRcdFx0XHRcdCRtb2RhbEluc3RhbmNlLmNsb3NlKCk7XG5cdFx0XHRcdFx0XHRcdH0pO1xuXG5cdFx0XHRcdFx0fSk7XG5cblx0XHRcdH1lbHNle1xuXHRcdFx0XHRVbml0LmFsZXJ0KCfplJnor6/vvJrmnKrloavlhpnop4blm77lkI3np7DmiJbogIXmnKrpgInmi6nkv53lrZjop4blm77nmoTkvY3nva4nKTtcblx0XHRcdH1cblxuXHRcdH07XG5cblx0XHQkc2NvcGUucG9zID0gZnVuY3Rpb24obm9kZSl7XG5cdFx0XHR2YXIgcGF0aCA9ICRzY29wZS52aWV3dHJlZVBhcmFtcy5nZXROb2RlUGF0aChub2RlKTtcblx0XHRcdHZhciBsaXN0ID0gW107XG5cblx0XHRcdCQuZWFjaChwYXRoLCBmdW5jdGlvbigpe1xuXHRcdFx0XHRsaXN0LnB1c2godGhpcy5uYW1lKTtcblx0XHRcdH0pO1xuXG5cdFx0XHRpZigkc2NvcGUudmlld3RyZWVQYXJhbXMuaXNQdWJsaWMoKSl7XG5cdFx0XHRcdCRzY29wZS52aWV3LnBvcyA9IGxpc3Quam9pbignIC0+ICcpO1xuXHRcdFx0fWVsc2V7XG5cdFx0XHRcdCRzY29wZS52aWV3LnBvcyA9IGxpc3Quam9pbignIC0+ICcpO1xuXHRcdFx0fVxuXG5cdFx0XHQkc2NvcGUuX3JlZnJlc2goKTtcblx0XHR9O1xuXG5cdFx0JHNjb3BlLnZpZXd0cmVlUGFyYW1zID0gbmV3IEdyYXBoVmlld3RyZWUoe1xuXHRcdFx0YWxsb3dFZGl0OiB0cnVlLFxuXHRcdFx0c2VsZWN0Tm9kZTogZnVuY3Rpb24obm9kZSl7XG5cdFx0XHRcdCRzY29wZS52aWV3LmNhdGVnb3J5SWQgPSBub2RlLmlkO1xuXHRcdFx0XHQkc2NvcGUucG9zKG5vZGUpO1xuXHRcdFx0fVxuXHRcdH0pO1xuXG5cdFx0JHNjb3BlLnBvcyh7bmFtZTogZWRpdG9yLnN0YXRlLnZpZXcuY2F0ZWdvcnlOYW1lLCBpZDogZWRpdG9yLnN0YXRlLnZpZXcuY2F0ZWdvcnl9KTtcblxuXHR9O1xuXG5cdGdyYXBoLmFwcC5jb250cm9sbGVyKCdNb2RhbFZpZXdVcGRhdGVDdHJsJywgY29udHJvbGxlcik7XG5cblxufSkobmFtZVNwYWNlLnJlZygnZ3JhcGgnKSk7XG5cblxuXG4vKipcbiAqIENyZWF0ZWQgYnkgZ2Mgb24gMjAxNS84LzEyLlxuICovXG5cbihmdW5jdGlvbihncmFwaCwgc2VsZil7XG5cbiAgICBncmFwaC5hcHAuY29udHJvbGxlcignTG9naW5DdHJsJyxcbiAgICAgICAgZnVuY3Rpb24oJHNjb3BlLCAkY29va2llcywgQXV0aFNlcnZpY2UsICRzdGF0ZSl7XG5cbiAgICAgICAgICAgICRzY29wZS5vbmxpbmUgPSB0cnVlO1xuXG4gICAgICAgICAgICAkKFwiLmxvYWRpbmdiYXJcIikucmVtb3ZlKCk7XG4gICAgICAgICAgICB2YXIgY29vayA9ICRjb29raWVzLmdldCgndG9rZW4nKTtcbiAgICAgICAgICAgIGlmIChjb29rICE9PSB1bmRlZmluZWQgJiYgY29vayAhPT0gJycpIHtcbiAgICAgICAgICAgICAgICAkc2NvcGUub25saW5lID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgJHNjb3BlLnVzZXIgPSBcImFkbWluaVwiO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgJHNjb3BlLmxvZ2luID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgQXV0aFNlcnZpY2UubG9naW4oe1xuICAgICAgICAgICAgICAgICAgICB1c2VybmFtZTogJHNjb3BlLnVzZXJOYW1lLFxuICAgICAgICAgICAgICAgICAgICBwYXNzd29yZDogJHNjb3BlLnBhc3N3b3JkXG4gICAgICAgICAgICAgICAgfSkuc3VjY2VzcyhmdW5jdGlvbihyZXN1bHQpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHJldERhdGEgPSByZXN1bHQuZGF0YTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCRzY29wZS5yZW1lbWJlck1lKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgZXhwaXJlRGF0ZSA9IG5ldyBEYXRlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBleHBpcmVEYXRlLnNldFllYXIoZXhwaXJlRGF0ZS5nZXRZZWFyKCkgKyAxKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vZXhwaXJlRGF0ZS5zZXRNaW51dGVzKGV4cGlyZURhdGUuZ2V0TWludXRlcygpICsgMzApO1xuICAgICAgICAgICAgICAgICAgICAgICAgJGNvb2tpZXMucHV0KCd0b2tlbicsIHJldERhdGEudG9rZW4sIHtleHBpcmVzOiBleHBpcmVEYXRlfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKCRjb29raWVzLmdldCgndG9rZW4nKSk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvL3ZhciBub3cgPSBuZXcgRGF0ZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy9ub3cuc2V0TWludXRlcyhub3cuZ2V0TWludXRlcygpICsgMSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAkY29va2llcy5wdXQoJ3Rva2VuJywgcmV0RGF0YS50b2tlbik7XG4gICAgICAgICAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKFwiZG9udCByZW1lbWJlciBtZVwiKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAkc3RhdGUuZ28oJ2hvbWUuZWRpdCcpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgJHNjb3BlLmludG8gPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAkc3RhdGUuZ28oJ2hvbWUuZWRpdCcpO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICRzY29wZS5zd2l0Y2ggPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAkc2NvcGUub25saW5lID0gdHJ1ZTtcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgICRzY29wZS4kd2F0Y2goJ29ubGluZScsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIGlmICgkc2NvcGUub25saW5lKSB7XG5cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG5cbn0pKG5hbWVTcGFjZS5yZWcoJ2dyYXBoJyksIG5hbWVTcGFjZS5yZWcoJ2dyYXBoLnBhZ2UnKSk7XG5cbihmdW5jdGlvbihncmFwaCl7XG5cblx0J3VzZSBzdHJpY3QnO1xuXG5cdHZhciB1cmwgPSBncmFwaC5zdGF0ZVVybDtcblxuXHRncmFwaC5hcHAuY29uZmlnKGZ1bmN0aW9uKCRzdGF0ZVByb3ZpZGVyKSB7XG5cblx0XHQkc3RhdGVQcm92aWRlclxuXHRcdFx0LnN0YXRlKCdsb2dpbicsIHtcblx0XHRcdFx0dXJsOiAnL2xvZ2luJyxcblx0XHRcdFx0dGVtcGxhdGVVcmw6IHVybCgnL2xvZ2luL2xvZ2luLmh0bWwnKSxcblx0XHRcdFx0Y29udHJvbGxlcjogJ0xvZ2luQ3RybCcsXG5cdFx0XHRcdGRhdGE6IHtcblx0XHRcdFx0XHR0aXRsZTogJydcblx0XHRcdFx0fVxuXHRcdFx0fSlcblxuXHR9KTtcblxuXG59KShuYW1lU3BhY2UucmVnKCdncmFwaCcpKTtcblxuKGZ1bmN0aW9uKGdyYXBoKXtcblxuXHQndXNlIHN0cmljdCc7XG5cblx0Z3JhcGguYXBwLmNvbnRyb2xsZXIoJ01haW5DdHJsJywgWyckc2NvcGUnLCBmdW5jdGlvbigkc2NvcGUpe1xuXHRcdCRzY29wZS5MQVlPVVQgPSB7fTtcblxuXHRcdCRzY29wZS5MQVlPVVQuY29sbGFwc2VkTWFpbkxlZnQgPSBmYWxzZTtcblx0XHQkc2NvcGUuTEFZT1VULmNvbGxhcHNlZFNpZGViYXIgPSBmYWxzZTtcblxuXHRcdCRzY29wZS5rZXl3b3JkID0gJyc7XG5cblx0XHQkc2NvcGUuc2VhcmNoID0gZnVuY3Rpb24oKXtcblx0XHRcdGlmKCRzY29wZS5rZXl3b3JkKXtcblx0XHRcdFx0JHNjb3BlLiRzdGF0ZS5nbygnaG9tZS5zZWFyY2gucmVzdWx0Jywge2tleXdvcmQ6ICRzY29wZS5rZXl3b3JkfSk7XG5cdFx0XHR9XG5cdFx0fTtcblx0fV0pO1xuXG59KShuYW1lU3BhY2UucmVnKCdncmFwaCcpKTtcblxuXG4oZnVuY3Rpb24oZ3JhcGgsIHNlbGYpe1xuXG5cdC8qKlxuXHQgKiDorrDlvZXmmK/lkKbliJ3lp4vljJblkITkuKrmqKHlnZcgZmxhZ1xuXHQgKiBAdHlwZSB7e319XG5cdCAqL1xuXHRzZWxmLmlzSW5pdCA9IHt9O1xuXG5cdC8qKlxuXHQgKiDliJ3lp4vljJZDSeWIhuexu+Wbvuagh1xuXHQgKi9cblx0c2VsZi5pbml0Q2F0ZSA9IGZ1bmN0aW9uKCl7XG5cdFx0dmFyICRjb250YWluZXIgPSAkKCcjY2F0ZWdvcnlfaWNvbicpO1xuXHRcdCRjb250YWluZXIuZmluZCgnLmRyYWctYm94LWl0ZW0nKS5lYWNoKGZ1bmN0aW9uKCl7XG5cdFx0XHRzZWxmLnNpZGViYXIuYWRkSW1hZ2VQYWxldHRlKFxuXHRcdFx0XHR0aGlzLFxuXHRcdFx0XHQkKHRoaXMpLmF0dHIoJ2RhdGEtbmFtZScpLFxuXHRcdFx0XHQkKHRoaXMpLmF0dHIoJ2RhdGEtaWNvbicpLFxuXHRcdFx0XHRncmFwaC5ERUZJTkVfQ0FURS5EUkFHX1dJRFRILFxuXHRcdFx0XHRncmFwaC5ERUZJTkVfQ0FURS5EUkFHX0hFSUdIVCxcblx0XHRcdFx0Z3JhcGguREVGSU5FX0NBVEUuRFJBR19XSURUSCxcblx0XHRcdFx0Z3JhcGguREVGSU5FX0NBVEUuRFJBR19IRUlHSFRcblx0XHRcdCk7XG5cdFx0fSk7XG5cdH07XG5cblx0LyoqXG5cdCAqIHPliJ3lp4vljJboh6rlrprkuYnlm77moIdcblx0ICovXG5cdHNlbGYuaW5pdE93bkljb24gPSBmdW5jdGlvbigpe1xuXHRcdHZhciAkY29udGFpbmVyID0gJCgnI293bl9pY29uJyk7XG5cdFx0JGNvbnRhaW5lci5maW5kKCcuZHJhZy1ib3gtaXRlbScpLmVhY2goZnVuY3Rpb24oKXtcblx0XHRcdHNlbGYuc2lkZWJhci5hZGRJbWFnZVBhbGV0dGUoXG5cdFx0XHRcdHRoaXMsXG5cdFx0XHRcdCQodGhpcykuYXR0cignZGF0YS1uYW1lJyksXG5cdFx0XHRcdCQodGhpcykuYXR0cignZGF0YS1pY29uJyksXG5cdFx0XHRcdGdyYXBoLkRFRklORV9DQVRFLkRSQUdfV0lEVEgsXG5cdFx0XHRcdGdyYXBoLkRFRklORV9DQVRFLkRSQUdfSEVJR0hULFxuXHRcdFx0XHRncmFwaC5ERUZJTkVfQ0FURS5EUkFHX1dJRFRILFxuXHRcdFx0XHRncmFwaC5ERUZJTkVfQ0FURS5EUkFHX0hFSUdIVFxuXHRcdFx0KTtcblx0XHR9KTtcblx0fTtcblxuXHQvKipcblx0ICog5Yid5aeL5YyW5Z+656GA5Zu+5qCHXG5cdCAqL1xuXHRzZWxmLmluaXRCYXNlSWNvbiA9IGZ1bmN0aW9uKCl7XG5cdFx0dmFyIGNvbnRlbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjYmFzZV9pY29uJyk7XG5cblx0XHRzZWxmLnNpZGViYXIuYWRkR2VuZXJhbFBhbGV0dGUoY29udGVudCwnc3dpbWxhbmUnLCAyMDAsIDIwMCwgJ0NvbnRhaW5lcicpO1xuXHRcdHNlbGYuc2lkZWJhci5hZGRHZW5lcmFsUGFsZXR0ZShjb250ZW50LCdzd2ltbGFuZTtob3Jpem9udGFsPTAnLCAyMDAsIDIwMCwgJ1Bvb2wnKTtcblx0XHRzZWxmLnNpZGViYXIuYWRkR2VuZXJhbFBhbGV0dGUoY29udGVudCwndGV4dCcsIDQwLCAyNiwgJ1RleHQnKTtcblx0XHRzZWxmLnNpZGViYXIuYWRkR2VuZXJhbFBhbGV0dGUoY29udGVudCwgbnVsbCwgMTIwLCA2MCk7XG5cdFx0c2VsZi5zaWRlYmFyLmFkZEdlbmVyYWxQYWxldHRlKGNvbnRlbnQsJ3JvdW5kZWQ9MScsIDEyMCwgNjApO1xuXHRcdHNlbGYuc2lkZWJhci5hZGRHZW5lcmFsUGFsZXR0ZShjb250ZW50LCdlbGxpcHNlJywgODAsIDgwKTtcblx0XHRzZWxmLnNpZGViYXIuYWRkR2VuZXJhbFBhbGV0dGUoY29udGVudCwnZWxsaXBzZTtzaGFwZT1kb3VibGVFbGxpcHNlJywgODAsIDgwKTtcblx0XHRzZWxmLnNpZGViYXIuYWRkR2VuZXJhbFBhbGV0dGUoY29udGVudCwndHJpYW5nbGUnLCA2MCwgODApO1xuXHRcdHNlbGYuc2lkZWJhci5hZGRHZW5lcmFsUGFsZXR0ZShjb250ZW50LCdyaG9tYnVzJywgODAsIDgwKTtcblx0XHRzZWxmLnNpZGViYXIuYWRkR2VuZXJhbFBhbGV0dGUoY29udGVudCwnc2hhcGU9aGV4YWdvbicsIDEyMCwgODApO1xuXHRcdHNlbGYuc2lkZWJhci5hZGRHZW5lcmFsUGFsZXR0ZShjb250ZW50LCdzaGFwZT1hY3Rvcjt2ZXJ0aWNhbExhYmVsUG9zaXRpb249Ym90dG9tO3ZlcnRpY2FsQWxpZ249dG9wJywgNDAsIDYwKTtcblx0XHRzZWxmLnNpZGViYXIuYWRkR2VuZXJhbFBhbGV0dGUoY29udGVudCwnZWxsaXBzZTtzaGFwZT1jbG91ZCcsIDEyMCwgODApO1xuXHRcdHNlbGYuc2lkZWJhci5hZGRHZW5lcmFsUGFsZXR0ZShjb250ZW50LCdzaGFwZT1jeWxpbmRlcicsIDYwLCA4MCk7XG5cdFx0c2VsZi5zaWRlYmFyLmFkZEdlbmVyYWxQYWxldHRlKGNvbnRlbnQsJ2xpbmUnLCAxNjAsIDEwKTtcblx0XHRzZWxmLnNpZGViYXIuYWRkR2VuZXJhbFBhbGV0dGUoY29udGVudCwnbGluZTtkaXJlY3Rpb249c291dGgnLCAxMCwgMTYwKTtcblx0XHRzZWxmLnNpZGViYXIuYWRkR2VuZXJhbFBhbGV0dGUoY29udGVudCwnc2hhcGU9eG9yJywgNjAsIDgwKTtcblx0XHRzZWxmLnNpZGViYXIuYWRkR2VuZXJhbFBhbGV0dGUoY29udGVudCwnc2hhcGU9b3InLCA2MCwgODApO1xuXHRcdHNlbGYuc2lkZWJhci5hZGRHZW5lcmFsUGFsZXR0ZShjb250ZW50LCdzaGFwZT1zdGVwJywgMTIwLCA4MCk7XG5cdFx0c2VsZi5zaWRlYmFyLmFkZEdlbmVyYWxQYWxldHRlKGNvbnRlbnQsJ3NoYXBlPXRhcGUnLCAxMjAsIDEwMCk7XG5cdFx0c2VsZi5zaWRlYmFyLmFkZEdlbmVyYWxQYWxldHRlKGNvbnRlbnQsJ3NoYXBlPWN1YmUnLCAxMjAsIDgwKTtcblx0XHRzZWxmLnNpZGViYXIuYWRkR2VuZXJhbFBhbGV0dGUoY29udGVudCwnc2hhcGU9bm90ZScsIDgwLCAxMDApO1xuXHRcdHNlbGYuc2lkZWJhci5hZGRHZW5lcmFsUGFsZXR0ZShjb250ZW50LCdzaGFwZT1mb2xkZXInLCAxMjAsIDEyMCk7XG5cdFx0c2VsZi5zaWRlYmFyLmFkZEdlbmVyYWxQYWxldHRlKGNvbnRlbnQsJ3NoYXBlPWNhcmQnLCA2MCwgODApO1xuXHRcdHNlbGYuc2lkZWJhci5hZGRHZW5lcmFsUGFsZXR0ZShjb250ZW50LCdzaGFwZT1wbHVzJywgMjAsIDIwKTtcblxuXHRcdHNlbGYuc2lkZWJhci5jcmVhdGVFZGdlVGVtcGxhdGUoY29udGVudCwnZWRnZVN0eWxlPW5vbmU7ZW5kQXJyb3c9bm9uZTsnLCAxMDAsIDEwMCk7XG5cdFx0c2VsZi5zaWRlYmFyLmNyZWF0ZUVkZ2VUZW1wbGF0ZShjb250ZW50LCdlZGdlU3R5bGU9bm9uZScsIDEwMCwgMTAwKTtcblx0XHRzZWxmLnNpZGViYXIuY3JlYXRlRWRnZVRlbXBsYXRlKGNvbnRlbnQsJ2VkZ2VTdHlsZT1lbGJvd0VkZ2VTdHlsZTtlbGJvdz1ob3Jpem9udGFsJywgMTAwLCAxMDApO1xuXHRcdHNlbGYuc2lkZWJhci5jcmVhdGVFZGdlVGVtcGxhdGUoY29udGVudCwnZWRnZVN0eWxlPWVsYm93RWRnZVN0eWxlO2VsYm93PXZlcnRpY2FsJywgMTAwLCAxMDApO1xuXHRcdHNlbGYuc2lkZWJhci5jcmVhdGVFZGdlVGVtcGxhdGUoY29udGVudCwnZWRnZVN0eWxlPXNlZ21lbnRFZGdlU3R5bGUnLCAxMDAsIDEwMCk7XG5cdFx0c2VsZi5zaWRlYmFyLmNyZWF0ZUVkZ2VUZW1wbGF0ZShjb250ZW50LCdhcnJvdycsIDEwMCwgMTAwKTtcblx0fTtcblxuXHQvKipcblx0ICog5oqK5pyN5Yqh56uv55qE5pWw5o2u6L2s5o2i5Li66aG16Z2i5bGV546w55qE5YiG57G75pWw5o2u57uT5p6E77yM5pa55L6/6aG16Z2i5bGV56S6LlxuXHQgKiBAcGFyYW0gZGF0YVxuXHQgKiBAcmV0dXJucyB7QXJyYXl9XG5cdCAqL1xuXHRzZWxmLmZvcm1hdCA9IGZ1bmN0aW9uKGRhdGEpe1xuXHRcdHZhciBhcnIgPSBbXSwgaztcblxuXHRcdGZvcihrPTA7IGs8ZGF0YS5sZW5ndGg7IGsrKyl7XG5cdFx0XHR2YXIgbyA9IHtcblx0XHRcdFx0aXRlbXM6IFtdXG5cdFx0XHR9O1xuXG5cdFx0XHR2YXIgaXRlbSA9IGRhdGFba107XG5cblx0XHRcdGlmKCFpdGVtLnBhcmVudCl7XG5cdFx0XHRcdG8uaXRlbXMucHVzaChpdGVtKTtcblx0XHRcdFx0by5sYWJlbCA9IGl0ZW0ubmFtZTtcblx0XHRcdFx0YXJyLnB1c2gobyk7XG5cdFx0XHR9ZWxzZXtcblx0XHRcdFx0dmFyIGksIGosIGlzRXhzdGluZyA9IGZhbHNlO1xuXG5cdFx0XHRcdGZvcihpPTA7IGk8YXJyLmxlbmd0aDsgaSsrKXtcblx0XHRcdFx0XHRmb3Ioaj0wOyBqPGFycltpXS5pdGVtcy5sZW5ndGg7IGorKyl7XG5cdFx0XHRcdFx0XHRpZihhcnJbaV0uaXRlbXNbal0uaWQgPT09IGl0ZW0ucGFyZW50KXtcblx0XHRcdFx0XHRcdFx0YXJyW2ldLml0ZW1zLnB1c2goaXRlbSk7XG5cdFx0XHRcdFx0XHRcdGlzRXhzdGluZyA9IHRydWU7XG5cdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIOi/memHjOmcgOimgeWBmuS4gOS4qnB1c2jmrKHmlbDpmZDliLbvvIzku6XpmLLmraLlvZPliY1mb3Llvqrnjq/kvJrlm6DkuLppdGVt5om+5LiN5Yiw54i25Lqy6IqC54K56ICM6L+b5YWl5q275b6q546vXG5cdFx0XHRcdC8vIOaMieato+W4uOeahOaVsOaNruaYr+S4jeW6lOivpeWHuueOsGl0ZW3msqHmnInniLbkurLoioLngrnmg4XlhrXnmoRcblx0XHRcdFx0Ly8g5Zug5q2k6L+Z6YeM5YGa5LqG6L+Z5Liq5Yik5pat562J5LqO5piv5ouF5b+D5ZCO5Y+w5pWw5o2u5Ye6546w6ZSZ6K+v5a+86Ie05YmN56uv5rWP6KeI5Zmo5q275b6q546v5bSp5rqD55qE5LiA5Liq5Yik5patXG5cdFx0XHRcdC8vIOWIpOaWreadoeS7tuS4reeahDPmmK/pmZDliLZpdGVtIHB1c2jmrKHmlbDpmZDliLbvvIzov5nkuKrmlbDlrZflupTor6XmmK/ov5nkuKrmoJHlvaLmlbDmja7mnIDlpKfnmoTnurXmt7HmlbBcblx0XHRcdFx0Ly8g5q+U5aaC5pyJNue6p+WtkOiKgueCuei/memHjOWwsemcgOimgeaKijPkv67mlLnkuLo2XG5cdFx0XHRcdGlmKCFpc0V4c3RpbmcgJiYgKCFpdGVtLl9jb3VudCB8fCBpdGVtLl9jb3VudCA8PTMpKXtcblx0XHRcdFx0XHRpZighaXRlbS5fY291bnQpe1xuXHRcdFx0XHRcdFx0aXRlbS5fY291bnQgPSAwO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRpdGVtLl9jb3VudCsrO1xuXHRcdFx0XHRcdGRhdGEucHVzaChpdGVtKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiBhcnI7XG5cdH07XG5cblx0dmFyIGNvbnRyb2xsZXIgPSBmdW5jdGlvbigkc2NvcGUsICR0aW1lb3V0LCBDaUNhdGVTZXJ2aWNlLCBHcmFwaFRvb2xiYXIsIEVkaXRvciwgR3JhcGhDb250ZXh0TWVudSwgJG1vZGFsLCBDaVNlcnZpY2UsIG5nVGFibGVQYXJhbXMsXG5cdFx0XHRcdFx0XHRcdCAgRGF0YURyYXcsIEljb25TZXJ2aWNlLCBVbml0LCBWaWV3U2VydmljZSwgR3JhcGhJbmZvLCBDb250ZXh0TGlicywgR3JhcGhUYWJsZSwgQ29uc3QsIEV2ZW50KXtcblxuXG5cdFx0JHNjb3BlLmlzU2VhcmNoID0gZmFsc2U7XG5cdFx0JHNjb3BlLmNhdGVzID0gW107XG5cdFx0JHNjb3BlLmNvbmZpZyA9IHt9O1xuXHRcdCRzY29wZS5zZWxlY3RDYXRlcyA9IFtdO1xuXHRcdCRzY29wZS5pbml0Q2F0ZSA9IHNlbGYuaW5pdENhdGU7XG5cdFx0JHNjb3BlLmNoZWNrYm94ZXMgPSB7XG5cdFx0XHRjaGVja2VkOiBmYWxzZSxcblx0XHRcdGl0ZW1zOiB7fVxuXHRcdH07XG5cblx0XHQkc2NvcGUuaWNvbiA9IHtcblx0XHRcdHBhZ2U6IDEsXG5cdFx0XHRwYWdlU2l6ZTogMzAsXG5cdFx0XHR0b3RhbDogMFxuXHRcdH07XG5cblx0XHQkc2NvcGUuaWNvbnMgPSBbXTtcblxuXHRcdCRzY29wZS5pbml0QmFzZUljb24gPSBmdW5jdGlvbigpe1xuXHRcdFx0aWYoIXNlbGYuaXNJbml0LmJhc2VJY29uKXtcblx0XHRcdFx0c2VsZi5pc0luaXQuYmFzZUljb24gPSB0cnVlO1xuXHRcdFx0XHQkdGltZW91dChzZWxmLmluaXRCYXNlSWNvbiwgMTAwKTtcblx0XHRcdH1cblx0XHR9O1xuXG5cdFx0JHNjb3BlLmluaXRPd25JY29uID0gZnVuY3Rpb24oKXtcblx0XHRcdGlmKCFzZWxmLmlzSW5pdC5vd25JY29uKXtcblx0XHRcdFx0c2VsZi5pc0luaXQub3duSWNvbiA9IHRydWU7XG5cdFx0XHRcdCRzY29wZS5yZWxvYWRJY29uKCk7XG5cdFx0XHR9XG5cdFx0fTtcblxuXHRcdCRzY29wZS5yZWxvYWRJY29uID0gZnVuY3Rpb24oKXtcblx0XHRcdEljb25TZXJ2aWNlLmdldCgkc2NvcGUuaWNvbilcblx0XHRcdFx0LnN1Y2Nlc3MoZnVuY3Rpb24ocmVzdWx0KXtcblx0XHRcdFx0XHQkc2NvcGUuaWNvbi50b3RhbCA9IHJlc3VsdC5kYXRhLmNvdW50O1xuXHRcdFx0XHRcdCRzY29wZS5pY29ucyA9IHJlc3VsdC5kYXRhLmRhdGFzO1xuXG5cdFx0XHRcdFx0JHRpbWVvdXQoc2VsZi5pbml0T3duSWNvbiwgMTAwKTtcblx0XHRcdFx0fSk7XG5cdFx0fTtcblxuXHRcdCRzY29wZS5pbml0Q29uZmlnID0gZnVuY3Rpb24oKXtcblx0XHRcdGlmKHNlbGYuaXNJbml0LmNvbmZpZyl7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0Ly9zZWxmLmlzSW5pdC5jb25maWcgPSB0cnVlO1xuXG5cdFx0XHRDaUNhdGVTZXJ2aWNlLmdldCgpLnN1Y2Nlc3MoZnVuY3Rpb24ocmVzdWx0KXtcblx0XHRcdFx0JHNjb3BlLnNlbGVjdENhdGVzID0gcmVzdWx0LmRhdGE7XG5cdFx0XHRcdCRzY29wZS5fcmVmcmVzaCgpO1xuXHRcdFx0fSk7XG5cdFx0fTtcblxuXHRcdCRzY29wZS5jb25maWdTZWFyY2ggPSBmdW5jdGlvbigpe1xuXHRcdFx0aWYoJHNjb3BlLmNvbmZpZy5jYXRlKXtcblx0XHRcdFx0JHNjb3BlLmlzU2VhcmNoID0gdHJ1ZTtcblx0XHRcdFx0JHNjb3BlLnRhYmxlUGFyYW1zLnBhZ2UoMSk7XG5cdFx0XHRcdCRzY29wZS50YWJsZVBhcmFtcy5yZWxvYWQoKTtcblx0XHRcdH1cblx0XHR9O1xuXG5cdFx0JHNjb3BlLnVwbG9hZEljb24gPSBmdW5jdGlvbihmaWxlcyl7XG5cdFx0XHRpZihmaWxlcyAmJiBmaWxlcy5sZW5ndGgpe1xuXG5cdFx0XHRcdHZhciBmaWxlID0gZmlsZXNbMF07XG5cblx0XHRcdFx0JHNjb3BlLnNob3dQcm9ncmVzc2JhciA9IHRydWU7XG5cblx0XHRcdFx0aWYoc2VsZi5wcm9ncmVzc1Byb21pc2Upe1xuXHRcdFx0XHRcdCR0aW1lb3V0LmNhbmNlbChzZWxmLnByb2dyZXNzUHJvbWlzZSk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRJY29uU2VydmljZS51cGxvYWQoZmlsZSlcblx0XHRcdFx0XHQucHJvZ3Jlc3MoZnVuY3Rpb24oZXZ0KXtcblx0XHRcdFx0XHRcdCRzY29wZS5pY29uVXBsb2FQcm9ncmVzc1BlcmNlbnRhZ2UgPSBwYXJzZUludCgxMDAuMCAqIGV2dC5sb2FkZWQgLyBldnQudG90YWwpO1xuXHRcdFx0XHRcdH0pXG5cdFx0XHRcdFx0LnN1Y2Nlc3MoZnVuY3Rpb24oKXtcblx0XHRcdFx0XHRcdCRzY29wZS5yZWxvYWRJY29uKCk7XG5cdFx0XHRcdFx0XHQkc2NvcGUuaGlkZVByb2dyZXNzYmFyKCk7XG5cdFx0XHRcdFx0fSlcblx0XHRcdFx0XHQuZXJyb3IoZnVuY3Rpb24oKXtcblx0XHRcdFx0XHRcdCRzY29wZS5oaWRlUHJvZ3Jlc3NiYXIoKTtcblx0XHRcdFx0XHR9KTtcblx0XHRcdH1cblx0XHR9O1xuXG5cdFx0JHNjb3BlLmhpZGVQcm9ncmVzc2JhciA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRzZWxmLnByb2dyZXNzUHJvbWlzZSA9ICR0aW1lb3V0KGZ1bmN0aW9uKCl7XG5cdFx0XHRcdCRzY29wZS5zaG93UHJvZ3Jlc3NiYXIgPSBmYWxzZTtcblx0XHRcdH0sIDMwMDApO1xuXHRcdH07XG5cblx0XHQkc2NvcGUucHJlU3RhdGljID0gZnVuY3Rpb24odXJsKXtcblx0XHRcdHJldHVybiBVbml0LnN0YXRpYyh1cmwpO1xuXHRcdH07XG5cblx0XHQkc2NvcGUuJG9uKCckdmlld0NvbnRlbnRMb2FkZWQnLCBmdW5jdGlvbigpIHtcblxuXHRcdFx0c2VsZi5lZGl0b3IgPSBuZXcgRWRpdG9yKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNncmFwaCcpLCBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjZ3JhcGgtb3V0bGluZScpKTtcblx0XHRcdCRzY29wZS5ncmFwaFRhYmxlUGFyYW1zID0gbmV3IEdyYXBoVGFibGUoc2VsZi5lZGl0b3IpO1xuXG5cdFx0XHRuZXcgR3JhcGhDb250ZXh0TWVudShzZWxmLmVkaXRvciwge1xuXHRcdFx0XHR2ZXJ0ZXg6IFtcblx0XHRcdFx0XHRDb25zdC5NRU5VX0NFTExfQ09QWSxcblx0XHRcdFx0XHRDb25zdC5NRU5VX0NFTExfQ1VULFxuXHRcdFx0XHRcdENvbnN0Lk1FTlVfQ0VMTF9ERUxFVEUsXG5cdFx0XHRcdFx0Jy0nLFxuXHRcdFx0XHRcdENvbnN0Lk1FTlVfU1RZTEUsXG5cdFx0XHRcdFx0W1xuXHRcdFx0XHRcdFx0Q29uc3QuTUVOVV9GT05UX1NUWUxFLFxuXHRcdFx0XHRcdFx0Q29uc3QuTUVOVV9TVFJPS0VfV0lEVEgsXG5cdFx0XHRcdFx0XHRDb25zdC5NRU5VX09QQUNJVFlcblx0XHRcdFx0XHRdLFxuXHRcdFx0XHRcdCctJyxcblx0XHRcdFx0XHRDb25zdC5NRU5VX0VYUEFORF9OT0RFLFxuXHRcdFx0XHRcdENvbnN0Lk1FTlVfT1BFTl9VUkwsXG5cdFx0XHRcdFx0Q29uc3QuTUVOVV9WSUVXX1JFTEFUSU9OLFxuXHRcdFx0XHRcdFtcblx0XHRcdFx0XHRcdENvbnN0Lk1FTlVfVklFV19SRUxBVElPTl9TRVQsXG5cdFx0XHRcdFx0XHRDb25zdC5NRU5VX1ZJRVdfUkVMQVRJT05fT1BFTlxuXHRcdFx0XHRcdF1cblx0XHRcdFx0XSxcblx0XHRcdFx0ZWRnZTogW1xuXHRcdFx0XHRcdENvbnN0Lk1FTlVfQ0VMTF9DT1BZLFxuXHRcdFx0XHRcdENvbnN0Lk1FTlVfQ0VMTF9DVVQsXG5cdFx0XHRcdFx0Q29uc3QuTUVOVV9DRUxMX0RFTEVURSxcblx0XHRcdFx0XHQnLScsXG5cdFx0XHRcdFx0Q29uc3QuTUVOVV9TVFlMRSxcblx0XHRcdFx0XHRbXG5cdFx0XHRcdFx0XHRDb25zdC5NRU5VX0ZPTlRfU1RZTEUsXG5cdFx0XHRcdFx0XHRDb25zdC5NRU5VX1NUUk9LRV9XSURUSCxcblx0XHRcdFx0XHRcdENvbnN0Lk1FTlVfT1BBQ0lUWVxuXHRcdFx0XHRcdF1cblx0XHRcdFx0XSxcblx0XHRcdFx0Y2FudmFzOiBbXG5cblx0XHRcdFx0XHRDb25zdC5NRU5VX1ZJRVdfTkVXLFxuXHRcdFx0XHRcdENvbnN0Lk1FTlVfVklFV19PUEVOLFxuXHRcdFx0XHRcdENvbnN0Lk1FTlVfVklFV19TQVZFLFxuXHRcdFx0XHRcdENvbnN0Lk1FTlVfVklFV19VUERBVEUsXG5cdFx0XHRcdFx0Jy0nLFxuXHRcdFx0XHRcdENvbnN0Lk1FTlVfRVhQT1JULFxuXHRcdFx0XHRcdFtcblx0XHRcdFx0XHRcdENvbnN0Lk1FTlVfRVhQT1JUX1BORyxcblx0XHRcdFx0XHRcdENvbnN0Lk1FTlVfRVhQT1JUX1BERixcblx0XHRcdFx0XHRcdENvbnN0Lk1FTlVfRVhQT1JUX1NWRyxcblx0XHRcdFx0XHRcdENvbnN0Lk1FTlVfRVhQT1JUX1hNTFxuXHRcdFx0XHRcdF0sXG5cdFx0XHRcdFx0Jy0nLFxuXHRcdFx0XHRcdENvbnN0Lk1FTlVfR1JBUEhfQ0xFQVIsXG5cdFx0XHRcdFx0Q29uc3QuTUVOVV9DRUxMX1BBU1RFLFxuXHRcdFx0XHRcdCctJyxcblx0XHRcdFx0XHRDb25zdC5NRU5VX0xBWU9VVCxcblx0XHRcdFx0XHRbXG5cdFx0XHRcdFx0XHRDb25zdC5NRU5VX0xBWU9VVF9IT1JJWk9OVEFMLFxuXHRcdFx0XHRcdFx0Q29uc3QuTUVOVV9MQVlPVVRfVkVSVElDQUwsXG5cdFx0XHRcdFx0XHRDb25zdC5NRU5VX0xBWU9VVF9PUkdBTklDLFxuXHRcdFx0XHRcdFx0Q29uc3QuTUVOVV9MQVlPVVRfQ0lSQ0xFLFxuXHRcdFx0XHRcdFx0Ly9Db25zdC5NRU5VX0xBWU9VVF9QQVJBTExFTCxcblx0XHRcdFx0XHRcdENvbnN0Lk1FTlVfTEFZT1VUX1NUQUNLX0hPUklaT05UQUwsXG5cdFx0XHRcdFx0XHRDb25zdC5NRU5VX0xBWU9VVF9TVEFDS19WRVJUSUNBTFxuXHRcdFx0XHRcdF0sXG5cdFx0XHRcdFx0Jy0nLFxuXHRcdFx0XHRcdENvbnN0Lk1FTlVfWk9PTSxcblx0XHRcdFx0XHRbXG5cdFx0XHRcdFx0XHRDb25zdC5NRU5VX1pPT01fSU4sXG5cdFx0XHRcdFx0XHRDb25zdC5NRU5VX1pPT01fT1VULFxuXHRcdFx0XHRcdFx0Q29uc3QuTUVOVV9aT09NX0NFTlRFUixcblx0XHRcdFx0XHRcdENvbnN0Lk1FTlVfWk9PTV9BQ1RVQUxcblx0XHRcdFx0XHRdLFxuXHRcdFx0XHRcdCctJyxcblx0XHRcdFx0XHRDb25zdC5NRU5VX1ZJRVdfUkVMQVRJT05fQkFDS1xuXG5cdFx0XHRcdF0sXG5cdFx0XHRcdGxpYnM6IENvbnRleHRMaWJzXG5cdFx0XHR9KTtcblxuXHRcdFx0JHNjb3BlLnRvb2xiYXJQYXJhbXMgPSBuZXcgR3JhcGhUb29sYmFyKHtcblx0XHRcdFx0ZWRpdG9yOiBzZWxmLmVkaXRvclxuXHRcdFx0fSk7XG5cblx0XHRcdHNlbGYuZWRpdG9yLnRvb2xiYXIgPSAkc2NvcGUudG9vbGJhclBhcmFtcztcblxuXHRcdFx0JHRpbWVvdXQoZnVuY3Rpb24oKXtcblx0XHRcdFx0c2VsZi5zaWRlYmFyID0gbmV3IFNpZGViYXIoc2VsZi5lZGl0b3IsIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNjYXRlZ29yeV9pY29uJykpO1xuXHRcdFx0XHRzZWxmLmVkaXRvci5ncmFwaC5rZXlIYW5kbGVyLmhhbmRsZXIuZW5hYmxlZCA9IHRydWU7XG5cblx0XHRcdH0pO1xuXG5cdFx0XHQkc2NvcGUuaW5mb1BhcmFtcyA9IG5ldyBHcmFwaEluZm8oc2VsZi5lZGl0b3IpO1xuXG5cdFx0XHRpZigkc2NvcGUuJHN0YXRlLnBhcmFtcy5pZCl7XG5cdFx0XHRcdFZpZXdTZXJ2aWNlLmdldFZpZXcoJHNjb3BlLiRzdGF0ZS5wYXJhbXMuaWQpXG5cdFx0XHRcdFx0LnN1Y2Nlc3MoZnVuY3Rpb24ocmVzdWx0KXtcblx0XHRcdFx0XHRcdHNlbGYuZWRpdG9yLmFjdGlvbi5vcGVuVmlldyhyZXN1bHQuZGF0YSk7XG5cdFx0XHRcdFx0fSk7XG5cdFx0XHR9XG5cblx0XHR9KTtcblxuXHRcdCRzY29wZS50YWJsZVBhcmFtcyA9IG5ldyBuZ1RhYmxlUGFyYW1zKHtcblx0XHRcdHBhZ2U6IDEsXG5cdFx0XHRjb3VudDogMTBcblx0XHR9LCB7XG5cdFx0XHR0b3RhbDogMCxcblx0XHRcdGNvdW50czogW10sXG5cdFx0XHRnZXREYXRhOiBmdW5jdGlvbigkZGVmZXIsIHBhcmFtcyl7XG5cdFx0XHRcdHZhciBzZWxlY3RQYXJhbXMgPSB7fSwgbGlrZSA9IHt9O1xuXG5cdFx0XHRcdGlmKCRzY29wZS5jb25maWcuY2F0ZSl7XG5cblx0XHRcdFx0XHRpZigkc2NvcGUuY29uZmlnLmF0dHIpe1xuXHRcdFx0XHRcdFx0bGlrZVskc2NvcGUuY29uZmlnLmF0dHIubmFtZV0gPSAkc2NvcGUuY29uZmlnLmxpa2UgPyAnKicgKyAkc2NvcGUuY29uZmlnLmxpa2UgKyAnKicgOiAnKic7XG5cdFx0XHRcdFx0fWVsc2V7XG5cdFx0XHRcdFx0XHRsaWtlWycqJ10gPSAkc2NvcGUuY29uZmlnLmxpa2UgPyAnKicgKyAkc2NvcGUuY29uZmlnLmxpa2UgKyAnKicgOiAnKic7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0c2VsZWN0UGFyYW1zLmNhdGVnb3J5SWQgPSAkc2NvcGUuY29uZmlnLmNhdGUuaWQ7XG5cdFx0XHRcdFx0c2VsZWN0UGFyYW1zLnBhZ2UgPSBwYXJhbXMucGFnZSgpO1xuXHRcdFx0XHRcdHNlbGVjdFBhcmFtcy5wYWdlU2l6ZSA9IHBhcmFtcy5jb3VudCgpO1xuXHRcdFx0XHRcdHNlbGVjdFBhcmFtcy5saWtlID0gbGlrZTtcblxuXHRcdFx0XHRcdENpU2VydmljZS5nZXQoc2VsZWN0UGFyYW1zKVxuXHRcdFx0XHRcdFx0LnN1Y2Nlc3MoZnVuY3Rpb24ocmVzdWx0KXtcblx0XHRcdFx0XHRcdFx0c2VsZi5jaURhdGEgPSByZXN1bHQuZGF0YS5kYXRhcztcblx0XHRcdFx0XHRcdFx0JGRlZmVyLnJlc29sdmUoc2VsZi5jaURhdGEpO1xuXHRcdFx0XHRcdFx0XHRwYXJhbXMudG90YWwocmVzdWx0LmRhdGEuY291bnQpO1xuXG5cdFx0XHRcdFx0XHRcdCR0aW1lb3V0KGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFx0XHRcdFx0bmV3IERhdGFEcmF3KHtcblx0XHRcdFx0XHRcdFx0XHRcdGVkaXRvcjogc2VsZi5lZGl0b3IsXG5cdFx0XHRcdFx0XHRcdFx0XHQkdGFibGU6ICQoJyNjb25maWctdGFibGUnKSxcblx0XHRcdFx0XHRcdFx0XHRcdGNpRGF0YTogc2VsZi5jaURhdGFcblx0XHRcdFx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0XHR9KTtcblx0XHRcdFx0fWVsc2V7XG5cdFx0XHRcdFx0JGRlZmVyLnJlc29sdmUoW10pO1xuXHRcdFx0XHRcdHBhcmFtcy50b3RhbCgwKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0pO1xuXG5cdFx0JHNjb3BlLiR3YXRjaCgnY2hlY2tib3hlcy5jaGVja2VkJywgZnVuY3Rpb24odmFsdWUpe1xuXHRcdFx0YW5ndWxhci5mb3JFYWNoKHNlbGYuY2lEYXRhLCBmdW5jdGlvbihpdGVtKXtcblx0XHRcdFx0aWYoYW5ndWxhci5pc0RlZmluZWQoaXRlbS5pZCkpe1xuXHRcdFx0XHRcdCRzY29wZS5jaGVja2JveGVzLml0ZW1zW2l0ZW0uaWRdID0gdmFsdWU7XG5cdFx0XHRcdH1cblx0XHRcdH0pO1xuXHRcdH0pO1xuXG5cdFx0JHNjb3BlLnNob3dQb3BvdmVyID0gZnVuY3Rpb24oJGV2ZW50KXtcblx0XHRcdHZhciBkb20gPSAkZXZlbnQudGFyZ2V0O1xuXHRcdFx0aWYgKGRvbS5vZmZzZXRXaWR0aCA8IGRvbS5zY3JvbGxXaWR0aCkge1xuXHRcdFx0XHQkKGRvbSkucG9wb3Zlcignc2hvdycpO1xuXHRcdFx0fVxuXHRcdH07XG5cblx0XHQkc2NvcGUuaGlkZVBvcG92ZXIgPSBmdW5jdGlvbigkZXZlbnQpIHtcblx0XHRcdCQoJGV2ZW50LnRhcmdldCkucG9wb3ZlcignaGlkZScpO1xuXHRcdH07XG5cblx0XHQkc2NvcGUub3BlblhtbCA9IGZ1bmN0aW9uKCRmaWxlcyl7XG5cdFx0XHRpZigkZmlsZXMubGVuZ3RoKXtcblxuXHRcdFx0XHR2YXIgciA9IG5ldyBGaWxlUmVhZGVyKCk7XG5cdFx0XHRcdHIucmVhZEFzVGV4dCgkZmlsZXNbMF0pO1xuXG5cdFx0XHRcdHIub25sb2FkID0gZnVuY3Rpb24oZSl7XG5cdFx0XHRcdFx0c2VsZi5lZGl0b3IuYWN0aW9uLmNyZWF0ZSgpO1xuXHRcdFx0XHRcdHNlbGYuZWRpdG9yLmFjdGlvbi5vcGVuWG1sKGUudGFyZ2V0LnJlc3VsdCk7XG5cdFx0XHRcdH07XG5cdFx0XHR9XG5cdFx0fTtcblxuXHRcdENpQ2F0ZVNlcnZpY2UuZ2V0KCkuc3VjY2VzcyhmdW5jdGlvbihyZXN1bHQpe1xuXHRcdFx0VW5pdC5mb3JtYXRDYXRlZ29yeURhdGEocmVzdWx0LmRhdGEpO1xuXHRcdFx0JHNjb3BlLmNhdGVzID0gc2VsZi5mb3JtYXQocmVzdWx0LmRhdGEpO1xuXHRcdFx0JHNjb3BlLl9yZWZyZXNoKCk7XG5cdFx0fSk7XG5cblx0XHQkc2NvcGUuJG9uKEV2ZW50LkdSQVBIX0NBTlZBU19DTElDSywgZnVuY3Rpb24oZXZlbnQsIGRhdGEpe1xuXHRcdFx0aWYoZGF0YS5lZGl0b3Iuc3RhdGUudmlldyl7XG5cdFx0XHRcdCRzY29wZS5pbmZvUGFyYW1zLnVwZGF0ZSgndmlldycsIGRhdGEuZWRpdG9yLnN0YXRlLnZpZXcpO1xuXHRcdFx0fWVsc2V7XG5cdFx0XHRcdCRzY29wZS5pbmZvUGFyYW1zLmhpZGUoKTtcblx0XHRcdH1cblx0XHR9KTtcblx0fTtcblxuXHRncmFwaC5hcHAuY29udHJvbGxlcignTWFpbkVkaXRDdHJsJywgY29udHJvbGxlcik7XG5cblxufSkobmFtZVNwYWNlLnJlZygnZ3JhcGgnKSwgbmFtZVNwYWNlLnJlZygnZ3JhcGgucGFnZScpKTtcblxuXG5cblxuKGZ1bmN0aW9uKGdyYXBoKXtcblxuXHQndXNlIHN0cmljdCc7XG5cblx0dmFyIHVybCA9IGdyYXBoLnN0YXRlVXJsO1xuXG5cdGdyYXBoLmFwcC5jb25maWcoZnVuY3Rpb24oJHN0YXRlUHJvdmlkZXIpIHtcblxuXHRcdCRzdGF0ZVByb3ZpZGVyXG5cblx0XHRcdC5zdGF0ZSgnaG9tZS5lZGl0Jywge1xuXHRcdFx0XHR1cmw6ICdlZGl0Jyxcblx0XHRcdFx0dGVtcGxhdGVVcmw6IHVybCgnL21haW4vZWRpdC9lZGl0Lmh0bWwnKSxcblx0XHRcdFx0Y29udHJvbGxlcjogJ01haW5FZGl0Q3RybCcsXG5cdFx0XHRcdGRhdGE6IHtcblx0XHRcdFx0XHR0aXRsZTogJydcblx0XHRcdFx0fVxuXHRcdFx0fSlcblxuXHRcdFx0LnN0YXRlKCdob21lLmVkaXQudmlldycsIHtcblx0XHRcdFx0dXJsOiAnLzppZCcsXG5cdFx0XHRcdHRlbXBsYXRlVXJsOiB1cmwoJy9tYWluL2VkaXQvZWRpdC5odG1sJyksXG5cdFx0XHRcdGNvbnRyb2xsZXI6ICdNYWluRWRpdEN0cmwnLFxuXHRcdFx0XHRkYXRhOiB7XG5cdFx0XHRcdFx0dGl0bGU6ICcnXG5cdFx0XHRcdH1cblx0XHRcdH0pXG5cblx0fSk7XG5cblxufSkobmFtZVNwYWNlLnJlZygnZ3JhcGgnKSk7XG5cblxuXG4vL3ZhciBkcm9wT2JqID17fTtcbihmdW5jdGlvbihncmFwaCwgc2VsZil7XG5cblx0J3VzZSBzdHJpY3QnO1xuXHRncmFwaC5hcHAuY29udHJvbGxlcignTWFpbkdyb3VwQ3RybCcsIGZ1bmN0aW9uKCRzY29wZSwkc3RhdGUsIFVuaXQsR3JvdXBTZXJ2aWNlKXtcblx0XHQkc2NvcGUuZ3JvdXBJdGVtQXJyYXkgPSBbXTtcblx0XHQkc2NvcGUuZ3JvdXBJbWdCb3g9W107XG5cdFx0JHNjb3BlLnNldE51bT17fTtcblx0XHQkc2NvcGUuY29sb3JCb3ggPSB7fTtcblx0XHQkc2NvcGUuZ3JvdXA9e307XG5cdFx0JHNjb3BlLmdyb3VwLmNvbnRlbnQ9e307XG5cdFx0JHNjb3BlLmdyb3VwLmNvbnRlbnQudmlld0Rlc2NyaXB0aW9uID0nJztcblx0XHQkc2NvcGUuZ3JvdXAuY29udGVudC5kMnNldHRpbmcgPXt9O1xuXHRcdCRzY29wZS5ncm91cC5jb250ZW50LmQzc2V0dGluZz17fTtcblx0XHQkc2NvcGUuZ3JvdXAuY29udGVudC5kMnNldHRpbmcudmlld3M9W107XG5cdFx0JHNjb3BlLmdyb3VwLmNvbnRlbnQuZDNzZXR0aW5nLnJvd3MgPSAzO1xuXHRcdCRzY29wZS5ncm91cC5jb250ZW50LmQzc2V0dGluZy5jb2xzID0gMztcblx0XHQkc2NvcGUuZ3JvdXAuY29udGVudC5kM3NldHRpbmcubGF5ZXJNYXJnaW4gPSAyMDA7XG5cdFx0JHNjb3BlLmdyb3VwLmNvbnRlbnQuZDNzZXR0aW5nLmxheWVySXRlbU1hcmdpbiA9IDEwO1xuXHRcdCRzY29wZS5ncm91cC5jb250ZW50LmQyc2V0dGluZy50b29sYmFyU2l6ZSA9IDEzMDtcblx0XHQkc2NvcGUuZ3JvdXAuY29udGVudC5kMnNldHRpbmcub3V0TGluZVNpemUgPSA5MDtcblx0XHQkc2NvcGUuZ3JvdXAuY29udGVudC5kMnNldHRpbmcubGF5b3V0ID0gJ3RvcCc7XG5cdFx0JHNjb3BlLmdyb3VwLmNvbnRlbnQuZDJzZXR0aW5nLm1heENvdW50ID0gNDtcblx0XHQkc2NvcGUuZ3JvdXAuY29udGVudC5kMnNldHRpbmcudG9vbGJhckJnQ29sb3IgPSAnI0MwQzBDMCc7XG5cdFx0JHNjb3BlLmdyb3VwLmNvbnRlbnQuZDJzZXR0aW5nLmJ0bkNvbG9yID0gJyM2MTYxNjEnO1xuXHRcdHZhciBpO1xuXHRcdC8vdmFyIHQ9MDtcblx0XHQkc2NvcGUuYWxsb3dEcm9wID0gZnVuY3Rpb24oZXYpe1xuXHRcdFx0ZXYuc3RvcFByb3BhZ2F0aW9uKCk7XG5cdFx0XHRldi5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdH07XG5cdFx0JHNjb3BlLmRyYWcgPSBmdW5jdGlvbihldil7XG5cdFx0XHRpZigkKGV2LnRhcmdldCkucGFyZW50cygnLmdyb3VwLWJveC1pdGVtLWJveCcpLmRhdGEoJ2luZGV4JykgIT09dW5kZWZpbmVkKXtcblx0XHRcdFx0JHNjb3BlLmJnQ29sb3I9JHNjb3BlLmdyb3VwLmNvbnRlbnQuZDNzZXR0aW5nLmxheWVyc1skKGV2LnRhcmdldCkucGFyZW50cygnLmdyb3VwLWJveC1pdGVtLWJveCcpLmRhdGEoJ2luZGV4JyldWyQoZXYudGFyZ2V0KS5wYXJlbnRzKCcuZ3JvdXAtYm94LWl0ZW0tYm94JykuZGF0YSgnY29sJyldLmZsb29yQmdDb2xvcjtcblx0XHRcdFx0JHNjb3BlLnRyYW5zZm9ybSA9JHNjb3BlLmdyb3VwLmNvbnRlbnQuZDNzZXR0aW5nLmxheWVyc1skKGV2LnRhcmdldCkucGFyZW50cygnLmdyb3VwLWJveC1pdGVtLWJveCcpLmRhdGEoJ2luZGV4JyldWyQoZXYudGFyZ2V0KS5wYXJlbnRzKCcuZ3JvdXAtYm94LWl0ZW0tYm94JykuZGF0YSgnY29sJyldLmlzVmVydGljYWw7XG5cdFx0XHRcdCRzY29wZS5ncm91cC5jb250ZW50LmQzc2V0dGluZy5sYXllcnNbJChldi50YXJnZXQpLnBhcmVudHMoJy5ncm91cC1ib3gtaXRlbS1ib3gnKS5kYXRhKCdpbmRleCcpXVskKGV2LnRhcmdldCkucGFyZW50cygnLmdyb3VwLWJveC1pdGVtLWJveCcpLmRhdGEoJ2NvbCcpXT1udWxsO1xuXHRcdFx0fVxuXHRcdFx0ZXYuZGF0YVRyYW5zZmVyLnNldERhdGEoJ1RleHQnLGV2LnRhcmdldC5pZCk7XG5cdFx0fTtcblx0XHQkc2NvcGUuZHJvcCA9IGZ1bmN0aW9uKGV2KSB7XG5cdFx0XHRldi5zdG9wUHJvcGFnYXRpb24oKTtcblx0XHRcdGV2LnByZXZlbnREZWZhdWx0KCk7XG5cdFx0XHR2YXIgZGF0YSA9IGV2LmRhdGFUcmFuc2Zlci5nZXREYXRhKCdUZXh0Jyk7XG5cdFx0XHR2YXIgJG5vZGUgPSAkKCcjJyArIGRhdGEpOy8v6I635b6X5YWD57SgXG5cdFx0XHR2YXIgcGFyZW50SWQgPSAkbm9kZS5wYXJlbnQoKS5hdHRyKCdpZCcpO1xuXHRcdFx0aWYoJChldi50YXJnZXQpLnBhcmVudHMoJy5ncm91cC1ib3gtaXRlbS1ib3gnKS5kYXRhKCdpbmRleCcpICE9PXVuZGVmaW5lZCl7XG5cdFx0XHRcdCRzY29wZS5ncm91cC5jb250ZW50LmQzc2V0dGluZy5sYXllcnNbJChldi50YXJnZXQpLnBhcmVudHMoJy5ncm91cC1ib3gtaXRlbS1ib3gnKS5kYXRhKCdpbmRleCcpXVskKGV2LnRhcmdldCkucGFyZW50cygnLmdyb3VwLWJveC1pdGVtLWJveCcpLmRhdGEoJ2NvbCcpXSA9IHt9O1xuXHRcdFx0XHR2YXIgZWxlID0gJHNjb3BlLmdyb3VwLmNvbnRlbnQuZDNzZXR0aW5nLmxheWVyc1skKGV2LnRhcmdldCkucGFyZW50cygnLmdyb3VwLWJveC1pdGVtLWJveCcpLmRhdGEoJ2luZGV4JyldWyQoZXYudGFyZ2V0KS5wYXJlbnRzKCcuZ3JvdXAtYm94LWl0ZW0tYm94JykuZGF0YSgnY29sJyldO1xuXHRcdFx0fWVsc2V7XG5cdFx0XHRcdCRzY29wZS5ncm91cC5jb250ZW50LmQzc2V0dGluZy5sYXllcnNbJChldi50YXJnZXQpLmRhdGEoJ2luZGV4JyldWyQoZXYudGFyZ2V0KS5kYXRhKCdjb2wnKV0gPSB7fTtcblx0XHRcdFx0dmFyIGVsZSA9ICRzY29wZS5ncm91cC5jb250ZW50LmQzc2V0dGluZy5sYXllcnNbJChldi50YXJnZXQpLmRhdGEoJ2luZGV4JyldWyQoZXYudGFyZ2V0KS5kYXRhKCdjb2wnKV07XG5cdFx0XHR9XG5cblx0XHRcdGlmKCFwYXJlbnRJZCB8fCAgcGFyZW50SWQuaW5kZXhPZignZ3JvdXAnKT09PS0xKXtcblx0XHRcdFx0dmFyICRub2RlMiA9ICRub2RlLmNsb25lKHRydWUpOy8v5YWL6ZqG5YWD57SgXG5cdFx0XHRcdCRub2RlMi5hdHRyKCd0aXRsZScsJG5vZGUuYXR0cignaWQnKSk7XG5cdFx0XHRcdCRzY29wZS5ncm91cC5jb250ZW50LmQyc2V0dGluZy52aWV3cy5wdXNoKCRub2RlMi5hdHRyKCd0aXRsZScpKTtcblx0XHRcdFx0ZWxlLnZpZXdpZD0kbm9kZTIuYXR0cigndGl0bGUnKTtcblx0XHRcdFx0ZWxlLnZpZXdUaXRsZSA9ICRub2RlMi5hdHRyKCdkYXRhLXRpdGxlJyk7XG5cdFx0XHRcdGVsZS52aWV3VGV4dCA9ICRub2RlMi5hdHRyKCdkYXRhLXRleHQnKTtcblx0XHRcdFx0JHNjb3BlLmNvbG9yQm94LmJnQ29sb3IgPSB1bmRlZmluZWQ7XG5cdFx0XHRcdCRzY29wZS5iZ0NvbG9yID0nI2Y1ZjVmNSc7XG5cdFx0XHR9ZWxzZXtcblx0XHRcdFx0ZWxlLnZpZXdpZD0kbm9kZS5hdHRyKCdpZCcpO1xuXHRcdFx0XHRlbGUudmlld1RpdGxlID0gJG5vZGUuYXR0cignZGF0YS1jb250ZW50Jyk7XG5cdFx0XHRcdGVsZS52aWV3VGV4dCA9ICRub2RlLmF0dHIoJ2RhdGEtdGV4dCcpO1xuXHRcdFx0fVxuXHRcdFx0ZWxlLnNyYyA9ICRub2RlLmF0dHIoJ3NyYycpO1xuXHRcdFx0ZWxlLmZsb29yQmdDb2xvcj0kc2NvcGUuYmdDb2xvciA/ICRzY29wZS5iZ0NvbG9yIDonI2Y1ZjVmNSc7XG5cdFx0XHRlbGUuaXNWZXJ0aWNhbCA9ICRzY29wZS50cmFuc2Zvcm0gIT09dW5kZWZpbmVkID8gJHNjb3BlLnRyYW5zZm9ybSA6ZmFsc2U7XG5cdFx0XHQkc2NvcGUuZ3JvdXBJbWdCb3ggPSBhbmd1bGFyLmNvcHkoJHNjb3BlLmdyb3VwLmNvbnRlbnQuZDNzZXR0aW5nLmxheWVycyk7XG5cdFx0XHQkc2NvcGUuc2V0QmdDb2xvcihlbGUsZXYpO1xuXHRcdH07XG5cdFx0JHNjb3BlLnRyYW5zbGF0ZSA9IGZ1bmN0aW9uKHZhbHVlKSB7XG5cdFx0XHRyZXR1cm4gIHZhbHVlKydweCc7XG5cdFx0fTtcblx0XHQkc2NvcGUuZm9ybWF0VG9QZXJjZW50YWdlID0gZnVuY3Rpb24odmFsdWUpe1xuXHRcdFx0cmV0dXJuIHZhbHVlKyclJztcblx0XHR9O1xuXHRcdCRzY29wZS5mb3JtYXRUb04gPSBmdW5jdGlvbih2YWx1ZSl7XG5cdFx0XHRyZXR1cm4gdmFsdWUrJ04nO1xuXHRcdH07XG5cdFx0JHNjb3BlLmhhc0ltZyA9IGZ1bmN0aW9uKGUpe1xuXHRcdFx0aWYoJChlLnRhcmdldCkucGFyZW50cygnLmdyb3VwLWJveC1pdGVtJykuZmluZCgnaW1nJykuYXR0cignaWQnKSl7XG5cdFx0XHRcdCQoZS50YXJnZXQpLnBhcmVudHMoJy5ncm91cC1ib3gtaXRlbScpLmZpbmQoJy5ncm91cC1ib3gtaXRlbS1vcGVyYXRlQnRuJykuY3NzKHtkaXNwbGF5OidibG9jayd9KTtcblx0XHRcdH1lbHNle1xuXHRcdFx0XHQkKGUudGFyZ2V0KS5wYXJlbnRzKCcuZ3JvdXAtYm94LWl0ZW0nKS5maW5kKCcuZ3JvdXAtYm94LWl0ZW0tb3BlcmF0ZUJ0bicpLmNzcyh7ZGlzcGxheTonbm9uZSd9KTtcblx0XHRcdH1cblx0XHR9O1xuXHRcdCRzY29wZS5oYXNJbWdPdXQgPSBmdW5jdGlvbihlKXtcblx0XHRcdCQoZS50YXJnZXQpLnBhcmVudHMoJy5ncm91cC1ib3gtaXRlbScpLmZpbmQoJy5ncm91cC1ib3gtaXRlbS1vcGVyYXRlQnRuJykuY3NzKHtkaXNwbGF5Oidub25lJ30pO1xuXHRcdH07XG5cdFx0JHNjb3BlLnNldFZpZXcgPSBmdW5jdGlvbihpLGUpe1xuXHRcdFx0JHNjb3BlLnNldEQ9aS5pc1ZlcnRpY2FsID8gdHJ1ZTpmYWxzZTtcblx0XHRcdCRzY29wZS5zZXREID0gISRzY29wZS5zZXREO1xuXHRcdFx0aWYoJHNjb3BlLnNldEQpe1xuXHRcdFx0XHQkKGUudGFyZ2V0KS5wYXJlbnRzKCcuZ3JvdXAtYm94LWl0ZW0nKS5maW5kKCdpbWcnKS5jc3Moe3RyYW5zZm9ybTonc2tldygwZGVnKScsd2lkdGg6JzkwJScsaGVpZ2h0Oic5MCUnfSk7XG5cdFx0XHRcdGkuaXNWZXJ0aWNhbCA9IHRydWU7XG5cdFx0XHR9ZWxzZXtcblx0XHRcdFx0JChlLnRhcmdldCkucGFyZW50cygnLmdyb3VwLWJveC1pdGVtJykuZmluZCgnaW1nJykuY3NzKHt0cmFuc2Zvcm06J3NrZXcoNDVkZWcpJyx3aWR0aDonNjAlJyxoZWlnaHQ6JzQwJSd9KTtcblx0XHRcdFx0aS5pc1ZlcnRpY2FsID0gZmFsc2U7XG5cdFx0XHR9XG5cdFx0fTtcblx0XHQkc2NvcGUuc2V0QmdDb2xvciA9IGZ1bmN0aW9uKGksZSl7XG5cdFx0XHRzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XG5cdFx0XHRcdGlmKCQoZS50YXJnZXQpLnBhcmVudHMoJy5ncm91cC1ib3gtaXRlbScpLmZpbmQoJ2ltZycpICYmICQoZS50YXJnZXQpLnBhcmVudHMoJy5ncm91cC1ib3gtaXRlbScpLmZpbmQoJ2ltZycpLmF0dHIoJ2lkJykpe1xuXHRcdFx0XHRcdCRzY29wZS5zZXRDb25maWcgPSB0cnVlO1xuXHRcdFx0XHRcdCQoJy5ncm91cC1ib3gtaXRlbS1ib3gnKS5lYWNoKGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFx0XHQkKHRoaXMpLmNzcygnYm94U2hhZG93JywnMnB4IDJweCAycHggI2VlZScpXG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0aWYoJChlLnRhcmdldCkuYXR0cignY2xhc3MnKSA9PT0nZ3JvdXAtYm94LWl0ZW0tYm94Jyl7XG5cdFx0XHRcdFx0XHQkKGUudGFyZ2V0KS5jc3MoJ2JveFNoYWRvdycsJzAgMCAzcHggIzA0N0ZGNScpO1xuXHRcdFx0XHRcdH1lbHNle1xuXHRcdFx0XHRcdFx0JChlLnRhcmdldCkucGFyZW50cygnLmdyb3VwLWJveC1pdGVtLWJveCcpLmNzcygnYm94U2hhZG93JywnMCAwIDNweCAjMDQ3RkY1Jyk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9ZWxzZXtcblx0XHRcdFx0XHQkc2NvcGUuc2V0Q29uZmlnID0gZmFsc2U7XG5cdFx0XHRcdFx0JCgnLmdyb3VwLWJveC1pdGVtLWJveCcpLmVhY2goZnVuY3Rpb24oKXtcblx0XHRcdFx0XHRcdCQodGhpcykuY3NzKCdib3hTaGFkb3cnLCcycHggMnB4IDJweCAjZWVlJylcblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0fVxuXHRcdFx0XHQkc2NvcGUuJGFwcGx5KCk7XG5cdFx0XHR9LDEwKTtcblx0XHRcdCRzY29wZS52aWV3Q29udGVudD17XG5cdFx0XHRcdHZpZXdUaXRsZSA6IGkudmlld1RpdGxlLFxuXHRcdFx0XHR2aWV3VGV4dCA6IGkudmlld1RleHRcblx0XHRcdH07XG5cdFx0XHQkc2NvcGUuZGVsVmlld0J0biA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRcdGlmKCQoZS50YXJnZXQpLmF0dHIoJ2NsYXNzJykgPT09J2dyb3VwLWJveC1pdGVtLWJveCcpe1xuXHRcdFx0XHRcdCQoZS50YXJnZXQpLmNzcygnYm94U2hhZG93JywnMnB4IDJweCAycHggI2VlZScpO1xuXHRcdFx0XHRcdCRzY29wZS5kZWwyZFZpZXcoJHNjb3BlLmdyb3VwLmNvbnRlbnQuZDNzZXR0aW5nLmxheWVyc1skKGUudGFyZ2V0KS5kYXRhKCdpbmRleCcpXVskKGUudGFyZ2V0KS5kYXRhKCdjb2wnKV0pO1xuXHRcdFx0XHRcdCRzY29wZS5ncm91cC5jb250ZW50LmQzc2V0dGluZy5sYXllcnNbJChlLnRhcmdldCkuZGF0YSgnaW5kZXgnKV1bJChlLnRhcmdldCkuZGF0YSgnY29sJyldID0ge307XG5cdFx0XHRcdH1lbHNle1xuXHRcdFx0XHRcdCQoZS50YXJnZXQpLnBhcmVudHMoJy5ncm91cC1ib3gtaXRlbS1ib3gnKS5jc3MoJ2JveFNoYWRvdycsJzJweCAycHggMnB4ICNlZWUnKTtcblx0XHRcdFx0XHQkc2NvcGUuZGVsMmRWaWV3KCRzY29wZS5ncm91cC5jb250ZW50LmQzc2V0dGluZy5sYXllcnNbJChlLnRhcmdldCkucGFyZW50cygnLmdyb3VwLWJveC1pdGVtLWJveCcpLmRhdGEoJ2luZGV4JyldWyQoZS50YXJnZXQpLnBhcmVudHMoJy5ncm91cC1ib3gtaXRlbS1ib3gnKS5kYXRhKCdjb2wnKV0pO1xuXHRcdFx0XHRcdCRzY29wZS5ncm91cC5jb250ZW50LmQzc2V0dGluZy5sYXllcnNbJChlLnRhcmdldCkucGFyZW50cygnLmdyb3VwLWJveC1pdGVtLWJveCcpLmRhdGEoJ2luZGV4JyldWyQoZS50YXJnZXQpLnBhcmVudHMoJy5ncm91cC1ib3gtaXRlbS1ib3gnKS5kYXRhKCdjb2wnKV0gPSB7fTtcblx0XHRcdFx0fVxuXHRcdFx0XHQkc2NvcGUuc2V0Q29uZmlnID0gZmFsc2U7XG5cdFx0XHR9O1xuXHRcdFx0JHNjb3BlLmRlbDJkVmlldyA9IGZ1bmN0aW9uKGkpe1xuXHRcdFx0XHRmb3IoaT0wO2k8JHNjb3BlLmdyb3VwLmNvbnRlbnQuZDJzZXR0aW5nLnZpZXdzLmxlbmd0aDtpKyspe1xuXHRcdFx0XHRcdGlmKCRzY29wZS5ncm91cC5jb250ZW50LmQyc2V0dGluZy52aWV3cy5sZW5ndGhbaV0gPT09IGkudmlld2lkKXtcblx0XHRcdFx0XHRcdCRzY29wZS5ncm91cC5jb250ZW50LmQyc2V0dGluZy52aWV3cy5zcGxpY2UoaSwxKTtcblx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fTtcblx0XHRcdCRzY29wZS5yZWNvdmVyQ29sb3IgPSBmdW5jdGlvbigpe1xuXHRcdFx0XHQkc2NvcGUuY29sb3JCb3guYmdDb2xvciA9ICcjZjVmNWY1Jztcblx0XHRcdFx0aS5mbG9vckJnQ29sb3IgPSAkc2NvcGUuY29sb3JCb3guYmdDb2xvcjtcblx0XHRcdH07XG5cdFx0XHQkc2NvcGUuc2V0QmcgPSBmdW5jdGlvbigpe1xuXHRcdFx0XHRpZigkKGUudGFyZ2V0KS5oYXNDbGFzcygnZ3JvdXAtYm94LWl0ZW0tb3V0Jykpe1xuXHRcdFx0XHRcdCQoZS50YXJnZXQpLmNzcyh7YmFja2dyb3VuZENvbG9yOiRzY29wZS5jb2xvckJveC5iZ0NvbG9yfSk7XG5cdFx0XHRcdH1lbHNle1xuXHRcdFx0XHRcdCQoZS50YXJnZXQpLnBhcmVudHMoJy5ncm91cC1ib3gtaXRlbS1vdXQnKS5jc3Moe2JhY2tncm91bmRDb2xvcjokc2NvcGUuY29sb3JCb3guYmdDb2xvcn0pO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGkuZmxvb3JCZ0NvbG9yID0kc2NvcGUuY29sb3JCb3guYmdDb2xvcjtcblx0XHRcdH07XG5cdFx0fTtcblx0XHQkc2NvcGUuZGVsVmlldyA9IGZ1bmN0aW9uKGksZSl7XG5cdFx0XHQkc2NvcGUuZGVsMmRWaWV3KGkpO1xuXHRcdFx0JHNjb3BlLmdyb3VwLmNvbnRlbnQuZDNzZXR0aW5nLmxheWVyc1skKGUudGFyZ2V0KS5wYXJlbnRzKCcuZ3JvdXAtYm94LWl0ZW0tYm94JykuZGF0YSgnaW5kZXgnKV1bJChlLnRhcmdldCkucGFyZW50cygnLmdyb3VwLWJveC1pdGVtLWJveCcpLmRhdGEoJ2NvbCcpXSA9IHt9O1xuXHRcdH07XG5cdFx0JHNjb3BlLnNhdmVWaWV3ID0gZnVuY3Rpb24oKXtcblx0XHRcdCRzY29wZS5ncm91cC52aWV3cyA9IGFuZ3VsYXIuY29weSgkc2NvcGUuZ3JvdXAuY29udGVudC5kMnNldHRpbmcudmlld3MpO1xuXHRcdFx0aWYoJHNjb3BlLmdyb3VwLm5hbWUgPT09IHVuZGVmaW5lZCB8fCAkc2NvcGUuZ3JvdXAubmFtZT09PScnIHx8ICRzY29wZS5ncm91cC5jb250ZW50LnZpZXdEZXNjcmlwdGlvbiA9PT0nJyl7XG5cdFx0XHRcdFVuaXQuZXJyb3IoJ+ivt+Whq+WGmeWQjeensOaIluaPj+i/sCcpO1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cdFx0XHR2YXIgY29uID0gSlNPTi5zdHJpbmdpZnkoJHNjb3BlLmdyb3VwKTtcblx0XHRcdHZhciBzYXZlRGF0ZSA9IHtcblx0XHRcdFx0dmlld3M6JHNjb3BlLmdyb3VwLnZpZXdzLFxuXHRcdFx0XHRuYW1lOiRzY29wZS5ncm91cC5uYW1lLFxuXHRcdFx0XHRjb250ZW50OmNvblxuXHRcdFx0fTtcblx0XHRcdEdyb3VwU2VydmljZS5zYXZlKHNhdmVEYXRlKS5zdWNjZXNzKGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFVuaXQuc3VjY2Vzcygn5L+d5a2Y5oiQ5YqfJyk7XG5cdFx0XHRcdCRzdGF0ZS5nbygnaG9tZS5ncm91cC5saXN0LnByaXZhdGUnKTtcblx0XHRcdH0pO1xuXHRcdH07XG5cblx0XHQkc2NvcGUuZ29MaXN0ID0gZnVuY3Rpb24oKXtcblx0XHRcdCRzdGF0ZS5nbygnaG9tZS5ncm91cC5saXN0LnByaXZhdGUnKTtcblx0XHR9O1xuXHR9KTtcblxuXG59KShuYW1lU3BhY2UucmVnKCdncmFwaCcpLCBuYW1lU3BhY2UucmVnKCdncmFwaC5wYWdlJykpO1xuXG5cblxuXG4oZnVuY3Rpb24oZ3JhcGgpe1xuXG5cdCd1c2Ugc3RyaWN0JztcblxuXHR2YXIgdXJsID0gZ3JhcGguc3RhdGVVcmw7XG5cblx0Z3JhcGguYXBwLmNvbmZpZyhmdW5jdGlvbigkc3RhdGVQcm92aWRlcikge1xuXG5cdFx0JHN0YXRlUHJvdmlkZXJcblx0XHRcdC5zdGF0ZSgnaG9tZS5ncm91cCcsIHtcblx0XHRcdFx0dXJsOiAnZ3JvdXAnLFxuXHRcdFx0XHR0ZW1wbGF0ZVVybDogdXJsKCcvbWFpbi9ncm91cC9ncm91cC5odG1sJyksXG5cdFx0XHRcdGNvbnRyb2xsZXI6ICdNYWluR3JvdXBDdHJsJ1xuXHRcdFx0fSlcblxuXHRcdFx0LnN0YXRlKCdob21lLmdyb3VwLmNyZWF0ZScsIHtcblx0XHRcdFx0dXJsOiAnL2NyZWF0ZScsXG5cdFx0XHRcdHRlbXBsYXRlVXJsOiB1cmwoJy9tYWluL2dyb3VwL2NyZWF0ZS9jcmVhdGUuaHRtbCcpLFxuXHRcdFx0XHRjb250cm9sbGVyOiAnTWFpbkdyb3VwQ3JlYXRlQ3RybCdcblx0XHRcdH0pXG5cblx0XHRcdC5zdGF0ZSgnaG9tZS5ncm91cC5lZGl0Jywge1xuXHRcdFx0XHR1cmw6ICcvZWRpdC86aWQnLFxuXHRcdFx0XHR0ZW1wbGF0ZVVybDogdXJsKCcvbWFpbi9ncm91cC9jcmVhdGUvY3JlYXRlLmh0bWwnKSxcblx0XHRcdFx0Y29udHJvbGxlcjogJ01haW5Hcm91cEVkaXRDdHJsJ1xuXHRcdFx0fSlcblxuXHRcdFx0LnN0YXRlKCdob21lLmdyb3VwLmxpc3QnLCB7XG5cdFx0XHRcdHVybDogJy9saXN0Jyxcblx0XHRcdFx0dGVtcGxhdGVVcmw6IHVybCgnL21haW4vZ3JvdXAvbGlzdC9saXN0Lmh0bWwnKSxcblx0XHRcdFx0Y29udHJvbGxlcjogJ01haW5Hcm91cExpc3RDdHJsIGFzIGxpc3RDdHJsJ1xuXHRcdFx0fSlcblxuXHRcdFx0LnN0YXRlKCdob21lLmdyb3VwLmxpc3QucHJpdmF0ZScsIHtcblx0XHRcdFx0dXJsOiAnL3ByaXZhdGUnLFxuXHRcdFx0XHR0ZW1wbGF0ZVVybDogdXJsKCcvbWFpbi9ncm91cC9saXN0L3ByaXZhdGUvcHJpdmF0ZS5odG1sJyksXG5cdFx0XHRcdGNvbnRyb2xsZXI6ICdQcml2YXRlVmlld0N0cmwnXG5cdFx0XHR9KVxuXG5cdFx0XHQuc3RhdGUoJ2hvbWUuZ3JvdXAubGlzdC5wcml2YXRlLmdldCcsIHtcblx0XHRcdFx0dXJsOiAnLzJkLzppZCcsXG5cdFx0XHRcdHZpZXdzOiB7XG5cdFx0XHRcdFx0XCJWaWV3Q29udGVudFwiIDoge1xuXHRcdFx0XHRcdFx0Ly90ZW1wbGF0ZVVybDogdXJsKCcvbWFpbi9ncm91cC9saXN0L3ZpZXcvMkRWaWV3Lmh0bWwnKSxcblx0XHRcdFx0XHRcdGNvbnRyb2xsZXI6ICdHZXRWaWV3Q3RybCdcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH0pXG5cblx0XHRcdC5zdGF0ZSgnaG9tZS5ncm91cC5saXN0LnByaXZhdGUuZ2V0M2QnLCB7XG5cdFx0XHRcdHVybDogJy8zZC86aWQnLFxuXHRcdFx0XHR2aWV3czoge1xuXHRcdFx0XHRcdFwiVmlld0NvbnRlbnQzRFwiIDoge1xuXHRcdFx0XHRcdFx0Ly90ZW1wbGF0ZVVybDogdXJsKCcvbWFpbi9ncm91cC9saXN0L3ZpZXcvMkRWaWV3Lmh0bWwnKSxcblx0XHRcdFx0XHRcdGNvbnRyb2xsZXI6ICdHZXQzRFZpZXdDdHJsJ1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fSlcblxuXHRcdFx0LnN0YXRlKCdob21lLmdyb3VwLmxpc3QucHVibGljJywge1xuXHRcdFx0XHR1cmw6ICcvcHVibGljJyxcblx0XHRcdFx0dGVtcGxhdGVVcmw6IHVybCgnL21haW4vZ3JvdXAvbGlzdC9wdWJsaWMvbGlzdC9wdWJsaWMubGlzdC5odG1sJyksXG5cdFx0XHRcdGNvbnRyb2xsZXI6ICdQdWJsaWNMaXN0Vmlld0N0cmwnXG5cdFx0XHR9KVxuXG5cblx0XHRcdC5zdGF0ZSgnaG9tZS5ncm91cC5saXN0LnVzZXInLCB7XG5cdFx0XHRcdHVybDogJy9wdWJsaWMvdXNlci86dXNlck5hbWUnLFxuXHRcdFx0XHR0ZW1wbGF0ZVVybDogdXJsKCcvbWFpbi9ncm91cC9saXN0L3B1YmxpYy91c2VyL3B1YmxpYy51c2VyLmh0bWwnKSxcblx0XHRcdFx0Y29udHJvbGxlcjogJ1B1YmxpY1VzZXJWaWV3Q3RybCdcblx0XHRcdH0pXG5cblx0XHRcdC5zdGF0ZSgnaG9tZS5ncm91cC5saXN0LnVzZXIuZ2V0Jywge1xuXHRcdFx0XHR1cmw6ICcvMmQvOmlkJyxcblx0XHRcdFx0dmlld3M6IHtcblx0XHRcdFx0XHRcIlZpZXdDb250ZW50XCI6IHtcblx0XHRcdFx0XHRcdC8vdGVtcGxhdGVVcmw6IHVybCgnL21haW4vZ3JvdXAvbGlzdC9wdWJsaWMvdXNlci9wdWJsaWMudXNlci5odG1sJyksXG5cdFx0XHRcdFx0XHRjb250cm9sbGVyOiAnR2V0Vmlld0N0cmwnXG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9KVxuXG5cdFx0XHQuc3RhdGUoJ2hvbWUuZ3JvdXAubGlzdC51c2VyLmdldDNkJywge1xuXHRcdFx0XHR1cmw6ICcvM2QvOmlkJyxcblx0XHRcdFx0dmlld3M6IHtcblx0XHRcdFx0XHRcIlZpZXdDb250ZW50M0RcIiA6IHtcblx0XHRcdFx0XHRcdC8vdGVtcGxhdGVVcmw6IHVybCgnL21haW4vZ3JvdXAvbGlzdC92aWV3LzJEVmlldy5odG1sJyksXG5cdFx0XHRcdFx0XHRjb250cm9sbGVyOiAnR2V0M0RWaWV3Q3RybCdcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH0pXG5cdH0pO1xuXG5cbn0pKG5hbWVTcGFjZS5yZWcoJ2dyYXBoJykpO1xuXG5cbihmdW5jdGlvbihncmFwaCwgc2VsZil7XG5cblx0J3VzZSBzdHJpY3QnO1xuXG5cdGdyYXBoLmFwcC5jb250cm9sbGVyKCdNYWluTW9uaXRvckN0cmwnLCBmdW5jdGlvbigkc2NvcGUsIEdyYXBoVmlld3RyZWUsIFZpZXdTZXJ2aWNlLCBFZGl0b3IsIEdyYXBoQ29udGV4dE1lbnUsIEdyYXBoSW5mbywgRXZlbnQpe1xuXG5cdFx0JHNjb3BlLiRvbignJHZpZXdDb250ZW50TG9hZGVkJywgZnVuY3Rpb24oKSB7XG5cdFx0XHRzZWxmLmVkaXRvciA9IG5ldyBFZGl0b3IoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2dyYXBoLW1vbml0b3InKSk7XG5cdFx0XHRzZWxmLmVkaXRvci5hY3Rpb24uZGlzYWJsZWQoKTtcblx0XHRcdC8vbmV3IEdyYXBoQ29udGV4dE1lbnUoc2VsZi5lZGl0b3IsIHNlbGYuY29udGV4dE1lbnUpO1xuXG5cblx0XHRcdCRzY29wZS5pbmZvUGFyYW1zID0gbmV3IEdyYXBoSW5mbyhzZWxmLmVkaXRvcik7XG5cblx0XHRcdGlmKCRzY29wZS4kc3RhdGUucGFyYW1zLmlkKXtcblx0XHRcdFx0Vmlld1NlcnZpY2UuZ2V0Vmlldygkc2NvcGUuJHN0YXRlLnBhcmFtcy5pZClcblx0XHRcdFx0XHQuc3VjY2VzcyhmdW5jdGlvbihyZXN1bHQpe1xuXHRcdFx0XHRcdFx0JHNjb3BlLmluZm9QYXJhbXMudXBkYXRlKCd2aWV3JywgcmVzdWx0LmRhdGEpO1xuXHRcdFx0XHRcdFx0JHNjb3BlLkxBWU9VVC5jb2xsYXBzZWRTaWRlYmFyID0gdHJ1ZTtcblxuXHRcdFx0XHRcdFx0c2VsZi5lZGl0b3IuYWN0aW9uLm9wZW5WaWV3KHJlc3VsdC5kYXRhKTtcblx0XHRcdFx0XHRcdHNlbGYuZWRpdG9yLmFjdGlvbi5tb25pdG9yKCk7XG5cdFx0XHRcdFx0fSk7XG5cdFx0XHR9XG5cblx0XHR9KTtcblxuXG5cdFx0JHNjb3BlLnZpZXd0cmVlUGFyYW1zID0gbmV3IEdyYXBoVmlld3RyZWUoe1xuXHRcdFx0cXVlcnlWaWV3OiB0cnVlLFxuXHRcdFx0YWxsb3dTaG93UHVidmlldzogdHJ1ZSxcblx0XHRcdC8vZWRpdG9yOiBzZWxmLmVkaXRvcixcblx0XHRcdHNlbGVjdE5vZGU6IGZ1bmN0aW9uKG5vZGUpe1xuXHRcdFx0XHRpZihub2RlLnhtbCl7XG5cdFx0XHRcdFx0JHNjb3BlLmluZm9QYXJhbXMudXBkYXRlKCd2aWV3Jywgbm9kZSk7XG5cdFx0XHRcdFx0c2VsZi5lZGl0b3IuYWN0aW9uLm9wZW5WaWV3KG5vZGUpO1xuXHRcdFx0XHRcdHNlbGYuZWRpdG9yLmFjdGlvbi5tb25pdG9yKCk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9KTtcblxuXHRcdCRzY29wZS4kb24oRXZlbnQuR1JBUEhfQ0FOVkFTX0NMSUNLLCBmdW5jdGlvbihldmVudCwgZGF0YSl7XG5cdFx0XHRpZihkYXRhLmVkaXRvci5zdGF0ZS52aWV3KXtcblx0XHRcdFx0JHNjb3BlLmluZm9QYXJhbXMudXBkYXRlKCd2aWV3JywgZGF0YS5lZGl0b3Iuc3RhdGUudmlldyk7XG5cdFx0XHR9ZWxzZXtcblx0XHRcdFx0JHNjb3BlLmluZm9QYXJhbXMuaGlkZSgpO1xuXHRcdFx0fVxuXHRcdH0pO1xuXG5cdH0pO1xuXG5cbn0pKG5hbWVTcGFjZS5yZWcoJ2dyYXBoJyksIG5hbWVTcGFjZS5yZWcoJ2dyYXBoLnBhZ2UnKSk7XG5cblxuXG5cbihmdW5jdGlvbihncmFwaCl7XG5cblx0J3VzZSBzdHJpY3QnO1xuXG5cdHZhciB1cmwgPSBncmFwaC5zdGF0ZVVybDtcblxuXHRncmFwaC5hcHAuY29uZmlnKGZ1bmN0aW9uKCRzdGF0ZVByb3ZpZGVyKSB7XG5cblx0XHQkc3RhdGVQcm92aWRlclxuXHRcdFx0LnN0YXRlKCdob21lLm1vbml0b3InLCB7XG5cdFx0XHRcdHVybDogJ21vbml0b3InLFxuXHRcdFx0XHR0ZW1wbGF0ZVVybDogdXJsKCcvbWFpbi9tb25pdG9yL21vbml0b3IuaHRtbCcpLFxuXHRcdFx0XHRjb250cm9sbGVyOiAnTWFpbk1vbml0b3JDdHJsJ1xuXHRcdFx0fSlcblxuXHRcdFx0LnN0YXRlKCdob21lLm1vbml0b3IuaWQnLCB7XG5cdFx0XHRcdHVybDogJy86aWQnLFxuXHRcdFx0XHR0ZW1wbGF0ZVVybDogdXJsKCcvbWFpbi9tb25pdG9yL21vbml0b3IuaHRtbCcpLFxuXHRcdFx0XHRjb250cm9sbGVyOiAnTWFpbk1vbml0b3JDdHJsJ1xuXHRcdFx0fSlcblxuXHR9KTtcblxuXG59KShuYW1lU3BhY2UucmVnKCdncmFwaCcpKTtcblxuXG5cblxuKGZ1bmN0aW9uKGdyYXBoLCBzZWxmKXtcblxuXHRncmFwaC5hcHAuY29udHJvbGxlcignTWFpblNlYXJjaEN0cmwnLCBbJyRzY29wZScsICckdGltZW91dCcsIGZ1bmN0aW9uKCRzY29wZSwgJHRpbWVvdXQpe1xuXG5cblx0fV0pO1xuXG5cbn0pKG5hbWVTcGFjZS5yZWcoJ2dyYXBoJyksIG5hbWVTcGFjZS5yZWcoJ2dyYXBoLnBhZ2UnKSk7XG5cblxuXG5cbihmdW5jdGlvbihncmFwaCl7XG5cblx0J3VzZSBzdHJpY3QnO1xuXG5cdHZhciB1cmwgPSBncmFwaC5zdGF0ZVVybDtcblxuXHRncmFwaC5hcHAuY29uZmlnKGZ1bmN0aW9uKCRzdGF0ZVByb3ZpZGVyKSB7XG5cblx0XHQkc3RhdGVQcm92aWRlclxuXG5cdFx0XHQuc3RhdGUoJ2hvbWUuc2VhcmNoJywge1xuXHRcdFx0XHR1cmw6ICdzZWFyY2gnLFxuXHRcdFx0XHR0ZW1wbGF0ZVVybDogdXJsKCcvbWFpbi9zZWFyY2gvc2VhcmNoLmh0bWwnKSxcblx0XHRcdFx0Y29udHJvbGxlcjogJ01haW5TZWFyY2hDdHJsJ1xuXHRcdFx0fSlcblxuXHRcdFx0LnN0YXRlKCdob21lLnNlYXJjaC5ob21lJywge1xuXHRcdFx0XHR1cmw6ICcvaG9tZScsXG5cdFx0XHRcdHRlbXBsYXRlVXJsOiB1cmwoJy9tYWluL3NlYXJjaC9ob21lL2hvbWUuaHRtbCcpLFxuXHRcdFx0XHRjb250cm9sbGVyOiAnTWFpblNlYXJjaEhvbWVDdHJsJ1xuXHRcdFx0fSlcblxuXG5cdFx0XHQuc3RhdGUoJ2hvbWUuc2VhcmNoLnJlc3VsdCcsIHtcblx0XHRcdFx0dXJsOiAnLzprZXl3b3JkJyxcblx0XHRcdFx0dGVtcGxhdGVVcmw6IHVybCgnL21haW4vc2VhcmNoL3Jlc3VsdC9yZXN1bHQuaHRtbCcpLFxuXHRcdFx0XHRjb250cm9sbGVyOiAnTWFpblNlYXJjaFJlc3VsdEN0cmwnXG5cdFx0XHR9KVxuXG5cdH0pO1xuXG5cbn0pKG5hbWVTcGFjZS5yZWcoJ2dyYXBoJykpO1xuXG5cblxuXG4oZnVuY3Rpb24oZ3JhcGgpe1xuXG5cdCd1c2Ugc3RyaWN0JztcblxuXHR2YXIgdXJsID0gZ3JhcGguc3RhdGVVcmw7XG5cblx0Z3JhcGguYXBwLmNvbmZpZyhmdW5jdGlvbigkc3RhdGVQcm92aWRlcikge1xuXG5cdFx0JHN0YXRlUHJvdmlkZXJcblx0XHRcdC5zdGF0ZSgnaG9tZS52aWV3Jywge1xuXHRcdFx0XHR1cmw6ICd2aWV3Jyxcblx0XHRcdFx0dGVtcGxhdGVVcmw6IHVybCgnL21haW4vdmlldy92aWV3Lmh0bWwnKSxcblx0XHRcdFx0Y29udHJvbGxlcjogJ01haW5WaWV3Q3RybCdcblx0XHRcdH0pXG5cblx0fSk7XG5cblxufSkobmFtZVNwYWNlLnJlZygnZ3JhcGgnKSk7XG5cblxuXG5cbihmdW5jdGlvbihncmFwaCwgc2VsZil7XG5cblxuXHQndXNlIHN0cmljdCc7XG5cblx0Z3JhcGguYXBwLmNvbnRyb2xsZXIoJ01haW5WaWV3Q3RybCcsIFx0ZnVuY3Rpb24oJHNjb3BlLCBHcmFwaFZpZXd0cmVlLCBWaWV3U2VydmljZSwgRWRpdG9yLCBHcmFwaENvbnRleHRNZW51LFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHQgR3JhcGhUb29sYmFyLCBHcmFwaEluZm8sIEV2ZW50LCBVbml0LCBDb25zdCwgQ29udGV4dExpYnMpe1xuXG5cdFx0JHNjb3BlLmdyYXBoSWQgPSAnZ3JhcGgtdmlldyc7XG5cblx0XHQkc2NvcGUuJG9uKCckdmlld0NvbnRlbnRMb2FkZWQnLCBmdW5jdGlvbigpIHtcblx0XHRcdHNlbGYuZWRpdG9yID0gbmV3IEVkaXRvcihkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjZ3JhcGgtdmlldycpKTtcblxuXHRcdFx0bmV3IEdyYXBoQ29udGV4dE1lbnUoc2VsZi5lZGl0b3IsIHtcblx0XHRcdFx0dmVydGV4OiBbXG5cdFx0XHRcdFx0Q29uc3QuTUVOVV9DRUxMX0NPUFksXG5cdFx0XHRcdFx0Q29uc3QuTUVOVV9DRUxMX0NVVCxcblx0XHRcdFx0XHRDb25zdC5NRU5VX0NFTExfREVMRVRFLFxuXHRcdFx0XHRcdCctJyxcblx0XHRcdFx0XHRDb25zdC5NRU5VX1NUWUxFLFxuXHRcdFx0XHRcdFtcblx0XHRcdFx0XHRcdENvbnN0Lk1FTlVfRk9OVF9TVFlMRSxcblx0XHRcdFx0XHRcdENvbnN0Lk1FTlVfU1RST0tFX1dJRFRILFxuXHRcdFx0XHRcdFx0Q29uc3QuTUVOVV9PUEFDSVRZXG5cdFx0XHRcdFx0XSxcblx0XHRcdFx0XHQnLScsXG5cdFx0XHRcdFx0Q29uc3QuTUVOVV9FWFBBTkRfTk9ERSxcblx0XHRcdFx0XHRDb25zdC5NRU5VX09QRU5fVVJMLFxuXHRcdFx0XHRcdENvbnN0Lk1FTlVfVklFV19SRUxBVElPTixcblx0XHRcdFx0XHRbXG5cdFx0XHRcdFx0XHRDb25zdC5NRU5VX1ZJRVdfUkVMQVRJT05fU0VULFxuXHRcdFx0XHRcdFx0Q29uc3QuTUVOVV9WSUVXX1JFTEFUSU9OX09QRU5cblx0XHRcdFx0XHRdXG5cdFx0XHRcdF0sXG5cdFx0XHRcdGVkZ2U6IFtcblx0XHRcdFx0XHRDb25zdC5NRU5VX0NFTExfQ09QWSxcblx0XHRcdFx0XHRDb25zdC5NRU5VX0NFTExfQ1VULFxuXHRcdFx0XHRcdENvbnN0Lk1FTlVfQ0VMTF9ERUxFVEUsXG5cdFx0XHRcdFx0Jy0nLFxuXHRcdFx0XHRcdENvbnN0Lk1FTlVfU1RZTEUsXG5cdFx0XHRcdFx0W1xuXHRcdFx0XHRcdFx0Q29uc3QuTUVOVV9GT05UX1NUWUxFLFxuXHRcdFx0XHRcdFx0Q29uc3QuTUVOVV9TVFJPS0VfV0lEVEgsXG5cdFx0XHRcdFx0XHRDb25zdC5NRU5VX09QQUNJVFlcblx0XHRcdFx0XHRdXG5cdFx0XHRcdF0sXG5cdFx0XHRcdGNhbnZhczogW1xuXG5cdFx0XHRcdFx0Q29uc3QuTUVOVV9WSUVXX05FVyxcblx0XHRcdFx0XHRDb25zdC5NRU5VX1ZJRVdfT1BFTixcblx0XHRcdFx0XHRDb25zdC5NRU5VX1ZJRVdfU0FWRSxcblx0XHRcdFx0XHRDb25zdC5NRU5VX1ZJRVdfVVBEQVRFLFxuXHRcdFx0XHRcdCctJyxcblx0XHRcdFx0XHRDb25zdC5NRU5VX0VYUE9SVCxcblx0XHRcdFx0XHRbXG5cdFx0XHRcdFx0XHRDb25zdC5NRU5VX0VYUE9SVF9QTkcsXG5cdFx0XHRcdFx0XHRDb25zdC5NRU5VX0VYUE9SVF9QREYsXG5cdFx0XHRcdFx0XHRDb25zdC5NRU5VX0VYUE9SVF9TVkcsXG5cdFx0XHRcdFx0XHRDb25zdC5NRU5VX0VYUE9SVF9YTUxcblx0XHRcdFx0XHRdLFxuXHRcdFx0XHRcdCctJyxcblx0XHRcdFx0XHRDb25zdC5NRU5VX0dSQVBIX0NMRUFSLFxuXHRcdFx0XHRcdENvbnN0Lk1FTlVfQ0VMTF9QQVNURSxcblx0XHRcdFx0XHQnLScsXG5cdFx0XHRcdFx0Q29uc3QuTUVOVV9MQVlPVVQsXG5cdFx0XHRcdFx0W1xuXHRcdFx0XHRcdFx0Q29uc3QuTUVOVV9MQVlPVVRfSE9SSVpPTlRBTCxcblx0XHRcdFx0XHRcdENvbnN0Lk1FTlVfTEFZT1VUX1ZFUlRJQ0FMLFxuXHRcdFx0XHRcdFx0Q29uc3QuTUVOVV9MQVlPVVRfT1JHQU5JQyxcblx0XHRcdFx0XHRcdENvbnN0Lk1FTlVfTEFZT1VUX0NJUkNMRSxcblx0XHRcdFx0XHRcdC8vQ29uc3QuTUVOVV9MQVlPVVRfUEFSQUxMRUwsXG5cdFx0XHRcdFx0XHRDb25zdC5NRU5VX0xBWU9VVF9TVEFDS19IT1JJWk9OVEFMLFxuXHRcdFx0XHRcdFx0Q29uc3QuTUVOVV9MQVlPVVRfU1RBQ0tfVkVSVElDQUxcblx0XHRcdFx0XHRdLFxuXHRcdFx0XHRcdCctJyxcblx0XHRcdFx0XHRDb25zdC5NRU5VX1pPT00sXG5cdFx0XHRcdFx0W1xuXHRcdFx0XHRcdFx0Q29uc3QuTUVOVV9aT09NX0lOLFxuXHRcdFx0XHRcdFx0Q29uc3QuTUVOVV9aT09NX09VVCxcblx0XHRcdFx0XHRcdENvbnN0Lk1FTlVfWk9PTV9DRU5URVIsXG5cdFx0XHRcdFx0XHRDb25zdC5NRU5VX1pPT01fQUNUVUFMXG5cdFx0XHRcdFx0XSxcblx0XHRcdFx0XHQnLScsXG5cdFx0XHRcdFx0Q29uc3QuTUVOVV9WSUVXX1JFTEFUSU9OX0JBQ0tcblxuXHRcdFx0XHRdLFxuXHRcdFx0XHRsaWJzOiBDb250ZXh0TGlic1xuXHRcdFx0fSk7XG5cblx0XHRcdCRzY29wZS50b29sYmFyUGFyYW1zID0gbmV3IEdyYXBoVG9vbGJhcih7XG5cdFx0XHRcdGVkaXRvcjogc2VsZi5lZGl0b3Jcblx0XHRcdH0pO1xuXG5cdFx0XHQkc2NvcGUuaW5mb1BhcmFtcyA9IG5ldyBHcmFwaEluZm8oc2VsZi5lZGl0b3IpO1xuXHRcdH0pO1xuXG5cdFx0JHNjb3BlLnZpZXd0cmVlUGFyYW1zID0gbmV3IEdyYXBoVmlld3RyZWUoe1xuXHRcdFx0cXVlcnlWaWV3OiB0cnVlLFxuXHRcdFx0c2hvd0Zvcm06IHRydWUsXG5cdFx0XHRhbGxvd0VkaXQ6IHRydWUsXG5cdFx0XHRhbGxvd1Nob3dQdWJ2aWV3OiB0cnVlLFxuXHRcdFx0c2VsZWN0Tm9kZTogZnVuY3Rpb24obm9kZSl7XG5cdFx0XHRcdCRzY29wZS5pbmZvUGFyYW1zLnVwZGF0ZSgndmlldycsIG5vZGUpO1xuXG5cdFx0XHRcdGlmKG5vZGUueG1sKXtcblx0XHRcdFx0XHRzZWxmLmVkaXRvci5hY3Rpb24ub3BlblZpZXcobm9kZSk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9KTtcblxuXHRcdCRzY29wZS4kb24oRXZlbnQuR1JBUEhfQ0FOVkFTX0NMSUNLLCBmdW5jdGlvbihldmVudCwgZGF0YSl7XG5cdFx0XHRpZihkYXRhLmVkaXRvci5zdGF0ZS52aWV3KXtcblx0XHRcdFx0JHNjb3BlLmluZm9QYXJhbXMudXBkYXRlKCd2aWV3JywgZGF0YS5lZGl0b3Iuc3RhdGUudmlldyk7XG5cdFx0XHR9ZWxzZXtcblx0XHRcdFx0JHNjb3BlLmluZm9QYXJhbXMuaGlkZSgpO1xuXHRcdFx0fVxuXHRcdH0pO1xuXG5cdFx0JHNjb3BlLiRvbihFdmVudC5WSUVXX0RFTEVURV9CRUZPUkUsIGZ1bmN0aW9uKGV2ZW50LCBkYXRhKXtcblx0XHRcdFVuaXQuY29uZmlybSgn5Yig6Zmk5ZCO5peg5rOV5oGi5aSN77yM6K+356Gu6K6k5piv5ZCm6KaB57un57ut77yfJywgZnVuY3Rpb24ocmVzdWx0KXtcblx0XHRcdFx0Vmlld1NlcnZpY2UucmVtb3ZlKGRhdGEuaWQpXG5cdFx0XHRcdFx0LnN1Y2Nlc3MoZnVuY3Rpb24oKXtcblx0XHRcdFx0XHRcdHNlbGYuZWRpdG9yLmFjdGlvbi5jbGVhcigpO1xuXHRcdFx0XHRcdFx0JHNjb3BlLiRicm9hZGNhc3QoRXZlbnQuVklFV19ERUxFVEVfQUZURVIsIFVuaXQuZXZlbnREYXRhKGRhdGEpKTtcblx0XHRcdFx0XHRcdCRzY29wZS5pbmZvUGFyYW1zLmhpZGUoKTtcblx0XHRcdFx0XHR9KTtcblx0XHRcdH0pO1xuXHRcdH0pO1xuXG5cdFx0JHNjb3BlLiRvbihFdmVudC5WSUVXX1VQREFURV9CRUZPUkUsIGZ1bmN0aW9uKCl7XG5cdFx0XHRzZWxmLmVkaXRvci5hY3Rpb24udXBkYXRlKCk7XG5cdFx0fSk7XG5cblx0fSk7XG5cblxufSkobmFtZVNwYWNlLnJlZygnZ3JhcGgnKSwgbmFtZVNwYWNlLnJlZygnZ3JhcGgucGFnZScpKTtcblxuXG5cblxuKGZ1bmN0aW9uKGdyYXBoLCBzZWxmKXtcblxuXHQndXNlIHN0cmljdCc7XG5cblx0Z3JhcGguYXBwLmNvbnRyb2xsZXIoJ01haW5Hcm91cENyZWF0ZUN0cmwnLCBmdW5jdGlvbigkc2NvcGUsIFZpZXdTZXJ2aWNlLCBVbml0KXtcblxuXHRcdC8vR3JvdXBTZXJ2aWNlXG5cdFx0dmFyIGksajtcblx0XHQkc2NvcGUuc3RhdGljID0gVW5pdC5zdGF0aWM7XG5cdFx0JHNjb3BlLnZpZXdzID0gW107XG5cdFx0JHNjb3BlLmZpbHRlciA9ICcnO1xuXG5cdFx0JHNjb3BlLnJvdyA9IDM7XG5cdFx0JHNjb3BlLmNvbCA9IDM7XG5cdFx0JHNjb3BlLmJhc2ljU2V0ID0ge307XG5cdFx0JHNjb3BlLnR3b0RTZXQgPXt9O1xuXHRcdCRzY29wZS50aHJlZURTZXQgPXt9O1xuXHRcdCRzY29wZS4kcGFyZW50LnNldENvbmZpZyA9IGZhbHNlO1xuXHRcdCRzY29wZS4kcGFyZW50Lmdyb3VwSXRlbUFycmF5ID0gW107XG5cdFx0JHNjb3BlLiRwYXJlbnQuZ3JvdXBJbWdCb3g9W107XG5cdFx0JHNjb3BlLiRwYXJlbnQuc2V0TnVtPXt9O1xuXHRcdCRzY29wZS4kcGFyZW50LmNvbG9yQm94ID0ge307XG5cdFx0JHNjb3BlLiRwYXJlbnQuZ3JvdXA9e307XG5cdFx0JHNjb3BlLiRwYXJlbnQuZ3JvdXAuY29udGVudD17fTtcblx0XHQkc2NvcGUuJHBhcmVudC5ncm91cC5jb250ZW50LnZpZXdEZXNjcmlwdGlvbiA9Jyc7XG5cdFx0JHNjb3BlLiRwYXJlbnQuZ3JvdXAuY29udGVudC5kMnNldHRpbmcgPXt9O1xuXHRcdCRzY29wZS4kcGFyZW50Lmdyb3VwLmNvbnRlbnQuZDNzZXR0aW5nPXt9O1xuXHRcdCRzY29wZS4kcGFyZW50Lmdyb3VwLmNvbnRlbnQuZDJzZXR0aW5nLnZpZXdzPVtdO1xuXHRcdCRzY29wZS4kcGFyZW50Lmdyb3VwLmNvbnRlbnQuZDNzZXR0aW5nLnJvd3MgPSAzO1xuXHRcdCRzY29wZS4kcGFyZW50Lmdyb3VwLmNvbnRlbnQuZDNzZXR0aW5nLmNvbHMgPSAzO1xuXHRcdCRzY29wZS4kcGFyZW50Lmdyb3VwLmNvbnRlbnQuZDNzZXR0aW5nLmxheWVyTWFyZ2luID0gMjAwO1xuXHRcdCRzY29wZS4kcGFyZW50Lmdyb3VwLmNvbnRlbnQuZDNzZXR0aW5nLmxheWVySXRlbU1hcmdpbiA9IDEwO1xuXHRcdCRzY29wZS4kcGFyZW50Lmdyb3VwLmNvbnRlbnQuZDJzZXR0aW5nLnRvb2xiYXJTaXplID0gMTMwO1xuXHRcdCRzY29wZS4kcGFyZW50Lmdyb3VwLmNvbnRlbnQuZDJzZXR0aW5nLm91dExpbmVTaXplID0gOTA7XG5cdFx0JHNjb3BlLiRwYXJlbnQuZ3JvdXAuY29udGVudC5kMnNldHRpbmcubGF5b3V0ID0gJ3RvcCc7XG5cdFx0JHNjb3BlLiRwYXJlbnQuZ3JvdXAuY29udGVudC5kMnNldHRpbmcubWF4Q291bnQgPSA0O1xuXHRcdCRzY29wZS4kcGFyZW50Lmdyb3VwLmNvbnRlbnQuZDJzZXR0aW5nLnRvb2xiYXJCZ0NvbG9yID0gJyNDMEMwQzAnO1xuXHRcdCRzY29wZS4kcGFyZW50Lmdyb3VwLmNvbnRlbnQuZDJzZXR0aW5nLmJ0bkNvbG9yID0gJyM2MTYxNjEnO1xuXHRcdC8vJHNjb3BlLmdyb3VwID0gJHNjb3BlLmdyb3VwLmNvbnRlbnQuZDNzZXR0aW5nLmxheWVycztcblx0XHQkc2NvcGUuJHdhdGNoR3JvdXAoWydncm91cC5jb250ZW50LmQzc2V0dGluZy5yb3dzJywnZ3JvdXAuY29udGVudC5kM3NldHRpbmcuY29scyddLGZ1bmN0aW9uKG5ld1ZhbHVlcyl7XG5cdFx0XHQkc2NvcGUuZ3JvdXAuY29udGVudC5kM3NldHRpbmcubGF5ZXJzPVtdO1xuXHRcdFx0Zm9yKGk9MDtpPG5ld1ZhbHVlc1swXTtpKyspe1xuXHRcdFx0XHR2YXIgdGVtcCA9IFtdO1xuXHRcdFx0XHRmb3Ioaj0wO2o8bmV3VmFsdWVzWzFdO2orKyl7XG5cdFx0XHRcdFx0aWYoJHNjb3BlLmdyb3VwSW1nQm94Lmxlbmd0aCAhPT0wICYmICRzY29wZS5ncm91cEltZ0JveFtpXVtqXSAhPT1udWxsKXtcblx0XHRcdFx0XHRcdHRlbXBbal09ICRzY29wZS5ncm91cEltZ0JveFtpXVtqXTtcblx0XHRcdFx0XHR9ZWxzZXtcblx0XHRcdFx0XHRcdHRlbXBbal09bnVsbDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0JHNjb3BlLmdyb3VwLmNvbnRlbnQuZDNzZXR0aW5nLmxheWVycy5wdXNoKHRlbXApO1xuXHRcdFx0fVxuXHRcdFx0dmFyIGxlbmd0aCA9IG5ld1ZhbHVlc1swXSpuZXdWYWx1ZXNbMV07XG5cdFx0XHQkc2NvcGUuZ3JvdXBJdGVtQXJyYXk9W107XG5cdFx0XHRmb3IoaT0wO2k8bGVuZ3RoO2krKyl7XG5cdFx0XHRcdCRzY29wZS5ncm91cEl0ZW1BcnJheS5wdXNoKHt9KTtcblx0XHRcdH1cblx0XHRcdCRzY29wZS53aWR0aD0xMDAvbmV3VmFsdWVzWzFdKyclJztcblx0XHRcdCRzY29wZS5oZWlnaHQ9KCQoJy5tYWluLWJveC1jb250ZW50LXBhbmVsLWNvbnRhaW5lci1ib2R5Jykud2lkdGgoKSpOdW1iZXIoMTAwL25ld1ZhbHVlc1sxXSkpLzEwMCoxLzI7XG5cdFx0fSk7XG5cdFx0Vmlld1NlcnZpY2UucHJpdmF0ZSgpXG5cdFx0XHQuc3VjY2VzcyhmdW5jdGlvbihyZXN1bHQpe1xuXHRcdFx0XHQkc2NvcGUudmlld3MgPSByZXN1bHQuZGF0YTtcblx0XHRcdH0pO1xuXHRcdCRzY29wZS5yZWZyZXNoID0gZnVuY3Rpb24oKXtcblx0XHRcdFZpZXdTZXJ2aWNlLnByaXZhdGUoKVxuXHRcdFx0XHQuc3VjY2VzcyhmdW5jdGlvbihyZXN1bHQpe1xuXHRcdFx0XHRcdCRzY29wZS52aWV3cyA9IHJlc3VsdC5kYXRhO1xuXHRcdFx0XHR9KTtcblx0XHR9O1xuXHR9KTtcblxuXG59KShuYW1lU3BhY2UucmVnKCdncmFwaCcpLCBuYW1lU3BhY2UucmVnKCdncmFwaC5wYWdlJykpO1xuXG5cblxuKGZ1bmN0aW9uKGdyYXBoLCBzZWxmKXtcblxuXHQndXNlIHN0cmljdCc7XG5cblx0Z3JhcGguYXBwLmNvbnRyb2xsZXIoJ01haW5Hcm91cEVkaXRDdHJsJywgZnVuY3Rpb24oJHNjb3BlLCAkc3RhdGUsVmlld1NlcnZpY2UsR3JvdXBTZXJ2aWNlLCBVbml0KXtcblxuXHRcdC8vR3JvdXBTZXJ2aWNlXG5cdFx0dmFyIGlkID0gJHN0YXRlLnBhcmFtcy5pZCwgaSxqO1xuXHRcdCRzY29wZS5zdGF0aWMgPSBVbml0LnN0YXRpYztcblx0XHQkc2NvcGUudmlld3MgPSBbXTtcblx0XHQkc2NvcGUuZmlsdGVyID0gJyc7XG5cblx0XHQkc2NvcGUucm93ID0gMztcblx0XHQkc2NvcGUuY29sID0gMztcblx0XHQvLyRzY29wZS5iZ0NvbG9yPScnO1xuXHRcdC8vJHNjb3BlLnRyYW5zZm9ybSA9Jyc7XG5cdFx0dmFyIGdyb3VwPVtdO1xuXG5cdFx0Vmlld1NlcnZpY2UucHJpdmF0ZSgpXG5cdFx0XHQuc3VjY2VzcyhmdW5jdGlvbihyZXN1bHQpe1xuXHRcdFx0XHQkc2NvcGUudmlld3MgPSByZXN1bHQuZGF0YTtcblx0XHRcdFx0Y29uc29sZS5sb2cocmVzdWx0KTtcblx0XHRcdH0pO1xuXHRcdEdyb3VwU2VydmljZS5nZXQoaWQpLnN1Y2Nlc3MoZnVuY3Rpb24ocmVzKXtcblx0XHRcdHZhciBzID0gJC5wYXJzZUpTT04ocmVzLmRhdGEuY29udGVudCk7XG5cdFx0XHQkc2NvcGUuJHBhcmVudC5ncm91cCA9IHM7XG5cdFx0XHRncm91cCA9IGFuZ3VsYXIuY29weSgkc2NvcGUuJHBhcmVudC5ncm91cC5jb250ZW50LmQzc2V0dGluZy5sYXllcnMpO1xuXHRcdFx0JHNjb3BlLiR3YXRjaEdyb3VwKFsnZ3JvdXAuY29udGVudC5kM3NldHRpbmcucm93cycsJ2dyb3VwLmNvbnRlbnQuZDNzZXR0aW5nLmNvbHMnXSxmdW5jdGlvbihuZXdWYWx1ZXMpe1xuXHRcdFx0XHQkc2NvcGUuJHBhcmVudC5ncm91cC5jb250ZW50LmQzc2V0dGluZy5sYXllcnM9W107XG5cdFx0XHRcdGZvcihpPTA7aTxuZXdWYWx1ZXNbMF07aSsrKXtcblx0XHRcdFx0XHR2YXIgdGVtcCA9IFtdO1xuXHRcdFx0XHRcdGZvcihqPTA7ajxuZXdWYWx1ZXNbMV07aisrKXtcblx0XHRcdFx0XHRcdGlmKGdyb3VwW2ldW2pdICE9PW51bGwpe1xuXHRcdFx0XHRcdFx0XHR0ZW1wW2pdPWdyb3VwW2ldW2pdO1xuXHRcdFx0XHRcdFx0fWVsc2V7XG5cdFx0XHRcdFx0XHRcdHRlbXBbal09bnVsbDtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0JHNjb3BlLiRwYXJlbnQuZ3JvdXAuY29udGVudC5kM3NldHRpbmcubGF5ZXJzLnB1c2godGVtcCk7XG5cdFx0XHRcdH1cblx0XHRcdFx0dmFyIGxlbmd0aCA9IG5ld1ZhbHVlc1swXSpuZXdWYWx1ZXNbMV07XG5cdFx0XHRcdCRzY29wZS4kcGFyZW50Lmdyb3VwSXRlbUFycmF5PVtdO1xuXHRcdFx0XHRmb3IoaT0wO2k8bGVuZ3RoO2krKyl7XG5cdFx0XHRcdFx0JHNjb3BlLiRwYXJlbnQuZ3JvdXBJdGVtQXJyYXkucHVzaCh7fSk7XG5cdFx0XHRcdH1cblx0XHRcdFx0JHNjb3BlLndpZHRoPTEwMC9uZXdWYWx1ZXNbMV0rJyUnO1xuXHRcdFx0XHQkc2NvcGUuaGVpZ2h0PSgkKCcubWFpbi1ib3gtY29udGVudC1wYW5lbC1jb250YWluZXItYm9keScpLndpZHRoKCkqTnVtYmVyKDEwMC9uZXdWYWx1ZXNbMV0pKS8xMDAqMS8yO1xuXHRcdFx0fSk7XG5cdFx0fSk7XG5cdFx0JHNjb3BlLnVwZGF0ZVZpZXcgPSBmdW5jdGlvbigpe1xuXHRcdFx0JHNjb3BlLiRwYXJlbnQuZ3JvdXAudmlld3MgPSBhbmd1bGFyLmNvcHkoJHNjb3BlLiRwYXJlbnQuZ3JvdXAuY29udGVudC5kMnNldHRpbmcudmlld3MpO1xuXHRcdFx0aWYoJHNjb3BlLiRwYXJlbnQuZ3JvdXAubmFtZSA9PT0gdW5kZWZpbmVkIHx8ICRzY29wZS4kcGFyZW50Lmdyb3VwLm5hbWU9PT0nJyB8fCAkc2NvcGUuJHBhcmVudC5ncm91cC5jb250ZW50LnZpZXdEZXNjcmlwdGlvbiA9PT0nJyl7XG5cdFx0XHRcdFVuaXQuZXJyb3IoJ+ivt+Whq+WGmeWQjeensOaIluaPj+i/sCcpO1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cdFx0XHR2YXIgY29uID0gSlNPTi5zdHJpbmdpZnkoJHNjb3BlLiRwYXJlbnQuZ3JvdXApO1xuXHRcdFx0dmFyIHNhdmVEYXRlID0ge1xuXHRcdFx0XHR2aWV3czokc2NvcGUuJHBhcmVudC5ncm91cC52aWV3cyxcblx0XHRcdFx0aWQ6JHN0YXRlLnBhcmFtcy5pZCxcblx0XHRcdFx0bmFtZTokc2NvcGUuJHBhcmVudC5ncm91cC5uYW1lLFxuXHRcdFx0XHRjb250ZW50OmNvblxuXHRcdFx0fTtcblx0XHRcdEdyb3VwU2VydmljZS51cGRhdGUoc2F2ZURhdGUpLnN1Y2Nlc3MoZnVuY3Rpb24oKXtcblx0XHRcdFx0VW5pdC5zdWNjZXNzKCfmm7TmlrDmiJDlip8nKTtcblx0XHRcdFx0JHN0YXRlLmdvKCdob21lLmdyb3VwLmxpc3QnKTtcblx0XHRcdH0pO1xuXHRcdH07XG5cblx0XHQkc2NvcGUuc2F2ZUFzVmlldyA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRVbml0LnByb21wdCgn6K+36L6T5YWl6KeG5Zu+5ZCN56ewJyxmdW5jdGlvbihyZXMpe1xuXHRcdFx0XHQkc2NvcGUuJHBhcmVudC5ncm91cC5uYW1lID0gcmVzO1xuXHRcdFx0XHQkc2NvcGUuJHBhcmVudC5ncm91cC52aWV3cyA9IGFuZ3VsYXIuY29weSgkc2NvcGUuJHBhcmVudC5ncm91cC5jb250ZW50LmQyc2V0dGluZy52aWV3cyk7XG5cdFx0XHRcdGlmKCRzY29wZS4kcGFyZW50Lmdyb3VwLm5hbWUgPT09IHVuZGVmaW5lZCB8fCAkc2NvcGUuJHBhcmVudC5ncm91cC5uYW1lPT09JycgfHwgJHNjb3BlLiRwYXJlbnQuZ3JvdXAuY29udGVudC52aWV3RGVzY3JpcHRpb24gPT09Jycpe1xuXHRcdFx0XHRcdFVuaXQuZXJyb3IoJ+ivt+Whq+WGmeWQjeensOaIluaPj+i/sCcpO1xuXHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0fVxuXHRcdFx0XHR2YXIgY29uID0gSlNPTi5zdHJpbmdpZnkoJHNjb3BlLiRwYXJlbnQuZ3JvdXApO1xuXHRcdFx0XHR2YXIgc2F2ZURhdGUgPSB7XG5cdFx0XHRcdFx0dmlld3M6JHNjb3BlLiRwYXJlbnQuZ3JvdXAudmlld3MsXG5cdFx0XHRcdFx0bmFtZTokc2NvcGUuJHBhcmVudC5ncm91cC5uYW1lLFxuXHRcdFx0XHRcdGNvbnRlbnQ6Y29uXG5cdFx0XHRcdH07XG5cdFx0XHRcdEdyb3VwU2VydmljZS5zYXZlKHNhdmVEYXRlKS5zdWNjZXNzKGZ1bmN0aW9uKHJlcyl7XG5cdFx0XHRcdFx0VW5pdC5zdWNjZXNzKCfkv53lrZjmiJDlip8nKTtcblx0XHRcdFx0XHQkc3RhdGUuZ28oJ2hvbWUuZ3JvdXAuZWRpdCcse2lkOnJlcy5kYXRhLmlkfSk7XG5cdFx0XHRcdH0pO1xuXHRcdFx0fSwn6KeG5Zu+5ZCN56ewJyk7XG5cdFx0fTtcblx0fSk7XG5cblxufSkobmFtZVNwYWNlLnJlZygnZ3JhcGgnKSwgbmFtZVNwYWNlLnJlZygnZ3JhcGgucGFnZScpKTtcblxuXG4oZnVuY3Rpb24oZ3JhcGgsIHNlbGYpe1xuXG5cdCd1c2Ugc3RyaWN0JztcblxuXHRncmFwaC5hcHAuY29udHJvbGxlcignTWFpbkdyb3VwTGlzdEN0cmwnLCBmdW5jdGlvbigkc2NvcGUsICRzdGF0ZSwgR3JvdXBTZXJ2aWNlLCBWaWV3U2VydmljZSwgVW5pdCwgT3V0bGluZSwgJHRpbWVvdXQpe1xuXG5cdFx0JHNjb3BlLmlzRXhwYW5kID0gZmFsc2U7XG5cdFx0JHNjb3BlLmlzRnVsbCA9IGZhbHNlO1xuXHRcdCRzY29wZS5wb3BvdmVyUGxhY2VtZW50ID0gXCJ0b3BcIjtcblxuXG5cdFx0Lyrnm5HlkKzov4fmu6Top4blm77ovpPlhaXmoYYqL1xuXHRcdCRzY29wZS4kd2F0Y2goJ2ZpbHRlcicsIGZ1bmN0aW9uKCkge1xuXHRcdFx0aWYgKCRzY29wZS5maWx0ZXIgPT0gJycgJiYgJHNjb3BlLmlzUHVibGljKSB7XG5cdFx0XHRcdCRzY29wZS5wdWJsaWNWaWV3c1Nob3cgPSAkc2NvcGUucHVibGljVmlld3Muc2xpY2UoMCwgJHNjb3BlLnBhZ2VTaXplKTtcblx0XHRcdFx0JHNjb3BlLmN1cnJlbnRQYWdlID0gMTtcblx0XHRcdH1cblx0XHR9LCBmYWxzZSk7XG5cblx0XHQkc2NvcGUuc3dpdGNoVmlldyA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0JHNjb3BlLmhpZGVPcGVyYXRpb24gPSB0cnVlO1xuXHRcdFx0aWYgKCRzY29wZS5pc1B1YmxpYykge1xuXHRcdFx0XHQkc3RhdGUuZ28oJ2hvbWUuZ3JvdXAubGlzdC5wdWJsaWMnKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdCRzdGF0ZS5nbygnaG9tZS5ncm91cC5saXN0LnByaXZhdGUnKTtcblx0XHRcdH1cblx0XHR9O1xuXG5cdFx0JHNjb3BlLmRlbGV0ZVZpZXcgPSBmdW5jdGlvbigpIHtcblx0XHRcdFVuaXQuY29uZmlybSgn56Gu6K6k5Yig6Zmk6KeG5Zu+77yfJywgZnVuY3Rpb24oKSB7XG5cdFx0XHRcdEdyb3VwU2VydmljZS5kZWxldGVCeUlkKCRzY29wZS52aWV3LmlkKS5zdWNjZXNzKGZ1bmN0aW9uKHJlc3VsdCl7XG5cdFx0XHRcdFx0JHNjb3BlLnZpZXdzLnNwbGljZSgkc2NvcGUuY3VycmVudEluZGV4LCAxKTtcblx0XHRcdFx0XHQkc2NvcGUuaGlkZU9wZXJhdGlvbiA9IHRydWU7XG5cdFx0XHRcdH0pO1xuXHRcdFx0XHQkKFwiLm1haW4tYm94LWNvbnRlbnQtcGFuZWwtY29udGFpbmVyLWJvZHlcIikuaHRtbCgnJyk7XG5cdFx0XHR9KTtcblx0XHR9O1xuXG5cdFx0JHNjb3BlLmNyZWF0ZVZpZXcgPSBmdW5jdGlvbigpIHtcblx0XHRcdCRzdGF0ZS5nbygnaG9tZS5ncm91cC5jcmVhdGUnKTtcblx0XHR9O1xuXG5cdFx0JHNjb3BlLnNob3dQb3BvdmVyID0gZnVuY3Rpb24oJGV2ZW50KXtcblx0XHRcdHZhciBkb20gPSAkZXZlbnQuY3VycmVudFRhcmdldDtcblx0XHRcdGlmIChkb20uY2xhc3NOYW1lLmluZGV4T2YoJ2dyb3VwLXB1YmxpYy12aWV3LWxpc3QtZGl2JykgPiAtMSkge1xuXHRcdFx0XHRpZiAoJChkb20pLmNoaWxkcmVuKFwiLmdyb3VwLXB1YmxpYy12aWV3LWxpc3QtdXNlclwiKVswXS5zY3JvbGxXaWR0aCA+ICQoZG9tKS5jaGlsZHJlbihcIi5ncm91cC1wdWJsaWMtdmlldy1saXN0LXVzZXJcIilbMF0ub2Zmc2V0V2lkdGgpIHtcblx0XHRcdFx0XHQkKGRvbSkucG9wb3Zlcignc2hvdycpO1xuXHRcdFx0XHR9XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRpZiAoJChkb20pWzBdLnNjcm9sbFdpZHRoID4gJChkb20pWzBdLm9mZnNldFdpZHRoKSB7XG5cdFx0XHRcdFx0JChkb20pLnBvcG92ZXIoJ3Nob3cnKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH07XG5cblx0XHQkc2NvcGUuaGlkZVBvcG92ZXIgPSBmdW5jdGlvbigkZXZlbnQpIHtcblx0XHRcdCQoJGV2ZW50LmN1cnJlbnRUYXJnZXQpLnBvcG92ZXIoJ2hpZGUnKTtcblx0XHR9O1xuXG5cdFx0JHNjb3BlLmV4cGFuZFZpZXcgPSBmdW5jdGlvbigpIHtcblx0XHRcdCRzY29wZS5pc0V4cGFuZCA9IHRydWU7XG5cdFx0XHR2YXIgJGRvbSA9ICQoXCIubWFpbi1ib3gtY29udGVudC1wYW5lbC1jb250YWluZXJcIik7XG5cdFx0XHR2YXIgJGRvbTEgPSAkKFwiLm1haW4tYm94LWNvbnRlbnQtaGVhZGluZ1wiKTtcblx0XHRcdCRkb20xLmNzcygncG9zaXRpb24nLCAnZml4ZWQnKS5jc3MoJ3RvcCcsIDApLmNzcygnbGVmdCcsIDApLmNzcygnd2lkdGgnLCAnMTAwJScpLmNzcygnei1pbmRleCcsIDExKTtcblx0XHRcdCRkb20uY3NzKCdwb3NpdGlvbicsICdmaXhlZCcpLmNzcygnYmFja2dyb3VuZC1jb2xvcicsICd3aGl0ZScpLmNzcygnbWFyZ2luLXRvcCcsICRkb20xLmNzcygnaGVpZ2h0JykpLmNzcygnei1pbmRleCcsIDEwKTtcblx0XHRcdCRzY29wZS5vdXRsaW5lLnJlc2l6ZSgpO1xuXHRcdFx0JHNjb3BlLmlzRnVsbCA9IHRydWU7XG5cdFx0XHQkc2NvcGUucG9wb3ZlclBsYWNlbWVudCA9IFwiYm90dG9tXCI7XG5cdFx0fTtcblxuXHRcdCRzY29wZS5jb21wcmVzc1ZpZXcgPSBmdW5jdGlvbigpIHtcblx0XHRcdCRzY29wZS5pc0V4cGFuZCA9IGZhbHNlO1xuXHRcdFx0dmFyICRkb20gPSAkKFwiLm1haW4tYm94LWNvbnRlbnQtcGFuZWwtY29udGFpbmVyXCIpO1xuXHRcdFx0JGRvbS5jc3MoJ3Bvc2l0aW9uJywgJ2Fic29sdXRlJykuY3NzKCd6LWluZGV4JywgMSkuY3NzKCdtYXJnaW4tdG9wJywgMCkucmVtb3ZlQXR0cignYmFja2dyb3VuZC1jb2xvcicpO1xuXG5cdFx0XHR2YXIgJGRvbTEgPSAkKFwiLm1haW4tYm94LWNvbnRlbnQtaGVhZGluZ1wiKTtcblx0XHRcdCRkb20xLmNzcygncG9zaXRpb24nLCAncmVsYXRpdmUnKS5jc3MoJ3otaW5kZXgnLCAxMCkucmVtb3ZlQXR0cigndG9wJyk7XG5cdFx0XHQkZG9tMS5yZW1vdmVBdHRyKCdsZWZ0Jyk7XG5cdFx0XHQkc2NvcGUub3V0bGluZS5yZXNpemUoKTtcblx0XHRcdCRzY29wZS5pc0Z1bGwgPSBmYWxzZTtcblx0XHRcdCRzY29wZS5wb3BvdmVyUGxhY2VtZW50ID0gXCJ0b3BcIjtcblx0XHR9O1xuXG5cblx0fSk7XG5cblxufSkobmFtZVNwYWNlLnJlZygnZ3JhcGgnKSwgbmFtZVNwYWNlLnJlZygnZ3JhcGgucGFnZScpKTtcblxuXG4oZnVuY3Rpb24oZ3JhcGgsIHNlbGYpe1xuXG5cdGdyYXBoLmFwcC5jb250cm9sbGVyKCdNYWluU2VhcmNoSG9tZUN0cmwnLCBbJyRzY29wZScsIGZ1bmN0aW9uKCRzY29wZSl7XG5cblx0XHQkc2NvcGUua2V5d29yZCA9ICcnO1xuXG5cdFx0JHNjb3BlLnNlYXJjaCA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRpZigkc2NvcGUua2V5d29yZCl7XG5cdFx0XHRcdCRzY29wZS4kc3RhdGUuZ28oJ2hvbWUuc2VhcmNoLnJlc3VsdCcsIHtrZXl3b3JkOiAkc2NvcGUua2V5d29yZH0pO1xuXHRcdFx0fVxuXHRcdH07XG5cdH1dKTtcblxuXG59KShuYW1lU3BhY2UucmVnKCdncmFwaCcpLCBuYW1lU3BhY2UucmVnKCdncmFwaC5wYWdlJykpO1xuXG5cblxuXG4oZnVuY3Rpb24oZ3JhcGgsIHNlbGYpe1xuXG5cdGdyYXBoLmFwcC5jb250cm9sbGVyKCdNYWluU2VhcmNoUmVzdWx0Q3RybCcsXG5cdFx0ZnVuY3Rpb24oJHNjb3BlLCBTZWFyY2hTZXJ2aWNlLCBuZ1RhYmxlUGFyYW1zLCBVbml0LCBPdXRsaW5lLCAkdGltZW91dCl7XG5cblx0XHQkc2NvcGUua2V5d29yZCA9ICRzY29wZS4kc3RhdGUucGFyYW1zLmtleXdvcmQ7XG5cblx0XHQkc2NvcGUudmlld3MgPSBbXTtcblx0XHQkc2NvcGUuY2lzID0gW107XG5cblx0XHQkc2NvcGUudGFibGVQYXJhbXMgPSBuZXcgbmdUYWJsZVBhcmFtcyh7XG5cdFx0XHRwYWdlOiAxLFxuXHRcdFx0Y291bnQ6IDEwXG5cdFx0fSwge1xuXHRcdFx0dG90YWw6IDAsXG5cdFx0XHRjb3VudHM6IFtdLFxuXHRcdFx0ZGF0YTogW11cblx0XHR9KTtcblxuXHRcdCRzY29wZS5zdGF0aWNVcmwgPSBmdW5jdGlvbih1cmwpe1xuXHRcdFx0cmV0dXJuIFVuaXQuc3RhdGljKHVybCk7XG5cdFx0fTtcblxuXHRcdFNlYXJjaFNlcnZpY2UuZnV6enkoJHNjb3BlLmtleXdvcmQpXG5cdFx0XHQuc3VjY2VzcyhmdW5jdGlvbihyZXN1bHQpe1xuXG5cdFx0XHRcdC8vY29uc29sZS5sb2cocmVzdWx0LmRhdGEpO1xuXG5cdFx0XHRcdCRzY29wZS52aWV3cyA9IHJlc3VsdC5kYXRhLnZpZXc7XG5cblx0XHRcdFx0JHNjb3BlLnRhYmxlUGFyYW1zLnBhZ2UoMSk7XG5cdFx0XHRcdCRzY29wZS50YWJsZVBhcmFtcy5zZXR0aW5ncyh7XG5cdFx0XHRcdFx0ZGF0YTogcmVzdWx0LmRhdGEuY2ksXG5cdFx0XHRcdFx0dG90YWw6IHJlc3VsdC5kYXRhLmNpLmxlbmd0aFxuXHRcdFx0XHR9KTtcblxuXHRcdFx0XHQkc2NvcGUudGFibGVQYXJhbXMucmVsb2FkKCk7XG5cdFx0XHR9KTtcblxuXG5cdFx0JHNjb3BlLnNob3dDaVZpZXdzID0gZnVuY3Rpb24ocm93KSB7XG5cdFx0XHRpZighcm93LmlzSW5pdENoYXJ0KXtcblx0XHRcdFx0JHRpbWVvdXQoZnVuY3Rpb24oKXtcblx0XHRcdFx0XHQkKCcjJyArIHJvdy5jb25maWcuaWQpLmhlaWdodCgkKCcjJyArIHJvdy5jb25maWcuaWQpLndpZHRoKCkgICogMC40KTtcblxuXHRcdFx0XHRcdGNvbnNvbGUubG9nKCQoJyMnICsgcm93LmNvbmZpZy5pZCkud2lkdGgoKSk7XG5cdFx0XHRcdFx0bmV3IE91dGxpbmUocm93LmNpVmlld3MsICQoJyMnICsgcm93LmNvbmZpZy5pZClbMF0sIHtcblx0XHRcdFx0XHRcdGxheW91dCA6IFwibGVmdFwiLFxuXHRcdFx0XHRcdFx0bWF4Q291bnQgOiA0LFxuXHRcdFx0XHRcdFx0b3V0TGluZVNpemUgOiA5MCxcblx0XHRcdFx0XHRcdHRvb2xiYXJTaXplIDogMTMwXG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdH0pO1xuXG5cdFx0XHRcdHJvdy5pc0luaXRDaGFydCA9IHRydWU7XG5cdFx0XHR9XG5cdFx0fTtcblx0fSk7XG5cblxufSkobmFtZVNwYWNlLnJlZygnZ3JhcGgnKSwgbmFtZVNwYWNlLnJlZygnZ3JhcGgucGFnZScpKTtcblxuXG5cbihmdW5jdGlvbihncmFwaCwgc2VsZil7XG5cbiAgICAndXNlIHN0cmljdCc7XG5cbiAgICBncmFwaC5hcHAuY29udHJvbGxlcignUHJpdmF0ZVZpZXdDdHJsJywgZnVuY3Rpb24oJHJvb3RTY29wZSwgJHNjb3BlLCAkc3RhdGUsIEdyb3VwU2VydmljZSwgVmlld1NlcnZpY2UsIFVuaXQsIE91dGxpbmUsICR0aW1lb3V0LCBFdmVudCkge1xuXG4gICAgICAgICRzY29wZS5pc1B1YmxpYyA9IGZhbHNlO1xuICAgICAgICAkc2NvcGUuc2hvd09wdGlvbiA9IGZhbHNlO1xuICAgICAgICAkc2NvcGUuaXMyRCA9IHRydWU7XG5cbiAgICAgICAgR3JvdXBTZXJ2aWNlLnByaXZhdGUoKS5zdWNjZXNzKGZ1bmN0aW9uKHJlc3VsdCkge1xuICAgICAgICAgICAgdmFyIHJldERhdGFzID0gcmVzdWx0LmRhdGE7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHJldERhdGFzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgdmFyIHJldERhdGEgPSByZXREYXRhc1tpXTtcbiAgICAgICAgICAgICAgICB2YXIgY3JlYXRlRGF0ZSA9IG5ldyBEYXRlKHJldERhdGEudGltZSk7XG4gICAgICAgICAgICAgICAgcmV0RGF0YS50aW1lID0gY3JlYXRlRGF0ZS50b0xvY2FsZURhdGVTdHJpbmcoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICRzY29wZS52aWV3cyA9IHJldERhdGFzO1xuICAgICAgICB9KTtcblxuXG4gICAgICAgICRzY29wZS5zaG93VmlldyA9IGZ1bmN0aW9uKHZpZXcpIHtcbiAgICAgICAgICAgICRzY29wZS5pczJEID0gdHJ1ZTtcbiAgICAgICAgICAgICRzY29wZS5zaG93T3B0aW9uID0gdHJ1ZTtcbiAgICAgICAgICAgICRzY29wZS52aWV3ID0gdmlldztcbiAgICAgICAgICAgICQoJy5wb3BvdmVyJykucmVtb3ZlKCk7XG4gICAgICAgICAgICAvLyRzdGF0ZS4kZW1pdCgnaG9tZS5ncm91cC5saXN0LnByaXZhdGUuZ2V0Jywgdmlldy5pZCk7XG4gICAgICAgICAgICAkc3RhdGUuZ28oJ2hvbWUuZ3JvdXAubGlzdC5wcml2YXRlLmdldCcsIHtpZDogdmlldy5pZH0sIHtyZWxvYWQ6IHRydWV9KTtcbiAgICAgICAgfTtcblxuICAgICAgICAkc2NvcGUuZGVsZXRlVmlldyA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgVW5pdC5jb25maXJtKCfnoa7orqTliKDpmaTop4blm77vvJ8nLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICBHcm91cFNlcnZpY2UuZGVsZXRlQnlJZCgkc2NvcGUudmlldy5pZCkuc3VjY2VzcyhmdW5jdGlvbihyZXN1bHQpe1xuICAgICAgICAgICAgICAgICAgICAvLyRzY29wZS52aWV3cy5zcGxpY2UoJHNjb3BlLmN1cnJlbnRJbmRleCwgMSk7XG4gICAgICAgICAgICAgICAgICAgICRzY29wZS5zaG93T3B0aW9uID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgICRzdGF0ZS5nbygnaG9tZS5ncm91cC5saXN0LnByaXZhdGUnLCB7fSwge3JlbG9hZDogdHJ1ZX0pO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICQoXCIubWFpbi1ib3gtY29udGVudC1wYW5lbC1jb250YWluZXItYm9keVwiKS5odG1sKCcnKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9O1xuXG4gICAgICAgICRzY29wZS5lZGl0VmlldyA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgJHN0YXRlLmdvKCdob21lLmdyb3VwLmVkaXQnLCB7XG4gICAgICAgICAgICAgICAgaWQ6ICRzY29wZS52aWV3LmlkXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfTtcblxuICAgICAgICAkc2NvcGUuc2hvdzNEVmlldyA9IGZ1bmN0aW9uKHZpZXcpIHtcbiAgICAgICAgICAgICRzY29wZS5zaG93T3B0aW9uID0gdHJ1ZTtcbiAgICAgICAgICAgICRzY29wZS52aWV3ID0gdmlldztcbiAgICAgICAgICAgICRzY29wZS5pczJEID0gZmFsc2U7XG4gICAgICAgICAgICAkc3RhdGUuZ28oJ2hvbWUuZ3JvdXAubGlzdC5wcml2YXRlLmdldDNkJywge2lkOiB2aWV3LmlkfSk7XG4gICAgICAgIH07XG5cbiAgICB9KTtcblxufSkobmFtZVNwYWNlLnJlZygnZ3JhcGgnKSwgbmFtZVNwYWNlLnJlZygnZ3JhcGgucGFnZScpKTtcblxuKGZ1bmN0aW9uKGdyYXBoLCBzZWxmKXtcblxuICAgICd1c2Ugc3RyaWN0JztcblxuICAgIGdyYXBoLmFwcC5jb250cm9sbGVyKCdHZXRWaWV3Q3RybCcsIGZ1bmN0aW9uKCRzY29wZSwgJHN0YXRlLCBHcm91cFNlcnZpY2UsIFZpZXdTZXJ2aWNlLCBVbml0LCBPdXRsaW5lLCAkdGltZW91dCkge1xuXG4gICAgICAgIHZhciB2aWV3SWQgPSAkc3RhdGUucGFyYW1zLmlkO1xuICAgICAgICAkc2NvcGUuJHBhcmVudC5pczJEID0gdHJ1ZTtcblxuICAgICAgICBHcm91cFNlcnZpY2UuZ2V0KHZpZXdJZCkuc3VjY2VzcyhmdW5jdGlvbihyZXN1bHQpIHtcbiAgICAgICAgICAgIHZhciB2aWV3ID0gcmVzdWx0LmRhdGE7XG4gICAgICAgICAgICAkc2NvcGUuJHBhcmVudC52aWV3ID0gdmlldztcblxuICAgICAgICAgICAgLy8g56eB5pyJ6KeG5Zu+5ZKM5YWs5pyJ6KeG5Zu+6KeG5Zu+5YiX6KGo5pi+56S65bel5YW35p2hXG4gICAgICAgICAgICAkc2NvcGUuJHBhcmVudC5zaG93T3B0aW9uID0gdHJ1ZTtcbiAgICAgICAgICAgICRzY29wZS4kcGFyZW50LmlzT3B0aW9uID0gdHJ1ZTtcblxuICAgICAgICAgICAgdmFyIHBhcmFtcyA9IFtdO1xuICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSB2aWV3LmNvbnRlbnQ7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHZpZXcuY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgICBjb250ZW50ID0gSlNPTi5wYXJzZSh2aWV3LmNvbnRlbnQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjb250ZW50LnZpZXdzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgcGFyYW1zLnB1c2goY29udGVudC52aWV3c1tpXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBWaWV3U2VydmljZS5nZXRCeUlkcyh7J3ZpZXdJZHMnOiBwYXJhbXN9KS5zdWNjZXNzKGZ1bmN0aW9uIChyZXN1bHQpIHtcbiAgICAgICAgICAgICAgICB2YXIgdmlld0RhdGFCeUlkcyA9IFtdO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgcGFyYW1zLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgcmVzdWx0LmRhdGEubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZXN1bHQuZGF0YVtrXS5pZCA9PSBwYXJhbXNbal0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2aWV3RGF0YUJ5SWRzLnB1c2gocmVzdWx0LmRhdGFba10pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICQoXCIubWFpbi1ib3gtY29udGVudC1wYW5lbC1jb250YWluZXItYm9keVwiKS5odG1sKCcnKTtcbiAgICAgICAgICAgICAgICAkc2NvcGUuJHBhcmVudC4kcGFyZW50Lm91dGxpbmUgPSBuZXcgT3V0bGluZSh2aWV3RGF0YUJ5SWRzLCAkKFwiLm1haW4tYm94LWNvbnRlbnQtcGFuZWwtY29udGFpbmVyLWJvZHlcIilbMF0sIGNvbnRlbnQuY29udGVudC5kMnNldHRpbmcpO1xuICAgICAgICAgICAgICAgICQoXCIjaXRlbXMgPiBkaXZcIikuZXEoMCkuZmluZChcImRpdltkYXRhLWlkXVwiKS5jc3MoJ29wYWNpdHknLCAwKTtcbiAgICAgICAgICAgICAgICAkKFwiI3Njcm9sbFwiKS5jc3MoXCJiYWNrZ3JvdW5kQ29sb3JcIiwgXCJyZ2JhKDAsMCwwLDAuMSlcIilcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcblxuXG4gICAgfSk7XG5cbn0pKG5hbWVTcGFjZS5yZWcoJ2dyYXBoJyksIG5hbWVTcGFjZS5yZWcoJ2dyYXBoLnBhZ2UnKSk7XG5cbihmdW5jdGlvbihncmFwaCwgc2VsZil7XG5cbiAgICAndXNlIHN0cmljdCc7XG5cbiAgICBncmFwaC5hcHAuY29udHJvbGxlcignR2V0M0RWaWV3Q3RybCcsIGZ1bmN0aW9uKCRzY29wZSwgJHN0YXRlLCBHcm91cFNlcnZpY2UsIFZpZXdTZXJ2aWNlLCBVbml0LCBVbml2ZXJzZSwgJHRpbWVvdXQpIHtcblxuICAgICAgICB2YXIgdmlld0lkID0gJHN0YXRlLnBhcmFtcy5pZDtcbiAgICAgICAgJHNjb3BlLiRwYXJlbnQuaXMyRCA9IGZhbHNlO1xuXG4gICAgICAgIEdyb3VwU2VydmljZS5nZXQodmlld0lkKS5zdWNjZXNzKGZ1bmN0aW9uKHJlc3VsdCkge1xuICAgICAgICAgICAgdmFyIHZpZXcgPSByZXN1bHQuZGF0YTtcbiAgICAgICAgICAgICRzY29wZS4kcGFyZW50LnZpZXcgPSB2aWV3O1xuICAgICAgICAgICAgJHNjb3BlLiRwYXJlbnQuc2hvd09wdGlvbiA9IHRydWU7XG4gICAgICAgICAgICB2YXIgcGFyYW1zID0gW107XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHZpZXcuY29udGVudDtcbiAgICAgICAgICAgIGlmICh0eXBlb2Ygdmlldy5jb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICAgIGNvbnRlbnQgPSBKU09OLnBhcnNlKHZpZXcuY29udGVudCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNvbnRlbnQudmlld3MubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICBwYXJhbXMucHVzaChjb250ZW50LnZpZXdzW2ldKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFZpZXdTZXJ2aWNlLmdldEJ5SWRzKHsndmlld0lkcyc6IHBhcmFtc30pLnN1Y2Nlc3MoZnVuY3Rpb24gKHJlc3VsdCkge1xuXG4gICAgICAgICAgICAgICAgdmFyIGxheWVycyA9IGNvbnRlbnQuY29udGVudC5kM3NldHRpbmcubGF5ZXJzO1xuICAgICAgICAgICAgICAgIHZhciB2aWV3cyA9IHt9O1xuICAgICAgICAgICAgICAgICQuZWFjaChyZXN1bHQuZGF0YSwgZnVuY3Rpb24oKXtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5qc29uID0gSlNPTi5wYXJzZSh0aGlzLnN2Zyk7XG4gICAgICAgICAgICAgICAgICAgIHZpZXdzW3RoaXMuaWRdID0gdGhpcztcbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgIGNvbnRlbnQuY29udGVudC5kM3NldHRpbmcubGF5ZXJDb3VudCA9IGNvbnRlbnQuY29udGVudC5kM3NldHRpbmcucm93cztcbiAgICAgICAgICAgICAgICBjb250ZW50LmNvbnRlbnQuZDNzZXR0aW5nLmxheWVySXRlbUNvdW50ID0gY29udGVudC5jb250ZW50LmQzc2V0dGluZy5jb2xzO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGF5ZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgbGF5ZXJzW2ldLmxlbmd0aDsgaisrKSB7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBpdGVtID0gbGF5ZXJzW2ldW2pdO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBpZihpdGVtICYmIHZpZXdzW2l0ZW0udmlld2lkXSl7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGRhdGEgPSB2aWV3c1tpdGVtLnZpZXdpZF07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaXRlbS5uYW1lID0gZGF0YS5uYW1lO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW0udmlld2lkID0gZGF0YS5pZDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpdGVtLmdyYXBoSGVpZ2h0ID0gZGF0YS5qc29uLmdyYXBoSGVpZ2h0O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW0uZ3JhcGhXaWR0aCA9IGRhdGEuanNvbi5ncmFwaFdpZHRoO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW0uY29udGFpbmVycyA9IGRhdGEuanNvbi5jb250YWluZXJzO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW0uZWRnZXMgPSBkYXRhLmpzb24uZWRnZXM7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaXRlbS5ub2RlcyA9IGRhdGEuanNvbi5ub2RlcztcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxheWVyc1tpXVtqXSA9IGl0ZW07XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBjb250ZW50LmNvbnRlbnQuZDNzZXR0aW5nLiRjb250YWluZXIgPSAkKFwiLm1haW4tYm94LWNvbnRlbnQtcGFuZWwtY29udGFpbmVyLWJvZHktM2RcIik7XG4gICAgICAgICAgICAgICAgbmV3IFVuaXZlcnNlKGNvbnRlbnQuY29udGVudC5kM3NldHRpbmcpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuXG5cbiAgICB9KTtcblxufSkobmFtZVNwYWNlLnJlZygnZ3JhcGgnKSwgbmFtZVNwYWNlLnJlZygnZ3JhcGgucGFnZScpKTtcblxuLyoqXG4gKiBDcmVhdGVkIGJ5IGdjIG9uIDIwMTUvOC8xNC5cbiAqL1xuXG4oZnVuY3Rpb24oZ3JhcGgsIHNlbGYpe1xuXG4gICAgJ3VzZSBzdHJpY3QnO1xuXG4gICAgZ3JhcGguYXBwLmNvbnRyb2xsZXIoJ1B1YmxpY0xpc3RWaWV3Q3RybCcsIGZ1bmN0aW9uKCRzY29wZSwgJHN0YXRlLCBHcm91cFNlcnZpY2UsIFZpZXdTZXJ2aWNlLCBVbml0LCBPdXRsaW5lLCAkdGltZW91dCkge1xuICAgICAgICBjb25zb2xlLmxvZyhcIlB1YmxpY0xpc3RWaWV3Q3RybFwiKTtcblxuICAgICAgICAkc2NvcGUucGFnZVNpemUgPSAyOyAvLyDlhazmnInop4blm77kuK3mr4/pobXmmL7npLrnmoTnlKjmiLfmlbDph49cbiAgICAgICAgJHNjb3BlLmN1cnJlbnRQYWdlID0gMTtcbiAgICAgICAgJHNjb3BlLmlzUHVibGljID0gdHJ1ZTtcblxuICAgICAgICBHcm91cFNlcnZpY2UucHVibGljKCkuc3VjY2VzcyhmdW5jdGlvbiAocmVzdWx0KSB7XG4gICAgICAgICAgICB2YXIgcHVibGljVmlld0RhdGEgPSBuZXcgQXJyYXkoKTtcbiAgICAgICAgICAgIHZhciB2aWV3c0ZvclVzZXIgPSB7fTtcbiAgICAgICAgICAgIHZhciByZXREYXRhcyA9IHJlc3VsdC5kYXRhO1xuICAgICAgICAgICAgdmFyIGZsYWcgPSAkc2NvcGUucHVibGljVmlld0lkICE9PSB1bmRlZmluZWQgJiYgJHNjb3BlLnB1YmxpY1ZpZXdJZCAhPT0gJyc7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHJldERhdGFzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgdmFyIHJldERhdGEgPSByZXREYXRhc1tpXTtcbiAgICAgICAgICAgICAgICB2YXIgY3JlYXRlRGF0ZSA9IG5ldyBEYXRlKHJldERhdGEudGltZSk7XG4gICAgICAgICAgICAgICAgcmV0RGF0YS50aW1lID0gY3JlYXRlRGF0ZS50b0xvY2FsZURhdGVTdHJpbmcoKTtcbiAgICAgICAgICAgICAgICBpZiAodmlld3NGb3JVc2VyW3JldERhdGEudXNlck5hbWVdID09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICB2aWV3c0ZvclVzZXJbcmV0RGF0YS51c2VyTmFtZV0gPSBbcmV0RGF0YV07XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdmlld3NGb3JVc2VyW3JldERhdGEudXNlck5hbWVdLnB1c2gocmV0RGF0YSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZm9yICh2YXIgdXNlck5hbWUgaW4gdmlld3NGb3JVc2VyKSB7XG4gICAgICAgICAgICAgICAgdmFyIHVzZXJJbmZvID0ge307XG4gICAgICAgICAgICAgICAgdXNlckluZm9bJ3VzZXJOYW1lJ10gPSB1c2VyTmFtZTtcbiAgICAgICAgICAgICAgICB1c2VySW5mb1sndmlld3MnXSA9IHZpZXdzRm9yVXNlclt1c2VyTmFtZV07XG4gICAgICAgICAgICAgICAgLy91c2VySW5mb1sndXNlckljb25VcmwnXSA9IHZpZXdzRm9yVXNlclt1c2VyTmFtZV1bMF0udXNlckljb25VcmxcbiAgICAgICAgICAgICAgICB1c2VySW5mb1sndXNlckljb25VcmwnXSA9ICdodHRwOi8vbG9jYWxob3N0OjgwODAvbW1kYjIvcmVzb3VyY2UvaW1nL3Bob3RvMi5qcGcnO1xuICAgICAgICAgICAgICAgIHB1YmxpY1ZpZXdEYXRhLnB1c2godXNlckluZm8pO1xuICAgICAgICAgICAgICAgIGlmICh1c2VyTmFtZSA9PT0gJHNjb3BlLnVzZXJOYW1lKSB7XG4gICAgICAgICAgICAgICAgICAgICRzY29wZS52aWV3cyA9IHVzZXJJbmZvWyd2aWV3cyddO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICRzY29wZS50b3RhbEl0ZW1zID0gcHVibGljVmlld0RhdGEubGVuZ3RoO1xuICAgICAgICAgICAgJHNjb3BlLnB1YmxpY1ZpZXdzID0gcHVibGljVmlld0RhdGE7XG4gICAgICAgICAgICAkc2NvcGUucHVibGljVmlld3NTaG93ID0gJHNjb3BlLnB1YmxpY1ZpZXdzLnNsaWNlKDAsICRzY29wZS5wYWdlU2l6ZSk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgICRzY29wZS5zaG93UHJpdmF0ZVZpZXdMaXN0ID0gZnVuY3Rpb24odXNlck5hbWUsIHZpZXdzLCAkZXZlbnQpIHtcbiAgICAgICAgICAgICQoJGV2ZW50LmN1cnJlbnRUYXJnZXQpLnBvcG92ZXIoJ2hpZGUnKTtcbiAgICAgICAgICAgICRzdGF0ZS5nbygnaG9tZS5ncm91cC5saXN0LnVzZXInLCB7dXNlck5hbWU6IHVzZXJOYW1lfSk7XG4gICAgICAgIH07XG5cbiAgICAgICAgJHNjb3BlLnBhZ2VDaGFuZ2VkID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAkc2NvcGUucHVibGljVmlld3NTaG93ID0gJHNjb3BlLnB1YmxpY1ZpZXdzLnNsaWNlKCgkc2NvcGUuY3VycmVudFBhZ2UgLSAxKSAqICRzY29wZS5wYWdlU2l6ZSwgJHNjb3BlLmN1cnJlbnRQYWdlICogJHNjb3BlLnBhZ2VTaXplKTtcbiAgICAgICAgfTtcblxuICAgIH0pO1xuXG59KShuYW1lU3BhY2UucmVnKCdncmFwaCcpLCBuYW1lU3BhY2UucmVnKCdncmFwaC5wYWdlJykpO1xuLyoqXG4gKiBDcmVhdGVkIGJ5IGdjIG9uIDIwMTUvOC8xNC5cbiAqL1xuXG4oZnVuY3Rpb24oZ3JhcGgsIHNlbGYpe1xuXG4gICAgJ3VzZSBzdHJpY3QnO1xuXG4gICAgZ3JhcGguYXBwLmNvbnRyb2xsZXIoJ1B1YmxpY1VzZXJWaWV3Q3RybCcsIGZ1bmN0aW9uKCRzY29wZSwgJHN0YXRlLCBHcm91cFNlcnZpY2UsIFZpZXdTZXJ2aWNlLCBVbml0LCBPdXRsaW5lLCAkdGltZW91dCkge1xuXG4gICAgICAgIHZhciB1c2VyTiA9ICRzdGF0ZS5wYXJhbXMudXNlck5hbWU7XG4gICAgICAgICRzY29wZS5pc1B1YmxpYyA9IHRydWU7XG4gICAgICAgICRzY29wZS5pc09wdGlvbiA9IGZhbHNlO1xuICAgICAgICAkc2NvcGUuaXMyRCA9IHRydWU7XG5cbiAgICAgICAgJCgnLnBvcG92ZXInKS5oaWRlKCk7XG5cbiAgICAgICAgR3JvdXBTZXJ2aWNlLnB1YmxpYygpLnN1Y2Nlc3MoZnVuY3Rpb24gKHJlc3VsdCkge1xuICAgICAgICAgICAgdmFyIHB1YmxpY1ZpZXdEYXRhID0gbmV3IEFycmF5KCk7XG4gICAgICAgICAgICB2YXIgdmlld3NGb3JVc2VyID0ge307XG4gICAgICAgICAgICB2YXIgcmV0RGF0YXMgPSByZXN1bHQuZGF0YTtcbiAgICAgICAgICAgIHZhciBmbGFnID0gJHNjb3BlLnB1YmxpY1ZpZXdJZCAhPT0gdW5kZWZpbmVkICYmICRzY29wZS5wdWJsaWNWaWV3SWQgIT09ICcnO1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCByZXREYXRhcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIHZhciByZXREYXRhID0gcmV0RGF0YXNbaV07XG4gICAgICAgICAgICAgICAgdmFyIGNyZWF0ZURhdGUgPSBuZXcgRGF0ZShyZXREYXRhLnRpbWUpO1xuICAgICAgICAgICAgICAgIHJldERhdGEudGltZSA9IGNyZWF0ZURhdGUudG9Mb2NhbGVEYXRlU3RyaW5nKCk7XG4gICAgICAgICAgICAgICAgaWYgKHZpZXdzRm9yVXNlcltyZXREYXRhLnVzZXJOYW1lXSA9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgdmlld3NGb3JVc2VyW3JldERhdGEudXNlck5hbWVdID0gW3JldERhdGFdO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHZpZXdzRm9yVXNlcltyZXREYXRhLnVzZXJOYW1lXS5wdXNoKHJldERhdGEpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZvciAodmFyIHVzZXJOYW1lIGluIHZpZXdzRm9yVXNlcikge1xuICAgICAgICAgICAgICAgIHZhciB1c2VySW5mbyA9IHt9O1xuICAgICAgICAgICAgICAgIHVzZXJJbmZvWyd1c2VyTmFtZSddID0gdXNlck5hbWU7XG4gICAgICAgICAgICAgICAgdXNlckluZm9bJ3ZpZXdzJ10gPSB2aWV3c0ZvclVzZXJbdXNlck5hbWVdO1xuICAgICAgICAgICAgICAgIC8vdXNlckluZm9bJ3VzZXJJY29uVXJsJ10gPSB2aWV3c0ZvclVzZXJbdXNlck5hbWVdWzBdLnVzZXJJY29uVXJsXG4gICAgICAgICAgICAgICAgdXNlckluZm9bJ3VzZXJJY29uVXJsJ10gPSAnaHR0cDovL2xvY2FsaG9zdDo4MDgwL21tZGIyL3Jlc291cmNlL2ltZy9waG90bzIuanBnJztcbiAgICAgICAgICAgICAgICBwdWJsaWNWaWV3RGF0YS5wdXNoKHVzZXJJbmZvKTtcbiAgICAgICAgICAgICAgICBpZiAodXNlck4gPT09IHVzZXJOYW1lKSB7XG4gICAgICAgICAgICAgICAgICAgICRzY29wZS52aWV3cyA9IHVzZXJJbmZvWyd2aWV3cyddO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgICRzY29wZS5nb0JhY2sgPSBmdW5jdGlvbih2aWV3cykge1xuICAgICAgICAgICAgJHN0YXRlLmdvKCdob21lLmdyb3VwLmxpc3QucHVibGljJyk7XG4gICAgICAgIH07XG5cbiAgICAgICAgJHNjb3BlLnNob3dQdWJsaWNWaWV3ID0gZnVuY3Rpb24odmlldykge1xuICAgICAgICAgICAgJHNjb3BlLmlzMkQgPSB0cnVlO1xuICAgICAgICAgICAgJHNjb3BlLnZpZXcgPSB2aWV3O1xuICAgICAgICAgICAgJHNjb3BlLmlzT3B0aW9uID0gdHJ1ZTtcbiAgICAgICAgICAgICQoJy5wb3BvdmVyJykucmVtb3ZlKCk7XG4gICAgICAgICAgICAkc3RhdGUuZ28oJ2hvbWUuZ3JvdXAubGlzdC51c2VyLmdldCcsIHtpZDogdmlldy5pZCwgdXNlck5hbWU6IHZpZXcudXNlck5hbWV9LCB7cmVsb2FkOnRydWV9KTtcbiAgICAgICAgfTtcblxuICAgICAgICAkc2NvcGUuc2hvd1B1YmxpYzNEVmlldyA9IGZ1bmN0aW9uKHZpZXcpIHtcbiAgICAgICAgICAgICRzY29wZS5pczJEID0gZmFsc2U7XG4gICAgICAgICAgICAkc2NvcGUudmlldyA9IHZpZXc7XG4gICAgICAgICAgICAkc2NvcGUuaXNPcHRpb24gPSB0cnVlO1xuICAgICAgICAgICAgJHN0YXRlLmdvKCdob21lLmdyb3VwLmxpc3QudXNlci5nZXQzZCcsIHtpZDogdmlldy5pZCwgdXNlck5hbWU6IHZpZXcudXNlck5hbWV9KVxuICAgICAgICB9O1xuXG4gICAgfSk7XG5cbn0pKG5hbWVTcGFjZS5yZWcoJ2dyYXBoJyksIG5hbWVTcGFjZS5yZWcoJ2dyYXBoLnBhZ2UnKSk7Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9