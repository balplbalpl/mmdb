//package com.mmdb.model.icon.storage;
//
//import com.mmdb.core.framework.neo4j.index.NodeIndex;
//import com.mmdb.core.framework.neo4j.storage.NodeStorage;
//import com.mmdb.core.log.Log;
//import com.mmdb.core.log.LogFactory;
//import com.mmdb.model.db.neo4jdb.Neo4jDao;
//import com.mmdb.model.icon.Icon;
//import com.mmdb.util.Neo4jStringUtils;
//
//import org.neo4j.graphdb.Node;
//import org.neo4j.graphdb.index.Index;
//import org.neo4j.shell.util.json.JSONObject;
//import org.springframework.stereotype.Component;
//
//import java.util.ArrayList;
//import java.util.List;
//
//@Component
//public class IconStorage {
//	private Log log = LogFactory.getLogger("IconStorage");
//
//	/**
//	 * 获取图标
//	 * 
//	 * @param id
//	 * @return
//	 * @throws Exception
//	 */
//	public Icon getById(String id) throws Exception {
//		String cql = "match (n:Icon {id:'"+id+"'}) return n";
//		List<JSONObject> list = Neo4jDao.getDataMap(cql);
//		if (list.size() == 1) {
//			JSONObject js = list.get(0);
//			JSONObject data = (JSONObject)js.get("data");
//			Long neo4jid = js.getLong("id");
//			Icon i = new Icon(data.getString("id"), data.getString("url"));
//			i.setNeo4jid(neo4jid);
//			return i;
//		} else if (list.size() > 1) {
//			log.eLog("图标[" + id + "]不唯一");
//			throw new Exception("图标[" + id + "]不唯一");
//		} else {
//			return null;
//		}
//	}
//
//	 
//	public int count() throws Exception {
//		String cql = "match (n:Icon) return count(*)";
//		int i = (int)Neo4jDao.getDataLong(cql);
//		return i;
//	}
//
//	 
//	public void delete(Icon t) throws Exception {
//		String cql = "match (n:Icon {id:'"+t.getId()+"'}) delete n";
//		Neo4jDao.executeNoRest(cql);
//	}
//
//	 
//	public void delete(List<Icon> list) throws Exception {
//		for(Icon i:list){
//			this.delete(i);
//		}
//	}
//
//	 
//	public void deleteAll() throws Exception {
//		String cql = "match (n:Icon) delete n";
//		Neo4jDao.executeNoRest(cql);
//	}
//
//	 
//	public boolean exists(Long nodeid) {
//		boolean flag = false;
//		String cql = "match (n:Icon) where id(n)="+nodeid+" return count(*)";
//		long count = Neo4jDao.getDataLong(cql);
//		if(count>0){
//			flag = true;
//		}
//		return flag;
//	}
//
//	 
//	public List<Icon> getAll() throws Exception {
//		String cql = "match (n:Icon) return n";
//		List<JSONObject> jsData = Neo4jDao.getDataMap(cql);
//		List<Icon> retList = new ArrayList<Icon>();
//		for(JSONObject js:jsData){
//			JSONObject data = (JSONObject)js.get("data");
//			Long neo4jid = (Long)js.get("id");
//			Icon i = new Icon(data.getString("id"), data.getString("url"));
//			i.setNeo4jid(neo4jid);
//			retList.add(i);
//		}
//		return retList;
//	}
//
////	 
////	public NodeIndex getIndex() {
////		// TODO Auto-generated method stub
////		return super.getIndex();
////	}
////
////	 
////	public Index<Node> getNodeIndexByClass(Class<?> cls)
////			throws ClassNotFoundException {
////		// TODO Auto-generated method stub
////		return super.getNodeIndexByClass(cls);
////	}
////
////	 
////	public Index<Node> index() throws ClassNotFoundException {
////		// TODO Auto-generated method stub
////		return super.index();
////	}
//
//	 
////	public List<Icon> query(Object query) throws Exception {
////		// TODO Auto-generated method stub
////		return super.query(query);
////	}
//
//	 
////	public List<Icon> query(String exp) throws Exception {
////		// TODO Auto-generated method stub
////		return super.query(exp);
////	}
//
//	 
////	public List<Icon> queryByProperty(String key, Object value)
////			throws Exception {
////		// TODO Auto-generated method stub
////		return super.queryByProperty(key, value);
////	}
//
//	 
//	public Icon save(Icon t) throws Exception {
//		String id = Neo4jStringUtils.cypherESC(t.getId());
//		String cql = "merge (n:Icon {id:'"+id+"'}) set n.url = '"+t.getUrl()+"' return id(n)";
//		long neo4jid = Neo4jDao.getDataLong(cql);
//		t.setNeo4jid(neo4jid);
//		return t;
//	}
//
////	 
////	public void setIndex(NodeIndex index) {
////		// TODO Auto-generated method stub
////		super.setIndex(index);
////	}
//
//	 
//	public Icon update(Icon t) throws Exception {
//		String id = Neo4jStringUtils.cypherESC(t.getId());
//		String cql = "match (n:Icon {id:'"+id+"'}) where id(n)="+t.getNeo4jid()+" set n.url = '"+t.getUrl()+"' return id(n)";
//		return t;
//	}
//
//	
//	
//
//}
