(function (graph) {

	'use strict';


	graph.Snapshot = (function () {

		function F(editor) {
			var _this = this;

			$(editor.graph.container).find('.snapshot').remove();
			_this.classMain = 'snapshot';
			_this.error = [];
			_this.editor = editor;
			_this.getData();

			if(_this.data){
				_this.build();
			}

		}

		F.prototype.getData = function(){
			var result, _this = this;

			result = graph.api.versionList(_this.editor.viewid);

			if(graph.utils.isTrueRet(result)){

				$.each(result.data, function(i){
					var item = this;
					item.version = 'V' + (result.data.length - i);
					item.date = graph.utils.unixToDatetime(item.lastDate).substr(0, 16);
				});

				_this.currentIndex = result.data.length;
				_this.data = result.data.reverse();
				_this.currentData = {
					xml: graph.utils.getXml(_this.editor),
					date: '',
					version: 'current'
				};
				_this.data.push(_this.currentData);

			}else{
				graph.utils.alert(result.message);
			}
		};

		F.prototype.createIcon = function(className){
			var icon = document.createElement('i');
			icon.className = 'fa ' + className;
			return icon;
		};


		F.prototype.createBtn = function(className, title, icons, fn){
			var $btn, _this = this;
			$btn = $(document.createElement('button'));
			$btn[0].className = 'btn pull-right ' + className;
			$btn[0].title = title;
			$btn.append(_this.createIcon(icons));

			if(fn){
				$btn.click(fn);
			}

			return $btn;
		};


		F.prototype.createInput = function(width, isDisabled){
			var $input;

			$input = $(document.createElement('input'));
			$input[0].type = 'text';
			$input[0].className = 'form-control pull-left';

			if(isDisabled){
				$input.attr('disabled', true);
			}

			$input.width(width);
			return $input;
		};


		F.prototype.close = function(){
			var _this = this;

			_this.$main.remove();
			graph.utils.openXml(_this.editor, _this.currentData.xml);
		};

		F.prototype.cache = function(){
			var _this = this, item;

			item = _this.data[_this.currentIndex];
			item.xml = graph.utils.getXml(_this.editor);
			item.description = _this.$desc.val();
		};

		F.prototype.next = function(){
			var _this = this;

			_this.cache();

			if((_this.currentIndex + 1) < _this.data.length){
				_this.currentIndex++;
			}else{
				_this.currentIndex = 0;
			}

			_this.set();
		};

		F.prototype.prev = function(){
			var _this = this;

			_this.cache();

			if(_this.currentIndex === 0){
				_this.currentIndex = _this.data.length - 1;
			}else{
				_this.currentIndex--;
			}

			_this.set();
		};

		F.prototype.set = function(){
			var _this = this, item;

			item = _this.data[_this.currentIndex];
			_this.$page.val((_this.currentIndex + 1) + '/' + _this.data.length);
			_this.$ver.val(item.version);
			_this.$date.val(item.date);
			_this.$desc.val(item.description);

			graph.utils.openXml(_this.editor, item.xml);
		};

		F.prototype.update = function(){
			var item, _this = this, result;

			item = _this.data[_this.currentIndex];
			result = graph.api.versionUpdate(_this.editor.viewid, item.key, graph.utils.getXml(_this.editor), _this.$desc.val());
			graph.utils.alert(result.message);

		};

		F.prototype.saveHandle = function(){
			var _this = this, item;

			item = _this.data[_this.currentIndex];

			if(item.key){
				_this.update();
			}else{
				_this.save();
			}
		};

		F.prototype.save = function(){
			var _this = this, result, data;

			result = graph.api.versionPost(_this.editor.viewid, graph.utils.getXml(_this.editor), _this.$desc.val());
			graph.utils.alert(result.message);

			if(graph.utils.isTrueRet(result)){
				data = result.data;
				data.version = 'V' + _this.data.length;
				data.date = graph.utils.unixToDatetime(data.lastDate).substr(0, 16);
				_this.data.splice(_this.currentIndex, 0, data);
				_this.currentIndex++;
				_this.$page.val((_this.currentIndex + 1) + '/' + _this.data.length);
			}
		};

		F.prototype.remove = function(){
			var _this = this, item, result;

			item = _this.data[_this.currentIndex];

			if(item.key){
				result = graph.api.versionDelete(_this.editor.viewid, item.key);

				if(graph.utils.isTrueRet(result)){
					_this.data.splice(_this.currentIndex, 1);
					_this.set();
				}else{
					graph.utils.alert(result.message);
				}
			}else{
				graph.utils.alert(graph.DEFINE_MSG.E32);
			}
		};

		F.prototype.build = function(){
			var _this = this;
			_this.$main = $(document.createElement('div'));
			_this.$main.addClass(_this.classMain);
			_this.$main.addClass('clear');

			_this.$closeBtn = _this.createBtn('btn-danger', '回到视图', 'fa-power-off', function(){
				_this.close();
			});

			_this.$updateBtn = _this.createBtn('btn-success', '更新快照', 'fa-save', function(){
				_this.saveHandle();
			});

			_this.$deleteBtn = _this.createBtn('btn-success', '删除快照', 'fa-trash', function(){
				_this.remove();
			});

			_this.$nextBtn = _this.createBtn('btn-success', '下一个', 'fa-play', function(){
				_this.next();
			});

			_this.$prevBtn = _this.createBtn('btn-success', '上一个', 'fa-play fa-rotate-180', function(){
				_this.prev();
			});

			_this.$page = _this.createInput(60, true);
			_this.$ver = _this.createInput(100, true);
			_this.$date = _this.createInput(150, true);

			_this.$desc = $(document.createElement('textarea'));
			_this.$desc.attr('rows', 1);
			_this.$desc[0].className = 'form-control pull-left';
			_this.$desc.width(400);

			_this.$main.append(_this.$closeBtn);
			_this.$main.append(_this.$updateBtn);
			_this.$main.append(_this.$deleteBtn);
			_this.$main.append(_this.$nextBtn);
			_this.$main.append(_this.$prevBtn);
			_this.$main.append(_this.$page);
			_this.$main.append(_this.$ver);
			_this.$main.append(_this.$date);
			_this.$main.append(_this.$desc);

			_this.$ver.val(_this.data[_this.currentIndex].version);
			_this.$page.val((_this.currentIndex + 1) + '/' + _this.data.length);

			_this.$desc.focus(function(){
				var pos;

				pos = $(this).offset();
				$(this).attr('rows', 10);

				$(this).css({
					left: pos.left + 'px',
					bottom: 0,
					'z-index': 99999,
					position: 'fixed'
				});
			});

			_this.$desc.blur(function(){
				$(this).attr('rows', 1);
				$(this).css('position', 'static');
			});

			_this.editor.graph.container.appendChild(_this.$main[0]);
		};


		return F;

	})();


})(nameSpace.reg('graph'));
